<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classOfsopenFunction" kind="class" language="C++" prot="public">
    <compoundname>OfsopenFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="sli__io_8h" local="no">sli_io.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOfsopenFunction_1a6e73a7a5d4c8c7afaa14915e720a1b53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OfsopenFunction::OfsopenFunction</definition>
        <argsstring>()</argsstring>
        <name>OfsopenFunction</name>
        <qualifiedname>OfsopenFunction::OfsopenFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.h" line="77" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classOfsopenFunction_1a8eaa5c2d3e4e60f0736bf967f22f526f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OfsopenFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>OfsopenFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: ofsopen - Open an existing file for appending or writing. </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: (name) (mode) ofsopen -&gt; ofstreamhandle true -&gt; false Parameters: (name) - name of the file. (mode) - string with either (w) or (a) to identify the access mode. (w) corresponds to writing and (a) to appending. Description: Open the named file according to the access mode. If the file is not existing, it will be created in the current working directory. If the file does exists, the access mode decides whether the file will be overwritten (w) or whether the new data will be appended (a). If successful an ofstream handle object and the boolean true is returned. In case of failure, only the boolean false is returned. This function provides a direct interface to the C++ ofstream constructor. SLI&apos;s search path mechanism is not used. Remarks: commented 26.3.1999, Diesmann SeeAlso: ofstream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.h" line="80" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.cc" bodystart="254" bodyend="306"/>
        <references refid="classSLIInterpreter_1a4bd843d0ad15faf88185a1ae885f8852" compoundref="interpret_8h" startline="905" endline="911">SLIInterpreter::assert_stack_load</references>
        <references refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">Token::datum</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classDatum_1af7a6a22e2fadd9d3b75e15d7d4dc3998" compoundref="datum_8h" startline="172" endline="175">Datum::gettypename</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" compoundref="tokenstack_8h" startline="62" endline="65">TokenStack::push</references>
        <references refid="classTokenStack_1a9d3b72926bfa2090389f0782cd2b6e76" compoundref="tokenstack_8h" startline="68" endline="71">TokenStack::push_move</references>
        <references refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" compoundref="interpret_8h" startline="635" endline="638">SLIInterpreter::raiseerror</references>
        <references refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" compoundref="tokenstack_8h" startline="116" endline="119">TokenStack::top</references>
        <references refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">Name::toString</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>OfsopenFunction</label>
        <link refid="classOfsopenFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>OfsopenFunction</label>
        <link refid="classOfsopenFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.h" line="74" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.h" bodystart="75" bodyend="81"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>OfsopenFunction</scope><name>backtrace</name></member>
      <member refid="classOfsopenFunction_1a8eaa5c2d3e4e60f0736bf967f22f526f" prot="public" virt="virtual"><scope>OfsopenFunction</scope><name>execute</name></member>
      <member refid="classOfsopenFunction_1a6e73a7a5d4c8c7afaa14915e720a1b53" prot="public" virt="non-virtual"><scope>OfsopenFunction</scope><name>OfsopenFunction</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>OfsopenFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>OfsopenFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
