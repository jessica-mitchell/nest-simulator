<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classLoopFunction" kind="class" language="C++" prot="public">
    <compoundname>LoopFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="slicontrol_8h" local="no">slicontrol.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classLoopFunction_1acb6b934334a6ff2584e220aac62e1b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LoopFunction::LoopFunction</definition>
        <argsstring>()</argsstring>
        <name>LoopFunction</name>
        <qualifiedname>LoopFunction::LoopFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="79" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classLoopFunction_1ac6ada63adedd4667359f6b70a7001e08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LoopFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>LoopFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: loop - repeatedly execute a procedure </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: proc loop -</para>
<para>Description: loop takes a procedure object an executes it repeatedly. Since there is no direct termination condition, the loop has to be terminated by calling exit. If the procedure has to be evaluated for a certain number of times, consider the use of repeat or for. If some container should be iterated, consider forall or Map</para>
<para>SeeAlso: exit, repeat, for, forall, forallindexed, Map </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="82" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.cc" bodystart="144" bodyend="164"/>
        <references refid="classSLIInterpreter_1a0f433320b9ff523f5e70964bc29af548" compoundref="interpret_8h" startline="148">SLIInterpreter::ArgumentTypeError</references>
        <references refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" compoundref="interpret_8cc" startline="311" endline="314">SLIInterpreter::baselookup</references>
        <references refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">Token::datum</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classSLIInterpreter_1ae213c63e58fcbbd8040f638df5c42fe3" compoundref="interpret_8h" startline="111">SLIInterpreter::iloop_name</references>
        <references refid="classSLIInterpreter_1a29a1dfe19e4620ae85beeeff6b4f6b87" compoundref="interpret_8h" startline="355" endline="358">SLIInterpreter::inc_call_depth</references>
        <references refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" compoundref="tokenstack_8h" startline="184" endline="187">TokenStack::load</references>
        <references refid="classSLIInterpreter_1afe0e3fe443a8fa59dfaf31a4a5f46526" compoundref="interpret_8h" startline="130">SLIInterpreter::mark_name</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" compoundref="tokenstack_8h" startline="90" endline="93">TokenStack::push_by_pointer</references>
        <references refid="classTokenStack_1a93b45dc84823374ce277c972e41e8769" compoundref="tokenstack_8h" startline="79" endline="82">TokenStack::push_by_ref</references>
        <references refid="classTokenStack_1a9d3b72926bfa2090389f0782cd2b6e76" compoundref="tokenstack_8h" startline="68" endline="71">TokenStack::push_move</references>
        <references refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" compoundref="interpret_8h" startline="635" endline="638">SLIInterpreter::raiseerror</references>
        <references refid="classSLIInterpreter_1af98b93bb76491e6bc67e7636ca8e9ea9" compoundref="interpret_8h" startline="149">SLIInterpreter::StackUnderflowError</references>
        <references refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" compoundref="tokenstack_8h" startline="116" endline="119">TokenStack::top</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>LoopFunction</label>
        <link refid="classLoopFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>LoopFunction</label>
        <link refid="classLoopFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="76" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="77" bodyend="83"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>LoopFunction</scope><name>backtrace</name></member>
      <member refid="classLoopFunction_1ac6ada63adedd4667359f6b70a7001e08" prot="public" virt="virtual"><scope>LoopFunction</scope><name>execute</name></member>
      <member refid="classLoopFunction_1acb6b934334a6ff2584e220aac62e1b00" prot="public" virt="non-virtual"><scope>LoopFunction</scope><name>LoopFunction</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>LoopFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>LoopFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
