<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="connection__creator__impl_8h" kind="file" language="C++">
    <compoundname>connection_creator_impl.h</compoundname>
    <includes refid="connection__creator_8h" local="yes">connection_creator.h</includes>
    <includes local="no">vector</includes>
    <includes refid="kernel__manager_8h" local="yes">kernel_manager.h</includes>
    <includes refid="nest_8h" local="yes">nest.h</includes>
    <includedby refid="layer_8cpp" local="yes">layer.cpp</includedby>
    <includedby refid="nestmodule_8cpp" local="yes">nestmodule.cpp</includedby>
    <incdepgraph>
      <node id="108">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="44">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>iterator</label>
      </node>
      <node id="33">
        <label>arraydatum.h</label>
      </node>
      <node id="8">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="89">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdint.h</label>
      </node>
      <node id="54">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stopwatch.h</label>
      </node>
      <node id="95">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>dictutils.h</label>
      </node>
      <node id="36">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cmath</label>
      </node>
      <node id="24">
        <label>cassert</label>
      </node>
      <node id="48">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>stdexcept</label>
      </node>
      <node id="93">
        <label>numeric</label>
      </node>
      <node id="22">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="73">
        <label>sort.h</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="122">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>aggregatedatum.h</label>
      </node>
      <node id="66">
        <label>dict.h</label>
      </node>
      <node id="32">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cfloat</label>
      </node>
      <node id="40">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ostream</label>
      </node>
      <node id="35">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="72">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>slitype.h</label>
      </node>
      <node id="100">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>connection_creator_impl.h</label>
        <link refid="connection__creator__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>allocator.h</label>
      </node>
      <node id="83">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>random</label>
      </node>
      <node id="85">
        <label>logging.h</label>
      </node>
      <node id="69">
        <label>slimodule.h</label>
      </node>
      <node id="53">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>bitset</label>
      </node>
      <node id="96">
        <label>block_vector.h</label>
      </node>
      <node id="60">
        <label>lockptr.h</label>
      </node>
      <node id="56">
        <label>ctime</label>
      </node>
      <node id="52">
        <label>token.h</label>
      </node>
      <node id="88">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>unistd.h</label>
      </node>
      <node id="39">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="67">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="109">
        <label>new</label>
      </node>
      <node id="94">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utility</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="50">
        <label>sstream</label>
      </node>
      <node id="68">
        <label>slifunction.h</label>
      </node>
      <node id="104">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>enum_bitfield.h</label>
      </node>
      <node id="65">
        <label>randutils.hpp</label>
      </node>
      <node id="26">
        <label>cstdlib</label>
      </node>
      <node id="118">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>dictdatum.h</label>
      </node>
      <node id="119">
        <label>sys/time.h</label>
      </node>
      <node id="27">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>name.h</label>
      </node>
      <node id="28">
        <label>numerics.h</label>
      </node>
      <node id="55">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cstddef</label>
      </node>
      <node id="80">
        <label>deque</label>
      </node>
      <node id="103">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>climits</label>
      </node>
      <node id="112">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>sliexceptions.h</label>
      </node>
      <node id="106">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>vector_util.h</label>
      </node>
      <node id="123">
        <label>mask.h</label>
        <link refid="mask_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>type_traits</label>
      </node>
      <node id="120">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="14">
        <label>config.h</label>
      </node>
      <node id="18">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>connection_creator.h</label>
        <link refid="connection__creator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cstring</label>
      </node>
      <node id="76">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>memory</label>
      </node>
      <node id="87">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>initializer_list</label>
      </node>
      <node id="51">
        <label>compose.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>layer.cpp</label>
        <link refid="layer_8cpp"/>
      </node>
      <node id="1">
        <label>connection_creator_impl.h</label>
        <link refid="connection__creator__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nestmodule.cpp</label>
        <link refid="nestmodule_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>connection_creator_impl.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONNECTION_CREATOR_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONNECTION_CREATOR_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection__creator_8h" kindref="compound">connection_creator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest_8h" kindref="compound">nest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classnest_1_1_connection_creator_1ac829926e5b6ffd222a10d5bc5d2a1f34" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_connection_creator_1ac829926e5b6ffd222a10d5bc5d2a1f34" kindref="member">ConnectionCreator::connect</ref>(<sp/><ref refid="classnest_1_1_layer" kindref="compound">Layer&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>source_nc,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_layer" kindref="compound">Layer&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>target_nc<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>type_<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba043df91a89de8c001a28296bedf56db9" kindref="member">Pairwise_bernoulli_on_source</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>pairwise_bernoulli_on_source_(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>source_nc,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>target_nc<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562baa422971588b17619cfd3b758137113ac" kindref="member">Fixed_indegree</ref>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>fixed_indegree_(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>source_nc,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>target_nc<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba705b20a9b68f0bfb285897bf0a491617" kindref="member">Fixed_outdegree</ref>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>fixed_outdegree_(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>source_nc,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>target_nc<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba5372f69f45b563184e73d5bcdd71e8b7" kindref="member">Pairwise_bernoulli_on_target</ref>:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pairwise_bernoulli_on_target_(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>source_nc,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>target_nc<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_bad_property" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>connection<sp/>type.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">ConnectionCreator::connect_to_target_(<sp/>Iterator<sp/>from,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>Iterator<sp/>to,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_node" kindref="compound">Node</ref>*<sp/>tgt_ptr,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/>tgt_pos,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tgt_thread,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_layer" kindref="compound">Layer&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_base_random_generator" kindref="compound">RngPtr</ref><sp/>rng<sp/>=<sp/><ref refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" kindref="member">get_vp_specific_rng</ref>(<sp/>tgt_thread<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>source<sp/>pos<sp/>vector<sp/>here<sp/>that<sp/>can<sp/>be<sp/>updated<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>position.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>creating<sp/>and<sp/>destroying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unnecessarily<sp/>many<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>source_pos(<sp/>D<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>target_pos<sp/>=<sp/>tgt_pos.<ref refid="classnest_1_1_position_1a695cc92b6b753a3a6ad0b2f16dc02cf6" kindref="member">get_vector</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>without_kernel<sp/>=<sp/>not<sp/>kernel_.get();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Iterator<sp/>iter<sp/>=<sp/>from;<sp/>iter<sp/>!=<sp/>to;<sp/>++iter<sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>(<sp/>iter-&gt;second<sp/>==<sp/>tgt_ptr-&gt;<ref refid="classnest_1_1_node_1a18f2dc5591f7de1e64b62d0d53cb4351" kindref="member">get_node_id</ref>()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;first.get_vector(<sp/>source_pos<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>without_kernel<sp/>or<sp/>rng-&gt;<ref refid="classnest_1_1_base_random_generator_1ac9f238412d989640ad55a82e8d9e3a45" kindref="member">drand</ref>()<sp/>&lt;<sp/>kernel_-&gt;value(<sp/>rng,<sp/>source_pos,<sp/>target_pos,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt_ptr<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(<sp/>iter-&gt;second,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgt_ptr,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tgt_thread,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_model_[<sp/>indx<sp/>],</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_dicts_[<sp/>indx<sp/>][<sp/>tgt_thread<sp/>],</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos,<sp/>target_pos,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt_ptr<sp/>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos,<sp/>target_pos,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt_ptr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::PoolWrapper_()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>:<sp/>masked_layer_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>,<sp/>positions_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::~PoolWrapper_()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>masked_layer_<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>masked_layer_;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::define(<sp/>MaskedLayer&lt;<sp/>D<sp/>&gt;*<sp/>ml<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>assert(<sp/>masked_layer_<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>assert(<sp/>positions_<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>assert(<sp/>ml<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>masked_layer_<sp/>=<sp/>ml;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::define(<sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;*<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>assert(<sp/>masked_layer_<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>assert(<sp/>positions_<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>assert(<sp/>pos<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>positions_<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_ntree_1a4c44139c1661498b7d1c41aa8788861b" kindref="member">Ntree&lt; D, index &gt;::masked_iterator</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::masked_begin(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position&lt;<sp/>D<sp/>&gt;&amp;<sp/>pos<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>masked_layer_-&gt;begin(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_ntree_1a4c44139c1661498b7d1c41aa8788861b" kindref="member">Ntree&lt; D, index &gt;::masked_iterator</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::masked_end()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>masked_layer_-&gt;end();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;::iterator</highlight></codeline>
<codeline lineno="165"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::begin()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>positions_-&gt;begin();</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;::iterator</highlight></codeline>
<codeline lineno="172"><highlight class="normal">ConnectionCreator::PoolWrapper_&lt;<sp/>D<sp/>&gt;::end()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>positions_-&gt;end();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">ConnectionCreator::pairwise_bernoulli_on_source_(<sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>source_nc,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>target_nc<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>using<sp/>pairwise<sp/>Bernoulli<sp/>drawing<sp/>source<sp/>nodes<sp/>(target<sp/>driven)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>local<sp/>target<sp/>node:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1.<sp/>Apply<sp/>Mask<sp/>to<sp/>source<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>2.<sp/>For<sp/>each<sp/>source<sp/>node:<sp/>Compute<sp/>probability,<sp/>draw<sp/>random<sp/>number,<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>connection<sp/>conditionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>retrieve<sp/>global<sp/>positions,<sp/>either<sp/>for<sp/>masked<sp/>or<sp/>unmasked<sp/>pool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>PoolWrapper_&lt;<sp/>D<sp/>&gt;<sp/>pool;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask_.get()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>MaskedLayer<sp/>will<sp/>be<sp/>freed<sp/>by<sp/>PoolWrapper<sp/>d&apos;tor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>pool.define(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MaskedLayer&lt;<sp/>D<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>mask_,<sp/>allow_oversized_,<sp/>source_nc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>pool.define(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>.get_global_positions_vector(<sp/>source_nc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;<sp/>&gt;<sp/>exceptions_raised_(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sharing<sp/>specs<sp/>on<sp/>next<sp/>line<sp/>commented<sp/>out<sp/>because<sp/>gcc<sp/>4.2<sp/>cannot<sp/>handle<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/></highlight><highlight class="comment">//<sp/>default(none)<sp/>shared(source,<sp/>target,<sp/>masked_layer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target_begin,<sp/>target_end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_id<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1_v_p_manager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_begin<sp/>=<sp/>target_nc-&gt;begin();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_end<sp/>=<sp/>target_nc-&gt;end();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>(<sp/>*tgt_it<sp/>).node_id,<sp/>thread_id<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>tgt-&gt;is_proxy()<sp/>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position&lt;<sp/>D<sp/>&gt;<sp/>target_pos<sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.get_position(<sp/>(<sp/>*tgt_it<sp/>).lid<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask_.get()<sp/>)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect_to_target_(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pool.masked_begin(<sp/>target_pos<sp/>),<sp/>pool.masked_end(),<sp/>tgt,<sp/>target_pos,<sp/>thread_id,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect_to_target_(<sp/>pool.begin(),<sp/>pool.end(),<sp/>tgt,<sp/>target_pos,<sp/>thread_id,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>for<sp/>target_begin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>create<sp/>a<sp/>new<sp/>exception<sp/>here,<sp/>err&apos;s<sp/>lifetime<sp/>ends<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>catch<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptions_raised_.at(<sp/>thread_id<sp/>)<sp/>=</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>any<sp/>exceptions<sp/>have<sp/>been<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>thr<sp/>=<sp/>0;<sp/>thr<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1_v_p_manager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++thr<sp/>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exceptions_raised_.at(<sp/>thr<sp/>).get()<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>*(<sp/>exceptions_raised_.at(<sp/>thr<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">ConnectionCreator::pairwise_bernoulli_on_target_(<sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>source_nc,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>target_nc<sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connecting<sp/>using<sp/>pairwise<sp/>Bernoulli<sp/>drawing<sp/>target<sp/>nodes<sp/>(source<sp/>driven)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>actually<sp/>implemented<sp/>as<sp/>pairwise<sp/>Bernoulli<sp/>on<sp/>source<sp/>nodes,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>with<sp/>displacements<sp/>computed<sp/>in<sp/>the<sp/>target<sp/>layer.<sp/>The<sp/>Mask<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reversed<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>source<sp/>instead<sp/>of<sp/>the<sp/>target.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>local<sp/>target<sp/>node:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1.<sp/>Apply<sp/>(Converse)Mask<sp/>to<sp/>source<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>2.<sp/>For<sp/>each<sp/>source<sp/>node:<sp/>Compute<sp/>probability,<sp/>draw<sp/>random<sp/>number,<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>connection<sp/>conditionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>PoolWrapper_&lt;<sp/>D<sp/>&gt;<sp/>pool;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask_.get()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>MaskedLayer<sp/>will<sp/>be<sp/>freed<sp/>by<sp/>PoolWrapper<sp/>d&apos;tor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>supplying<sp/>the<sp/>target<sp/>layer<sp/>to<sp/>the<sp/>MaskedLayer<sp/>constructor,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>is<sp/>mirrored<sp/>so<sp/>it<sp/>may<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>source<sp/>layer<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>pool.define(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MaskedLayer&lt;<sp/>D<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>mask_,<sp/>allow_oversized_,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>source_nc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>pool.define(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>.get_global_positions_vector(<sp/>source_nc<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;<sp/>&gt;<sp/>exceptions_raised_(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>check<sp/>the<sp/>first<sp/>in<sp/>the<sp/>NodeCollection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first_in_tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_nc-&gt;operator[](<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>first_in_tgt-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IllegalConnection(<sp/></highlight><highlight class="stringliteral">&quot;Spatial<sp/>Connect<sp/>with<sp/>pairwise_bernoulli<sp/>to<sp/>devices<sp/>is<sp/>not<sp/>possible.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sharing<sp/>specs<sp/>on<sp/>next<sp/>line<sp/>commented<sp/>out<sp/>because<sp/>gcc<sp/>4.2<sp/>cannot<sp/>handle<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/></highlight><highlight class="comment">//<sp/>default(none)<sp/>shared(source,<sp/>target,<sp/>masked_layer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target_begin,<sp/>target_end)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thread_id<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1_v_p_manager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_begin<sp/>=<sp/>target_nc-&gt;local_begin();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_end<sp/>=<sp/>target_nc-&gt;end();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>(<sp/>*tgt_it<sp/>).node_id,<sp/>thread_id<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>not<sp/>tgt-&gt;is_proxy()<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position&lt;<sp/>D<sp/>&gt;<sp/>target_pos<sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.get_position(<sp/>(<sp/>*tgt_it<sp/>).lid<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask_.get()<sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>the<sp/>same<sp/>as<sp/>in<sp/>the<sp/>target<sp/>driven<sp/>case,<sp/>except<sp/>that<sp/>we<sp/>calculate<sp/>displacements<sp/>in<sp/>the<sp/>target<sp/>layer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>therefore<sp/>send<sp/>in<sp/>target<sp/>as<sp/>last<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect_to_target_(<sp/>pool.masked_begin(<sp/>target_pos<sp/>),<sp/>pool.masked_end(),<sp/>tgt,<sp/>target_pos,<sp/>thread_id,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>the<sp/>same<sp/>as<sp/>in<sp/>the<sp/>target<sp/>driven<sp/>case,<sp/>except<sp/>that<sp/>we<sp/>calculate<sp/>displacements<sp/>in<sp/>the<sp/>target<sp/>layer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>therefore<sp/>send<sp/>in<sp/>target<sp/>as<sp/>last<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connect_to_target_(<sp/>pool.begin(),<sp/>pool.end(),<sp/>tgt,<sp/>target_pos,<sp/>thread_id,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>create<sp/>a<sp/>new<sp/>exception<sp/>here,<sp/>err&apos;s<sp/>lifetime<sp/>ends<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>catch<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptions_raised_.at(<sp/>thread_id<sp/>)<sp/>=</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>any<sp/>exceptions<sp/>have<sp/>been<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>thr<sp/>=<sp/>0;<sp/>thr<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1_v_p_manager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++thr<sp/>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exceptions_raised_.at(<sp/>thr<sp/>).get()<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>*(<sp/>exceptions_raised_.at(<sp/>thr<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">ConnectionCreator::fixed_indegree_(<sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>source_nc,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>target_nc<sp/>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed_indegree<sp/>connections<sp/>(fixed<sp/>fan<sp/>in)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>local<sp/>target<sp/>node:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Apply<sp/>Mask<sp/>to<sp/>source<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Compute<sp/>connection<sp/>probability<sp/>for<sp/>each<sp/>source<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Draw<sp/>source<sp/>nodes<sp/>and<sp/>make<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>check<sp/>the<sp/>first<sp/>in<sp/>the<sp/>NodeCollection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first_in_tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_nc-&gt;operator[](<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>first_in_tgt-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IllegalConnection(<sp/></highlight><highlight class="stringliteral">&quot;Spatial<sp/>Connect<sp/>with<sp/>fixed_indegree<sp/>to<sp/>devices<sp/>is<sp/>not<sp/>possible.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_begin<sp/>=<sp/>target_nc-&gt;MPI_local_begin();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_end<sp/>=<sp/>target_nc-&gt;end();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>protect<sp/>against<sp/>connecting<sp/>to<sp/>devices<sp/>without<sp/>proxies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>do<sp/>this<sp/>before<sp/>creating<sp/>the<sp/>first<sp/>connection<sp/>to<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>network<sp/>untouched<sp/>if<sp/>any<sp/>target<sp/>does<sp/>not<sp/>have<sp/>proxies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>(<sp/>*tgt_it<sp/>).node_id<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>not<sp/>tgt-&gt;is_proxy()<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mask_.get()<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedLayer&lt;<sp/>D<sp/>&gt;<sp/>masked_source(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>mask_,<sp/>allow_oversized_,<sp/>source_nc<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>masked_source_end<sp/>=<sp/>masked_source.end();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>target_id<sp/>=<sp/>(<sp/>*tgt_it<sp/>).node_id;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/>tgt-&gt;get_thread();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>rng<sp/>=<sp/><ref refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" kindref="member">get_vp_specific_rng</ref>(<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Position&lt;<sp/>D<sp/>&gt;<sp/>target_pos<sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.get_position(<sp/>(<sp/>*tgt_it<sp/>).lid<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>source<sp/>pos<sp/>vector<sp/>here<sp/>that<sp/>can<sp/>be<sp/>updated<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>position.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>creating<sp/>and<sp/>destroying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unnecessarily<sp/>many<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>source_pos_vector(<sp/>D<sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>target_pos_vector<sp/>=<sp/>target_pos.get_vector();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>target_number_connections<sp/>=</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::round(<sp/>number_of_connections_-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>(position,node<sp/>ID)<sp/>pairs<sp/>for<sp/>sources<sp/>inside<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.resize(<sp/><ref refid="namespacenest_1a110b54fe73a6033aab002995564c4e8a" kindref="member">std::distance</ref>(<sp/>masked_source.begin(<sp/>target_pos<sp/>),<sp/>masked_source_end<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(<sp/>masked_source.begin(<sp/>target_pos<sp/>),<sp/>masked_source_end,<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.begin()<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>select<sp/>`number_of_connections_`<sp/>sources<sp/>within<sp/>the<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>kernel,<sp/>we<sp/>can<sp/>just<sp/>draw<sp/>uniform<sp/>random<sp/>numbers,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>with<sp/>a<sp/>kernel<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>a<sp/>probability<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>using<sp/>a<sp/>discrete_distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kernel_.get()<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>probabilities;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.reserve(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>probabilities<sp/>for<sp/>the<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.begin();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.end();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter<sp/>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.push_back(<sp/>kernel_-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.empty()</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>==<sp/>1<sp/>)<sp/>and<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>0<sp/>].second<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>&lt;<sp/>target_number_connections<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;Global<sp/>target<sp/>ID<sp/>%1:<sp/>Not<sp/>enough<sp/>sources<sp/>found<sp/>inside<sp/>mask&quot;</highlight><highlight class="normal">,<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>discrete_distribution<sp/>draws<sp/>random<sp/>integers<sp/>with<sp/>a<sp/>non-uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1aca70417cacdc3986658e92cacc8dc9b8" kindref="member">discrete_distribution</ref><sp/>lottery;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_random_distribution_1a5e70be96dd6d700d363d5542a6ece43d" kindref="member">discrete_distribution::param_type</ref><sp/>param(<sp/>probabilities.begin(),<sp/>probabilities.end()<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lottery.param(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multapses<sp/>are<sp/>not<sp/>allowed,<sp/>we<sp/>must<sp/>keep<sp/>track<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sources<sp/>have<sp/>been<sp/>selected<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>is_selected(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>`target_number_connections`<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>target_number_connections<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>random_id<sp/>=<sp/>lottery(<sp/>rng<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>is_selected[<sp/>random_id<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>source_id<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>random_id<sp/>].second;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>source_id<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>random_id<sp/>].first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_id,<sp/>tgt,<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>synapse_model_[<sp/>indx<sp/>],<sp/>param_dicts_[<sp/>indx<sp/>][<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>],<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_selected[<sp/>random_id<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--target_number_connections;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.empty()</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>==<sp/>1<sp/>)<sp/>and<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>0<sp/>].second<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>&lt;<sp/>target_number_connections<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;Global<sp/>target<sp/>ID<sp/>%1:<sp/>Not<sp/>enough<sp/>sources<sp/>found<sp/>inside<sp/>mask&quot;</highlight><highlight class="normal">,<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multapses<sp/>are<sp/>not<sp/>allowed,<sp/>we<sp/>must<sp/>keep<sp/>track<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sources<sp/>have<sp/>been<sp/>selected<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>is_selected(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>`target_number_connections`<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>target_number_connections<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>random_id<sp/>=<sp/>rng-&gt;ulrand(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>is_selected[<sp/>random_id<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>random_id<sp/>].first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>source_id<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>[<sp/>random_id<sp/>].second;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_id,<sp/>tgt,<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>synapse_model_[<sp/>indx<sp/>],<sp/>param_dicts_[<sp/>indx<sp/>][<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>],<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_selected[<sp/>random_id<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--target_number_connections;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>(position,node<sp/>ID)<sp/>pairs<sp/>for<sp/>all<sp/>nodes<sp/>in<sp/>source<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;*<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>.get_global_positions_vector(<sp/>source_nc<sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>target_id<sp/>=<sp/>(<sp/>*tgt_it<sp/>).node_id;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/>tgt-&gt;get_thread();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>rng<sp/>=<sp/><ref refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" kindref="member">get_vp_specific_rng</ref>(<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Position&lt;<sp/>D<sp/>&gt;<sp/>target_pos<sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.get_position(<sp/>(<sp/>*tgt_it<sp/>).lid<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>target_number_connections<sp/>=<sp/>std::round(<sp/>number_of_connections_-&gt;value(<sp/>rng,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>source_pos_vector(<sp/>D<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>target_pos_vector<sp/>=<sp/>target_pos.get_vector();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>==<sp/>1<sp/>)<sp/>and<sp/>(<sp/>(<sp/>*<ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref><sp/>)[<sp/>0<sp/>].second<sp/>==<sp/>target_id<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>&lt;<sp/>target_number_connections<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;Global<sp/>target<sp/>ID<sp/>%1:<sp/>Not<sp/>enough<sp/>sources<sp/>found&quot;</highlight><highlight class="normal">,<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>select<sp/>`target_number_connections`<sp/>sources<sp/>within<sp/>the<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>kernel,<sp/>we<sp/>can<sp/>just<sp/>draw<sp/>uniform<sp/>random<sp/>numbers,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>with<sp/>a<sp/>kernel<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>a<sp/>probability<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>using<sp/>a<sp/>discrete_distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kernel_.get()<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>probabilities;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.reserve(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>probabilities<sp/>for<sp/>the<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;end();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter<sp/>)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.push_back(<sp/>kernel_-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>discrete_distribution<sp/>draws<sp/>random<sp/>integers<sp/>with<sp/>a<sp/>non-uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1aca70417cacdc3986658e92cacc8dc9b8" kindref="member">discrete_distribution</ref><sp/>lottery;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_random_distribution_1a5e70be96dd6d700d363d5542a6ece43d" kindref="member">discrete_distribution::param_type</ref><sp/>param(<sp/>probabilities.begin(),<sp/>probabilities.end()<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lottery.param(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multapses<sp/>are<sp/>not<sp/>allowed,<sp/>we<sp/>must<sp/>keep<sp/>track<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sources<sp/>have<sp/>been<sp/>selected<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>is_selected(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>`target_number_connections`<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>target_number_connections<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>random_id<sp/>=<sp/>lottery(<sp/>rng<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>is_selected[<sp/>random_id<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>source_id<sp/>=<sp/>(<sp/>*positions<sp/>)[<sp/>random_id<sp/>].second;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>source_id<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*positions<sp/>)[<sp/>random_id<sp/>].first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_id,<sp/>tgt,<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>synapse_model_[<sp/>indx<sp/>],<sp/>param_dicts_[<sp/>indx<sp/>][<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>],<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_selected[<sp/>random_id<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--target_number_connections;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multapses<sp/>are<sp/>not<sp/>allowed,<sp/>we<sp/>must<sp/>keep<sp/>track<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sources<sp/>have<sp/>been<sp/>selected<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>is_selected(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>`target_number_connections`<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>target_number_connections<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>random_id<sp/>=<sp/>rng-&gt;ulrand(<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref>-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>is_selected[<sp/>random_id<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>source_id<sp/>=<sp/>(<sp/>*positions<sp/>)[<sp/>random_id<sp/>].second;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>source_id<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*positions<sp/>)[<sp/>random_id<sp/>].first.get_vector(<sp/>source_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>rng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_id,<sp/>tgt,<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>synapse_model_[<sp/>indx<sp/>],<sp/>param_dicts_[<sp/>indx<sp/>][<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>],<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_selected[<sp/>random_id<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--target_number_connections;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">ConnectionCreator::fixed_outdegree_(<sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>source_nc,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>Layer&lt;<sp/>D<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>target_nc<sp/>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>protect<sp/>against<sp/>connecting<sp/>to<sp/>devices<sp/>without<sp/>proxies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>do<sp/>this<sp/>before<sp/>creating<sp/>the<sp/>first<sp/>connection<sp/>to<sp/>leave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>network<sp/>untouched<sp/>if<sp/>any<sp/>target<sp/>does<sp/>not<sp/>have<sp/>proxies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>check<sp/>the<sp/>first<sp/>in<sp/>the<sp/>NodeCollection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first_in_tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_nc-&gt;operator[](<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>first_in_tgt-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IllegalConnection(<sp/></highlight><highlight class="stringliteral">&quot;Spatial<sp/>Connect<sp/>with<sp/>fixed_outdegree<sp/>to<sp/>devices<sp/>is<sp/>not<sp/>possible.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_begin<sp/>=<sp/>target_nc-&gt;MPI_local_begin();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>target_end<sp/>=<sp/>target_nc-&gt;end();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>tgt_it<sp/>=<sp/>target_begin;<sp/>tgt_it<sp/>&lt;<sp/>target_end;<sp/>++tgt_it<sp/>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>Node*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>(<sp/>*tgt_it<sp/>).node_id<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>not<sp/>tgt-&gt;is_proxy()<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fixed_outdegree<sp/>connections<sp/>(fixed<sp/>fan<sp/>out)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>(global)<sp/>source:<sp/>(All<sp/>connections<sp/>made<sp/>on<sp/>all<sp/>mpi<sp/>procs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Apply<sp/>mask<sp/>to<sp/>global<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>If<sp/>using<sp/>kernel:<sp/>Compute<sp/>connection<sp/>probability<sp/>for<sp/>each<sp/>global<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Draw<sp/>connections<sp/>to<sp/>make<sp/>using<sp/>global<sp/>rng</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>MaskedLayer&lt;<sp/>D<sp/>&gt;<sp/>masked_target(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>mask_,<sp/>allow_oversized_,<sp/>target_nc<sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>masked_target_end<sp/>=<sp/>masked_target.end();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>target<sp/>positions<sp/>vector<sp/>here<sp/>that<sp/>can<sp/>be<sp/>updated<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>and<sp/>node<sp/>ID<sp/>pairs.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>creating<sp/>and<sp/>destroying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unnecessarily<sp/>many<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;<sp/>target_pos_node_id_pairs;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::pair&lt;<sp/>Position&lt;<sp/>D<sp/>&gt;,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>&gt;<sp/>&gt;<sp/>source_pos_node_id_pairs<sp/>=</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>.get_global_positions_vector(<sp/>source_nc<sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>source_pos_node_id_pair<sp/>:<sp/>source_pos_node_id_pairs<sp/>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position&lt;<sp/>D<sp/>&gt;<sp/>source_pos<sp/>=<sp/>source_pos_node_id_pair.first;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>source_id<sp/>=<sp/>source_pos_node_id_pair.second;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>src<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>source_id<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>source_pos_vector<sp/>=<sp/>source_pos.get_vector();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>target<sp/>pos<sp/>vector<sp/>here<sp/>that<sp/>can<sp/>be<sp/>updated<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>position.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>avoid<sp/>creating<sp/>and<sp/>destroying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unnecessarily<sp/>many<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>target_pos_vector(<sp/>D<sp/>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>probabilities;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>potential<sp/>targets<sp/>and<sp/>probabilities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>grng<sp/>=<sp/><ref refid="namespacenest_1a16717a46436ebcc2eae54f5baf6ab33f" kindref="member">get_rank_synced_rng</ref>();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>target_pos_node_id_pairs.resize(<sp/><ref refid="namespacenest_1a110b54fe73a6033aab002995564c4e8a" kindref="member">std::distance</ref>(<sp/>masked_target.begin(<sp/>source_pos<sp/>),<sp/>masked_target_end<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(<sp/>masked_target.begin(<sp/>source_pos<sp/>),<sp/>masked_target_end,<sp/>target_pos_node_id_pairs.begin()<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>probabilities.reserve(<sp/>target_pos_node_id_pairs.size()<sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>kernel_.get()<sp/>)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>target_pos_node_id_pair<sp/>:<sp/>target_pos_node_id_pairs<sp/>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Why<sp/>is<sp/>probability<sp/>calculated<sp/>in<sp/>source<sp/>layer,<sp/>but<sp/>weight<sp/>and<sp/>delay<sp/>in<sp/>target<sp/>layer?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_pos_node_id_pair.first.get_vector(<sp/>target_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_pos_node_id_pair.second<sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.push_back(<sp/>kernel_-&gt;value(<sp/>grng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.resize(<sp/>target_pos_node_id_pairs.size(),<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ad226c179b88d56545019bb2d59d6ac40" kindref="member">number_of_connections</ref><sp/>=<sp/>std::round(<sp/>number_of_connections_-&gt;value(<sp/>grng,<sp/>src<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>target_pos_node_id_pairs.empty()</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>target_pos_node_id_pairs.size()<sp/>&lt;<sp/><ref refid="namespacenest_1_1names_1ad226c179b88d56545019bb2d59d6ac40" kindref="member">number_of_connections</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;Global<sp/>source<sp/>ID<sp/>%1:<sp/>Not<sp/>enough<sp/>targets<sp/>found&quot;</highlight><highlight class="normal">,<sp/>source_id<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>targets.<sp/><sp/>A<sp/>discrete_distribution<sp/>draws<sp/>random<sp/>integers<sp/>with<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-uniform<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1aca70417cacdc3986658e92cacc8dc9b8" kindref="member">discrete_distribution</ref><sp/>lottery;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_random_distribution_1a5e70be96dd6d700d363d5542a6ece43d" kindref="member">discrete_distribution::param_type</ref><sp/>param(<sp/>probabilities.begin(),<sp/>probabilities.end()<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>lottery.param(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>multapses<sp/>are<sp/>not<sp/>allowed,<sp/>we<sp/>must<sp/>keep<sp/>track<sp/>of<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>targets<sp/>have<sp/>been<sp/>selected<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>bool<sp/>&gt;<sp/>is_selected(<sp/>target_pos_node_id_pairs.size()<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>`number_of_connections`<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ad226c179b88d56545019bb2d59d6ac40" kindref="member">number_of_connections</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>random_id<sp/>=<sp/>lottery(<sp/><ref refid="namespacenest_1a16717a46436ebcc2eae54f5baf6ab33f" kindref="member">get_rank_synced_rng</ref>()<sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_multapses_<sp/>and<sp/>is_selected[<sp/>random_id<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>target_id<sp/>=<sp/>target_pos_node_id_pairs[<sp/>random_id<sp/>].second;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>allow_autapses_<sp/>and<sp/>source_id<sp/>==<sp/>target_id<sp/>)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_selected[<sp/>random_id<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target_pos_node_id_pairs[<sp/>random_id<sp/>].first.get_vector(<sp/>target_pos_vector<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>rng_weight_vec;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>rng_delay_vec;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>weight_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tgt<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_pos_node_id_pairs[<sp/>indx<sp/>].second<sp/>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng_weight_vec.push_back(<sp/>weight_[<sp/>indx<sp/>]-&gt;value(<sp/>grng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng_delay_vec.push_back(<sp/>delay_[<sp/>indx<sp/>]-&gt;value(<sp/>grng,<sp/>source_pos_vector,<sp/>target_pos_vector,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>tgt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>VP<sp/>has<sp/>now<sp/>decided<sp/>to<sp/>create<sp/>this<sp/>connection<sp/>and<sp/>drawn<sp/>any<sp/>random<sp/>parameter<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>required<sp/>for<sp/>it.<sp/>Each<sp/>VP<sp/>thus<sp/>counts<sp/>the<sp/>connection<sp/>as<sp/>created,<sp/>but<sp/>only<sp/>the<sp/>VP<sp/>hosting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>target<sp/>neuron<sp/>actually<sp/>creates<sp/>the<sp/>connection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="namespacenest_1_1names_1ad226c179b88d56545019bb2d59d6ac40" kindref="member">number_of_connections</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().node_manager.is_local_node_id(<sp/>target_id<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Node*<sp/>target_ptr<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1_node_manager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>target_id<sp/>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/>target_ptr-&gt;get_thread();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indx<sp/>=<sp/>0;<sp/>indx<sp/>&lt;<sp/>synapse_model_.size();<sp/>++indx<sp/>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(<sp/>source_id,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_ptr,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synapse_model_[<sp/>indx<sp/>],</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param_dicts_[<sp/>indx<sp/>][<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>],</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng_delay_vec[<sp/>indx<sp/>],</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rng_weight_vec[<sp/>indx<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="nestkernel/connection_creator_impl.h"/>
  </compounddef>
</doxygen>
