<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1DelayChecker" kind="class" language="C++" prot="public">
    <compoundname>nest::DelayChecker</compoundname>
    <includes refid="delay__checker_8h" local="no">delay_checker.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1DelayChecker_1aac22d4dc9821faa25d5ec5f66894071c" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::DelayChecker::min_delay_</definition>
        <argsstring></argsstring>
        <name>min_delay_</name>
        <qualifiedname>nest::DelayChecker::min_delay_</qualifiedname>
        <briefdescription>
<para>Minimal delay of all created synapses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="89" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="classnest_1_1DelayChecker_1a78c7a9afa25e1c5803936753c504dd5f" compoundref="delay__checker_8cpp" startline="41" endline="49">DelayChecker</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1ac43e7a0ba7d2ebd0d134a0782ba83810" compoundref="delay__checker_8h" startline="97" endline="100">get_min_delay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1DelayChecker_1a656bc916948f0664740d190ed9a6cd86" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::DelayChecker::max_delay_</definition>
        <argsstring></argsstring>
        <name>max_delay_</name>
        <qualifiedname>nest::DelayChecker::max_delay_</qualifiedname>
        <briefdescription>
<para>Maximal delay of all created synapses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="90" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="classnest_1_1DelayChecker_1a78c7a9afa25e1c5803936753c504dd5f" compoundref="delay__checker_8cpp" startline="41" endline="49">DelayChecker</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1a9f356ddecef307e29ee76fbf19069116" compoundref="delay__checker_8h" startline="103" endline="106">get_max_delay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1DelayChecker_1a9a36e262b61b6097dcee6cc17af56bcd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::DelayChecker::user_set_delay_extrema_</definition>
        <argsstring></argsstring>
        <name>user_set_delay_extrema_</name>
        <qualifiedname>nest::DelayChecker::user_set_delay_extrema_</qualifiedname>
        <briefdescription>
<para>Flag indicating if the user set the delay extrema. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="91" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="classnest_1_1DelayChecker_1a30b9fddaa183a32c66c92ee3f07bb23c" compoundref="delay__checker_8h" startline="109" endline="112">get_user_set_delay_extrema</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1DelayChecker_1a67e292d5fcdf6406ea06e84b673c4d50" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::DelayChecker::freeze_delay_update_</definition>
        <argsstring></argsstring>
        <name>freeze_delay_update_</name>
        <qualifiedname>nest::DelayChecker::freeze_delay_update_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="93" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classnest_1_1DelayChecker_1a63f435aaf1bf3a864edcfeefc17b13ae" compoundref="delay__checker_8h" startline="121" endline="124">enable_delay_update</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1a9d21165fa3182dff7a5e3696fa335c9e" compoundref="delay__checker_8h" startline="115" endline="118">freeze_delay_update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a1c77c98b14da5b38aebcc334c78730ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::DelayChecker::DelayChecker</definition>
        <argsstring>()</argsstring>
        <name>DelayChecker</name>
        <qualifiedname>nest::DelayChecker::DelayChecker</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="39" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a78c7a9afa25e1c5803936753c504dd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::DelayChecker::DelayChecker</definition>
        <argsstring>(const DelayChecker &amp;)</argsstring>
        <name>DelayChecker</name>
        <qualifiedname>nest::DelayChecker::DelayChecker</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1DelayChecker" kindref="compound">DelayChecker</ref> &amp;</type>
          <defname>cr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="40" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="41" bodyend="49"/>
        <references refid="classnest_1_1Time_1a35949d760fe0e0fe43f32a8db86a458f" compoundref="nest__time_8h" startline="474" endline="477">nest::Time::calibrate</references>
        <references refid="classnest_1_1DelayChecker_1a656bc916948f0664740d190ed9a6cd86" compoundref="delay__checker_8h" startline="90">max_delay_</references>
        <references refid="classnest_1_1DelayChecker_1aac22d4dc9821faa25d5ec5f66894071c" compoundref="delay__checker_8h" startline="89">min_delay_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1ac43e7a0ba7d2ebd0d134a0782ba83810" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
        <definition>const Time &amp; nest::DelayChecker::get_min_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_min_delay</name>
        <qualifiedname>nest::DelayChecker::get_min_delay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="42" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="97" bodyend="100"/>
        <references refid="classnest_1_1DelayChecker_1aac22d4dc9821faa25d5ec5f66894071c" compoundref="delay__checker_8h" startline="89">min_delay_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a9f356ddecef307e29ee76fbf19069116" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
        <definition>const Time &amp; nest::DelayChecker::get_max_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_max_delay</name>
        <qualifiedname>nest::DelayChecker::get_max_delay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="44" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="103" bodyend="106"/>
        <references refid="classnest_1_1DelayChecker_1a656bc916948f0664740d190ed9a6cd86" compoundref="delay__checker_8h" startline="90">max_delay_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a9d21165fa3182dff7a5e3696fa335c9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::freeze_delay_update</definition>
        <argsstring>()</argsstring>
        <name>freeze_delay_update</name>
        <qualifiedname>nest::DelayChecker::freeze_delay_update</qualifiedname>
        <briefdescription>
<para>This method freezes the min/ max delay update in SetDefaults of connections method. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used, when the delay of default connections in the <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> is set: we do not know, whether new connections with this delay will ever be created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="52" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="115" bodyend="118"/>
        <references refid="classnest_1_1DelayChecker_1a67e292d5fcdf6406ea06e84b673c4d50" compoundref="delay__checker_8h" startline="93">freeze_delay_update_</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1aa02f22324265fc3bbb1447322c97aa9a" compoundref="connector__model__impl_8h" startline="107" endline="131">nest::GenericConnectorModel&lt; ConnectionT &gt;::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a63f435aaf1bf3a864edcfeefc17b13ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::enable_delay_update</definition>
        <argsstring>()</argsstring>
        <name>enable_delay_update</name>
        <qualifiedname>nest::DelayChecker::enable_delay_update</qualifiedname>
        <briefdescription>
<para>This method enables the min/ max delay update in SetDefaults of connections method. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used, when the delay of default connections in the <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> is set: we do not know, whether new connections with this delay will ever be created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="60" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="121" bodyend="124"/>
        <references refid="classnest_1_1DelayChecker_1a67e292d5fcdf6406ea06e84b673c4d50" compoundref="delay__checker_8h" startline="93">freeze_delay_update_</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1aa02f22324265fc3bbb1447322c97aa9a" compoundref="connector__model__impl_8h" startline="107" endline="131">nest::GenericConnectorModel&lt; ConnectionT &gt;::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a4a0e6ca8d78a66919f2688e286bf66cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::assert_valid_delay_ms</definition>
        <argsstring>(double)</argsstring>
        <name>assert_valid_delay_ms</name>
        <qualifiedname>nest::DelayChecker::assert_valid_delay_ms</qualifiedname>
        <param>
          <type>double</type>
          <defname>requested_new_delay</defname>
        </param>
        <briefdescription>
<para>Raise exception if delay value in milliseconds is invalid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Not const, since it may update delay extrema as a side-effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="67" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="121" bodyend="181"/>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1Time_1a817fe09798a12167761ce5711af5ce48" compoundref="nest__time_8h" startline="556" endline="559">nest::Time::delay_ms_to_steps</references>
        <references refid="classnest_1_1Time_1a24d25307fd9f343ac6ae01ff0f17f0fe" compoundref="nest__time_8h" startline="550" endline="553">nest::Time::delay_steps_to_ms</references>
        <references refid="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" compoundref="connection__manager_8h" startline="647" endline="650">nest::ConnectionManager::get_max_delay</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a55662c78049406c5119cd0c81e6de812" compoundref="connector__model__impl_8h" startline="185" endline="256">nest::GenericConnectorModel&lt; ConnectionT &gt;::add_connection</referencedby>
        <referencedby refid="classnest_1_1cont__delay__synapse_1a59e07e30f11187a58471fe22fb86e194" compoundref="cont__delay__synapse__impl_8h" startline="60" endline="91">nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1Connection_1aede706c57e428cfe0831f17fa439f4fe" compoundref="connection_8h" startline="355" endline="364">nest::Connection&lt; targetidentifierT &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a20dcb39b4807eb02c6d55d737f4afa83" compoundref="connector__model__impl_8h" startline="135" endline="174">nest::GenericConnectorModel&lt; ConnectionT &gt;::used_default_delay</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1afd253171e8f64e64ff5cd672b4ba1799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::assert_two_valid_delays_steps</definition>
        <argsstring>(delay, delay)</argsstring>
        <name>assert_two_valid_delays_steps</name>
        <qualifiedname>nest::DelayChecker::assert_two_valid_delays_steps</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
          <defname>new_delay1</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
          <defname>new_delay2</defname>
        </param>
        <briefdescription>
<para>Raise exception if either of the two delays in steps is invalid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Setting continuous delays requires testing d and d+1. This function implements this more efficiently than two calls to assert_valid_delay(). </para>
</simplesect>
<simplesect kind="note"><para>This test accepts the delays in steps, as this makes more sense when working with continuous delays. </para>
</simplesect>
<simplesect kind="note"><para>Not const, since it may update delay extrema as a side-effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="79" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="184" bodyend="246"/>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1Time_1a24d25307fd9f343ac6ae01ff0f17f0fe" compoundref="nest__time_8h" startline="550" endline="553">nest::Time::delay_steps_to_ms</references>
        <references refid="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" compoundref="connection__manager_8h" startline="647" endline="650">nest::ConnectionManager::get_max_delay</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <referencedby refid="classnest_1_1cont__delay__synapse_1a59e07e30f11187a58471fe22fb86e194" compoundref="cont__delay__synapse__impl_8h" startline="60" endline="91">nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a30b9fddaa183a32c66c92ee3f07bb23c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::DelayChecker::get_user_set_delay_extrema</definition>
        <argsstring>() const</argsstring>
        <name>get_user_set_delay_extrema</name>
        <qualifiedname>nest::DelayChecker::get_user_set_delay_extrema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="81" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="109" bodyend="112"/>
        <references refid="classnest_1_1DelayChecker_1a9a36e262b61b6097dcee6cc17af56bcd" compoundref="delay__checker_8h" startline="91">user_set_delay_extrema_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1ac0fa016d296b2f329aa3a2b12eec048d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::calibrate</definition>
        <argsstring>(const TimeConverter &amp;)</argsstring>
        <name>calibrate</name>
        <qualifiedname>nest::DelayChecker::calibrate</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> &amp;</type>
          <defname>tc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="52" bodyend="58"/>
        <references refid="classnest_1_1TimeConverter_1a6dd858c951ee0d6d846c5fc11a9eadc3" compoundref="nest__timeconverter_8cpp" startline="49" endline="57">nest::TimeConverter::from_old_tics</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1adb57dc9a9f4b500b7194990b310927b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::DelayChecker::get_status</qualifiedname>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="85" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="61" bodyend="65"/>
        <references refid="namespacenest_1_1names_1a378131705c36a50754331d6fc45c7a1d" compoundref="nest__names_8h" startline="303">nest::names::max_delay</references>
        <references refid="namespacenest_1_1names_1a7dfd661e5c3035f7f99d8b25fb079661" compoundref="nest__names_8h" startline="311">nest::names::min_delay</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DelayChecker_1a3bbfadbb5fc47a2027fd13ff27adf909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DelayChecker::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::DelayChecker::set_status</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="86" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.cpp" bodystart="68" bodyend="118"/>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a378131705c36a50754331d6fc45c7a1d" compoundref="nest__names_8h" startline="303">nest::names::max_delay</references>
        <references refid="namespacenest_1_1names_1a7dfd661e5c3035f7f99d8b25fb079661" compoundref="nest__names_8h" startline="311">nest::names::min_delay</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::DelayChecker</label>
        <link refid="classnest_1_1DelayChecker"/>
        <childnode refid="2" relation="usage">
          <edgelabel>max_delay_</edgelabel>
          <edgelabel>min_delay_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="3" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="5">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="4">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" line="36" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/delay_checker.h" bodystart="37" bodyend="94"/>
    <listofallmembers>
      <member refid="classnest_1_1DelayChecker_1afd253171e8f64e64ff5cd672b4ba1799" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>assert_two_valid_delays_steps</name></member>
      <member refid="classnest_1_1DelayChecker_1a4a0e6ca8d78a66919f2688e286bf66cb" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>assert_valid_delay_ms</name></member>
      <member refid="classnest_1_1DelayChecker_1ac0fa016d296b2f329aa3a2b12eec048d" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>calibrate</name></member>
      <member refid="classnest_1_1DelayChecker_1a1c77c98b14da5b38aebcc334c78730ba" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>DelayChecker</name></member>
      <member refid="classnest_1_1DelayChecker_1a78c7a9afa25e1c5803936753c504dd5f" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>DelayChecker</name></member>
      <member refid="classnest_1_1DelayChecker_1a63f435aaf1bf3a864edcfeefc17b13ae" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>enable_delay_update</name></member>
      <member refid="classnest_1_1DelayChecker_1a9d21165fa3182dff7a5e3696fa335c9e" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>freeze_delay_update</name></member>
      <member refid="classnest_1_1DelayChecker_1a67e292d5fcdf6406ea06e84b673c4d50" prot="private" virt="non-virtual"><scope>nest::DelayChecker</scope><name>freeze_delay_update_</name></member>
      <member refid="classnest_1_1DelayChecker_1a9f356ddecef307e29ee76fbf19069116" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>get_max_delay</name></member>
      <member refid="classnest_1_1DelayChecker_1ac43e7a0ba7d2ebd0d134a0782ba83810" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>get_min_delay</name></member>
      <member refid="classnest_1_1DelayChecker_1adb57dc9a9f4b500b7194990b310927b3" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>get_status</name></member>
      <member refid="classnest_1_1DelayChecker_1a30b9fddaa183a32c66c92ee3f07bb23c" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>get_user_set_delay_extrema</name></member>
      <member refid="classnest_1_1DelayChecker_1a656bc916948f0664740d190ed9a6cd86" prot="private" virt="non-virtual"><scope>nest::DelayChecker</scope><name>max_delay_</name></member>
      <member refid="classnest_1_1DelayChecker_1aac22d4dc9821faa25d5ec5f66894071c" prot="private" virt="non-virtual"><scope>nest::DelayChecker</scope><name>min_delay_</name></member>
      <member refid="classnest_1_1DelayChecker_1a3bbfadbb5fc47a2027fd13ff27adf909" prot="public" virt="non-virtual"><scope>nest::DelayChecker</scope><name>set_status</name></member>
      <member refid="classnest_1_1DelayChecker_1a9a36e262b61b6097dcee6cc17af56bcd" prot="private" virt="non-virtual"><scope>nest::DelayChecker</scope><name>user_set_delay_extrema_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
