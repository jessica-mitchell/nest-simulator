<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1Device" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::Device</compoundname>
    <derivedcompoundref refid="classnest_1_1PseudoRecordingDevice" prot="public" virt="non-virtual">nest::PseudoRecordingDevice</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1RecordingDevice" prot="public" virt="non-virtual">nest::RecordingDevice</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1StimulationDevice" prot="public" virt="non-virtual">nest::StimulationDevice</derivedcompoundref>
    <includes refid="device_8h" local="no">device.h</includes>
    <innerclass refid="structnest_1_1Device_1_1Parameters__" prot="private">nest::Device::Parameters_</innerclass>
    <innerclass refid="structnest_1_1Device_1_1Variables__" prot="private">nest::Device::Variables_</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1Device_1ad1639ffc168514320ad0f50c2902b1a6" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1Device_1_1Parameters__" kindref="compound">Parameters_</ref></type>
        <definition>Parameters_ nest::Device::P_</definition>
        <argsstring></argsstring>
        <name>P_</name>
        <qualifiedname>nest::Device::P_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="174" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="174" bodyend="-1"/>
        <referencedby refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e" compoundref="device_8h" startline="181" endline="184">get_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Device_1aba9db825c8f7e3631f8baf67f69a3beb" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1Device_1_1Variables__" kindref="compound">Variables_</ref></type>
        <definition>Variables_ nest::Device::V_</definition>
        <argsstring></argsstring>
        <name>V_</name>
        <qualifiedname>nest::Device::V_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="175" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::Device::Device</definition>
        <argsstring>()</argsstring>
        <name>Device</name>
        <qualifiedname>nest::Device::Device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="64" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::Device::Device</definition>
        <argsstring>(const Device &amp;n)</argsstring>
        <name>Device</name>
        <qualifiedname>nest::Device::Device</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Device" kindref="compound">Device</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="65" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::Device::~Device</definition>
        <argsstring>()</argsstring>
        <name>~Device</name>
        <qualifiedname>nest::Device::~Device</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="66" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::Device::init_state</definition>
        <argsstring>()</argsstring>
        <name>init_state</name>
        <qualifiedname>nest::Device::init_state</qualifiedname>
        <reimplementedby refid="classnest_1_1StimulationDevice_1acfb7d327f43c0bcf3c86920b188c5830">init_state</reimplementedby>
        <briefdescription>
<para>Reset dynamic state to that of model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="72" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::Device::init_buffers</definition>
        <argsstring>()</argsstring>
        <name>init_buffers</name>
        <qualifiedname>nest::Device::init_buffers</qualifiedname>
        <reimplementedby refid="classnest_1_1StimulationDevice_1aac3d7dd71fd9f86cd8306b2faeefa6a0">init_buffers</reimplementedby>
        <briefdescription>
<para>Reset buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="78" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="78" bodyend="80"/>
        <referencedby refid="classnest_1_1poisson__generator__ps_1ae37bed64edc6f657455071e54e434ba6" compoundref="poisson__generator__ps_8cpp" startline="116" endline="123">nest::poisson_generator_ps::init_buffers_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Device::pre_run_hook</definition>
        <argsstring>()</argsstring>
        <name>pre_run_hook</name>
        <qualifiedname>nest::Device::pre_run_hook</qualifiedname>
        <reimplementedby refid="classnest_1_1RecordingDevice_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1StimulationDevice_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1ad46b2ee10a45923c52c9ec2ba29b4de8">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1ac420b56549ea7fa85ab3ccdb6b805500">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1gamma__sup__generator_1a9195ca49679fa202001dd6dcbdc1498f">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1inhomogeneous__poisson__generator_1a6e9d7eb9c5635c80ccf201261815a1f8">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1mip__generator_1aeb4de02037b155e1d2e7e14a0e4ffe35">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a352fc50e020b737e61c56561194db8a6">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a885126416c46cb6a12072bb918414837">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator_1a216ff33c7f50e59357ebb8f4f4a9b05a">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator__ps_1a3a60e7fe56562aa73fd078ec7ea87df6">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1ppd__sup__generator_1acafc670694a092e7beda61161e761546">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1pulsepacket__generator_1a1250869dd296817cdd236764ed490485">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a9c2201ffb8fe2b96cc68f0d9afdb9005">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__generator_1a4e3d967e84bab3ad6bd6bb631388dc33">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a16b90b25a38e5030a84ea62ba1bcbb71">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1aed2f1e3e033a7c87f00838beb0919bea">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1afbb7d65104c69970a7dcc7ebe9c4ea8d">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a5ba316fe701eead95774a8a8c1673c9b">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a6544b6f863ff396eb0c7a2a6de531d2f">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1StimulationDevice_1a53ca0035b5b2ddedbf5f5d7a5fc47718">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1RecordingDevice_1ad51550af656588536bcdf5afecdbf788">pre_run_hook</reimplementedby>
        <reimplementedby refid="classnest_1_1StimulationDevice_1ad51550af656588536bcdf5afecdbf788">pre_run_hook</reimplementedby>
        <briefdescription>
<para>Set internal variables before calls to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="83" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.cpp" bodystart="144" bodyend="153"/>
        <referencedby refid="classnest_1_1StimulationDevice_1a53ca0035b5b2ddedbf5f5d7a5fc47718" compoundref="stimulation__device_8cpp" startline="73" endline="76">nest::StimulationDevice::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a2d1416e38bec46975b4b79ba2e042fed" compoundref="recording__device_8cpp" startline="52" endline="57">nest::RecordingDevice::pre_run_hook</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::Device::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::Device::get_status</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1aef46661b64a798965c7b0e8f51f30b7b">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1ab7a927118378d4e557c263ce72677145">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1gamma__sup__generator_1a0724e37d3e1cbe945309455ec9e951f1">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1inhomogeneous__poisson__generator_1a486c4258b82f9b14fd2c9ef322d536d8">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1mip__generator_1a05021ee19f1ac100e96493f89beffc5e">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1adcf15205a1624343eae90243e692c9e8">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1ac817838c90876f77d9fa913679de89fe">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator_1aa4bebb9311d48f1b312b7fe3ac283e63">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator__ps_1a800d9e11958be048772e1af1bdc06f25">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ppd__sup__generator_1a8618c060385f11830fec81be83425da2">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1pulsepacket__generator_1ab712c4aca7cbd90245d8fe125a1b2801">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__generator_1a5417629d73ff60b7774fdf533663b3df">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1ab186a323af2338b25eff0aae6cae94e7">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1ac6c7cf6c7b0c28505fd96695f575a72b">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1ae0c7575db0cce9011d0760da461bc096">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1afa9606afa1898ea0dc46f6bf4d4ffc67">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1ac9dfea06dc5c9d7f8e02b4ba0077d131">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1StimulationDevice_1a3c17981ffa0b79bf9b2e559bcfba1573">get_status</reimplementedby>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="85" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="181" bodyend="184"/>
        <references refid="structnest_1_1Device_1_1Parameters___1a9290cf8e5dabc82ec671e335083a7d85" compoundref="device_8cpp" startline="78" endline="83">nest::Device::Parameters_::get</references>
        <references refid="classnest_1_1Device_1ad1639ffc168514320ad0f50c2902b1a6" compoundref="device_8h" startline="174">P_</references>
        <referencedby refid="classnest_1_1correlation__detector_1af1387a3235882a16a359bf8796d5945e" compoundref="correlation__detector_8h" startline="322" endline="327">nest::correlation_detector::get_status</referencedby>
        <referencedby refid="classnest_1_1correlomatrix__detector_1ad6719b66043647cf0e71eb58cff7f4e7" compoundref="correlomatrix__detector_8h" startline="311" endline="316">nest::correlomatrix_detector::get_status</referencedby>
        <referencedby refid="classnest_1_1correlospinmatrix__detector_1a4de936f891fccb9240b18f44900050ff" compoundref="correlospinmatrix__detector_8h" startline="307" endline="312">nest::correlospinmatrix_detector::get_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">nest::RecordingDevice::get_status</referencedby>
        <referencedby refid="classnest_1_1StimulationDevice_1a3c17981ffa0b79bf9b2e559bcfba1573" compoundref="stimulation__device_8cpp" startline="166" endline="182">nest::StimulationDevice::get_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::Device::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::Device::set_status</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1ae9f83a79b4f96a77a48dff3d5e1a5608">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1ac5ec8e4c2c16a1977d9b4272480cf2b1">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1gamma__sup__generator_1a15799863292a105ce060d1dfa9c1525d">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1inhomogeneous__poisson__generator_1aaabcd6b92565a9a52d440f69570783e6">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1mip__generator_1a6c01e625adef44b8841556f4c7a8d369">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a25c0c41b427eaa597f1efc7eb81c9cac">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a7138c8daaa65013034b97205d8a8bbcb">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator_1a3907ee9a951f6af3dcccf80bccb94cf1">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1poisson__generator__ps_1a1007f9bc3fa93c0000d0c29d362625a0">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ppd__sup__generator_1aa1060baa155aa29e5e780c62ba218c77">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1pulsepacket__generator_1a8f50cffee796d6954ddbb9faf11aa4d5">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a2ce94ecdc6b74227d0440fbba8a170b4">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__generator_1a96e3acc90f2b41fb63cf4e558b9ab6f5">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a623e5533311745a9bf08f8010ecdfbe1">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1acf81fb512b99425a8e6d6b82aecbc38a">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a8a09385f3b632145a9e337b783f308d9">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a920d4e53dc3e1152dbaa8dc4321a8f52">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a57830961d6384fdac5d3b9bffc0e5534">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845">set_status</reimplementedby>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="86" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="187" bodyend="194"/>
        <references refid="structnest_1_1Device_1_1Parameters___1adc7cda0e9c0872003c8935c157471cdb" compoundref="device_8cpp" startline="111" endline="121">nest::Device::Parameters_::set</references>
        <referencedby refid="classnest_1_1correlation__detector_1aea50d3429d1a132bb531d6889708ac70" compoundref="correlation__detector_8h" startline="330" endline="340">nest::correlation_detector::set_status</referencedby>
        <referencedby refid="classnest_1_1correlomatrix__detector_1a1c76fccf510cfb0ddc8a336526738830" compoundref="correlomatrix__detector_8h" startline="319" endline="330">nest::correlomatrix_detector::set_status</referencedby>
        <referencedby refid="classnest_1_1correlospinmatrix__detector_1a3f80449a5d74294eae88b0ca38e58c45" compoundref="correlospinmatrix__detector_8h" startline="315" endline="326">nest::correlospinmatrix_detector::set_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">nest::RecordingDevice::set_status</referencedby>
        <referencedby refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" compoundref="stimulation__device_8cpp" startline="123" endline="162">nest::StimulationDevice::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a70ac0c03cf931db59d611a974f51cf3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool nest::Device::is_active</definition>
        <argsstring>(Time const &amp;T) const =0</argsstring>
        <name>is_active</name>
        <qualifiedname>nest::Device::is_active</qualifiedname>
        <reimplementedby refid="classnest_1_1StimulationDevice_1a32a13f00b9c9b4bb0112105c08c6a2ba">is_active</reimplementedby>
        <reimplementedby refid="classnest_1_1PseudoRecordingDevice_1ab3d8f1b91428aec4ef45b35f21ed0d99">is_active</reimplementedby>
        <reimplementedby refid="classnest_1_1RecordingDevice_1afbc0cc70ae3ba2eff8a0d765aa59adb5">is_active</reimplementedby>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Returns true if the device is active at the given time stamp. </para>
        </briefdescription>
        <detaileddescription>
<para>Semantics are implemented by subclasses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="92" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Device::get_t_min_</definition>
        <argsstring>() const</argsstring>
        <name>get_t_min_</name>
        <qualifiedname>nest::Device::get_t_min_</qualifiedname>
        <briefdescription>
<para>Return lower limit in steps. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000009"><xreftitle>Todo</xreftitle><xrefdescription><para>Should be protected, but is temporarily public to solve inheritance problems in AnalogSamplingDevice. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="99" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="215" bodyend="218"/>
        <referencedby refid="classnest_1_1PseudoRecordingDevice_1ab3d8f1b91428aec4ef45b35f21ed0d99" compoundref="pseudo__recording__device_8h" startline="106" endline="111">nest::PseudoRecordingDevice::is_active</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1afbc0cc70ae3ba2eff8a0d765aa59adb5" compoundref="recording__device_8cpp" startline="204" endline="209">nest::RecordingDevice::is_active</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Device::get_t_max_</definition>
        <argsstring>() const</argsstring>
        <name>get_t_max_</name>
        <qualifiedname>nest::Device::get_t_max_</qualifiedname>
        <briefdescription>
<para>Return upper limit in steps. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>Should be protected, but is temporarily public to solve inheritance problems in AnalogSamplingDevice. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="221" bodyend="224"/>
        <referencedby refid="classnest_1_1PseudoRecordingDevice_1ab3d8f1b91428aec4ef45b35f21ed0d99" compoundref="pseudo__recording__device_8h" startline="106" endline="111">nest::PseudoRecordingDevice::is_active</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1afbc0cc70ae3ba2eff8a0d765aa59adb5" compoundref="recording__device_8cpp" startline="204" endline="209">nest::RecordingDevice::is_active</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        <definition>nest::Time const  &amp; nest::Device::get_origin</definition>
        <argsstring>() const</argsstring>
        <name>get_origin</name>
        <qualifiedname>nest::Device::get_origin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="108" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="197" bodyend="200"/>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1ad38c6a48bf611386f204865b613c0794" compoundref="recording__backend__sionlib_8cpp" startline="74" endline="98">nest::RecordingBackendSIONlib::enroll</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a3a60e7fe56562aa73fd078ec7ea87df6" compoundref="poisson__generator__ps_8cpp" startline="126" endline="171">nest::poisson_generator_ps::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1spike__generator_1ad2fb92f067e0a3fe5688bc78f69867dd" compoundref="spike__generator_8cpp" startline="401" endline="431">nest::spike_generator::set_data_from_stimulation_backend</referencedby>
        <referencedby refid="classnest_1_1spike__generator_1a96e3acc90f2b41fb63cf4e558b9ab6f5" compoundref="spike__generator_8h" startline="344" endline="371">nest::spike_generator::set_status</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a61693db596fef528c2b52614d5d52622" compoundref="poisson__generator__ps_8cpp" startline="179" endline="207">nest::poisson_generator_ps::update</referencedby>
        <referencedby refid="classnest_1_1spike__generator_1a1ed2922a414a4e4d8469398ea5c4f984" compoundref="spike__generator_8cpp" startline="320" endline="387">nest::spike_generator::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        <definition>nest::Time const  &amp; nest::Device::get_start</definition>
        <argsstring>() const</argsstring>
        <name>get_start</name>
        <qualifiedname>nest::Device::get_start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="109" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="203" bodyend="206"/>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1ad38c6a48bf611386f204865b613c0794" compoundref="recording__backend__sionlib_8cpp" startline="74" endline="98">nest::RecordingBackendSIONlib::enroll</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a3a60e7fe56562aa73fd078ec7ea87df6" compoundref="poisson__generator__ps_8cpp" startline="126" endline="171">nest::poisson_generator_ps::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a61693db596fef528c2b52614d5d52622" compoundref="poisson__generator__ps_8cpp" startline="179" endline="207">nest::poisson_generator_ps::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        <definition>nest::Time const  &amp; nest::Device::get_stop</definition>
        <argsstring>() const</argsstring>
        <name>get_stop</name>
        <qualifiedname>nest::Device::get_stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="110" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="209" bodyend="212"/>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1ad38c6a48bf611386f204865b613c0794" compoundref="recording__backend__sionlib_8cpp" startline="74" endline="98">nest::RecordingBackendSIONlib::enroll</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a61693db596fef528c2b52614d5d52622" compoundref="poisson__generator__ps_8cpp" startline="179" endline="207">nest::poisson_generator_ps::update</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class implementing common interface and properties common for all devices. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a common interface for all derived device classes. Each class derived from <ref refid="classnest_1_1Node" kindref="compound">Node</ref> and implementing a device, should have a member derived from class <ref refid="classnest_1_1Device" kindref="compound">Device</ref>. This member will contribute the implementation of device specific properties.</para>
<para>This class manages the properties common to all devices, namely origin, start and stop of the time window during which the device is active and the optional device label. The precise semantics of when the device is active depend on the type of device and are defined in subclasses.</para>
<para><simplesect kind="author"><para>HEP 2002-07-22, 2008-03-21, 2008-06-20 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
      </node>
      <node id="2">
        <label>nest::PseudoRecordingDevice</label>
        <link refid="classnest_1_1PseudoRecordingDevice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::RecordingDevice</label>
        <link refid="classnest_1_1RecordingDevice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>nest::StimulationDevice</label>
        <link refid="classnest_1_1StimulationDevice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>nest::ac_generator</label>
        <link refid="classnest_1_1ac__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>nest::dc_generator</label>
        <link refid="classnest_1_1dc__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>nest::gamma_sup_generator</label>
        <link refid="classnest_1_1gamma__sup__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>nest::inhomogeneous_poisson_generator</label>
        <link refid="classnest_1_1inhomogeneous__poisson__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>nest::mip_generator</label>
        <link refid="classnest_1_1mip__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::multimeter</label>
        <link refid="classnest_1_1multimeter"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>nest::noise_generator</label>
        <link refid="classnest_1_1noise__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>nest::poisson_generator</label>
        <link refid="classnest_1_1poisson__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>nest::poisson_generator_ps</label>
        <link refid="classnest_1_1poisson__generator__ps"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>nest::ppd_sup_generator</label>
        <link refid="classnest_1_1ppd__sup__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>nest::pulsepacket_generator</label>
        <link refid="classnest_1_1pulsepacket__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>nest::sinusoidal_poisson_generator</label>
        <link refid="classnest_1_1sinusoidal__poisson__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>nest::spike_dilutor::DilutorStimulationDevice</label>
        <link refid="classnest_1_1spike__dilutor_1_1DilutorStimulationDevice"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>nest::spike_generator</label>
        <link refid="classnest_1_1spike__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::spike_recorder</label>
        <link refid="classnest_1_1spike__recorder"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::spin_detector</label>
        <link refid="classnest_1_1spin__detector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>nest::step_current_generator</label>
        <link refid="classnest_1_1step__current__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>nest::step_rate_generator</label>
        <link refid="classnest_1_1step__rate__generator"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::voltmeter</label>
        <link refid="classnest_1_1voltmeter"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::weight_recorder</label>
        <link refid="classnest_1_1weight__recorder"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
        <childnode refid="2" relation="usage">
          <edgelabel>P_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>V_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::Device::Parameters_</label>
        <link refid="structnest_1_1Device_1_1Parameters__"/>
        <childnode refid="3" relation="usage">
          <edgelabel>origin_</edgelabel>
          <edgelabel>start_</edgelabel>
          <edgelabel>stop_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Device::Variables_</label>
        <link refid="structnest_1_1Device_1_1Variables__"/>
      </node>
      <node id="3">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="4" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="6">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="5">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" line="61" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.h" bodystart="62" bodyend="176"/>
    <listofallmembers>
      <member refid="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>get_origin</name></member>
      <member refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>get_start</name></member>
      <member refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e" prot="public" virt="virtual"><scope>nest::Device</scope><name>get_status</name></member>
      <member refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>get_stop</name></member>
      <member refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::Device</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1Device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::Device</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1Device_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::Device</scope><name>init_state</name></member>
      <member refid="classnest_1_1Device_1a70ac0c03cf931db59d611a974f51cf3b" prot="public" virt="pure-virtual"><scope>nest::Device</scope><name>is_active</name></member>
      <member refid="classnest_1_1Device_1ad1639ffc168514320ad0f50c2902b1a6" prot="private" virt="non-virtual"><scope>nest::Device</scope><name>P_</name></member>
      <member refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834" prot="public" virt="virtual"><scope>nest::Device</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990" prot="public" virt="virtual"><scope>nest::Device</scope><name>set_status</name></member>
      <member refid="classnest_1_1Device_1aba9db825c8f7e3631f8baf67f69a3beb" prot="private" virt="non-virtual"><scope>nest::Device</scope><name>V_</name></member>
      <member refid="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::Device</scope><name>~Device</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
