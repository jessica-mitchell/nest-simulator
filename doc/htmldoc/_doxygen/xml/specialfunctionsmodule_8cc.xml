<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="specialfunctionsmodule_8cc" kind="file" language="C++">
    <compoundname>specialfunctionsmodule.cc</compoundname>
    <includes refid="specialfunctionsmodule_8h" local="yes">specialfunctionsmodule.h</includes>
    <includes local="no">cmath</includes>
    <includes local="yes">config.h</includes>
    <includes refid="doubledatum_8h" local="yes">doubledatum.h</includes>
    <incdepgraph>
      <node id="31">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>doubledatum.h</label>
        <link refid="doubledatum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>genericdatum.h</label>
        <link refid="genericdatum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>numericdatum.h</label>
        <link refid="numericdatum_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="5">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>specialfunctionsmodule.cc</label>
        <link refid="specialfunctionsmodule_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>specialfunctionsmodule.h</label>
        <link refid="specialfunctionsmodule_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="8">
        <label>cmath</label>
      </node>
      <node id="3">
        <label>config.h</label>
      </node>
      <node id="26">
        <label>cstddef</label>
      </node>
      <node id="32">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>deque</label>
      </node>
      <node id="22">
        <label>iomanip</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="18">
        <label>list</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="12">
        <label>typeinfo</label>
      </node>
      <node id="23">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1a9e69a4adf2bad3c19a30e1724dc2388d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1GammaIncFunction" kindref="compound">SpecialFunctionsModule::GammaIncFunction</ref></type>
        <definition>const SpecialFunctionsModule::GammaIncFunction gammaincfunction</definition>
        <argsstring></argsstring>
        <name>gammaincfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="53" column="48" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1ae46b2d82f127cc379d04e5b8de0a7659" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1ErfFunction" kindref="compound">SpecialFunctionsModule::ErfFunction</ref></type>
        <definition>const SpecialFunctionsModule::ErfFunction erffunction</definition>
        <argsstring></argsstring>
        <name>erffunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="54" column="43" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1a1f474d3235d1623a8d8022f59bc91ba8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1ErfcFunction" kindref="compound">SpecialFunctionsModule::ErfcFunction</ref></type>
        <definition>const SpecialFunctionsModule::ErfcFunction erfcfunction</definition>
        <argsstring></argsstring>
        <name>erfcfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="55" column="44" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1a33fbd34a441dbcf8d470badea37668f4" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction" kindref="compound">SpecialFunctionsModule::GaussDiskConvFunction</ref></type>
        <definition>const SpecialFunctionsModule::GaussDiskConvFunction gaussdiskconvfunction</definition>
        <argsstring></argsstring>
        <name>gaussdiskconvfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="56" column="53" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1af243b4fe6e42beca505e820f25c453c1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1LambertW0Function" kindref="compound">SpecialFunctionsModule::LambertW0Function</ref></type>
        <definition>const SpecialFunctionsModule::LambertW0Function lambertw0function</definition>
        <argsstring></argsstring>
        <name>lambertw0function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="57" column="49" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="specialfunctionsmodule_8cc_1aac8820218ca1e11b3cbfa9c013150eb0" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSpecialFunctionsModule_1_1LambertWm1Function" kindref="compound">SpecialFunctionsModule::LambertWm1Function</ref></type>
        <definition>const SpecialFunctionsModule::LambertWm1Function lambertwm1function</definition>
        <argsstring></argsstring>
        <name>lambertwm1function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" line="58" column="50" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>specialfunctionsmodule.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="specialfunctionsmodule_8h" kindref="compound">specialfunctionsmodule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>has<sp/>definition<sp/>of<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="doubledatum_8h" kindref="compound">doubledatum.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>the<sp/>data-types<sp/>we<sp/>use!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_integration.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_sf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_sf_erf.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>more<sp/>and<sp/>more<sp/>special<sp/>functions<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_sf_gamma.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>added,<sp/>replace<sp/>by<sp/>&lt;gsl/gsl_sf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_sf_lambert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a2cb15cf6773f3a04dbaacf6cb723bf24" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::MAX_QUAD_SIZE</ref><sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1af412130ac205064eefed730e1cc20578" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::QUAD_ERR_LIM</ref><sp/>=<sp/>1<ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>-12;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1ab3dfe8b2683b788e200cb0664f5dfd51" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::QUAD_ERR_SCALE</ref><sp/>=<sp/>200.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>this<sp/>for<sp/>some<sp/>compiling<sp/>reason...<sp/>(ask<sp/>Bjarne)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="specialfunctionsmodule_8cc_1a9e69a4adf2bad3c19a30e1724dc2388d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1GammaIncFunction" kindref="compound">SpecialFunctionsModule::GammaIncFunction</ref><sp/><ref refid="specialfunctionsmodule_8cc_1a9e69a4adf2bad3c19a30e1724dc2388d" kindref="member">gammaincfunction</ref>;</highlight></codeline>
<codeline lineno="54" refid="specialfunctionsmodule_8cc_1ae46b2d82f127cc379d04e5b8de0a7659" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1ErfFunction" kindref="compound">SpecialFunctionsModule::ErfFunction</ref><sp/><ref refid="specialfunctionsmodule_8cc_1ae46b2d82f127cc379d04e5b8de0a7659" kindref="member">erffunction</ref>;</highlight></codeline>
<codeline lineno="55" refid="specialfunctionsmodule_8cc_1a1f474d3235d1623a8d8022f59bc91ba8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1ErfcFunction" kindref="compound">SpecialFunctionsModule::ErfcFunction</ref><sp/><ref refid="specialfunctionsmodule_8cc_1a1f474d3235d1623a8d8022f59bc91ba8" kindref="member">erfcfunction</ref>;</highlight></codeline>
<codeline lineno="56" refid="specialfunctionsmodule_8cc_1a33fbd34a441dbcf8d470badea37668f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction" kindref="compound">SpecialFunctionsModule::GaussDiskConvFunction</ref><sp/><ref refid="specialfunctionsmodule_8cc_1a33fbd34a441dbcf8d470badea37668f4" kindref="member">gaussdiskconvfunction</ref>;</highlight></codeline>
<codeline lineno="57" refid="specialfunctionsmodule_8cc_1af243b4fe6e42beca505e820f25c453c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1LambertW0Function" kindref="compound">SpecialFunctionsModule::LambertW0Function</ref><sp/><ref refid="specialfunctionsmodule_8cc_1af243b4fe6e42beca505e820f25c453c1" kindref="member">lambertw0function</ref>;</highlight></codeline>
<codeline lineno="58" refid="specialfunctionsmodule_8cc_1aac8820218ca1e11b3cbfa9c013150eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSpecialFunctionsModule_1_1LambertWm1Function" kindref="compound">SpecialFunctionsModule::LambertWm1Function</ref><sp/><ref refid="specialfunctionsmodule_8cc_1aac8820218ca1e11b3cbfa9c013150eb0" kindref="member">lambertwm1function</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Part<sp/>1:<sp/>Methods<sp/>pertaining<sp/>to<sp/>the<sp/>entire<sp/>module<sp/>-----------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GSL<sp/>independent<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="64" refid="classSpecialFunctionsModule_1ab9abecb92c22791343cbb303b1b9d435" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1ab9abecb92c22791343cbb303b1b9d435" kindref="member">SpecialFunctionsModule::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<sp/></highlight><highlight class="stringliteral">&quot;SpecialFunctionsModule&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>name<sp/>of<sp/>the<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classSpecialFunctionsModule_1ac7ec77eec41d0b8fb7b30e3ca4cf84fd" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1ac7ec77eec41d0b8fb7b30e3ca4cf84fd" kindref="member">SpecialFunctionsModule::init</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>whatever<sp/>initialization<sp/>is<sp/>needed,<sp/>then...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>error<sp/>handler<sp/>off,<sp/>so<sp/>that<sp/>errors<sp/>in<sp/>GSL<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>lead<sp/>to<sp/>a<sp/>core<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>gsl_set_error_handler_off();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...don&apos;t<sp/>forget<sp/>to<sp/>create<sp/>the<sp/>new<sp/>SLI-commands!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1a168d8e9466e6cce111557118047d9cc8" kindref="member">gammaincfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertW0&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1a76bccfd913689b3c45c83ae408c562f2" kindref="member">lambertw0function</ref><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertWm1&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1a3e4a38ab26d85da9c67ff17751c4b0ce" kindref="member">lambertwm1function</ref><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erf&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1ae0bdec405b2ac0f785199dc7c46a64a6" kindref="member">erffunction</ref><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erfc&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1a91059a87501b91890d61259f2eed7579" kindref="member">erfcfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;GaussDiskConv&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classSpecialFunctionsModule_1a2625d7f1fe2f37cd04e03ff5821d9fb5" kindref="member">gaussdiskconvfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Part<sp/>2:<sp/>Methods<sp/>pertaining<sp/>to<sp/>the<sp/>individual<sp/>functions<sp/>----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>see<sp/>below<sp/>for<sp/>dummy<sp/>implementations<sp/>in<sp/>absence<sp/>of<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GammaIncFunction_1a0fc2a9c6acdaca68f751c200a0e89cac" kindref="member">SpecialFunctionsModule::GammaIncFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>expect<sp/>two<sp/>arguments<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;two<sp/>arguments<sp/>required&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>top<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>da<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>da<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>top<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>second<sp/>argument,<sp/>leave<sp/>datum<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dx<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>computation<sp/>via<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>result;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_gamma_inc_P_e(<sp/>da-&gt;get(),<sp/>dx-&gt;get(),<sp/>&amp;result<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>(<sp/>*dx<sp/>)<sp/>=<sp/>result.val;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>mathematica.sli<sp/>for<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1LambertW0Function_1a700128daa1fe7f8b88b9d183c76ad3e9" kindref="member">SpecialFunctionsModule::LambertW0Function::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>expect<sp/>one<sp/>arguments<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertW0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;one<sp/>argument<sp/>required&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>argument,<sp/>leave<sp/>datum<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dx<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertW0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>computation<sp/>via<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>result;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_lambert_W0_e(<sp/>dx-&gt;get(),<sp/>&amp;result<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertW0[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>(<sp/>*dx<sp/>)<sp/>=<sp/>result.val;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>see<sp/>mathematica.sli<sp/>for<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1LambertWm1Function_1aea0ec210294dc3d704446b752658843e" kindref="member">SpecialFunctionsModule::LambertWm1Function::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="176"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>expect<sp/>one<sp/>arguments<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertWm1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;one<sp/>argument<sp/>required&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>argument,<sp/>leave<sp/>datum<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dx<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertWm1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;argument<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>computation<sp/>via<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>result;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_lambert_Wm1_e(<sp/>dx-&gt;get(),<sp/>&amp;result<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertWm1[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>(<sp/>*dx<sp/>)<sp/>=<sp/>result.val;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1ErfFunction_1a448a3e02aba34ef6f12ea77ddfa17136" kindref="member">SpecialFunctionsModule::ErfFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>expect<sp/>one<sp/>arguments<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;one<sp/>argument<sp/>required&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>argument,<sp/>leave<sp/>datum<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dx<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>computation<sp/>via<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>result;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_erf_e(<sp/>dx-&gt;get(),<sp/>&amp;result<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erf[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>(<sp/>*dx<sp/>)<sp/>=<sp/>result.val;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1ErfcFunction_1a054ce4ab117ebf93116fd9eba3711c11" kindref="member">SpecialFunctionsModule::ErfcFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="243"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>expect<sp/>one<sp/>arguments<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erfc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;one<sp/>argument<sp/>required&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>argument,<sp/>leave<sp/>datum<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>dx<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dx<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erfc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>must<sp/>be<sp/>doubles&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>computation<sp/>via<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>result;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_erfc_e(<sp/>dx-&gt;get(),<sp/>&amp;result<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erfc[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>(<sp/>*dx<sp/>)<sp/>=<sp/>result.val;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">gsl_function<sp/>SpecialFunctionsModule::GaussDiskConvFunction::F_;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a1b1f3883d1c4186565566cd1d4c91e2c" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::GaussDiskConvFunction</ref>()</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>integration<sp/>workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>w_<sp/>=<sp/>gsl_integration_workspace_alloc(<sp/>MAX_QUAD_SIZE<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>integrand<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>F_.function<sp/>=<sp/>SpecialFunctionsModule::GaussDiskConvFunction::f_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a79d72f52c520f0ed19dfeabfaba01edc" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::~GaussDiskConvFunction</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>integration<sp/>workspace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>gsl_integration_workspace_free(<sp/>w_<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1afc19c63cdb952923748aa09d509ce435" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="295"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();<sp/></highlight><highlight class="comment">//<sp/>pop<sp/>yourself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a4bd843d0ad15faf88185a1ae885f8852" kindref="member">assert_stack_load</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r0<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>R<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>arguments<sp/>to<sp/>doubles,<sp/>square,<sp/>as<sp/>they<sp/>are<sp/>needed<sp/>several<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>const<sp/>double<sp/>z<sp/>=<sp/>std::pow(r0,<sp/>2);<sp/>//<sp/>commented<sp/>out,<sp/>since<sp/>unused.<sp/>mog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3d7d1f0f421f73cbf83801221729f349" kindref="member">y</ref><sp/>=<sp/>std::pow(<sp/>R,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>simple<sp/>cases<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>X;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&lt;<sp/>2<sp/>*<sp/>GSL_DBL_EPSILON<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>disk<sp/>has<sp/>zero<sp/>diameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r0<sp/>&lt;<sp/>2<sp/>*<sp/>GSL_DBL_EPSILON<sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Gaussian<sp/>is<sp/>concentric<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_expm1_e(<sp/>-y,<sp/>&amp;X<sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-X.val;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;GaussDiskConv[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>std::fabs(<sp/>R<sp/>-<sp/>r0<sp/>)<sp/>&lt;<sp/>2<sp/>*<sp/>GSL_DBL_EPSILON<sp/>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Gaussian<sp/>on<sp/>perimeter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_sf_bessel_I0_scaled_e(<sp/>2.0<sp/>*<sp/>y,<sp/>&amp;X<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>1.0<sp/>-<sp/>X.val<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;GaussDiskConv[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>R<sp/>&gt;<sp/>r0<sp/>+<sp/>sqrt(<sp/>-log(<sp/>GSL_DBL_EPSILON<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Gaussian<sp/>in<sp/>disk<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y<sp/>&gt;<sp/>1<sp/>and<sp/>r0<sp/>&gt;<sp/>R<sp/>+<sp/>sqrt(<sp/>-log(<sp/>GSL_DBL_EPSILON<sp/>/<sp/>y<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>tail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0.25<sp/>*<sp/>R<sp/>/<sp/>r0<sp/>*<sp/>(<sp/>std::exp(<sp/>-(<sp/>r0<sp/>-<sp/>R<sp/>)<sp/>*<sp/>(<sp/>r0<sp/>-<sp/>R<sp/>)<sp/>)<sp/>-<sp/>std::exp(<sp/>-(<sp/>r0<sp/>+<sp/>R<sp/>)<sp/>*<sp/>(<sp/>r0<sp/>+<sp/>R<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>all<sp/>other<sp/>cases,<sp/>integration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>for<sp/>integrand<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>F_.params<sp/>=<sp/>&amp;r0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Cerr<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_integration_qag(<sp/>&amp;F_,<sp/>0.0,<sp/>R,<sp/>0.0,<sp/>QUAD_ERR_LIM,<sp/>MAX_QUAD_SIZE,<sp/>GSL_INTEG_GAUSS61,<sp/>w_,<sp/>&amp;C,<sp/>&amp;Cerr<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;GaussDiskConv[GSL]&quot;</highlight><highlight class="normal">,<sp/>gsl_strerror(<sp/>status<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>C<sp/>&lt;=<sp/>1.0<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>C;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>result<sp/>value<sp/>through<sp/>argument<sp/>object<sp/>still<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>()<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integrand<sp/>function<sp/>---<sp/>C<sp/>linkage,<sp/>so<sp/>we<sp/>can<sp/>pass<sp/>it<sp/>to<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">SpecialFunctionsModule::GaussDiskConvFunction::f_(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>params<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r0<sp/>=<sp/>*(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>)<sp/>params;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>gsl_sf_result<sp/>X;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>gsl_sf_bessel_I0_scaled_e(<sp/>2.0<sp/>*<sp/>r<sp/>*<sp/>r0,<sp/>&amp;X<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GSL_NAN;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0<sp/>*<sp/>r<sp/>*<sp/>exp(<sp/>-(<sp/>r<sp/>-<sp/>r0<sp/>)<sp/>*<sp/>(<sp/>r<sp/>-<sp/>r0<sp/>)<sp/>)<sp/>*<sp/>X.val;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dummy<sp/>implementations<sp/>when<sp/>no<sp/>GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classSpecialFunctionsModule_1_1GammaIncFunction_1a0fc2a9c6acdaca68f751c200a0e89cac" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GammaIncFunction_1a0fc2a9c6acdaca68f751c200a0e89cac" kindref="member">SpecialFunctionsModule::GammaIncFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="409"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Gammainc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="classSpecialFunctionsModule_1_1LambertW0Function_1a700128daa1fe7f8b88b9d183c76ad3e9" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1LambertW0Function_1a700128daa1fe7f8b88b9d183c76ad3e9" kindref="member">SpecialFunctionsModule::LambertW0Function::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="417"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertW0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classSpecialFunctionsModule_1_1LambertWm1Function_1aea0ec210294dc3d704446b752658843e" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1LambertWm1Function_1aea0ec210294dc3d704446b752658843e" kindref="member">SpecialFunctionsModule::LambertWm1Function::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="425"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LambertWm1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="classSpecialFunctionsModule_1_1ErfFunction_1a448a3e02aba34ef6f12ea77ddfa17136" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1ErfFunction_1a448a3e02aba34ef6f12ea77ddfa17136" kindref="member">SpecialFunctionsModule::ErfFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erf&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classSpecialFunctionsModule_1_1ErfcFunction_1a054ce4ab117ebf93116fd9eba3711c11" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1ErfcFunction_1a054ce4ab117ebf93116fd9eba3711c11" kindref="member">SpecialFunctionsModule::ErfcFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Erfc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a1b1f3883d1c4186565566cd1d4c91e2c" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a1b1f3883d1c4186565566cd1d4c91e2c" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::GaussDiskConvFunction</ref>()</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a79d72f52c520f0ed19dfeabfaba01edc" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1a79d72f52c520f0ed19dfeabfaba01edc" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::~GaussDiskConvFunction</ref>()</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1afc19c63cdb952923748aa09d509ce435" refkind="member"><highlight class="normal"><ref refid="classSpecialFunctionsModule_1_1GaussDiskConvFunction_1afc19c63cdb952923748aa09d509ce435" kindref="member">SpecialFunctionsModule::GaussDiskConvFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="457"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/></highlight><highlight class="stringliteral">&quot;GaussDiskConv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>implemented<sp/>(no<sp/>GSL)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/specialfunctionsmodule.cc"/>
  </compounddef>
</doxygen>
