<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="sp__manager_8cpp" kind="file" language="C++">
    <compoundname>sp_manager.cpp</compoundname>
    <includes refid="sp__manager_8h" local="yes">sp_manager.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="conn__builder_8h" local="yes">conn_builder.h</includes>
    <includes refid="conn__parameter_8h" local="yes">conn_parameter.h</includes>
    <includes refid="connector__base_8h" local="yes">connector_base.h</includes>
    <includes refid="connector__model_8h" local="yes">connector_model.h</includes>
    <includes refid="kernel__manager_8h" local="yes">kernel_manager.h</includes>
    <includes refid="nest__names_8h" local="yes">nest_names.h</includes>
    <incdepgraph>
      <node id="111">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="50">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>iterator</label>
      </node>
      <node id="32">
        <label>arraydatum.h</label>
      </node>
      <node id="5">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="93">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="60">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>dictutils.h</label>
      </node>
      <node id="43">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cmath</label>
      </node>
      <node id="18">
        <label>cassert</label>
      </node>
      <node id="54">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>stdexcept</label>
      </node>
      <node id="97">
        <label>numeric</label>
      </node>
      <node id="16">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="36">
        <label>map</label>
      </node>
      <node id="15">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>aggregatedatum.h</label>
      </node>
      <node id="33">
        <label>dict.h</label>
      </node>
      <node id="40">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cfloat</label>
      </node>
      <node id="46">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ostream</label>
      </node>
      <node id="108">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="71">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>slitype.h</label>
      </node>
      <node id="103">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>allocator.h</label>
      </node>
      <node id="83">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>enum_bitfield.h</label>
        <link refid="enum__bitfield_8h"/>
      </node>
      <node id="82">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>random</label>
      </node>
      <node id="68">
        <label>slimodule.h</label>
      </node>
      <node id="59">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>bitset</label>
      </node>
      <node id="58">
        <label>token.h</label>
      </node>
      <node id="27">
        <label>ctime</label>
      </node>
      <node id="92">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>unistd.h</label>
      </node>
      <node id="45">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="66">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="73">
        <label>block_vector.h</label>
        <link refid="block__vector_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>new</label>
      </node>
      <node id="98">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>utility</label>
      </node>
      <node id="55">
        <label>array</label>
      </node>
      <node id="56">
        <label>sstream</label>
      </node>
      <node id="67">
        <label>slifunction.h</label>
      </node>
      <node id="107">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>randutils.hpp</label>
      </node>
      <node id="20">
        <label>cstdlib</label>
      </node>
      <node id="121">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dictdatum.h</label>
      </node>
      <node id="91">
        <label>sys/time.h</label>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>name.h</label>
      </node>
      <node id="26">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="80">
        <label>deque</label>
      </node>
      <node id="106">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="115">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>sliexceptions.h</label>
      </node>
      <node id="109">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>sp_manager.cpp</label>
        <link refid="sp__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>vector_util.h</label>
        <link refid="vector__util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>set</label>
      </node>
      <node id="11">
        <label>config.h</label>
      </node>
      <node id="35">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>algorithm</label>
      </node>
      <node id="95">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>cstring</label>
      </node>
      <node id="76">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="87">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>logging.h</label>
        <link refid="logging_8h"/>
      </node>
      <node id="62">
        <label>initializer_list</label>
      </node>
      <node id="23">
        <label>numerics.h</label>
        <link refid="numerics_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>compose.hpp</label>
      </node>
      <node id="72">
        <label>sort.h</label>
        <link refid="sort_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>stopwatch.h</label>
        <link refid="stopwatch_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>sp_manager.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/>sp_updater.cpp</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Author:<sp/>naveau</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Created<sp/>on<sp/>November<sp/>26,<sp/>2013,<sp/>2:28<sp/>PM</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sp__manager_8h" kindref="compound">sp_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conn__builder_8h" kindref="compound">conn_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conn__parameter_8h" kindref="compound">conn_parameter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connector__base_8h" kindref="compound">connector_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connector__model_8h" kindref="compound">connector_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__names_8h" kindref="compound">nest_names.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespacenest_1a6a3aa7b764c6e972d90a6faa2c27e7bc" refkind="member"><highlight class="normal"><ref refid="namespacenest_1a6a3aa7b764c6e972d90a6faa2c27e7bc" kindref="member">print_vector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>T<sp/>&gt;&amp;<sp/>vec<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#######BEGIN############################\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>T<sp/>&gt;::const_iterator<sp/>cit<sp/>=<sp/>vec.begin();<sp/>cit<sp/>!=<sp/>vec.end();<sp/>++cit<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>*cit<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;########END############################\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classnest_1_1SPManager_1a4e8743b8323dca07db67e08615f147ad" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a4e8743b8323dca07db67e08615f147ad" kindref="member">SPManager::SPManager</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classnest_1_1ManagerInterface" kindref="compound">ManagerInterface</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>,<sp/>structural_plasticity_update_interval_(<sp/>10000.<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>,<sp/>structural_plasticity_enabled_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>,<sp/>sp_conn_builders_()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>,<sp/>growthcurve_factories_()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>,<sp/>growthcurvedict_(<sp/>new<sp/>Dictionary()<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classnest_1_1SPManager_1a32a98d81f2d61298e8d43427900dc038" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a32a98d81f2d61298e8d43427900dc038" kindref="member">SPManager::~SPManager</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1a929ad597fdb40a6b0080991eb4b36aa3" kindref="member">finalize</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classnest_1_1SPManager_1a81bd08bb0734b0910c216220fce57e5c" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a81bd08bb0734b0910c216220fce57e5c" kindref="member">SPManager::initialize</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1ad45f80808966464c9a1079f8800f7712" kindref="member">structural_plasticity_update_interval_</ref><sp/>=<sp/>10000.;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1a14a4c875e5792d81a5c81ac78f97219c" kindref="member">structural_plasticity_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classnest_1_1SPManager_1a929ad597fdb40a6b0080991eb4b36aa3" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a929ad597fdb40a6b0080991eb4b36aa3" kindref="member">SPManager::finalize</ref>()</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>*i;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.clear();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>Methods<sp/>to<sp/>retrieve<sp/>data<sp/>regarding<sp/>structural<sp/>plasticity<sp/>variables</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classnest_1_1SPManager_1ad53307b4caba0acaa2b074ed31ca146c" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1ad53307b4caba0acaa2b074ed31ca146c" kindref="member">SPManager::get_status</ref>(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>sp_synapses<sp/>=<sp/>DictionaryDatum(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary()<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>sp_synapse;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>def&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1abe4690157da3900565e096ff7998ae61" kindref="member">names::structural_plasticity_synapses</ref>,<sp/>sp_synapses<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_synapse<sp/>=<sp/>DictionaryDatum(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary()<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>std::string<sp/>&gt;(<sp/>sp_synapse,<sp/><ref refid="namespacenest_1_1names_1a80a88cb579d9c5f2496711bd85f8c3f2" kindref="member">names::pre_synaptic_element</ref>,<sp/>(<sp/>*i<sp/>)-&gt;get_pre_synaptic_element_name()<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>std::string<sp/>&gt;(<sp/>sp_synapse,<sp/><ref refid="namespacenest_1_1names_1acc02ec704ddb9599126cfc2d871c1362" kindref="member">names::post_synaptic_element</ref>,<sp/>(<sp/>*i<sp/>)-&gt;get_post_synaptic_element_name()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>std::string<sp/>&gt;(<sp/>sp_synapse,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">names::synapse_model</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().model_manager.get_connection_model(<sp/>(<sp/>*i<sp/>)-&gt;get_synapse_model(),<sp/>0<sp/>).get_name()<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>syn_name;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>syn_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;syn&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end()<sp/>-<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>sp_synapses,<sp/>syn_name.str(),<sp/>sp_synapse<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1f328d4d42783e047daadfa1ca8ef9a8" kindref="member">names::structural_plasticity_update_interval</ref>,<sp/><ref refid="classnest_1_1SPManager_1ad45f80808966464c9a1079f8800f7712" kindref="member">structural_plasticity_update_interval_</ref><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/><ref refid="namespacenest_1_1names_1afc1d47864f789a6e91b6308f0f21b577" kindref="member">growth_curves</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>element<sp/>:<sp/>*<ref refid="classnest_1_1SPManager_1a9abde5b9b0883a14cf58709312b91828" kindref="member">growthcurvedict_</ref><sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1afc1d47864f789a6e91b6308f0f21b577" kindref="member">growth_curves</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LiteralDatum(<sp/>element.first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>def&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1afc1d47864f789a6e91b6308f0f21b577" kindref="member">names::growth_curves</ref>,<sp/><ref refid="namespacenest_1_1names_1afc1d47864f789a6e91b6308f0f21b577" kindref="member">growth_curves</ref><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classnest_1_1SPManager_1a826cbcc83e2da5a24acf3345917e7921" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a826cbcc83e2da5a24acf3345917e7921" kindref="member">SPManager::set_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;known(<sp/><ref refid="namespacenest_1_1names_1a1f328d4d42783e047daadfa1ca8ef9a8" kindref="member">names::structural_plasticity_update_interval</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>updateValue&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1f328d4d42783e047daadfa1ca8ef9a8" kindref="member">names::structural_plasticity_update_interval</ref>,<sp/><ref refid="classnest_1_1SPManager_1ad45f80808966464c9a1079f8800f7712" kindref="member">structural_plasticity_update_interval_</ref><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;known(<sp/><ref refid="namespacenest_1_1names_1abe4690157da3900565e096ff7998ae61" kindref="member">names::structural_plasticity_synapses</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Configure<sp/>synapses<sp/>model<sp/>updated<sp/>during<sp/>the<sp/>simulation.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>Token<sp/>synmodel;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>syn_specs,<sp/>syn_spec;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>conn_spec<sp/>=<sp/>DictionaryDatum(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;known(<sp/><ref refid="namespacenest_1_1names_1a3a9aa50a486ede5bf5eec386dbd44688" kindref="member">names::allow_autapses</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>bool<sp/>&gt;(<sp/>conn_spec,<sp/><ref refid="namespacenest_1_1names_1a3a9aa50a486ede5bf5eec386dbd44688" kindref="member">names::allow_autapses</ref>,<sp/>getValue&lt;<sp/>bool<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3a9aa50a486ede5bf5eec386dbd44688" kindref="member">names::allow_autapses</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;known(<sp/><ref refid="namespacenest_1_1names_1a18f346470b8a4e1e81647dbe67a51510" kindref="member">names::allow_multapses</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>def&lt;<sp/>bool<sp/>&gt;(<sp/>conn_spec,<sp/><ref refid="namespacenest_1_1names_1a18f346470b8a4e1e81647dbe67a51510" kindref="member">names::allow_multapses</ref>,<sp/>getValue&lt;<sp/>bool<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a18f346470b8a4e1e81647dbe67a51510" kindref="member">names::allow_multapses</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>sources(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref>()<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref>()<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(<sp/>*i<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.clear();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>updateValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1abe4690157da3900565e096ff7998ae61" kindref="member">names::structural_plasticity_synapses</ref>,<sp/>syn_specs<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Dictionary::const_iterator<sp/>i<sp/>=<sp/>syn_specs-&gt;begin();<sp/>i<sp/>!=<sp/>syn_specs-&gt;end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>syn_spec<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>syn_specs,<sp/>i-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>a<sp/>ConnBuilder<sp/>with<sp/>dummy<sp/>values<sp/>to<sp/>check<sp/>the<sp/>synapse<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref>*<sp/>conn_builder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref>(<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>conn_spec,<sp/>{<sp/>syn_spec<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>user<sp/>defined<sp/>the<sp/>min<sp/>and<sp/>max<sp/>delay<sp/>properly,<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>delay<sp/>is<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>conn_builder-&gt;<ref refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" kindref="member">get_default_delay</ref>()<sp/>and<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_user_set_delay_extrema()<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Structural<sp/>Plasticity:<sp/>to<sp/>use<sp/>different<sp/>delays<sp/>for<sp/>synapses<sp/>you<sp/>must<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;specify<sp/>the<sp/>min<sp/>and<sp/>max<sp/>delay<sp/>in<sp/>the<sp/>kernel<sp/>parameters.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.push_back(<sp/>conn_builder<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></highlight></codeline>
<codeline lineno="180" refid="classnest_1_1SPManager_1a5412e3381cceb64ff0b1dedf869cd288" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a5412e3381cceb64ff0b1dedf869cd288" kindref="member">SPManager::builder_min_delay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="181"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">min_delay</ref><sp/>=<sp/><ref refid="classnest_1_1Time_1acb1c377c4d654c34797f9fef4c02250a" kindref="member">Time::pos_inf</ref>().<ref refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" kindref="member">get_steps</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>builder_delay<sp/>=<sp/><ref refid="classnest_1_1Time_1acb1c377c4d654c34797f9fef4c02250a" kindref="member">Time::pos_inf</ref>().<ref refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" kindref="member">get_steps</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*i<sp/>)-&gt;update_delay(<sp/>builder_delay<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">min_delay</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">std::min</ref>(<sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">min_delay</ref>,<sp/>builder_delay<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">min_delay</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></highlight></codeline>
<codeline lineno="194" refid="classnest_1_1SPManager_1a921fce1870107ce8d1a4fd4395051fe2" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a921fce1870107ce8d1a4fd4395051fe2" kindref="member">SPManager::builder_max_delay</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="195"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">max_delay</ref><sp/>=<sp/><ref refid="classnest_1_1Time_1aced9f70610dd53cd35d58a2927d3f21b" kindref="member">Time::neg_inf</ref>().<ref refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" kindref="member">get_steps</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>builder_delay<sp/>=<sp/><ref refid="classnest_1_1Time_1aced9f70610dd53cd35d58a2927d3f21b" kindref="member">Time::neg_inf</ref>().<ref refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" kindref="member">get_steps</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*i<sp/>)-&gt;update_delay(<sp/>builder_delay<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">max_delay</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730" kindref="member">std::max</ref>(<sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">max_delay</ref>,<sp/>builder_delay<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">max_delay</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classnest_1_1SPManager_1ae5b9af1301a59e2ccde8633c203e34a3" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" kindref="member">SPManager::disconnect</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>snode_id,<sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>syn_id<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>snode_id<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>nodes<sp/>and<sp/>devices<sp/>with<sp/>proxies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" kindref="member">disconnect</ref>(<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>syn_id,<sp/>snode_id,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_node_id()<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;local_receiver()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>normal<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;is_proxy()<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;get_thread()<sp/>!=<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>)<sp/>and<sp/>(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;has_proxies()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;get_thread();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_node_id(),<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" kindref="member">disconnect</ref>(<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>syn_id,<sp/>snode_id,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_node_id()<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>globally<sp/>receiving<sp/>devices<sp/>iterate<sp/>over<sp/>all<sp/>target<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>do<sp/>not<sp/>allow<sp/>to<sp/>connect<sp/>a<sp/>device<sp/>to<sp/>a<sp/>global<sp/>receiver<sp/>at<sp/>the<sp/>moment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>n_threads<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>n_threads;<sp/>t++<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_node_id(),<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_thread();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" kindref="member">disconnect</ref>(<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref>,<sp/>syn_id,<sp/>snode_id,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_node_id()<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" kindref="member">SPManager::disconnect</ref>(<sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>sources,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>DictionaryDatum&amp;<sp/>conn_spec,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>DictionaryDatum&amp;<sp/>syn_spec<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.connections_have_changed()<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a4feb2ae20c19197830bf57c5e7247560" kindref="member">simulation_manager</ref>.<ref refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" kindref="member">update_connection_infrastructure</ref>(<sp/>tid<sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ConnBuilder" kindref="compound">ConnBuilder</ref>*<sp/>cb<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>conn_spec-&gt;clear_access_flags();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>syn_spec-&gt;clear_access_flags();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>conn_spec-&gt;known(<sp/><ref refid="namespacenest_1_1names_1ac8db72b37f83bf96618159735777ff34" kindref="member">names::rule</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Disconnection<sp/>spec<sp/>must<sp/>contain<sp/>disconnection<sp/>rule.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>rule_name<sp/>=<sp/>(<sp/>*conn_spec<sp/>)[<sp/><ref refid="namespacenest_1_1names_1ac8db72b37f83bf96618159735777ff34" kindref="member">names::rule</ref><sp/>];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.valid_connection_rule(<sp/>rule_name<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>connectivity<sp/>rule:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>rule_name<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.empty()<sp/>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>a<sp/>getter<sp/>for<sp/>sp_conn_builders_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>synModel<sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>syn_spec,<sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">names::synapse_model</ref><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>*i<sp/>)-&gt;get_synapse_model()<sp/>==<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().model_manager.get_synapse_model_id(<sp/>synModel<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a7724037fd623d6100e44b3ca7c0d737d" kindref="member">get_conn_builder</ref>(<sp/>rule_name,<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>conn_spec,<sp/>{<sp/>syn_spec<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="classnest_1_1ConnBuilder_1a46694477447f70340fb29a9d31449b95" kindref="member">set_post_synaptic_element_name</ref>(<sp/>(<sp/>*i<sp/>)-&gt;get_post_synaptic_element_name()<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="classnest_1_1ConnBuilder_1a344a8fc339bc288dd272b370213ce18a" kindref="member">set_pre_synaptic_element_name</ref>(<sp/>(<sp/>*i<sp/>)-&gt;get_pre_synaptic_element_name()<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>cb<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a7724037fd623d6100e44b3ca7c0d737d" kindref="member">get_conn_builder</ref>(<sp/>rule_name,<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>conn_spec,<sp/>{<sp/>syn_spec<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>assert(<sp/>cb<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>this<sp/>point,<sp/>all<sp/>entries<sp/>in<sp/>conn_spec<sp/>and<sp/>syn_spec<sp/>have<sp/>been<sp/>checked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="logging_8h_1a91f6a947f0219a1ffb76f912c65cba95" kindref="member">ALL_ENTRIES_ACCESSED</ref>(<sp/>*conn_spec,<sp/></highlight><highlight class="stringliteral">&quot;Connect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unread<sp/>dictionary<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="logging_8h_1a91f6a947f0219a1ffb76f912c65cba95" kindref="member">ALL_ENTRIES_ACCESSED</ref>(<sp/>*syn_spec,<sp/></highlight><highlight class="stringliteral">&quot;Connect&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unread<sp/>dictionary<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>flag<sp/>before<sp/>calling<sp/>cb-&gt;disconnect()<sp/>in<sp/>case<sp/>exception<sp/>is<sp/>thrown<sp/>after<sp/>some<sp/>connections<sp/>have<sp/>been<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a364992a5aca6c29407e9ed0d97ec766b" kindref="member">set_connections_have_changed</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>cb-&gt;<ref refid="classnest_1_1ConnBuilder_1a4fafe51332d31c75a637d4837bbaea4d" kindref="member">disconnect</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classnest_1_1SPManager_1a6f0cc34c3cc807bf1d6b9399b318d35a" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a6f0cc34c3cc807bf1d6b9399b318d35a" kindref="member">SPManager::update_structural_plasticity</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>SPBuilder*<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classnest_1_1SPManager_1a1f1da97e5c9e9ad10846a7bc6ab0698e" kindref="member">sp_conn_builders_</ref>.end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a6f0cc34c3cc807bf1d6b9399b318d35a" kindref="member">update_structural_plasticity</ref>(<sp/>(<sp/>*i<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classnest_1_1SPManager_1a6c5563d7088a144d3b630e4ed8faee3b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a6f0cc34c3cc807bf1d6b9399b318d35a" kindref="member">SPManager::update_structural_plasticity</ref>(<sp/><ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref>*<sp/>sp_builder<sp/>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>neurons<sp/>having<sp/>a<sp/>vacant<sp/>synaptic<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>pre_vacant_id;<sp/><sp/></highlight><highlight class="comment">//<sp/>pre<sp/>synaptic<sp/>elements<sp/>(e.g<sp/>Axon)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>post_vacant_id;<sp/></highlight><highlight class="comment">//<sp/>postsynaptic<sp/>element<sp/>(e.g<sp/>Den)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>pre_vacant_n;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>synaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>post_vacant_n;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>synaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>neuron<sp/>deleting<sp/>a<sp/>synaptic<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>pre_deleted_id,<sp/>post_deleted_id;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>pre_deleted_n,<sp/>post_deleted_n;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>vector<sp/>for<sp/>vacant<sp/>and<sp/>deleted<sp/>synaptic<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>pre_vacant_id_global,<sp/>post_vacant_id_global;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>pre_vacant_n_global,<sp/>post_vacant_n_global;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>pre_deleted_id_global,<sp/>post_deleted_id_global;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>pre_deleted_n_global,<sp/>post_deleted_n_global;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>of<sp/>displacements<sp/>for<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>displacements;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>pre<sp/>synaptic<sp/>elements<sp/>data<sp/>from<sp/>global<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">get_synaptic_elements</ref>(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" kindref="member">get_pre_synaptic_element_name</ref>(),<sp/>pre_vacant_id,<sp/>pre_vacant_n,<sp/>pre_deleted_id,<sp/>pre_deleted_n<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Communicate<sp/>the<sp/>number<sp/>of<sp/>deleted<sp/>pre-synaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>pre_deleted_id,<sp/>pre_deleted_id_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>pre_deleted_n,<sp/>pre_deleted_n_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pre_deleted_id_global.size()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a135b22e6cd3f6888480ceb0ef2ef9706" kindref="member">delete_synapses_from_pre</ref>(<sp/>pre_deleted_id_global,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_deleted_n_global,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" kindref="member">get_synapse_model</ref>(),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" kindref="member">get_pre_synaptic_element_name</ref>(),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" kindref="member">get_post_synaptic_element_name</ref>()<sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>number<sp/>of<sp/>synaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">get_synaptic_elements</ref>(</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" kindref="member">get_pre_synaptic_element_name</ref>(),<sp/>pre_vacant_id,<sp/>pre_vacant_n,<sp/>pre_deleted_id,<sp/>pre_deleted_n<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>postsynaptic<sp/>elements<sp/>data<sp/>from<sp/>local<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">get_synaptic_elements</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" kindref="member">get_post_synaptic_element_name</ref>(),<sp/>post_vacant_id,<sp/>post_vacant_n,<sp/>post_deleted_id,<sp/>post_deleted_n<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Communicate<sp/>the<sp/>number<sp/>of<sp/>deleted<sp/>postsynaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>post_deleted_id,<sp/>post_deleted_id_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>post_deleted_n,<sp/>post_deleted_n_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>post_deleted_id_global.size()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a3f7183684e5410096b01044c13da7f80" kindref="member">delete_synapses_from_post</ref>(<sp/>post_deleted_id_global,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>post_deleted_n_global,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" kindref="member">get_synapse_model</ref>(),</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" kindref="member">get_pre_synaptic_element_name</ref>(),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" kindref="member">get_post_synaptic_element_name</ref>()<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">get_synaptic_elements</ref>(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" kindref="member">get_pre_synaptic_element_name</ref>(),<sp/>pre_vacant_id,<sp/>pre_vacant_n,<sp/>pre_deleted_id,<sp/>pre_deleted_n<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">get_synaptic_elements</ref>(</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sp_builder-&gt;<ref refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" kindref="member">get_post_synaptic_element_name</ref>(),<sp/>post_vacant_id,<sp/>post_vacant_n,<sp/>post_deleted_id,<sp/>post_deleted_n<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Communicate<sp/>vacant<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>pre_vacant_id,<sp/>pre_vacant_id_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>pre_vacant_n,<sp/>pre_vacant_n_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>post_vacant_id,<sp/>post_vacant_id_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>post_vacant_n,<sp/>post_vacant_n_global,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synapses_created<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pre_vacant_id_global.size()<sp/>&gt;<sp/>0<sp/>and<sp/>post_vacant_id_global.size()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>synapses_created<sp/>=<sp/><ref refid="classnest_1_1SPManager_1a9d99744a7e3f8990558b5636dec66c47" kindref="member">create_synapses</ref>(</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pre_vacant_id_global,<sp/>pre_vacant_n_global,<sp/>post_vacant_id_global,<sp/>post_vacant_n_global,<sp/>sp_builder<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>synapses_created<sp/>or<sp/>post_deleted_id.size()<sp/>&gt;<sp/>0<sp/>or<sp/>pre_deleted_id.size()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a364992a5aca6c29407e9ed0d97ec766b" kindref="member">set_connections_have_changed</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="classnest_1_1SPManager_1a9d99744a7e3f8990558b5636dec66c47" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a9d99744a7e3f8990558b5636dec66c47" kindref="member">SPManager::create_synapses</ref>(<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>pre_id,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>pre_n,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>post_id,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>post_n,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref>*<sp/>sp_conn_builder<sp/>)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>pre_id_rnd;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>post_id_rnd;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>the<sp/>vacant<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1af80c9f1feede698cdde50c11de1d6485" kindref="member">serialize_id</ref>(<sp/>pre_id,<sp/>pre_n,<sp/>pre_id_rnd<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SPManager_1af80c9f1feede698cdde50c11de1d6485" kindref="member">serialize_id</ref>(<sp/>post_id,<sp/>post_n,<sp/>post_id_rnd<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shuffle<sp/>only<sp/>the<sp/>largest<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pre_id_rnd.size()<sp/>&gt;<sp/>post_id_rnd.size()<sp/>)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>shuffle<sp/>the<sp/>n<sp/>first<sp/>items,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>n<sp/>is<sp/>the<sp/>number<sp/>of<sp/>postsynaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">global_shuffle</ref>(<sp/>pre_id_rnd,<sp/>post_id_rnd.size()<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>pre_id_rnd.resize(<sp/>post_id_rnd.size()<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>only<sp/>shuffle<sp/>the<sp/>n<sp/>first<sp/>items,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>n<sp/>is<sp/>the<sp/>number<sp/>of<sp/>pre<sp/>synaptic<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">global_shuffle</ref>(<sp/>post_id_rnd,<sp/>pre_id_rnd.size()<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>post_id_rnd.resize(<sp/>pre_id_rnd.size()<sp/>);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>synapse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>sp_conn_builder-&gt;<ref refid="classnest_1_1SPBuilder_1afd48465903e920c31f81dee5bb6b317f" kindref="member">sp_connect</ref>(<sp/>pre_id_rnd,<sp/>post_id_rnd<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not<sp/>pre_id_rnd.empty();</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="classnest_1_1SPManager_1a135b22e6cd3f6888480ceb0ef2ef9706" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a135b22e6cd3f6888480ceb0ef2ef9706" kindref="member">SPManager::delete_synapses_from_pre</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>pre_deleted_id,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>pre_deleted_n,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>se_pre_name,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>se_post_name<sp/>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Synapses<sp/>deletion<sp/>due<sp/>to<sp/>the<sp/>loss<sp/>of<sp/>a<sp/>pre-synaptic<sp/>element<sp/>need<sp/>a</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/>*<sp/>communication<sp/>of<sp/>the<sp/>lists<sp/>of<sp/>target</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connectivity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>&gt;<sp/>connectivity;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>global_targets;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>displacements;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>&gt;::iterator<sp/>connectivity_it;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::const_iterator<sp/>id_it;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::iterator<sp/>n_it;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a6798d923ce597300f380d3e8bd864ba4" kindref="member">get_targets</ref>(<sp/>pre_deleted_id,<sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,<sp/>se_post_name,<sp/>connectivity<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>id_it<sp/>=<sp/>pre_deleted_id.begin();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>n_it<sp/>=<sp/>pre_deleted_n.begin();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>connectivity_it<sp/>=<sp/>connectivity.begin();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>id_it<sp/>!=<sp/>pre_deleted_id.end()<sp/>and<sp/>n_it<sp/>!=<sp/>pre_deleted_n.end();<sp/>id_it++,<sp/>n_it++,<sp/>connectivity_it++<sp/>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Communicate<sp/>the<sp/>list<sp/>of<sp/>targets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>*connectivity_it,<sp/>global_targets,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>only<sp/>the<sp/>first<sp/>n<sp/>items,<sp/>n<sp/>is<sp/>the<sp/>number<sp/>of<sp/>deleted<sp/>synaptic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>-(<sp/>*n_it<sp/>)<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>global_targets.size()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*n_it<sp/>=<sp/>-global_targets.size();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">global_shuffle</ref>(<sp/>global_targets,<sp/>-(<sp/>*n_it<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>-(<sp/>*n_it<sp/>);<sp/>++i<sp/>)<sp/></highlight><highlight class="comment">//<sp/>n<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1ae2c3831a343dd28da33c87fed976b2a9" kindref="member">delete_synapse</ref>(<sp/>*id_it,<sp/>global_targets[<sp/>i<sp/>],<sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,<sp/>se_pre_name,<sp/>se_post_name<sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="classnest_1_1SPManager_1ae2c3831a343dd28da33c87fed976b2a9" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1ae2c3831a343dd28da33c87fed976b2a9" kindref="member">SPManager::delete_synapse</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>snode_id,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>tnode_id,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>syn_id,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>se_pre_name,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>se_post_name<sp/>)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>thread<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().node_manager.is_local_node_id(<sp/>snode_id<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>snode_id<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>source_thread<sp/>=<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;get_thread();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tid<sp/>==<sp/>source_thread<sp/>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>-&gt;connect_synaptic_element(<sp/>se_pre_name,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().node_manager.is_local_node_id(<sp/>tnode_id<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">get_node_or_proxy</ref>(<sp/>tnode_id<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_thread();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tid<sp/>==<sp/><ref refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9" kindref="member">target_thread</ref><sp/>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" kindref="member">disconnect</ref>(<sp/>tid,<sp/>syn_id,<sp/>snode_id,<sp/>tnode_id<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;connect_synaptic_element(<sp/>se_post_name,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="classnest_1_1SPManager_1a3f7183684e5410096b01044c13da7f80" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a3f7183684e5410096b01044c13da7f80" kindref="member">SPManager::delete_synapses_from_post</ref>(<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>post_deleted_id,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>post_deleted_n,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>std::string<sp/>se_pre_name,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>std::string<sp/>se_post_name<sp/>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/>*<sp/>TODO:<sp/>Synapses<sp/>deletion<sp/>due<sp/>to<sp/>the<sp/>loss<sp/>of<sp/>a<sp/>postsynaptic<sp/>element<sp/>can</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/>*<sp/>be<sp/>done<sp/>locally<sp/>(except<sp/>for<sp/>the<sp/>update<sp/>of<sp/>the<sp/>number<sp/>of<sp/>pre-synaptic</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/>*<sp/>element)</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connectivity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>&gt;<sp/>connectivity;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>global_sources;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;<sp/>displacements;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>&gt;::iterator<sp/>connectivity_it;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::iterator<sp/>id_it;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::iterator<sp/>n_it;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>connected<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a7cc5104fcceb1b875d22ae6c9f0c2018" kindref="member">get_sources</ref>(<sp/>post_deleted_id,<sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,<sp/>connectivity<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>id_it<sp/>=<sp/>post_deleted_id.begin();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>n_it<sp/>=<sp/>post_deleted_n.begin();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>connectivity_it<sp/>=<sp/>connectivity.begin();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>id_it<sp/>!=<sp/>post_deleted_id.end()<sp/>and<sp/>n_it<sp/>!=<sp/>post_deleted_n.end();<sp/>id_it++,<sp/>n_it++,<sp/>connectivity_it++<sp/>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Communicate<sp/>the<sp/>list<sp/>of<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>*connectivity_it,<sp/>global_sources,<sp/>displacements<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>only<sp/>the<sp/>first<sp/>n<sp/>items,<sp/>n<sp/>is<sp/>the<sp/>number<sp/>of<sp/>deleted<sp/>synaptic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>-(<sp/>*n_it<sp/>)<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>global_sources.size()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*n_it<sp/>=<sp/>-global_sources.size();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">global_shuffle</ref>(<sp/>global_sources,<sp/>-(<sp/>*n_it<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>-(<sp/>*n_it<sp/>);<sp/>i++<sp/>)<sp/></highlight><highlight class="comment">//<sp/>n<sp/>is<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1SPManager_1ae2c3831a343dd28da33c87fed976b2a9" kindref="member">delete_synapse</ref>(<sp/>global_sources[<sp/>i<sp/>],<sp/>*id_it,<sp/><ref refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770" kindref="member">synapse_model</ref>,<sp/>se_pre_name,<sp/>se_post_name<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1aab1b488f46bba7cc7978b4313d525437" kindref="member">nest::SPManager::get_synaptic_elements</ref>(<sp/>std::string<sp/>se_name,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>se_vacant_id,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>se_vacant_n,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>se_deleted_id,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/>se_deleted_n<sp/>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>n_vacant_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>n_deleted_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_nodes<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>se_vacant_id.clear();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>se_vacant_n.clear();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>se_deleted_id.clear();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>se_deleted_n.clear();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>se_vacant_id.resize(<sp/>n_nodes<sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>se_vacant_n.resize(<sp/>n_nodes<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>se_deleted_id.resize(<sp/>n_nodes<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>se_deleted_n.resize(<sp/>n_nodes<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::iterator<sp/>vacant_id_it<sp/>=<sp/>se_vacant_id.begin();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::iterator<sp/>vacant_n_it<sp/>=<sp/>se_vacant_n.begin();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::iterator<sp/>deleted_id_it<sp/>=<sp/>se_deleted_id.begin();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::iterator<sp/>deleted_n_it<sp/>=<sp/>se_deleted_n.begin();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">SparseNodeArray::const_iterator</ref><sp/>node_it;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/>0;<sp/>tid<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++tid<sp/>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1SparseNodeArray" kindref="compound">SparseNodeArray</ref>&amp;<sp/>local_nodes<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" kindref="member">node_manager</ref>.<ref refid="classnest_1_1NodeManager_1a264043547cdea9a9c528384bcd655e2b" kindref="member">get_local_nodes</ref>(<sp/>tid<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator" kindref="compound">SparseNodeArray::const_iterator</ref><sp/>node_it;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>node_it<sp/>=<sp/>local_nodes.<ref refid="classnest_1_1SparseNodeArray_1a5e621396e30b098cbb9fac0afea7de5d" kindref="member">begin</ref>();<sp/>node_it<sp/>&lt;<sp/>local_nodes.<ref refid="classnest_1_1SparseNodeArray_1a93393a4f5435a71467f775c682173dcd" kindref="member">end</ref>();<sp/>node_it++<sp/>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_id<sp/>=<sp/>node_it-&gt;get_node_id();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/>node_it-&gt;get_node();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>=<sp/>node-&gt;<ref refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" kindref="member">get_synaptic_elements_vacant</ref>(<sp/>se_name<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*vacant_id_it<sp/>)<sp/>=<sp/>node_id;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*vacant_n_it<sp/>)<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_vacant_id++;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vacant_id_it++;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vacant_n_it++;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*deleted_id_it<sp/>)<sp/>=<sp/>node_id;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*deleted_n_it<sp/>)<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_deleted_id++;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleted_id_it++;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleted_n_it++;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>se_vacant_id.resize(<sp/>n_vacant_id<sp/>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>se_vacant_n.resize(<sp/>n_vacant_id<sp/>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>se_deleted_id.resize(<sp/>n_deleted_id<sp/>);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>se_deleted_n.resize(<sp/>n_deleted_id<sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="classnest_1_1SPManager_1af80c9f1feede698cdde50c11de1d6485" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1af80c9f1feede698cdde50c11de1d6485" kindref="member">nest::SPManager::serialize_id</ref>(<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::vector&lt;<sp/>int<sp/>&gt;&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>,<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>res<sp/>)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>populate<sp/>res<sp/>with<sp/>indexes<sp/>of<sp/>nodes<sp/>corresponding<sp/>to<sp/>the<sp/>number<sp/>of<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>res.clear();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::iterator<sp/>id_it;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>int<sp/>&gt;::iterator<sp/>n_it;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>id_it<sp/>=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.begin();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>n_it<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.begin();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>id_it<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.end()<sp/>and<sp/>n_it<sp/>!=<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.end();<sp/>id_it++,<sp/>n_it++<sp/>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>(<sp/>*n_it<sp/>);<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res.push_back(<sp/>*id_it<sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">nest::SPManager::global_shuffle</ref>(<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>global_shuffle(<sp/>v,<sp/>v.size()<sp/>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>Shuffles<sp/>the<sp/>n<sp/>first<sp/>items<sp/>of<sp/>the<sp/>vector<sp/>v</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="classnest_1_1SPManager_1a660e2d7f16859a0e1807eef4331c6628" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a6e004038af740a172c54dc533d31e3a1" kindref="member">nest::SPManager::global_shuffle</ref>(<sp/>std::vector&lt;<sp/>index<sp/>&gt;&amp;<sp/>v,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>&lt;=<sp/>v.size()<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>res<sp/>using<sp/>the<sp/>global<sp/>random<sp/>number<sp/>generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a1a7e1197379d5f600d9f80af2d88c09a" kindref="member">N</ref><sp/>=<sp/>v.size();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>v2;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rnd;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;::iterator<sp/>rndi;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a1a7e1197379d5f600d9f80af2d88c09a" kindref="member">N</ref><sp/>=<sp/>v.size();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>rnd<sp/>=<sp/><ref refid="namespacenest_1a16717a46436ebcc2eae54f5baf6ab33f" kindref="member">get_rank_synced_rng</ref>()-&gt;<ref refid="classnest_1_1BaseRandomGenerator_1a3983c4b45417bf8fd09c592691f6c40e" kindref="member">ulrand</ref>(<sp/><ref refid="namespacenest_1_1names_1a1a7e1197379d5f600d9f80af2d88c09a" kindref="member">N</ref><sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>v[<sp/>rnd<sp/>];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>v2.push_back(<sp/>tmp<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>rndi<sp/>=<sp/>v.begin();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>v.erase(<sp/>rndi<sp/>+<sp/>rnd<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/>Enable<sp/>structural<sp/>plasticity</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741" refid="classnest_1_1SPManager_1a9b388e2d3ab09e4bdebce02aa9ea3a60" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1a9b388e2d3ab09e4bdebce02aa9ea3a60" kindref="member">nest::SPManager::enable_structural_plasticity</ref>()</highlight></codeline>
<codeline lineno="742"><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1KernelException" kindref="compound">KernelException</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Structural<sp/>plasticity<sp/>can<sp/>not<sp/>be<sp/>used<sp/>with<sp/>multiple<sp/>threads&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_keep_source_table()<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1KernelException" kindref="compound">KernelException</ref>(</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Structural<sp/>plasticity<sp/>can<sp/>not<sp/>be<sp/>enabled<sp/>if<sp/>keep_source_table<sp/>has<sp/>been<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;set<sp/>to<sp/>false.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_sort_connections_by_source()<sp/>)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1KernelException" kindref="compound">KernelException</ref>(</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Structural<sp/>plasticity<sp/>can<sp/>not<sp/>be<sp/>enabled<sp/>if<sp/>sort_connections_by_source<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;has<sp/>been<sp/>set<sp/>to<sp/>false.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>structural_plasticity_enabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>Disable<sp/><sp/>structural<sp/>plasticity</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="classnest_1_1SPManager_1aee20052338bd8a2f47f33c59e3e2ed37" refkind="member"><highlight class="normal"><ref refid="classnest_1_1SPManager_1aee20052338bd8a2f47f33c59e3e2ed37" kindref="member">nest::SPManager::disable_structural_plasticity</ref>()</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>structural_plasticity_enabled_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sp_manager.cpp"/>
  </compounddef>
</doxygen>
