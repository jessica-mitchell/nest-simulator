<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1sinusoidal__poisson__generator" kind="class" language="C++" prot="public">
    <compoundname>nest::sinusoidal_poisson_generator</compoundname>
    <basecompoundref refid="classnest_1_1StimulationDevice" prot="public" virt="non-virtual">nest::StimulationDevice</basecompoundref>
    <includes refid="sinusoidal__poisson__generator_8h" local="no">sinusoidal_poisson_generator.h</includes>
    <innerclass refid="structnest_1_1sinusoidal__poisson__generator_1_1Buffers__" prot="private">nest::sinusoidal_poisson_generator::Buffers_</innerclass>
    <innerclass refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters__" prot="private">nest::sinusoidal_poisson_generator::Parameters_</innerclass>
    <innerclass refid="structnest_1_1sinusoidal__poisson__generator_1_1State__" prot="private">nest::sinusoidal_poisson_generator::State_</innerclass>
    <innerclass refid="structnest_1_1sinusoidal__poisson__generator_1_1Variables__" prot="private">nest::sinusoidal_poisson_generator::Variables_</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1sinusoidal__poisson__generator_1a5c093a6f81eca373a71a5fe14fefaaa3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class RecordablesMap&lt; sinusoidal_poisson_generator &gt;</definition>
        <argsstring></argsstring>
        <name>RecordablesMap&lt; sinusoidal_poisson_generator &gt;</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::RecordablesMap&lt; sinusoidal_poisson_generator &gt;</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1RecordablesMap" kindref="compound">RecordablesMap</ref>&lt; <ref refid="classnest_1_1sinusoidal__poisson__generator" kindref="compound">sinusoidal_poisson_generator</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="182" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classnest_1_1sinusoidal__poisson__generator_1ab1778195af043edb863a90b764bd15c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class UniversalDataLogger&lt; sinusoidal_poisson_generator &gt;</definition>
        <argsstring></argsstring>
        <name>UniversalDataLogger&lt; sinusoidal_poisson_generator &gt;</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::UniversalDataLogger&lt; sinusoidal_poisson_generator &gt;</qualifiedname>
        <param>
          <type>UniversalDataLogger&lt; <ref refid="classnest_1_1sinusoidal__poisson__generator" kindref="compound">sinusoidal_poisson_generator</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="182" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classnest_1_1sinusoidal__poisson__generator_1ae66bb13a7193d7d1168f1ca86980f7e4" prot="private" static="yes" mutable="no">
        <type><ref refid="classnest_1_1RecordablesMap" kindref="compound">RecordablesMap</ref>&lt; <ref refid="classnest_1_1sinusoidal__poisson__generator" kindref="compound">sinusoidal_poisson_generator</ref> &gt;</type>
        <definition>RecordablesMap&lt; sinusoidal_poisson_generator &gt; nest::sinusoidal_poisson_generator::recordablesMap_</definition>
        <argsstring></argsstring>
        <name>recordablesMap_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::recordablesMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="265" column="25" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="265" bodyend="-1"/>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75" compoundref="sinusoidal__poisson__generator_8h" startline="305" endline="311">get_status</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" compoundref="sinusoidal__poisson__generator_8h" startline="295" endline="302">handles_test_event</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1a61aa62f12f1e52ed937da46219d744c2" compoundref="sinusoidal__poisson__generator_8cpp" startline="175" endline="182">sinusoidal_poisson_generator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1sinusoidal__poisson__generator_1acd3ae62f5dc6d4adaf26d15ad0367aa7" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters__" kindref="compound">Parameters_</ref></type>
        <definition>Parameters_ nest::sinusoidal_poisson_generator::P_</definition>
        <argsstring></argsstring>
        <name>P_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::P_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="267" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="267" bodyend="-1"/>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75" compoundref="sinusoidal__poisson__generator_8h" startline="305" endline="311">get_status</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1aa8b7865765f6021b61f200342b4680ac" compoundref="sinusoidal__poisson__generator_8h" startline="150" endline="153">has_proxies</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1a2ce94ecdc6b74227d0440fbba8a170b4" compoundref="sinusoidal__poisson__generator_8h" startline="314" endline="326">set_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1sinusoidal__poisson__generator_1ae691b481c17e27f6dbe59d9eb009750b" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1sinusoidal__poisson__generator_1_1State__" kindref="compound">State_</ref></type>
        <definition>State_ nest::sinusoidal_poisson_generator::S_</definition>
        <argsstring></argsstring>
        <name>S_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::S_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="268" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="268" bodyend="-1"/>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1a48f063cb9d15bb1e02bcf5d53ea48ff3" compoundref="sinusoidal__poisson__generator_8h" startline="258" endline="261">get_rate_</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75" compoundref="sinusoidal__poisson__generator_8h" startline="305" endline="311">get_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1sinusoidal__poisson__generator_1ac887751bd954ae7d0b40597616e0a2f1" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1sinusoidal__poisson__generator_1_1Variables__" kindref="compound">Variables_</ref></type>
        <definition>Variables_ nest::sinusoidal_poisson_generator::V_</definition>
        <argsstring></argsstring>
        <name>V_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::V_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="269" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1sinusoidal__poisson__generator_1a1582838f9814d3563fda1a4c30d4f1dc" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1sinusoidal__poisson__generator_1_1Buffers__" kindref="compound">Buffers_</ref></type>
        <definition>Buffers_ nest::sinusoidal_poisson_generator::B_</definition>
        <argsstring></argsstring>
        <name>B_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::B_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="270" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="270" bodyend="-1"/>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" compoundref="sinusoidal__poisson__generator_8h" startline="295" endline="302">handles_test_event</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a61aa62f12f1e52ed937da46219d744c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::sinusoidal_poisson_generator::sinusoidal_poisson_generator</definition>
        <argsstring>()</argsstring>
        <name>sinusoidal_poisson_generator</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::sinusoidal_poisson_generator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="127" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="175" bodyend="182"/>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1ae66bb13a7193d7d1168f1ca86980f7e4" compoundref="sinusoidal__poisson__generator_8h" startline="265">recordablesMap_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a2c4481eb811fbeba0b7474ff5d3adbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::sinusoidal_poisson_generator::sinusoidal_poisson_generator</definition>
        <argsstring>(const sinusoidal_poisson_generator &amp;)</argsstring>
        <name>sinusoidal_poisson_generator</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::sinusoidal_poisson_generator</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1sinusoidal__poisson__generator" kindref="compound">sinusoidal_poisson_generator</ref> &amp;</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="128" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1ac5afa5158c884a571d442be6fb63c560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::sinusoidal_poisson_generator::send_test_event</definition>
        <argsstring>(Node &amp;, rport, synindex, bool) override</argsstring>
        <name>send_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::send_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3">send_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>receiving_node</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dummy_target</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiving_node passed as an argument. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of check_connection just throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref>.</para>
<para>This is required during the connection handshaking to test, if the receiving_node can handle the event type and receptor_type sent by the source node.</para>
<para>If dummy_target is true, this indicates that receiving_node is derived from <ref refid="classnest_1_1ConnTestDummyNodeBase" kindref="compound">ConnTestDummyNodeBase</ref> and used in the first call to <ref refid="classnest_1_1sinusoidal__poisson__generator_1ac5afa5158c884a571d442be6fb63c560" kindref="member">send_test_event()</ref>. This can be ignored in most cases, but Nodes sending DS*Events to their own event hooks and then *Events to their proper targets must send DS*Events when called with the dummy target, and *Events when called with the real target, see #478. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="130" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="274" bodyend="292"/>
        <references refid="classnest_1_1StimulationDevice_1a1da58471abc5507ffd31884c9fda070f" compoundref="stimulation__device_8cpp" startline="60" endline="70">nest::StimulationDevice::enforce_single_syn_type</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a80e98a1a2f7e7e33ae70437df95bda70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::handle</definition>
        <argsstring>(DataLoggingRequest &amp;) override</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for universal data logging request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="141" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::sinusoidal_poisson_generator::handles_test_event</definition>
        <argsstring>(DataLoggingRequest &amp;, rport) override</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref> &amp;</type>
          <defname>dlr</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <defname>receptor_type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="143" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="295" bodyend="302"/>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1a1582838f9814d3563fda1a4c30d4f1dc" compoundref="sinusoidal__poisson__generator_8h" startline="270">B_</references>
        <references refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" compoundref="node_8cpp" startline="108" endline="116">nest::Node::get_name</references>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1Buffers___1a570a84585339365dc19bbaf7c25f6584" compoundref="sinusoidal__poisson__generator_8h" startline="243">nest::sinusoidal_poisson_generator::Buffers_::logger_</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1ae66bb13a7193d7d1168f1ca86980f7e4" compoundref="sinusoidal__poisson__generator_8h" startline="265">recordablesMap_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::get_status</qualifiedname>
        <reimplements refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e">get_status</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="145" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="305" bodyend="311"/>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters___1a0857d05c951bde90a18afc0388991a16" compoundref="sinusoidal__poisson__generator_8cpp" startline="120" endline="127">nest::sinusoidal_poisson_generator::Parameters_::get</references>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1State___1ad10f4eb3a8f19ecd567b38e83123978c" compoundref="sinusoidal__poisson__generator_8cpp" startline="130" endline="134">nest::sinusoidal_poisson_generator::State_::get</references>
        <references refid="classnest_1_1StimulationDevice_1a3c17981ffa0b79bf9b2e559bcfba1573" compoundref="stimulation__device_8cpp" startline="166" endline="182">nest::StimulationDevice::get_status</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1acd3ae62f5dc6d4adaf26d15ad0367aa7" compoundref="sinusoidal__poisson__generator_8h" startline="267">P_</references>
        <references refid="namespacenest_1_1names_1a62373422f098eca1af4ddd73144c5928" compoundref="nest__names_8h" startline="404">nest::names::recordables</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1ae66bb13a7193d7d1168f1ca86980f7e4" compoundref="sinusoidal__poisson__generator_8h" startline="265">recordablesMap_</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1ae691b481c17e27f6dbe59d9eb009750b" compoundref="sinusoidal__poisson__generator_8h" startline="268">S_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a2ce94ecdc6b74227d0440fbba8a170b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::set_status</qualifiedname>
        <reimplements refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990">set_status</reimplements>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="146" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="314" bodyend="326"/>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1acd3ae62f5dc6d4adaf26d15ad0367aa7" compoundref="sinusoidal__poisson__generator_8h" startline="267">P_</references>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters___1a112ec4587c343e11b61b569a36995ddf" compoundref="sinusoidal__poisson__generator_8cpp" startline="137" endline="169">nest::sinusoidal_poisson_generator::Parameters_::set</references>
        <references refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" compoundref="stimulation__device_8cpp" startline="123" endline="162">nest::StimulationDevice::set_status</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1aa8b7865765f6021b61f200342b4680ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::sinusoidal_poisson_generator::has_proxies</definition>
        <argsstring>() const override</argsstring>
        <name>has_proxies</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::has_proxies</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a3cadfe2698c39c5fd327f5d70d0b8adf">has_proxies</reimplements>
        <briefdescription>
<para><ref refid="classnest_1_1Model" kindref="compound">Model</ref> can be switched between proxies (single spike train) and not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="150" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="150" bodyend="153"/>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters___1afa4f438fc4cdf8cb7b9bee9acfee3cde" compoundref="sinusoidal__poisson__generator_8h" startline="199">nest::sinusoidal_poisson_generator::Parameters_::individual_spike_trains_</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1acd3ae62f5dc6d4adaf26d15ad0367aa7" compoundref="sinusoidal__poisson__generator_8h" startline="267">P_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a6fea6e050b13a1928c13f315809e179e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::sinusoidal_poisson_generator::local_receiver</definition>
        <argsstring>() const override</argsstring>
        <name>local_receiver</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::local_receiver</qualifiedname>
        <reimplements refid="classnest_1_1Node_1ac6e5bca87246812225ab04af4fd40df2">local_receiver</reimplements>
        <briefdescription>
<para>Allow multimeter to connect to local instances. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="157" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a536cbacaf9edac51da0fee626da54e8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="className" kindref="compound">Name</ref></type>
        <definition>Name nest::sinusoidal_poisson_generator::get_element_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_element_type</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::get_element_type</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a59915001de69fc05d8a155da42a89e56">get_element_type</reimplements>
        <briefdescription>
<para>Return the element type of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned <ref refid="className" kindref="compound">Name</ref> is a free label describing the class of network elements a node belongs to. Currently used values are &quot;neuron&quot;, &quot;recorder&quot;, &quot;stimulator&quot;, and &quot;other&quot;, which are all defined as static <ref refid="className" kindref="compound">Name</ref> objects in the names namespace. This function is overwritten with a corresponding value in the derived classes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="163" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="163" bodyend="166"/>
        <references refid="namespacenest_1_1names_1ac40bf738ff419d9a9dc409c61a6cc20f" compoundref="nest__names_8h" startline="453">nest::names::stimulator</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1aa75ee35b35d4234ceff307e25e484bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" kindref="member">StimulationDevice::Type</ref></type>
        <definition>StimulationDevice::Type nest::sinusoidal_poisson_generator::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::get_type</qualifiedname>
        <reimplements refid="classnest_1_1StimulationDevice_1a89ae6559338e2d9d45abf77e7a10d42c">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="169" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="169" bodyend="172"/>
        <references refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62a12528cd6da80e85b7c9ae820257226d9" compoundref="stimulation__device_8h" startline="181">nest::StimulationDevice::CURRENT_GENERATOR</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a27839329dc7c37b4e8cc29c1a6fbfe48" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::set_data_from_stimulation_backend</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;input_param) override</argsstring>
        <name>set_data_from_stimulation_backend</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::set_data_from_stimulation_backend</qualifiedname>
        <reimplements refid="classnest_1_1StimulationDevice_1a617933b71a1b75a31585f88b92f905b7">set_data_from_stimulation_backend</reimplements>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>input_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="174" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="309" bodyend="333"/>
        <references refid="namespacenest_1_1names_1af73122e5d5bccaec464cd1825980924d" compoundref="nest__names_8h" startline="89">nest::names::amplitude</references>
        <references refid="namespacenest_1_1names_1aa8e228782712439379c40202e40294c9" compoundref="nest__names_8h" startline="201">nest::names::frequency</references>
        <references refid="namespacenest_1_1names_1ae81182b6f5ab8f35014333621694c160" compoundref="nest__names_8h" startline="270">nest::names::individual_spike_trains</references>
        <references refid="namespacenest_1_1names_1aeb1429fa6820935cb2f10ce2f43aef39" compoundref="nest__names_8h" startline="365">nest::names::phase</references>
        <references refid="namespacenest_1_1names_1ab4b26dd1d966a0f85ad1a1493b4ebaf2" compoundref="nest__names_8h" startline="393">nest::names::rate</references>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters___1a112ec4587c343e11b61b569a36995ddf" compoundref="sinusoidal__poisson__generator_8cpp" startline="137" endline="169">nest::sinusoidal_poisson_generator::Parameters_::set</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::event_hook</definition>
        <argsstring>(DSSpikeEvent &amp;)</argsstring>
        <name>event_hook</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::event_hook</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535">event_hook</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Import sets of overloaded virtual functions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Technical Issues / Virtual Functions: Overriding, Overloading, and Hiding </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="137" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="483" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a2575699815b3eed15322b0868ec2f89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::event_hook</definition>
        <argsstring>(DSCurrentEvent &amp;)</argsstring>
        <name>event_hook</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::event_hook</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a2575699815b3eed15322b0868ec2f89d">event_hook</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSCurrentEvent" kindref="compound">DSCurrentEvent</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Import sets of overloaded virtual functions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Technical Issues / Virtual Functions: Overriding, Overloading, and Hiding </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="137" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(SpikeEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gae810de070216d0f281833171a3b997bc">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1SpikeEvent" kindref="compound">SpikeEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handle incoming spike events. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of event handlers just throws an <ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref> exception.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the calling thread. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Event" kindref="compound">Event</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This handler has to be implemented if a <ref refid="classnest_1_1Node" kindref="compound">Node</ref> should accept spike events. <simplesect kind="see"><para>class <ref refid="classnest_1_1SpikeEvent" kindref="compound">SpikeEvent</ref></para>
</simplesect>
<simplesect kind="see"><para>class <ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>This is the default event to throw. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a18c58ec60440eae4dd4b264fb63a8d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(WeightRecorderEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1WeightRecorderEvent" kindref="compound">WeightRecorderEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handle incoming weight recording events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the calling thread. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Event" kindref="compound">Event</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This handler has to be implemented if a <ref refid="classnest_1_1Node" kindref="compound">Node</ref> should accept weight recording events. <simplesect kind="see"><para>class WeightRecordingEvent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a9686693f44cd03a5420633b836c25f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(RateEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1RateEvent" kindref="compound">RateEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1acd1458cf76e47c030beafb6a4d5147ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DataLoggingRequest &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for universal data logging request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a76de0226b6a5eef5dbe78a68d72c4492" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DataLoggingReply &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DataLoggingReply" kindref="compound">DataLoggingReply</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for universal data logging request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>There is no connect_sender() for <ref refid="classnest_1_1DataLoggingReply" kindref="compound">DataLoggingReply</ref>, since this event is only used as &quot;back channel&quot; for <ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1adef54045c4b20be6075910f936a723b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(CurrentEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1CurrentEvent" kindref="compound">CurrentEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for current events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a0b4b6baf37b18218fd5103ab72bc2cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(ConductanceEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1ConductanceEvent" kindref="compound">ConductanceEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for conductance events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a1843f8e5565026ca51fc4b0fe1da77de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DoubleDataEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DoubleDataEvent" kindref="compound">DoubleDataEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for DoubleData events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(GapJunctionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1GapJunctionEvent" kindref="compound">GapJunctionEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for gap junction events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, GapJunctionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1aec56b76a4286e1f662b33218f4083ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(InstantaneousRateConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1InstantaneousRateConnectionEvent" kindref="compound">InstantaneousRateConnectionEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, InstantaneousRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1ace17f7fc8aea06c6ecc4f12deb957a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DiffusionConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DiffusionConnectionEvent" kindref="compound">DiffusionConnectionEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, InstantaneousRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a2cebf7dc11a2a83795ff71c10c07f308" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DelayedRateConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handle</qualifiedname>
        <reimplements refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308">handle</reimplements>
        <param>
          <type><ref refid="classnest_1_1DelayedRateConnectionEvent" kindref="compound">DelayedRateConnectionEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for delay rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, DelayedRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="384" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(SpikeEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1SpikeEvent" kindref="compound">SpikeEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
<para>Check if the node can handle a particular event and receptor type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called upon connection setup by <ref refid="classnest_1_1sinusoidal__poisson__generator_1ac5afa5158c884a571d442be6fb63c560" kindref="member">send_test_event()</ref>.</para>
<para><ref refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" kindref="member">handles_test_event()</ref> function is used to verify that the receiver can handle the event. It can also be used by the receiver to return information to the sender in form of the returned port. The default implementation throws an <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> exception. Any node class should define <ref refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" kindref="member">handles_test_event()</ref> functions for all those event types it can handle.</para>
<para>See Kunkel et al, Front Neuroinform 8:78 (2014), Sec 3.</para>
<para><simplesect kind="note"><para>The semantics of all other <ref refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" kindref="member">handles_test_event()</ref> functions is identical.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1abbddfb14a40279cdf7340f6ff9936179" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(WeightRecorderEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1abbddfb14a40279cdf7340f6ff9936179">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1WeightRecorderEvent" kindref="compound">WeightRecorderEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(RateEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a5f91d66c3ceb67a60b066fcb01af2cd7">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1RateEvent" kindref="compound">RateEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DataLoggingRequest &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(CurrentEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a5c3e92ee9a4c7b6f660d6fb341a5c330">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1CurrentEvent" kindref="compound">CurrentEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(ConductanceEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1abcc2e9e2acf3d08070679f2b03bd8e11">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1ConductanceEvent" kindref="compound">ConductanceEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DoubleDataEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a1d2f3f1de23d48b953bc570771ca9d2e">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DoubleDataEvent" kindref="compound">DoubleDataEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a804bc701ca39ee9314df37f0cf75198d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DSSpikeEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a804bc701ca39ee9314df37f0cf75198d">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DSCurrentEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a874ca038dce3731fdbf62a21fb17de4e">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSCurrentEvent" kindref="compound">DSCurrentEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(GapJunctionEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1GapJunctionEvent" kindref="compound">GapJunctionEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a3f59fd074869893311cc2c46499713a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(InstantaneousRateConnectionEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a3f59fd074869893311cc2c46499713a5">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1InstantaneousRateConnectionEvent" kindref="compound">InstantaneousRateConnectionEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a059108cabfdc59a2bae9bb8092448915" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DiffusionConnectionEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a059108cabfdc59a2bae9bb8092448915">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DiffusionConnectionEvent" kindref="compound">DiffusionConnectionEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(DelayedRateConnectionEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::handles_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Node_1abcdffe1cbefc66a5d11762a46aefea5b">handles_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DelayedRateConnectionEvent" kindref="compound">DelayedRateConnectionEvent</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="390" bodyend="393"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a316967d19f203daf14b51cdeeb085b95" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::init_state_</definition>
        <argsstring>() override</argsstring>
        <name>init_state_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::init_state_</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef">init_state_</reimplements>
        <briefdescription>
<para>Configure state variables depending on runtime information. </para>
        </briefdescription>
        <detaileddescription>
<para>Overload this method if the node needs to adapt state variables prior to first simulation to runtime information, e.g., the number of incoming connections. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="177" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="197" bodyend="200"/>
        <references refid="classnest_1_1StimulationDevice_1acfb7d327f43c0bcf3c86920b188c5830" compoundref="device_8h" startline="72" endline="74">nest::StimulationDevice::init_state</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a0130b71067f5e9f774f8bbb8fedd2194" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::init_buffers_</definition>
        <argsstring>() override</argsstring>
        <name>init_buffers_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::init_buffers_</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a5881b951d112d2c408865d080287f453">init_buffers_</reimplements>
        <briefdescription>
<para>Configure persistent internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para>Let node configure persistent internal data structures, such as input buffers or ODE solvers, to runtime information prior to first simulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="178" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="203" bodyend="207"/>
        <references refid="classnest_1_1StimulationDevice_1aac3d7dd71fd9f86cd8306b2faeefa6a0" compoundref="device_8h" startline="78" endline="80">nest::StimulationDevice::init_buffers</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a9c2201ffb8fe2b96cc68f0d9afdb9005" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::pre_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>pre_run_hook</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::pre_run_hook</qualifiedname>
        <reimplements refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplements>
        <briefdescription>
<para>Set internal variables before calls to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="179" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="210" bodyend="227"/>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">nest::SimulationManager::get_time</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1StimulationDevice_1a53ca0035b5b2ddedbf5f5d7a5fc47718" compoundref="stimulation__device_8cpp" startline="73" endline="76">nest::StimulationDevice::pre_run_hook</references>
        <references refid="classnest_1_1KernelManager_1a4feb2ae20c19197830bf57c5e7247560" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::simulation_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a0443e2c5c94b18bd1cd38f898266d13b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::event_hook</definition>
        <argsstring>(DSSpikeEvent &amp;) override</argsstring>
        <name>event_hook</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::event_hook</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535">event_hook</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Modify <ref refid="classnest_1_1Event" kindref="compound">Event</ref> object parameters during event delivery. </para>
        </briefdescription>
        <detaileddescription>
<para>Some Nodes want to perform a function on an event for each of their targets. An example is the <ref refid="classnest_1_1poisson__generator" kindref="compound">poisson_generator</ref> which needs to draw a random number for each target. The <ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref>, DirectSendingSpikeEvent, calls sender-&gt;event_hook(thread, *this) in its operator() function instead of calling target-&gt;<ref refid="classnest_1_1sinusoidal__poisson__generator_1a80e98a1a2f7e7e33ae70437df95bda70" kindref="member">handle()</ref>. The default implementation of <ref refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" kindref="member">Node::event_hook()</ref> just calls target-&gt;handle(DSSpikeEvent&amp;). Any reimplementation must also execute this call. Otherwise the event will not be delivered. If needed, target-&gt;handle(DSSpikeEvent) may be called more than once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="180" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="286" bodyend="296"/>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1accf5d4be845204104fb67d3b193d3fc6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::sinusoidal_poisson_generator::update</definition>
        <argsstring>(Time const &amp;, const long, const long) override</argsstring>
        <name>update</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::update</qualifiedname>
        <reimplements refid="classnest_1_1Node_1a69f3767afe7e7d1bc5b141e777778fd5">update</reimplements>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        </param>
        <param>
          <type>const long</type>
        </param>
        <param>
          <type>const long</type>
        </param>
        <briefdescription>
<para>Bring the node from state $t$ to $t+n*dt$. </para>
        </briefdescription>
        <detaileddescription>
<para>n-&gt;update(T, from, to) performs the update steps beginning at T+from .. T+to-1, ie, emitting events with time stamps T+from+1 .. T+to.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1Time" kindref="compound">Time</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>network time at beginning of time slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>initial step inside time slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>post-final step inside time slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="182" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.cpp" bodystart="230" bodyend="283"/>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
        <references refid="classnest_1_1StimulationDevice_1a32a13f00b9c9b4bb0112105c08c6a2ba" compoundref="stimulation__device_8cpp" startline="47" endline="57">nest::StimulationDevice::is_active</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9a350f7997aebc9c0a3b0620639ac0a4" compoundref="event__delivery__manager__impl_8h" startline="60" endline="63">nest::EventDeliveryManager::send</references>
        <references refid="classnest_1_1SpikeEvent_1a819b5dd1687ab5f6baea8f69a2b9f6ff" compoundref="event_8h" startline="421" endline="424">nest::SpikeEvent::set_multiplicity</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1sinusoidal__poisson__generator_1a48f063cb9d15bb1e02bcf5d53ea48ff3" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::sinusoidal_poisson_generator::get_rate_</definition>
        <argsstring>() const</argsstring>
        <name>get_rate_</name>
        <qualifiedname>nest::sinusoidal_poisson_generator::get_rate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="258" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="258" bodyend="261"/>
        <references refid="structnest_1_1sinusoidal__poisson__generator_1_1State___1a4fa77e0ea4bb1a42d2ad3adda4caa454" compoundref="sinusoidal__poisson__generator_8h" startline="221">nest::sinusoidal_poisson_generator::State_::rate_</references>
        <references refid="classnest_1_1sinusoidal__poisson__generator_1ae691b481c17e27f6dbe59d9eb009750b" compoundref="sinusoidal__poisson__generator_8h" startline="268">S_</references>
        <referencedby refid="classnest_1_1RecordablesMap_1a27e92303d6a3d734b19f7aba325c702c" compoundref="sinusoidal__poisson__generator_8cpp" startline="51" endline="54">nest::RecordablesMap&lt; HostNode &gt;::create</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
      </node>
      <node id="3">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
      </node>
      <node id="2">
        <label>nest::StimulationDevice</label>
        <link refid="classnest_1_1StimulationDevice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::sinusoidal_poisson_generator</label>
        <link refid="classnest_1_1sinusoidal__poisson__generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>Datum</label>
        <link refid="classDatum"/>
        <childnode refid="19" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="29">
        <label>nest::RandomDistribution&lt; std::poisson_distribution&lt; unsigned long &gt; &gt;</label>
        <link refid="classnest_1_1RandomDistribution"/>
        <childnode refid="30" relation="template-instance">
          <edgelabel>&lt; std::poisson_distribution&lt; unsigned long &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>nest::RecordablesMap&lt; nest::sinusoidal_poisson_generator &gt;</label>
        <link refid="classnest_1_1RecordablesMap"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="template-instance">
          <edgelabel>&lt; nest::sinusoidal_poisson_generator &gt;</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="19">
        <label>SLIType</label>
        <link refid="classSLIType"/>
        <childnode refid="14" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>defaultaction</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>TypedDatum&lt; slt &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>lockPTR&lt; D &gt;</label>
        <link refid="classlockPTR"/>
      </node>
      <node id="16">
        <label>lockPTR&lt; D &gt;</label>
        <link refid="classlockPTR"/>
      </node>
      <node id="21">
        <label>lockPTRDatum&lt; D, slt &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>lockPTRDatum&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
        <childnode refid="21" relation="template-instance">
          <edgelabel>&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="6">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
        <childnode refid="7" relation="usage">
          <edgelabel>P_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>V_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Device::Parameters_</label>
        <link refid="structnest_1_1Device_1_1Parameters__"/>
        <childnode refid="8" relation="usage">
          <edgelabel>origin_</edgelabel>
          <edgelabel>start_</edgelabel>
          <edgelabel>stop_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>nest::Device::Variables_</label>
        <link refid="structnest_1_1Device_1_1Variables__"/>
      </node>
      <node id="3">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="5" relation="usage">
          <edgelabel>deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>nest::RandomDistribution&lt; DistributionT &gt;</label>
        <link refid="classnest_1_1RandomDistribution"/>
      </node>
      <node id="25">
        <label>nest::RecordablesMap&lt; HostNode &gt;</label>
        <link refid="classnest_1_1RecordablesMap"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::StimulationDevice</label>
        <link refid="classnest_1_1StimulationDevice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>P_</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>backend_params_</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>nest::StimulationDevice::Parameters_</label>
        <link refid="structnest_1_1StimulationDevice_1_1Parameters__"/>
        <childnode refid="14" relation="usage">
          <edgelabel>stimulus_source_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="9" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="11">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="10">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="1">
        <label>nest::sinusoidal_poisson_generator</label>
        <link refid="classnest_1_1sinusoidal__poisson__generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>recordablesMap_</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>P_</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>S_</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>V_</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>B_</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>nest::sinusoidal_poisson_generator::Buffers_</label>
        <link refid="structnest_1_1sinusoidal__poisson__generator_1_1Buffers__"/>
      </node>
      <node id="26">
        <label>nest::sinusoidal_poisson_generator::Parameters_</label>
        <link refid="structnest_1_1sinusoidal__poisson__generator_1_1Parameters__"/>
      </node>
      <node id="27">
        <label>nest::sinusoidal_poisson_generator::State_</label>
        <link refid="structnest_1_1sinusoidal__poisson__generator_1_1State__"/>
      </node>
      <node id="28">
        <label>nest::sinusoidal_poisson_generator::Variables_</label>
        <link refid="structnest_1_1sinusoidal__poisson__generator_1_1Variables__"/>
        <childnode refid="29" relation="usage">
          <edgelabel>poisson_dist_</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::map&lt; Name, double(HostNode::*)() const &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" line="123" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_poisson_generator.h" bodystart="124" bodyend="271"/>
    <listofallmembers>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a1582838f9814d3563fda1a4c30d4f1dc" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>B_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a9d182e84798604a76fcf328eb135dd77" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>backend_params_</name></member>
      <member refid="classnest_1_1Node_1a93e4da4ded11807b07c5f2428401bbc7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Node_1a09632867c7096c814eeceea1be42fc6b" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>clone</name></member>
      <member refid="group__SP__functions_1gaa5b5f01608036752d816d1980c39cb87" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>connect_synaptic_element</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62a12528cd6da80e85b7c9ae820257226d9" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>CURRENT_GENERATOR</name></member>
      <member refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62a83de8d8ce44368db01f5163e2297dbfe" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>DELAYED_RATE_CONNECTION_GENERATOR</name></member>
      <member refid="classnest_1_1Node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>Device</name></member>
      <member refid="classnest_1_1DeviceNode_1a528097bccee9d8364ba626c9ac573221" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1DeviceNode_1acb8cad4e7bc743f7469fe145cbf318f0" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62add61e044e7971f4411dc32a8dbe87e61" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>DOUBLE_DATA_GENERATOR</name></member>
      <member refid="classnest_1_1Node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>downcast</name></member>
      <member refid="classnest_1_1StimulationDevice_1a1da58471abc5507ffd31884c9fda070f" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>enforce_single_syn_type</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a0443e2c5c94b18bd1cd38f898266d13b" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>event_hook</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>event_hook</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>finalize</name></member>
      <member refid="classnest_1_1StimulationDevice_1abff1868f1e27f6c4fc169cfadfd44856" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>first_syn_id_</name></member>
      <member refid="classnest_1_1Node_1a7c48b06a535a6e036c88ea2dcbaf8283" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>frozen_</name></member>
      <member refid="classnest_1_1Node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_C_m</name></member>
      <member refid="group__SP__functions_1gae46decb34ba3dc7f912fa6a691bb0de2" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a536cbacaf9edac51da0fee626da54e8f" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1Node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1Node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_history</name></member>
      <member refid="classnest_1_1Node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1Node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1StimulationDevice_1a616090703a892ad9c77539a2d4ab22d0" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_label</name></member>
      <member refid="classnest_1_1DeviceNode_1a170639eec44df6f43d5f9a5403959ba4" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1Node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1Node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_model_</name></member>
      <member refid="classnest_1_1Node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_name</name></member>
      <member refid="classnest_1_1Node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_nc</name></member>
      <member refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_origin</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a48f063cb9d15bb1e02bcf5d53ea48ff3" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_rate_</name></member>
      <member refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_start</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ad31dd40997a2b931ec3fcee6c54d0b75" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_status</name></member>
      <member refid="classnest_1_1Node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1Node_1a54f0c50b08165643cee588bc89b464b8" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_status_dict_</name></member>
      <member refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_stop</name></member>
      <member refid="group__SP__functions_1ga9ba39ec217579e3ef23db9ae20479955" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1ga7a47b88c558984889d90d5ce027787cf" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1Node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1Node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1Node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1Node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_thread</name></member>
      <member refid="classnest_1_1Node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1aa75ee35b35d4234ceff307e25e484bf7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_type</name></member>
      <member refid="classnest_1_1Node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1Node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>get_vp</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a80e98a1a2f7e7e33ae70437df95bda70" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1acd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1adef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1aec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handle</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1afcf5ef845de7e6eed21d0898bab94c4e" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1aa8b7865765f6021b61f200342b4680ac" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1Node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>init</name></member>
      <member refid="classnest_1_1StimulationDevice_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a0130b71067f5e9f774f8bbb8fedd2194" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1StimulationDevice_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>init_state</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a316967d19f203daf14b51cdeeb085b95" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>init_state_</name></member>
      <member refid="classnest_1_1Node_1a95389430ba10f2da19aacded71503f74" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>initialized_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a32a13f00b9c9b4bb0112105c08c6a2ba" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>is_active</name></member>
      <member refid="classnest_1_1Node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1Node_1acaf132bbee717313ffbc86fd291667c9" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1DeviceNode_1aa345406ceab967b0dd50907ac380747c" prot="protected" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>local_device_id_</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a6fea6e050b13a1928c13f315809e179e" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1Node_1ae306f4602e575047801c45c9fec2a4d4" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>model_id_</name></member>
      <member refid="classnest_1_1Node_1a3ec5fd1ce0e6f3f0bccabd314c6845c3" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>nc_ptr_</name></member>
      <member refid="classnest_1_1Node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a9d697a1550c18613e0d2a0e57c67e836" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1Node_1a9f929d2c40ddaafd4a0822ea294f1ef9" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>node_uses_wfr_</name></member>
      <member refid="classnest_1_1Node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1Node_1a4b28c19bfaa4ac475f5248389ed911e6" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>operator=</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1acd3ae62f5dc6d4adaf26d15ad0367aa7" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>P_</name></member>
      <member refid="classnest_1_1Node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a9c2201ffb8fe2b96cc68f0d9afdb9005" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>print_network</name></member>
      <member refid="classnest_1_1Node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a5c093a6f81eca373a71a5fe14fefaaa3" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>RecordablesMap&lt; sinusoidal_poisson_generator &gt;</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ae66bb13a7193d7d1168f1ca86980f7e4" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>recordablesMap_</name></member>
      <member refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ae691b481c17e27f6dbe59d9eb009750b" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>S_</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ac5afa5158c884a571d442be6fb63c560" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1Node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a27839329dc7c37b4e8cc29c1a6fbfe48" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_data_from_stimulation_backend</name></member>
      <member refid="classnest_1_1Node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1StimulationDevice_1ac67e5262a139223625a3eea557e7aa45" prot="protected" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1DeviceNode_1a8c8b80f5be38584cb4b36a18a2977772" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_nc_</name></member>
      <member refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_node_id_</name></member>
      <member refid="classnest_1_1Node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a2ce94ecdc6b74227d0440fbba8a170b4" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_status</name></member>
      <member refid="classnest_1_1Node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_thread</name></member>
      <member refid="classnest_1_1Node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>set_vp</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a61aa62f12f1e52ed937da46219d744c2" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sinusoidal_poisson_generator</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1a2c4481eb811fbeba0b7474ff5d3adbe8" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>sinusoidal_poisson_generator</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62ab9c4f2a5779e6380a2715ea508bf4cd0" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>SPIKE_GENERATOR</name></member>
      <member refid="classnest_1_1StimulationDevice_1a26634ef9b2543d2475725980700333b0" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>StimulationDevice</name></member>
      <member refid="classnest_1_1StimulationDevice_1ab2a3965daa883409a68c29f264726e66" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>StimulationDevice</name></member>
      <member refid="classnest_1_1Node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1Node_1a9ec98b82cf08796b726ca26666e5739d" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>thread_</name></member>
      <member refid="classnest_1_1Node_1a4316e73a0c494ccb37e6a19b00664223" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>thread_lid_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>Type</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ab1778195af043edb863a90b764bd15c8" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>UniversalDataLogger&lt; sinusoidal_poisson_generator &gt;</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1accf5d4be845204104fb67d3b193d3fc6" prot="private" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>update</name></member>
      <member refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1sinusoidal__poisson__generator_1ac887751bd954ae7d0b40597616e0a2f1" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>V_</name></member>
      <member refid="classnest_1_1Node_1ad40bb2d1d3c32dd953374bbe6a76e5a6" prot="private" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>vp_</name></member>
      <member refid="classnest_1_1Node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>~Device</name></member>
      <member refid="classnest_1_1Node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>~Node</name></member>
      <member refid="classnest_1_1StimulationDevice_1ac249af71b4b12eb10265614b676da7cd" prot="public" virt="non-virtual"><scope>nest::sinusoidal_poisson_generator</scope><name>~StimulationDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
