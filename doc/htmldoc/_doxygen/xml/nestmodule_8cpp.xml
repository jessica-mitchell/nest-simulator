<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="nestmodule_8cpp" kind="file" language="C++">
    <compoundname>nestmodule.cpp</compoundname>
    <includes refid="nestmodule_8h" local="yes">nestmodule.h</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">logging.h</includes>
    <includes refid="conn__builder_8h" local="yes">conn_builder.h</includes>
    <includes refid="conn__builder__conngen_8h" local="yes">conn_builder_conngen.h</includes>
    <includes refid="connection__creator__impl_8h" local="yes">connection_creator_impl.h</includes>
    <includes refid="connection__manager__impl_8h" local="yes">connection_manager_impl.h</includes>
    <includes refid="free__layer_8h" local="yes">free_layer.h</includes>
    <includes refid="genericmodel_8h" local="yes">genericmodel.h</includes>
    <includes refid="grid__layer_8h" local="yes">grid_layer.h</includes>
    <includes refid="grid__mask_8h" local="yes">grid_mask.h</includes>
    <includes refid="kernel__manager_8h" local="yes">kernel_manager.h</includes>
    <includes refid="layer_8h" local="yes">layer.h</includes>
    <includes refid="layer__impl_8h" local="yes">layer_impl.h</includes>
    <includes refid="mask_8h" local="yes">mask.h</includes>
    <includes refid="mask__impl_8h" local="yes">mask_impl.h</includes>
    <includes refid="model__manager__impl_8h" local="yes">model_manager_impl.h</includes>
    <includes refid="nest_8h" local="yes">nest.h</includes>
    <includes refid="nest__datums_8h" local="yes">nest_datums.h</includes>
    <includes refid="nest__types_8h" local="yes">nest_types.h</includes>
    <includes refid="node_8h" local="yes">node.h</includes>
    <includes refid="parameter_8h" local="yes">parameter.h</includes>
    <includes refid="sp__manager__impl_8h" local="yes">sp_manager_impl.h</includes>
    <includes refid="spatial_8h" local="yes">spatial.h</includes>
    <includes local="yes">arraydatum.h</includes>
    <includes local="yes">booldatum.h</includes>
    <includes local="yes">doubledatum.h</includes>
    <includes local="yes">interpret.h</includes>
    <includes local="yes">sliexceptions.h</includes>
    <includes local="yes">stringdatum.h</includes>
    <includes local="yes">tokenutils.h</includes>
    <incdepgraph>
      <node id="110">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>connection_manager_impl.h</label>
        <link refid="connection__manager__impl_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>limits</label>
      </node>
      <node id="33">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>iterator</label>
      </node>
      <node id="141">
        <label>target_identifier.h</label>
        <link refid="target__identifier_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>arraydatum.h</label>
      </node>
      <node id="17">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>mpi_manager_impl.h</label>
        <link refid="mpi__manager__impl_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>booldatum.h</label>
      </node>
      <node id="109">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdint</label>
      </node>
      <node id="91">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stdint.h</label>
      </node>
      <node id="43">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>stopwatch.h</label>
      </node>
      <node id="97">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>dictutils.h</label>
      </node>
      <node id="138">
        <label>mask_impl.h</label>
        <link refid="mask__impl_8h"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="37">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>stdexcept</label>
      </node>
      <node id="95">
        <label>numeric</label>
      </node>
      <node id="133">
        <label>ntree_impl.h</label>
        <link refid="ntree__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>model_manager_impl.h</label>
        <link refid="model__manager__impl_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="76">
        <label>sort.h</label>
      </node>
      <node id="32">
        <label>map</label>
      </node>
      <node id="124">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>conn_builder_conngen.h</label>
        <link refid="conn__builder__conngen_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>free_layer.h</label>
        <link refid="free__layer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>aggregatedatum.h</label>
      </node>
      <node id="57">
        <label>dict.h</label>
      </node>
      <node id="67">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cfloat</label>
      </node>
      <node id="26">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ostream</label>
      </node>
      <node id="2">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="75">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>slitype.h</label>
      </node>
      <node id="102">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>connection_creator_impl.h</label>
        <link refid="connection__creator__impl_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>allocator.h</label>
      </node>
      <node id="86">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>conn_builder_factory.h</label>
        <link refid="conn__builder__factory_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>layer_impl.h</label>
        <link refid="layer__impl_8h"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>random</label>
      </node>
      <node id="62">
        <label>logging.h</label>
      </node>
      <node id="147">
        <label>stringdatum.h</label>
      </node>
      <node id="145">
        <label>doubledatum.h</label>
      </node>
      <node id="60">
        <label>slimodule.h</label>
      </node>
      <node id="42">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>bitset</label>
      </node>
      <node id="98">
        <label>block_vector.h</label>
      </node>
      <node id="49">
        <label>lockptr.h</label>
      </node>
      <node id="45">
        <label>ctime</label>
      </node>
      <node id="41">
        <label>token.h</label>
      </node>
      <node id="90">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>unistd.h</label>
      </node>
      <node id="25">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>grid_layer.h</label>
        <link refid="grid__layer_8h"/>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="58">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="111">
        <label>new</label>
      </node>
      <node id="96">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>utility</label>
      </node>
      <node id="38">
        <label>array</label>
      </node>
      <node id="39">
        <label>sstream</label>
      </node>
      <node id="148">
        <label>tokenutils.h</label>
      </node>
      <node id="129">
        <label>vp_manager_impl.h</label>
        <link refid="vp__manager__impl_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>slifunction.h</label>
      </node>
      <node id="146">
        <label>interpret.h</label>
      </node>
      <node id="106">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>enum_bitfield.h</label>
      </node>
      <node id="55">
        <label>randutils.hpp</label>
      </node>
      <node id="12">
        <label>cstdlib</label>
      </node>
      <node id="120">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>dictdatum.h</label>
      </node>
      <node id="121">
        <label>sys/time.h</label>
      </node>
      <node id="29">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="23">
        <label>name.h</label>
      </node>
      <node id="16">
        <label>numerics.h</label>
      </node>
      <node id="44">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cstddef</label>
      </node>
      <node id="83">
        <label>deque</label>
      </node>
      <node id="105">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>climits</label>
      </node>
      <node id="114">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sliexceptions.h</label>
      </node>
      <node id="108">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>vector_util.h</label>
      </node>
      <node id="125">
        <label>mask.h</label>
        <link refid="mask_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>grid_mask.h</label>
        <link refid="grid__mask_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>nestmodule.cpp</label>
        <link refid="nestmodule_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>type_traits</label>
      </node>
      <node id="122">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>set</label>
      </node>
      <node id="21">
        <label>config.h</label>
      </node>
      <node id="63">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>spatial.h</label>
        <link refid="spatial_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>sp_manager_impl.h</label>
        <link refid="sp__manager__impl_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="71">
        <label>connection_creator.h</label>
        <link refid="connection__creator_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="140">
        <label>string_utils.h</label>
      </node>
      <node id="79">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>target_table_devices_impl.h</label>
        <link refid="target__table__devices__impl_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>memory</label>
      </node>
      <node id="89">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>initializer_list</label>
      </node>
      <node id="40">
        <label>compose.hpp</label>
      </node>
      <node id="144">
        <label>iostreamdatum.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>nestmodule.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nestmodule_8h" kindref="compound">nestmodule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conn__builder_8h" kindref="compound">conn_builder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="conn__builder__conngen_8h" kindref="compound">conn_builder_conngen.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection__creator__impl_8h" kindref="compound">connection_creator_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection__manager__impl_8h" kindref="compound">connection_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="free__layer_8h" kindref="compound">free_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericmodel_8h" kindref="compound">genericmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="grid__layer_8h" kindref="compound">grid_layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="grid__mask_8h" kindref="compound">grid_mask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer_8h" kindref="compound">layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer__impl_8h" kindref="compound">layer_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mask_8h" kindref="compound">mask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mask__impl_8h" kindref="compound">mask_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model__manager__impl_8h" kindref="compound">model_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest_8h" kindref="compound">nest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__datums_8h" kindref="compound">nest_datums.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__types_8h" kindref="compound">nest_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="node_8h" kindref="compound">node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parameter_8h" kindref="compound">parameter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sp__manager__impl_8h" kindref="compound">sp_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spatial_8h" kindref="compound">spatial.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arraydatum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;booldatum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doubledatum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;interpret.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sliexceptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stringdatum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tokenutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBNEUROSIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">SLIType<sp/>NestModule::ConnectionGeneratorType;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">SLIType<sp/><ref refid="classnest_1_1_nest_module_1a8aa38e726b397f8bb986084214a44733" kindref="member">NestModule::ConnectionType</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">SLIType<sp/><ref refid="classnest_1_1_nest_module_1a97f2c3aa39797eebe9e2bc451cd469c4" kindref="member">NestModule::MaskType</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">SLIType<sp/><ref refid="classnest_1_1_nest_module_1a1c033d1ccf6fc63cf55a76c49dc37032" kindref="member">NestModule::NodeCollectionType</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">SLIType<sp/><ref refid="classnest_1_1_nest_module_1a47bd07674d565b9cc34d862dece317d3" kindref="member">NestModule::NodeCollectionIteratorType</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">SLIType<sp/><ref refid="classnest_1_1_nest_module_1aa8b1516ec34ba46555a8abd429b23930" kindref="member">NestModule::ParameterType</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>the<sp/>time<sp/>when<sp/>NestModule<sp/>is<sp/>constructed,<sp/>the<sp/>SLI<sp/>Interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>must<sp/>already<sp/>be<sp/>initialized.<sp/>NestModule<sp/>relies<sp/>on<sp/>the<sp/>presence<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>SLI<sp/>datastructures:<sp/>Name,<sp/>Dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a71d47f0f859a1cfbdd7e357bb75f9f83" kindref="member">NestModule::NestModule</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a1174f78a6f71213d9cc11fd8c23ef34a" kindref="member">NestModule::~NestModule</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>network<sp/>is<sp/>deleted<sp/>outside<sp/>NestModule,<sp/>since<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dynamicloadermodule<sp/>also<sp/>needs<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a8aa38e726b397f8bb986084214a44733" kindref="member">ConnectionType</ref>.deletetypename();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a1c033d1ccf6fc63cf55a76c49dc37032" kindref="member">NodeCollectionType</ref>.deletetypename();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a47bd07674d565b9cc34d862dece317d3" kindref="member">NodeCollectionIteratorType</ref>.deletetypename();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1aa8b1516ec34ba46555a8abd429b23930" kindref="member">ParameterType</ref>.deletetypename();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>concerns<sp/>the<sp/>new<sp/>module:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a1e7dec7fc52989640df50df371c8b5e5" kindref="member">NestModule::name</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<sp/></highlight><highlight class="stringliteral">&quot;NEST<sp/>Kernel<sp/>2&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>name<sp/>of<sp/>the<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1aff5c2c1acc88d945a176a0987be2cb6d" kindref="member">NestModule::commandstring</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<sp/></highlight><highlight class="stringliteral">&quot;(nest-init)<sp/>run&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a4c20345ebae75215125fb19fe97e363c" kindref="member">NestModule::create_parameter</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>t<sp/>can<sp/>be<sp/>an<sp/>existing<sp/>ParameterDatum,<sp/>a<sp/>DoubleDatum<sp/>containing<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constant<sp/>value<sp/>for<sp/>this<sp/>parameter,<sp/>or<sp/>a<sp/>Dictionary<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref>*<sp/>pd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pd<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pd;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>t<sp/>is<sp/>a<sp/>DoubleDatum,<sp/>create<sp/>a<sp/>ConstantParameter<sp/>with<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>DoubleDatum*<sp/>dd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>DoubleDatum*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dd<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ConstantParameter(<sp/>*dd<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>t<sp/>is<sp/>a<sp/>IntegerDatum,<sp/>create<sp/>a<sp/>ConstantParameter<sp/>with<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>IntegerDatum*<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>IntegerDatum*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ConstantParameter(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>DictionaryDatum*<sp/>dictd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>DictionaryDatum*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dictd<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>dictionary<sp/>should<sp/>only<sp/>have<sp/>a<sp/>single<sp/>key,<sp/>which<sp/>is<sp/>the<sp/>name<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>parameter<sp/>type<sp/>to<sp/>create.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>*dictd<sp/>)-&gt;size()<sp/>!=<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>definition<sp/>dictionary<sp/>must<sp/>contain<sp/>one<sp/>single<sp/>key<sp/>only.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Name<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>=<sp/>(<sp/>*dictd<sp/>)-&gt;begin()-&gt;first;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>pdict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>*dictd,<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_nest_module_1a4c20345ebae75215125fb19fe97e363c" kindref="member">create_parameter</ref>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>,<sp/>pdict<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>must<sp/>be<sp/>parametertype,<sp/>constant<sp/>or<sp/>dictionary.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">Parameter*</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a4c20345ebae75215125fb19fe97e363c" kindref="member">NestModule::create_parameter</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Name&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parameter<sp/>factory<sp/>will<sp/>create<sp/>the<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>Parameter*<sp/>param<sp/>=<sp/>parameter_factory_().<ref refid="classnest_1_1_generic_factory_1af2b2368daa22f7f0058acd927a41c100" kindref="member">create</ref>(<sp/><ref refid="classnest_1_1_nest_module_1a1e7dec7fc52989640df50df371c8b5e5" kindref="member">name</ref>,<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">GenericFactory&lt;<sp/>Parameter<sp/>&gt;&amp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">NestModule::parameter_factory_()</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GenericFactory&lt;<sp/>Parameter<sp/>&gt;<sp/>factory;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">GenericFactory&lt;<sp/>AbstractMask<sp/>&gt;&amp;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">NestModule::mask_factory_()</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GenericFactory&lt;<sp/>AbstractMask<sp/>&gt;<sp/>factory;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>factory;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1abf42d4f1fe428138838c05157320e16d" kindref="member">NestModule::create_mask</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>t<sp/>can<sp/>be<sp/>either<sp/>an<sp/>existing<sp/>MaskDatum,<sp/>or<sp/>a<sp/>Dictionary<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref>*<sp/>maskd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maskd<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*maskd;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>DictionaryDatum*<sp/>dd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>DictionaryDatum*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>t.datum()<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>dd<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Mask<sp/>must<sp/>be<sp/>masktype<sp/>or<sp/>dictionary.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>dictionary<sp/>should<sp/>contain<sp/>one<sp/>key<sp/>which<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>type,<sp/>and<sp/>optionally<sp/>the<sp/>key<sp/>&apos;anchor&apos;.<sp/>To<sp/>find<sp/>the<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>type<sp/>key,<sp/>we<sp/>must<sp/>loop<sp/>through<sp/>all<sp/>keys.<sp/>The<sp/>value<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anchor<sp/>key<sp/>will<sp/>be<sp/>stored<sp/>in<sp/>the<sp/>anchor_token<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Token<sp/>anchor_token;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_anchor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>AbstractMask*<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Dictionary::iterator<sp/>dit<sp/>=<sp/>(<sp/>*dd<sp/>)-&gt;begin();<sp/>dit<sp/>!=<sp/>(<sp/>*dd<sp/>)-&gt;end();<sp/>++dit<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dit-&gt;first<sp/>==<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref><sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anchor_token<sp/>=<sp/>dit-&gt;second;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_anchor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>mask<sp/>has<sp/>already<sp/>been<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Mask<sp/>definition<sp/>dictionary<sp/>contains<sp/>extraneous<sp/>items.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/><ref refid="classnest_1_1_nest_module_1abf42d4f1fe428138838c05157320e16d" kindref="member">create_mask</ref>(<sp/>dit-&gt;first,<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>dit-&gt;second<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>has_anchor<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>anchor<sp/>may<sp/>be<sp/>an<sp/>array<sp/>of<sp/>doubles<sp/>(a<sp/>spatial<sp/>position).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>grid<sp/>layers<sp/>only,<sp/>it<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>provide<sp/>an<sp/>array<sp/>of<sp/>longs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>long<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref><sp/>=<sp/>getValue&lt;<sp/>std::vector&lt;<sp/>long<sp/>&gt;<sp/>&gt;(<sp/>anchor_token<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GridMask&lt;<sp/>2<sp/>&gt;&amp;<sp/>grid_mask_2d<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>GridMask&lt;<sp/>2<sp/>&gt;&amp;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*mask<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_mask_2d.set_anchor(<sp/>Position&lt;<sp/>2,<sp/>int<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>0<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>1<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::bad_cast&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Mask<sp/>must<sp/>be<sp/>2-dimensional<sp/>grid<sp/>mask.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GridMask&lt;<sp/>3<sp/>&gt;&amp;<sp/>grid_mask_3d<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>GridMask&lt;<sp/>3<sp/>&gt;&amp;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*mask<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grid_mask_3d.set_anchor(<sp/>Position&lt;<sp/>3,<sp/>int<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>0<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>1<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>2<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::bad_cast&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Mask<sp/>must<sp/>be<sp/>3-dimensional<sp/>grid<sp/>mask.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>TypeMismatch&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref><sp/>=<sp/>getValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>anchor_token<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractMask*<sp/>amask;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amask<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnchoredMask&lt;<sp/>2<sp/>&gt;(<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>Mask&lt;<sp/>2<sp/>&gt;&amp;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*<ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>),<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref><sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amask<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>AnchoredMask&lt;<sp/>3<sp/>&gt;(<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>Mask&lt;<sp/>3<sp/>&gt;&amp;<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*<ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>),<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Anchor<sp/>must<sp/>be<sp/>2-<sp/>or<sp/>3-dimensional.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/>amask;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AbstractMask*</highlight></codeline>
<codeline lineno="287"><highlight class="normal">create_doughnut(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>doughnut<sp/>(actually<sp/>an<sp/>annulus)<sp/>is<sp/>created<sp/>using<sp/>a<sp/>DifferenceMask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>Position&lt;<sp/>2<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1ab6a84185037ad26c4cd8424009260146" kindref="member">center</ref>(<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;known(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab6a84185037ad26c4cd8424009260146" kindref="member">center</ref><sp/>=<sp/>getValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outer<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ad1f8d416a67e4f3a5081aecb12ad98f7" kindref="member">names::outer_radius</ref><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inner<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a2695bb553605f3710ea943d9b9f4c7c2" kindref="member">names::inner_radius</ref><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>inner<sp/>&gt;=<sp/>outer<sp/>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nest::create_doughnut:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inner_radius<sp/>&lt;<sp/>outer_radius<sp/>required.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>BallMask&lt;<sp/>2<sp/>&gt;<sp/>outer_circle(<sp/><ref refid="namespacenest_1_1names_1ab6a84185037ad26c4cd8424009260146" kindref="member">center</ref>,<sp/>outer<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>BallMask&lt;<sp/>2<sp/>&gt;<sp/>inner_circle(<sp/><ref refid="namespacenest_1_1names_1ab6a84185037ad26c4cd8424009260146" kindref="member">center</ref>,<sp/>inner<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DifferenceMask&lt;<sp/>2<sp/>&gt;(<sp/>outer_circle,<sp/>inner_circle<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_status__id_function_1a6591dd8ec090461f3000aa2ed9f23c00" kindref="member">NestModule::SetStatus_idFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="339"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1afd19b490a761b78c43c216c7b1b47106" kindref="member">set_node_status</ref>(<sp/>node_id,<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_status___c_d_function_1a36756d98dd0e8be16915a9ba551da56e" kindref="member">NestModule::SetStatus_CDFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="353"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>conn<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a66727cbf2db54d042cb6dac04cf2a816" kindref="member">set_connection_status</ref>(<sp/>conn,<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_kernel_status___d_function_1a809093c50358a45841773e36ba290c0e" kindref="member">NestModule::SetKernelStatus_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a4739f5733533e0e7934ba5b3450dc901" kindref="member">set_kernel_status</ref>(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_cva___c_function_1ad50bb68947cd4c10cb9aed223b664f21" kindref="member">NestModule::Cva_CFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="380"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>conn<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>ad;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>ad.push_back(<sp/>conn.get_source_node_id()<sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>ad.push_back(<sp/>conn.get_target_node_id()<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>ad.push_back(<sp/>conn.get_target_thread()<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>ad.push_back(<sp/>conn.get_synapse_model_id()<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>ad.push_back(<sp/>conn.get_port()<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>Token<sp/>result(<sp/>ad<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>i-&gt;OStack.top().swap(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_status__aa_function_1a25499a2a027120acd64b555a89bbd16a" kindref="member">NestModule::SetStatus_aaFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="395"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>dict_a<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>conn_a<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>dict_a.size()<sp/>!=<sp/>1<sp/>)<sp/>and<sp/>(<sp/>dict_a.size()<sp/>!=<sp/>conn_a.size()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>RangeCheck();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dict_a.size()<sp/>==<sp/>1<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Broadcast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>dict_a[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_conns<sp/>=<sp/>conn_a.size();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>con<sp/>=<sp/>0;<sp/>con<sp/>&lt;<sp/>n_conns;<sp/>++con<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>con_id<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>conn_a[<sp/>con<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;clear_access_flags();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a9b5dd166871f9902c15de576936dca8f" kindref="member">set_synapse_status</ref>(<sp/>con_id.get_source_node_id(),</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_node_id(),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_thread(),</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_synapse_model_id(),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_port(),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALL_ENTRIES_ACCESSED(<sp/>*dict,<sp/></highlight><highlight class="stringliteral">&quot;SetStatus&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unread<sp/>dictionary<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_conns<sp/>=<sp/>conn_a.size();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>con<sp/>=<sp/>0;<sp/>con<sp/>&lt;<sp/>n_conns;<sp/>++con<sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>dict_a[<sp/>con<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>con_id<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>conn_a[<sp/>con<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;clear_access_flags();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a9b5dd166871f9902c15de576936dca8f" kindref="member">set_synapse_status</ref>(<sp/>con_id.get_source_node_id(),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_node_id(),</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_thread(),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_synapse_model_id(),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_port(),</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ALL_ENTRIES_ACCESSED(<sp/>*dict,<sp/></highlight><highlight class="stringliteral">&quot;SetStatus&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unread<sp/>dictionary<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_status__g_function_1add909d4ed590dfb159dcfd2cb9f1947e" kindref="member">NestModule::GetStatus_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="492"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nc<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>nc-&gt;valid()<sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;InvalidNodeCollection:<sp/>note<sp/>that<sp/>ResetKernel<sp/>invalidates<sp/>all<sp/>previously<sp/>created<sp/>NodeCollections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nc_size<sp/>=<sp/>nc-&gt;size();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>result;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>result.reserve(<sp/>nc_size<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_node_collection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">NodeCollection::const_iterator</ref><sp/>it<sp/>=<sp/>nc-&gt;begin();<sp/>it<sp/>&lt;<sp/>nc-&gt;end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>(<sp/>*it<sp/>).node_id;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/><ref refid="namespacenest_1a6e5a92a44e3eda3be872a61843a32430" kindref="member">get_node_status</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_status__i_function_1adec4fa8a8fb1aba118aecce38aace0cd" kindref="member">NestModule::GetStatus_iFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="521"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/><ref refid="namespacenest_1a6e5a92a44e3eda3be872a61843a32430" kindref="member">get_node_status</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_status___c_function_1a019df3486184f89f785c075a2bc841b1" kindref="member">NestModule::GetStatus_CFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>conn<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>result_dict<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a1906487a726e8f4bb4e65fe5868e4825" kindref="member">get_synapse_status</ref>(<sp/>conn.get_source_node_id(),</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.get_target_node_id(),</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.get_target_thread(),</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.get_synapse_model_id(),</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>conn.get_port()<sp/>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result_dict<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[intvector1,...,intvector_n]<sp/><sp/>-&gt;<sp/>[dict1,.../dict_n]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_status__a_function_1a814b0feefc3465c7f07f07e62657225b" kindref="member">NestModule::GetStatus_aFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="553"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayDatum<sp/>conns<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_results<sp/>=<sp/>conns.size();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>result;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>result.reserve(<sp/>n_results<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/>0;<sp/>nt<sp/>&lt;<sp/>n_results;<sp/>++nt<sp/>)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>con_id<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>conns.get(<sp/>nt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>result_dict<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a1906487a726e8f4bb4e65fe5868e4825" kindref="member">get_synapse_status</ref>(<sp/>con_id.get_source_node_id(),</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_node_id(),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_target_thread(),</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_synapse_model_id(),</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>con_id.get_port()<sp/>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(<sp/>result_dict<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_metadata__g_function_1a582995dc2b2858ad928ff0f1c6558a7d" kindref="member">NestModule::GetMetadata_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="577"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nc<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>nc-&gt;valid()<sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>KernelException(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;InvalidNodeCollection:<sp/>note<sp/>that<sp/>ResetKernel<sp/>invalidates<sp/>all<sp/>previously<sp/>created<sp/>NodeCollections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a79929df00838099cddde8593fcbd9efe" kindref="member">NodeCollectionMetadataPTR</ref><sp/>meta<sp/>=<sp/>nc-&gt;get_metadata();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>DictionaryDatum(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>empty<sp/>dict<sp/>if<sp/>NC<sp/>does<sp/>not<sp/>have<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>meta.get()<sp/>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>meta-&gt;get_status(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1abeb6d77b027892716ab7dcaa1b34dc75" kindref="member">slice_positions_if_sliced_nc</ref>(<sp/>dict,<sp/>nc<sp/>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*dict<sp/>)[<sp/><ref refid="namespacenest_1_1names_1aa48a316651c514d926ede93bbcf0e8b7" kindref="member">names::network_size</ref><sp/>]<sp/>=<sp/>nc-&gt;size();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_kernel_status___function_1a2d8b03628920476854414efea36af079" kindref="member">NestModule::GetKernelStatus_Function::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="606"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/><ref refid="namespacenest_1a13d3c3245741015b3862ea668dc37c0e" kindref="member">get_kernel_status</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_defaults__l___d_function_1a32942b6e9c6e4ebc1ceb78d4f8df18ae" kindref="member">NestModule::SetDefaults_l_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="622"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classnest_1_1_nest_module_1a1e7dec7fc52989640df50df371c8b5e5" kindref="member">name</ref><sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1af18c7cd06bb7de7b85883a470ec1238e" kindref="member">set_model_defaults</ref>(<sp/><ref refid="classnest_1_1_nest_module_1a1e7dec7fc52989640df50df371c8b5e5" kindref="member">name</ref>,<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_defaults__l_function_1a3cc6cb0d13afd31d3d29337eebf01358" kindref="member">NestModule::GetDefaults_lFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>modelname<sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/><ref refid="namespacenest_1aacef87bbf60279472b2642b3c460bcde" kindref="member">get_model_defaults</ref>(<sp/>modelname<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_connections___d_function_1a08bb267f127676654b1d593d46cea86b" kindref="member">NestModule::GetConnections_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="657"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>array<sp/>=<sp/><ref refid="namespacenest_1af07409401611ae3fa1c2558cd0f014ea" kindref="member">get_connections</ref>(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>array<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_simulate_function_1a80d1f9b95d879850a2887fc18bcdace3" kindref="member">NestModule::SimulateFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="681"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>i-&gt;OStack.top();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab9b390746b0a6fc00893571a8823161a" kindref="member">simulate</ref>(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>successful<sp/>end<sp/>of<sp/>simulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_run_function_1ad3e4dd16b4eb8b82f1b05faf15097c99" kindref="member">NestModule::RunFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="712"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>i-&gt;OStack.top();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a19ac46b17d6b9cc90262297f847f1901" kindref="member">run</ref>(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_prepare_function_1a97e33d3cddb35ef9e4eb7f1f398cf0ff" kindref="member">NestModule::PrepareFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="742"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a9312add735871538abc84f0c3d791d16" kindref="member">prepare</ref>();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_cleanup_function_1aabc920007821963cb8da81f2eec9ca28" kindref="member">NestModule::CleanupFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="765"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a94016e86725ee987facd98121dcea7a6" kindref="member">cleanup</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_copy_model__l__l___d_function_1a79f13278240061e8b4eeb21a97ae382d" kindref="member">NestModule::CopyModel_l_l_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="786"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fetch<sp/>existing<sp/>model<sp/>name<sp/>from<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Name<sp/>old_name<sp/>=<sp/>getValue&lt;<sp/>Name<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Name<sp/>new_name<sp/>=<sp/>getValue&lt;<sp/>Name<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1_model_manager_1ad5640bc6c249b00cf94e816b7d954318" kindref="member">copy_model</ref>(<sp/>old_name,<sp/>new_name,<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_create__l__i_function_1a8bd0a17b5924c6494aa4c7305df8f4ca" kindref="member">NestModule::Create_l_iFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="824"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>stack<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n_nodes<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_nodes<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>RangeCheck();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>modname<sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodes_created<sp/>=<sp/><ref refid="namespacenest_1aa2a77f5dfa38b2ed7837975a4ef39a7e" kindref="member">create</ref>(<sp/>modname,<sp/>n_nodes<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodes_created<sp/>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_nodes___d__b_1a3879e16a5f66403ed4536f83301b482b" kindref="member">NestModule::GetNodes_D_b::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="846"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>stack<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local_only<sp/>=<sp/>getValue&lt;<sp/>bool<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodes<sp/>=<sp/><ref refid="namespacenest_1aceadf186ded6e26f22792d6ae9e9159f" kindref="member">get_nodes</ref>(<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref>,<sp/>local_only<sp/>);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodes<sp/>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_reset_kernel_function_1a7d07831ff2707057f055b41ae83e7f02" kindref="member">NestModule::ResetKernelFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="882"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a75785465b86e1c71e993158e6200efb4" kindref="member">reset_kernel</ref>();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disconnect<sp/>for<sp/>nodecollection<sp/>nodecollection<sp/>conn_spec<sp/>syn_spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_disconnect__g__g___d___d_function_1a79289f39f19d401173fda7265426a987" kindref="member">NestModule::Disconnect_g_g_D_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="890"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>sources<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref><sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>connectivity<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>synapse_params<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>access<sp/>checking<sp/>is<sp/>handled<sp/>by<sp/>disconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1af9961e9c3f1968bb1ff558a540d53923" kindref="member">disconnect</ref>(<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>connectivity,<sp/>synapse_params<sp/>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disconnect<sp/>for<sp/>arraydatum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_disconnect__a_function_1a92e97ef2aa47752e2f20b810a9239bf3" kindref="member">NestModule::Disconnect_aFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="908"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayDatum<sp/>conns<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a5d96a7094e3aaa072e4d940a47378b48" kindref="member">disconnect</ref>(<sp/>conns<sp/>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Connect<sp/>for<sp/>nodecollection<sp/>nodecollection<sp/>conn_spec<sp/>syn_spec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>lib/sli/nest-init.sli<sp/>for<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_connect__g__g___d___d_function_1a1f97500f608374fd37eeaedfb8f24786" kindref="member">NestModule::Connect_g_g_D_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="923"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.start();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>sources<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref><sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>connectivity<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>synapse_params<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>access<sp/>checking<sp/>is<sp/>handled<sp/>by<sp/>connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>connectivity,<sp/>{<sp/>synapse_params<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.stop();</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_connect__g__g___d__a_function_1aa741899d36690af567ee03811ec6ba6e" kindref="member">NestModule::Connect_g_g_D_aFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="944"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.start();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>sources<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref><sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>connectivity<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>synapse_params_arr<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>DictionaryDatum<sp/>&gt;<sp/>synapse_params;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>syn_param<sp/>:<sp/>synapse_params_arr<sp/>)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>synapse_params.push_back(<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>syn_param<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>access<sp/>checking<sp/>is<sp/>handled<sp/>by<sp/>connect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a719414132e35d4b6ffa6c2a636df92eb" kindref="member">connect</ref>(<sp/>sources,<sp/><ref refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d" kindref="member">targets</ref>,<sp/>connectivity,<sp/>synapse_params<sp/>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.stop();</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal">NestModule::MemoryInfoFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="985"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1_model_manager_1a3ddc2ab6cebf94540774acea4730e004" kindref="member">memory_info</ref>();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">NestModule::PrintNodesFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1001"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a4ed8a25d4c6dc9e616579164a16a8630" kindref="member">print_nodes_to_stream</ref>();</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginDocumentation</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>PrintNodesToStream<sp/>-<sp/>Redirect<sp/>printing<sp/>of<sp/>nodes<sp/>in<sp/>the<sp/>network.</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/><sp/><sp/>Synopsis:</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/>-<sp/><sp/>PrintNodesToStream<sp/>-&gt;<sp/>-</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/><sp/>Description:</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/>Returns<sp/>string<sp/>output<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>print<sp/>information<sp/>about<sp/>the<sp/>nodes</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/>in<sp/>the<sp/>network.</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/>The<sp/>string<sp/>is<sp/>the<sp/>information<sp/>directly<sp/>printed<sp/>by<sp/>PrintNodes.</highlight></codeline>
<codeline lineno="1015"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal">NestModule::PrintNodesToStreamFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1019"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a4ed8a25d4c6dc9e616579164a16a8630" kindref="member">print_nodes_to_stream</ref>(<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>out.str()<sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">NestModule::RankFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1043"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().mpi_manager.get_rank()<sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">NestModule::NumProcessesFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1061"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().mpi_manager.get_num_processes()<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal">NestModule::SetFakeNumProcesses_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n_procs<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab0d151cd0f6b4a68551541dbdd38c531" kindref="member">enable_dryrun_mode</ref>(<sp/>n_procs<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">NestModule::SyncProcessesFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1134"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1a79d9980ccd091cc70c2992de2f13a9c3" kindref="member">synchronize</ref>();</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal">NestModule::TimeCommunication_i_i_bFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>offgrid<sp/>=<sp/>getValue&lt;<sp/>bool<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offgrid<sp/>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1a040b1b11834b2cd4fa67aadb08d4ab2a" kindref="member">time_communicate_offgrid</ref>(<sp/>num_bytes,<sp/>samples<sp/>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1ac59befbcc83f0a423c942371f8bea65f" kindref="member">time_communicate</ref>(<sp/>num_bytes,<sp/>samples<sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal">NestModule::TimeCommunicationv_i_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1a35577b8a35a607547962f228d49ccbf4" kindref="member">time_communicatev</ref>(<sp/>num_bytes,<sp/>samples<sp/>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal">NestModule::TimeCommunicationAlltoall_i_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1ab1a3608671ee3fd5a2088e7078ecfced" kindref="member">time_communicate_alltoall</ref>(<sp/>num_bytes,<sp/>samples<sp/>);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal">NestModule::TimeCommunicationAlltoallv_i_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1248"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>samples<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_bytes<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1aacfd5441fbe9e7f9bbb48534a20cd2c0" kindref="member">time_communicate_alltoallv</ref>(<sp/>num_bytes,<sp/>samples<sp/>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>time<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal">NestModule::ProcessorNameFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1282"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().mpi_manager.get_processor_name()<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal">NestModule::MPIAbort_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1306"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>exitcode<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1_m_p_i_manager_1a5cabda0a34c4a3e579f9df617576d09f" kindref="member">mpi_abort</ref>(<sp/>exitcode<sp/>);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal">NestModule::Cvdict_CFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1316"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1ad270d551a80539e002674c15122e2cb5" kindref="member">ConnectionDatum</ref><sp/>conn<sp/>=<sp/>getValue&lt;<sp/>ConnectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/>conn.get_dict();</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal">NestModule::Cvnodecollection_i_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NodeCollectionPrimitive(<sp/>first,<sp/>last<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodecollection<sp/>);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal">NestModule::Cvnodecollection_iaFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>TokenArray<sp/>node_ids<sp/>=<sp/>getValue&lt;<sp/>TokenArray<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection(<sp/><ref refid="classnest_1_1_node_collection_1a016062fcd624a01663b5d8fcc87cdffb" kindref="member">NodeCollection::create</ref>(<sp/>node_ids<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodecollection<sp/>);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal">NestModule::Cvnodecollection_ivFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1358"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>IntVectorDatum<sp/>node_ids<sp/>=<sp/>getValue&lt;<sp/>IntVectorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection(<sp/><ref refid="classnest_1_1_node_collection_1a016062fcd624a01663b5d8fcc87cdffb" kindref="member">NodeCollection::create</ref>(<sp/>node_ids<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodecollection<sp/>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal">NestModule::Cva_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1371"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>node_ids<sp/>=<sp/>nodecollection-&gt;to_array();</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>node_ids<sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal">NestModule::Size_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1383"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodecollection-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal">NestModule::ValidQ_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>nodecollection-&gt;valid()<sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal">NestModule::Join_g_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1405"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>left<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>right<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>combined<sp/>=<sp/>left<sp/>+<sp/>right;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>combined<sp/>);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal">NestModule::MemberQ_g_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>node_id<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>nodecollection-&gt;contains(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal">NestModule::Find_g_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1432"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>node_id<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>nodecollection-&gt;find(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal">NestModule::eq_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1445"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection_other<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>nodecollection-&gt;operator==(<sp/>nodecollection_other<sp/>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal">NestModule::BeginIterator_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1458"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>nc_const_iterator(<sp/>nodecollection-&gt;begin(<sp/>nodecollection<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal">NestModule::EndIterator_gFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>nc_const_iterator(<sp/>nodecollection-&gt;end(<sp/>nodecollection<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>it<sp/>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal">NestModule::GetNodeID_qFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1484"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>(<sp/>**it<sp/>).node_id;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal">NestModule::GetNodeIDModelID_qFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1497"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>gm_pair;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NodeIDTriple&amp;<sp/>gp<sp/>=<sp/>**it;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>gm_pair.push_back(<sp/>gp.node_id<sp/>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>gm_pair.push_back(<sp/>gp.model_id<sp/>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>gm_pair<sp/>);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal">NestModule::Next_qFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1513"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>++(<sp/>*it<sp/>);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leave<sp/>iterator<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal">NestModule::Eq_q_qFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1525"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it_l<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it_r<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>not<sp/>it_l-&gt;operator!=(<sp/>*it_r<sp/>);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leave<sp/>iterator<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal">NestModule::Lt_q_qFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1540"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it_l<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a78fd227341ca480786ed738d1950683a" kindref="member">NodeCollectionIteratorDatum</ref><sp/>it_r<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionIteratorDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>it_l-&gt;operator&lt;(<sp/>*it_r<sp/>);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leave<sp/>iterator<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal">NestModule::Get_g_iFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1555"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>g_size<sp/>=<sp/>nodecollection-&gt;size();</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>idx<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>g_size<sp/>+<sp/>idx;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>0<sp/>&lt;=<sp/>idx<sp/>and<sp/>idx<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>g_size<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>RangeCheck();</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>(<sp/>*nodecollection<sp/>)[<sp/>idx<sp/>];</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal">NestModule::Take_g_aFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1595"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/>TokenArray<sp/>slice<sp/>=<sp/>getValue&lt;<sp/>TokenArray<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slice.size()<sp/>!=<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>DimensionMismatch(<sp/>3,<sp/>slice.size()<sp/>);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>g_size<sp/>=<sp/>nodecollection-&gt;size();</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa93a7f7f8ccafde2e02d7e1cf97e8882" kindref="member">start</ref><sp/>=<sp/>slice[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref><sp/>=<sp/>slice[<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>slice[<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>step<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadParameter(<sp/></highlight><highlight class="stringliteral">&quot;Slicing<sp/>step<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>start<sp/>or<sp/>stop<sp/>are<sp/>counted<sp/>backwards<sp/>from<sp/>the<sp/>end<sp/>with<sp/>negative<sp/>keys,<sp/>they<sp/>must<sp/>be<sp/>adjusted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1aa93a7f7f8ccafde2e02d7e1cf97e8882" kindref="member">start</ref><sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1aa93a7f7f8ccafde2e02d7e1cf97e8882" kindref="member">start</ref><sp/>+=<sp/>g_size;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref><sp/>==<sp/>0<sp/>?<sp/>g_size<sp/>:<sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref><sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref><sp/>+=<sp/>g_size;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>sliced_nc<sp/>=<sp/>nodecollection-&gt;slice(<sp/><ref refid="namespacenest_1_1names_1aa93a7f7f8ccafde2e02d7e1cf97e8882" kindref="member">start</ref>,<sp/><ref refid="namespacenest_1_1names_1a6827c1884e37d463e549026261fcd2f3" kindref="member">stop</ref>,<sp/>step<sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>sliced_nc<sp/>);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MUSIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal">NestModule::SetAcceptableLatencyFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1653"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref><sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>latency<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1ee79f33da362c06ce4d394afbef2ae8" kindref="member">music_manager</ref>.set_music_in_port_acceptable_latency(<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref>,<sp/>latency<sp/>);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal">NestModule::SetMaxBufferedFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1667"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref><sp/>=<sp/>getValue&lt;<sp/>std::string<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxBuffered<sp/>=<sp/>getValue&lt;<sp/>long<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1ee79f33da362c06ce4d394afbef2ae8" kindref="member">music_manager</ref>.set_music_in_port_max_buffered(<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref>,<sp/>maxBuffered<sp/>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_enable_structural_plasticity___function_1a1984f42a68950c18893a5c6ac1bb112e" kindref="member">NestModule::EnableStructuralPlasticity_Function::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1690"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1a9b388e2d3ab09e4bdebce02aa9ea3a60" kindref="member">enable_structural_plasticity</ref>();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_disable_structural_plasticity___function_1a10e8084537802c0c47c72259efb5608e" kindref="member">NestModule::DisableStructuralPlasticity_Function::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1701"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1aee20052338bd8a2f47f33c59e3e2ed37" kindref="member">disable_structural_plasticity</ref>();</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_set_stdp_eps__d_function_1a6e26173d5f6015daf50cfdba893d846c" kindref="member">NestModule::SetStdpEps_dFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1717"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stdp_eps<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.top()<sp/>);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a5f6137160880e15f4d05c5b9f42dd0c0" kindref="member">set_stdp_eps</ref>(<sp/>stdp_eps<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_create_parameter___d_function_1ac1d9c61f4e6107b79e913be072e9351e" kindref="member">NestModule::CreateParameter_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1733"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum<sp/>param_dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>datum<sp/>=<sp/><ref refid="namespacenest_1a938d9f39d4231f8f30f12df8dca60883" kindref="member">nest::create_parameter</ref>(<sp/>param_dict<sp/>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>datum<sp/>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_mul___p___p_function_1a5ad0e739c608759e60c73e64c7813a8b" kindref="member">NestModule::Mul_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1746"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a3308172bc71c4a3349cf1444b481b134" kindref="member">multiply_parameter</ref>(<sp/>param1,<sp/>param2<sp/>);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_div___p___p_function_1abf498610344217af9c6aace39c59be70" kindref="member">NestModule::Div_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1761"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a6660019b79fa68201597f16091e0ad24" kindref="member">divide_parameter</ref>(<sp/>param1,<sp/>param2<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_add___p___p_function_1a24b8ceeaf8c3353bffcee71861a2cf9e" kindref="member">NestModule::Add_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1776"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1af409f5e14bc9f9f0e889c575a62ef6c0" kindref="member">add_parameter</ref>(<sp/>param1,<sp/>param2<sp/>);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_exp___p_function_1aab8d1d9f8b5a0e434b541ad069f2ad71" kindref="member">NestModule::Exp_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1791"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1adb6093fc25fdd73df3f72ed55cf6676e" kindref="member">exp_parameter</ref>(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_sin___p_function_1afb3b4792fc6d3255ed7f5520855a7ab1" kindref="member">NestModule::Sin_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1805"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1ac5cb3ff2975b46dcf8ff8ed656881c02" kindref="member">sin_parameter</ref>(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_cos___p_function_1abaa9b30b1077a0f3679edaaf4d3397e4" kindref="member">NestModule::Cos_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1819"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1ae9ee6ab7a9b58c22633802b685e40b86" kindref="member">cos_parameter</ref>(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_pow___p__d_function_1a0a5de85176364485ba6a8f99e80f343e" kindref="member">NestModule::Pow_P_dFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1833"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exponent<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a25444baac628506cd7f32cf02a3b9815" kindref="member">pow_parameter</ref>(<sp/>param,<sp/>exponent<sp/>);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_sub___p___p_function_1a77fa045f0a855b5a65df517fd7eaa105" kindref="member">NestModule::Sub_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1848"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1ae0e599deb8a59aa282f9e2c5e3afb6ef" kindref="member">subtract_parameter</ref>(<sp/>param1,<sp/>param2<sp/>);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_compare___p___p___d_function_1a04c9b340a0167d85bbc4783ec4d88c2d" kindref="member">NestModule::Compare_P_P_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1864"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>param3<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a9d76f2213c0635d1636d91d212a59cb4" kindref="member">compare_parameter</ref>(<sp/>param1,<sp/>param2,<sp/>param3<sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_conditional___p___p___p_function_1ade99f0e7b7f78543edc3ca2e88e3db08" kindref="member">NestModule::Conditional_P_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1881"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param3<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a3cb527af360d4621f4cdfe0ccda1dd4c" kindref="member">conditional_parameter</ref>(<sp/>param1,<sp/>param2,<sp/>param3<sp/>);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_min___p__d_function_1aa3fc6cde09e7c16604d14e6ec1722fea" kindref="member">NestModule::Min_P_dFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1897"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_value<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a9479de83b3bbefe365380e551de2e27a" kindref="member">min_parameter</ref>(<sp/>param,<sp/>other_value<sp/>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_max___p__d_function_1a275920fd70c09eaca8265d4cc6f141bb" kindref="member">NestModule::Max_P_dFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1912"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>other_value<sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1acc78313974b26cd5be47f89138fe19eb" kindref="member">max_parameter</ref>(<sp/>param,<sp/>other_value<sp/>);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_redraw___p__d__d_function_1a641fc5776bc40bfe036b7ea79e01c6f8" kindref="member">NestModule::Redraw_P_d_dFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1927"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">min</ref><sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730" kindref="member">max</ref><sp/>=<sp/>getValue&lt;<sp/>double<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1ac6801dbe55ebea5c54a50f53bcc860ca" kindref="member">redraw_parameter</ref>(<sp/>param,<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">min</ref>,<sp/><ref refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730" kindref="member">max</ref><sp/>);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_dimension2d___p___p_function_1a82450bd5d7d6aaeee5becc5168ef0d9a" kindref="member">NestModule::Dimension2d_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1943"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a0c53befc0360f49ae05e993d97c97b3a" kindref="member">dimension_parameter</ref>(<sp/>param1,<sp/>param2<sp/>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_dimension3d___p___p___p_function_1a5da841ce518791903a4fa105233ddbf7" kindref="member">NestModule::Dimension3d_P_P_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1958"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param1<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param2<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param3<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>newparam<sp/>=<sp/><ref refid="namespacenest_1a0c53befc0360f49ae05e993d97c97b3a" kindref="member">dimension_parameter</ref>(<sp/>param1,<sp/>param2,<sp/>param3<sp/>);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newparam<sp/>);</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_value___p_function_1a3af7631db42005fdf30e86525ca1eea7" kindref="member">NestModule::GetValue_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1977"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value<sp/>=<sp/><ref refid="namespacenest_1a1b78ba86b1996d6b20ba42854f9dc29e" kindref="member">get_value</ref>(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_is_spatial___p_function_1a5e2d23daf0da90a7bce8b6848dac6fd8" kindref="member">NestModule::IsSpatial_PFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1991"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parameter_is_spatial<sp/>=<sp/><ref refid="namespacenest_1a624620ef6c6156e4c1c233e35874f421" kindref="member">is_spatial</ref>(<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>parameter_is_spatial<sp/>);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_apply___p___d_function_1aeae22d50cf9444ac9eb041db8edc59ed" kindref="member">NestModule::Apply_P_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2008"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref><sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ADL<sp/>requires<sp/>explicit<sp/>namespace<sp/>qualification<sp/>to<sp/>avoid<sp/>confusion<sp/>with<sp/>std::apply()<sp/>in<sp/>C++17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/llvm/llvm-project/issues/53084#issuecomment-1007969489</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="namespacenest_1ae70d1711c4858531e2f644ce06800846" kindref="member">nest::apply</ref>(<sp/>param,<sp/><ref refid="namespacenest_1_1names_1a7af2cbff1ab1cbeb555cca79508a6156" kindref="member">positions</ref><sp/>);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_apply___p__g_function_1a9ceab1e7886750793f68f8cb0ba922c6" kindref="member">NestModule::Apply_P_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2025"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nc<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref><sp/>param<sp/>=<sp/>getValue&lt;<sp/>ParameterDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ADL<sp/>requires<sp/>explicit<sp/>namespace<sp/>qualification<sp/>to<sp/>avoid<sp/>confusion<sp/>with<sp/>std::apply()<sp/>in<sp/>C++17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>https://github.com/llvm/llvm-project/issues/53084#issuecomment-1007969489</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="namespacenest_1ae70d1711c4858531e2f644ce06800846" kindref="member">nest::apply</ref>(<sp/>param,<sp/>nc<sp/>);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBNEUROSIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal">NestModule::CGParse_sFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2064"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/>StringDatum<sp/>xml<sp/>=<sp/>getValue&lt;<sp/>StringDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/>ConnectionGeneratorDatum<sp/>cgd<sp/>=<sp/>ConnectionGenerator::fromXML(<sp/>xml<sp/>);</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>cgd<sp/>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal">NestModule::CGParseFile_sFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2096"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>StringDatum<sp/>xml<sp/>=<sp/>getValue&lt;<sp/>StringDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>ConnectionGeneratorDatum<sp/>cgd<sp/>=<sp/>ConnectionGenerator::fromXMLFile(<sp/>xml<sp/>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>cgd<sp/>);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal">NestModule::CGSelectImplementation_s_sFunction::execute(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2128"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/>StringDatum<sp/>library<sp/>=<sp/>getValue&lt;<sp/>StringDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/>StringDatum<sp/>tag<sp/>=<sp/>getValue&lt;<sp/>StringDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/>ConnectionGenerator::selectCGImplementation(<sp/>tag,<sp/>library<sp/>);</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifdef<sp/>HAVE_LIBNEUROSIM<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SLI<sp/>functions<sp/>for<sp/>spatial<sp/>networks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_create_layer___d___d_function_1a25957c3795b862920d3f116d9f8f22f5" kindref="member">NestModule::CreateLayer_D_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>layer_dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/><ref refid="namespacenest_1accca8ae42fb9a0dd77bef43d1662e3c8" kindref="member">create_layer</ref>(<sp/>layer_dict<sp/>);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>node_id_triple<sp/>:<sp/>*layer<sp/>)</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1afd19b490a761b78c43c216c7b1b47106" kindref="member">set_node_status</ref>(<sp/>node_id_triple.node_id,<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>layer<sp/>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_position__g_function_1a3f93380c370b2a9813c0e965b7029f05" kindref="member">NestModule::GetPosition_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2215"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>result<sp/>=<sp/><ref refid="namespacenest_1a9127a40cb54f0b6b64a6bc716c4ffa57" kindref="member">get_position</ref>(<sp/>layer<sp/>);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>layer-&gt;size()<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;OStack.push(<sp/>result[<sp/>0<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_displacement__g__g_function_1a81bcdc72520a35250564e866919fb41f" kindref="member">NestModule::Displacement_g_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2278"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer_to<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer_from<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>layer_to-&gt;size()<sp/>!=<sp/>1<sp/>and<sp/>layer_from-&gt;size()<sp/>!=<sp/>1<sp/>and<sp/>not(<sp/>layer_to-&gt;size()<sp/>==<sp/>layer_from-&gt;size()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;NodeCollections<sp/>must<sp/>have<sp/>equal<sp/>length<sp/>or<sp/>one<sp/>must<sp/>have<sp/>size<sp/>1.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>result<sp/>=<sp/><ref refid="namespacenest_1acd27b8e605b9217b44c1cdbcafef61dc" kindref="member">displacement</ref>(<sp/>layer_to,<sp/>layer_from<sp/>);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_displacement__a__g_function_1a37c67d27f49e6c3156a25fd881901f7b" kindref="member">NestModule::Displacement_a_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayDatum<sp/>point<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>result<sp/>=<sp/><ref refid="namespacenest_1acd27b8e605b9217b44c1cdbcafef61dc" kindref="member">displacement</ref>(<sp/>layer,<sp/>point<sp/>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_distance__g__g_function_1a5cfec7fe58010897335b457afd48d9bc" kindref="member">NestModule::Distance_g_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2356"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer_to<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer_from<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>layer_to-&gt;size()<sp/>!=<sp/>1<sp/>and<sp/>layer_from-&gt;size()<sp/>!=<sp/>1<sp/>and<sp/>not(<sp/>layer_to-&gt;size()<sp/>==<sp/>layer_from-&gt;size()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;NodeCollections<sp/>must<sp/>have<sp/>equal<sp/>length<sp/>or<sp/>one<sp/>must<sp/>have<sp/>size<sp/>1.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/>Token<sp/>result<sp/>=<sp/><ref refid="namespacenest_1a110b54fe73a6033aab002995564c4e8a" kindref="member">distance</ref>(<sp/>layer_to,<sp/>layer_from<sp/>);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_distance__a__g_function_1a9ac838745e2c636cb3aab9e1d22742ba" kindref="member">NestModule::Distance_a_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2377"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayDatum<sp/>point<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/>Token<sp/>result<sp/>=<sp/><ref refid="namespacenest_1a110b54fe73a6033aab002995564c4e8a" kindref="member">distance</ref>(<sp/>layer,<sp/>point<sp/>);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_distance__a_function_1a0d055bf805709a66668b70c0acd69f15" kindref="member">NestModule::Distance_aFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ArrayDatum<sp/>conns<sp/>=<sp/>getValue&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/>Token<sp/>result<sp/>=<sp/><ref refid="namespacenest_1a110b54fe73a6033aab002995564c4e8a" kindref="member">distance</ref>(<sp/>conns<sp/>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_create_mask___d_function_1a4c2caf90537da90e7a97c80e260e3231" kindref="member">NestModule::CreateMask_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2424"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum<sp/>mask_dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>datum<sp/>=<sp/><ref refid="namespacenest_1ac30c2406c5dda659b9fbf74bc0489126" kindref="member">nest::create_mask</ref>(<sp/>mask_dict<sp/>);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>datum<sp/>);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_inside__a___m_function_1a07e2c7322e365ec168733cd95c414cf7" kindref="member">NestModule::Inside_a_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2451"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>point<sp/>=<sp/>getValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="namespacenest_1af83e7e1d4ba3689610d5e9d44b60337b" kindref="member">inside</ref>(<sp/>point,<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>Token(<sp/>BoolDatum(<sp/>ret<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_and___m___m_function_1a8b3a01d80925d90a0d6607545d29c389" kindref="member">NestModule::And_M_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2466"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask1<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask2<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>newmask<sp/>=<sp/><ref refid="namespacenest_1a212a6085587ef25d18be43ecaeea4392" kindref="member">intersect_mask</ref>(<sp/>mask1,<sp/>mask2<sp/>);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newmask<sp/>);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_or___m___m_function_1a199cbfc89ffa094d0ab664f16f0b1b93" kindref="member">NestModule::Or_M_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2481"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask1<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask2<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>newmask<sp/>=<sp/><ref refid="namespacenest_1a93d966d15faca2789500f7e48e0ee384" kindref="member">union_mask</ref>(<sp/>mask1,<sp/>mask2<sp/>);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newmask<sp/>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_sub___m___m_function_1a244fc64360f149ce45aac6779bd3f10b" kindref="member">NestModule::Sub_M_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2496"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask1<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>mask2<sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/>newmask<sp/>=<sp/><ref refid="namespacenest_1a5be96a84af54b0b382920059cfff0e4a" kindref="member">minus_mask</ref>(<sp/>mask1,<sp/>mask2<sp/>);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>newmask<sp/>);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_connect_layers__g__g___d_function_1ab0557c28442c2601fb6da5ebed659344" kindref="member">NestModule::ConnectLayers_g_g_DFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2686"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.start();</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref><sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum<sp/>connection_dict<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a33bd25216b470958f2f7000bdf6eedf9" kindref="member">connect_layers</ref>(<sp/><ref refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131" kindref="member">source</ref>,<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/>connection_dict<sp/>);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a66194774f828bbabf7d8c22e468ee6b7" kindref="member">sw_construction_connect</ref>.stop();</highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_get_layer_status__g_function_1a9cb68c72e1e016fcc685cc1a2b3299fc" kindref="member">NestModule::GetLayerStatus_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2718"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>result<sp/>=<sp/><ref refid="namespacenest_1a69aa231b72333a4b7d4850c7d416c62e" kindref="member">get_layer_status</ref>(<sp/>layer<sp/>);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_dump_layer_nodes__os__g_function_1ae418f7fb387c927efaae3989f042477e" kindref="member">NestModule::DumpLayerNodes_os_gFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2769"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/>OstreamDatum<sp/>out<sp/>=<sp/>getValue&lt;<sp/>OstreamDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a67cd867a183faebc9d9814271868af0a" kindref="member">dump_layer_nodes</ref>(<sp/>layer,<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>1<sp/>);<sp/></highlight><highlight class="comment">//<sp/>leave<sp/>ostream<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_dump_layer_connections__os__g__g__l_function_1adbb671990b0d34345991c1cdcb8d0527" kindref="member">NestModule::DumpLayerConnections_os_g_g_lFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2821"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/>OstreamDatum<sp/>out_file<sp/>=<sp/>getValue&lt;<sp/>OstreamDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>3<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>source_layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>target_layer<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token<sp/>syn_model<sp/>=<sp/>i-&gt;OStack.pick(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a91111d805ab0c64f090bcae96ff8c5e2" kindref="member">dump_layer_connections</ref>(<sp/>syn_model,<sp/>source_layer,<sp/>target_layer,<sp/>out_file<sp/>);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);<sp/></highlight><highlight class="comment">//<sp/>leave<sp/>ostream<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_cvdict___m_function_1a244aea4d4c4ed8a348af97e77cb9bf32" kindref="member">NestModule::Cvdict_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2837"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dict<sp/>=<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref>-&gt;get_dict();</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop();</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>dict<sp/>);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1_1_select_nodes_by_mask__g__a___m_function_1a25462ddd263f2def194950cc57442786" kindref="member">NestModule::SelectNodesByMask_g_a_MFunction::execute</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2851"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/>i-&gt;assert_stack_load(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>layer_nc<sp/>=<sp/>getValue&lt;<sp/>NodeCollectionDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref><sp/>=<sp/>getValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab77cf7ce5a71015113b36ab014c49393" kindref="member">MaskDatum</ref><sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref><sp/>=<sp/>getValue&lt;<sp/>MaskDatum<sp/>&gt;(<sp/>i-&gt;OStack.pick(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>index<sp/>&gt;<sp/>mask_node_ids;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>.size();</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dim<sp/>!=<sp/>2<sp/>and<sp/>dim<sp/>!=<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Center<sp/>must<sp/>be<sp/>2-<sp/>or<sp/>3-dimensional.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a6779693086ed293feb10b317db6e193e" kindref="member">AbstractLayerPTR</ref><sp/>abstract_layer<sp/>=<sp/><ref refid="namespacenest_1a32b3e378d9e1074462af1dd7267a7049" kindref="member">get_layer</ref>(<sp/>layer_nc<sp/>);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dim<sp/>==<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>Layer&lt;<sp/>2<sp/>&gt;*<sp/>layer<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>Layer&lt;<sp/>2<sp/>&gt;*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>abstract_layer.get()<sp/>);</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>layer<sp/>)</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>TypeMismatch(<sp/></highlight><highlight class="stringliteral">&quot;2D<sp/>layer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;other<sp/>type&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedLayer&lt;<sp/>2<sp/>&gt;<sp/>ml<sp/>=<sp/>MaskedLayer&lt;<sp/>2<sp/>&gt;(<sp/>*layer,<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>layer_nc<sp/>);</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_ntree_1a4c44139c1661498b7d1c41aa8788861b" kindref="member">Ntree&lt; 2, index &gt;::masked_iterator</ref><sp/>it<sp/>=<sp/>ml.begin(<sp/>Position&lt;<sp/>2<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>0<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>1<sp/>]<sp/>)<sp/>);<sp/>it<sp/>!=<sp/>ml.end();</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask_node_ids.push_back(<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/>Layer&lt;<sp/>3<sp/>&gt;*<sp/>layer<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>Layer&lt;<sp/>3<sp/>&gt;*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>abstract_layer.get()<sp/>);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>layer<sp/>)</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>TypeMismatch(<sp/></highlight><highlight class="stringliteral">&quot;3D<sp/>layer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;other<sp/>type&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedLayer&lt;<sp/>3<sp/>&gt;<sp/>ml<sp/>=<sp/>MaskedLayer&lt;<sp/>3<sp/>&gt;(<sp/>*layer,<sp/><ref refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a" kindref="member">mask</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>layer_nc<sp/>);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1_ntree_1a4c44139c1661498b7d1c41aa8788861b" kindref="member">Ntree&lt; 3, index &gt;::masked_iterator</ref><sp/>it<sp/>=<sp/>ml.begin(<sp/>Position&lt;<sp/>3<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>0<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>1<sp/>],<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">anchor</ref>[<sp/>2<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>ml.end();</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask_node_ids.push_back(<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/>i-&gt;OStack.pop(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/>i-&gt;OStack.push(<sp/>mask_node_ids<sp/>);</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/>i-&gt;EStack.pop();</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><ref refid="classnest_1_1_nest_module_1a246da59f22b9398cc08e13bfc2355ae8" kindref="member">NestModule::init</ref>(<sp/>SLIInterpreter*<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a8aa38e726b397f8bb986084214a44733" kindref="member">ConnectionType</ref>.settypename(<sp/></highlight><highlight class="stringliteral">&quot;connectiontype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a8aa38e726b397f8bb986084214a44733" kindref="member">ConnectionType</ref>.setdefaultaction(<sp/>SLIInterpreter::datatypefunction<sp/>);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a97f2c3aa39797eebe9e2bc451cd469c4" kindref="member">MaskType</ref>.settypename(<sp/></highlight><highlight class="stringliteral">&quot;masktype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a97f2c3aa39797eebe9e2bc451cd469c4" kindref="member">MaskType</ref>.setdefaultaction(<sp/>SLIInterpreter::datatypefunction<sp/>);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a1c033d1ccf6fc63cf55a76c49dc37032" kindref="member">NodeCollectionType</ref>.settypename(<sp/></highlight><highlight class="stringliteral">&quot;nodecollectiontype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a1c033d1ccf6fc63cf55a76c49dc37032" kindref="member">NodeCollectionType</ref>.setdefaultaction(<sp/>SLIInterpreter::datatypefunction<sp/>);</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a47bd07674d565b9cc34d862dece317d3" kindref="member">NodeCollectionIteratorType</ref>.settypename(<sp/></highlight><highlight class="stringliteral">&quot;nodecollectioniteratortype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a47bd07674d565b9cc34d862dece317d3" kindref="member">NodeCollectionIteratorType</ref>.setdefaultaction(<sp/>SLIInterpreter::datatypefunction<sp/>);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1aa8b1516ec34ba46555a8abd429b23930" kindref="member">ParameterType</ref>.settypename(<sp/></highlight><highlight class="stringliteral">&quot;parametertype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1aa8b1516ec34ba46555a8abd429b23930" kindref="member">ParameterType</ref>.setdefaultaction(<sp/>SLIInterpreter::datatypefunction<sp/>);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>interface<sp/>functions<sp/>with<sp/>interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetStatus_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a95352cf143c8566c226b5a5a04939564" kindref="member">setstatus_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetStatus_CD&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a4214af745441c5bd2b6fe4e80b0adf2d" kindref="member">setstatus_CDfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetStatus_aa&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa2f924d18eef3212695c690f2d576b87" kindref="member">setstatus_aafunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetKernelStatus&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a4660f13c7eb5066ca54f0ebbce092520" kindref="member">setkernelstatus_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetStatus_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a90b10a7ca80c8d606e8e0f07f5ad5427" kindref="member">getstatus_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetStatus_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a8e6d975ebf5e709cc71aae30dc8fafaa" kindref="member">getstatus_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetStatus_C&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a600e4e3ca0b73d4fada8d5bdf02c175d" kindref="member">getstatus_Cfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetStatus_a&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afd2cdc6d4dad25c5bf49a4e2f2715259" kindref="member">getstatus_afunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetMetadata_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a6a502aeecade39013e4230ff09f33b42" kindref="member">getmetadata_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetKernelStatus&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac43a0c4df7d256a364a2cb3cac78874b" kindref="member">getkernelstatus_function</ref><sp/>);</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetConnections_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a946c1582216c0f2bd68f7acfbb2b8b5e" kindref="member">getconnections_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cva_C&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa3612502451ea1cbe2f3ee8d83b82ad0" kindref="member">cva_cfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Simulate_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aff74fcff38aa31d79c528fffbf6415e9" kindref="member">simulatefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Run_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afba59dd89b1859fabba31f07cb29491f" kindref="member">runfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Prepare&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a4cf15b7cbe4b414b5b5dd1fc6ff61bfc" kindref="member">preparefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Cleanup&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a24d005d581b269666500a801bada4dd5" kindref="member">cleanupfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CopyModel_l_l_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa102de4157b18b6e3726d1b7be424701" kindref="member">copymodel_l_l_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetDefaults_l_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a3c13321581631ef8d7b9b67c7b167bc1" kindref="member">setdefaults_l_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetDefaults_l&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a6e23df63d2eae93ed3a56919e2530c4f" kindref="member">getdefaults_lfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Create_l_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a226e271bad9b6475fa9903afe58bb080" kindref="member">create_l_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetNodes_D_b&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a7de8be0314f5895c51a73687ac73457d" kindref="member">getnodes_D_bfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;mul_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ad3aee66c90d9a5a4817ac1e267ec5798" kindref="member">mul_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;div_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1acb457a7e1693de4a886b858c3fb588e8" kindref="member">div_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;add_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a4ae9cef687fe15b9e13e726b07c925f8" kindref="member">add_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;sub_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a04d5e65a7682d026b1a13473b7c2cc88" kindref="member">sub_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;compare_P_P_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a39f0018d6f47bbc2fdb4fd81f845e210" kindref="member">compare_P_P_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;conditional_P_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a12bd4f79d5fe506f26d3ac426bcae351" kindref="member">conditional_P_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;min_P_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ad1ef30792187d7545c614d40e13a6728" kindref="member">min_P_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;max_P_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ace1cf9359c210ce729a898211d15a175" kindref="member">max_P_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;redraw_P_d_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a7997e490a18f650cbabbb241ff0192b3" kindref="member">redraw_P_d_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;exp_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa2ff7c1e974509b7aa203fe47f15fa70" kindref="member">exp_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;sin_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a98f4b0eb4eefa5be77a99e60f87fd51e" kindref="member">sin_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cos_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a87ec39caeb4449dce7d695edbabfe24e" kindref="member">cos_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;pow_P_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a63a9e25c65d298de21d7c2d625ff6051" kindref="member">pow_P_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;dimension2d_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a5591a68a4cf63f9ff75b6998afcde227" kindref="member">dimension2d_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;dimension3d_P_P_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a62a2eaa6cec58f30981c95195192067a" kindref="member">dimension3d_P_P_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CreateParameter_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aee38e9dcbd302d82fe6b96912ed8ac76" kindref="member">createparameter_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetValue_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a8750381726429a2c91426fac016128b7" kindref="member">getvalue_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;IsSpatial_P&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a5039f46c4281a34e5867d233efd0a594" kindref="member">isspatial_Pfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Apply_P_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a83377d95f6489ca4ce7d15f1c72c9839" kindref="member">apply_P_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Apply_P_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aeaebd331dce20091e5daee001398330e" kindref="member">apply_P_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Connect_g_g_D_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa6f0788f5029ebbc786b25a1ad61f6ee" kindref="member">connect_g_g_D_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Connect_g_g_D_a&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a62c75911bd51cf4a0e9e96e7df9bea66" kindref="member">connect_g_g_D_afunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;ResetKernel&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a59ed5bf18e8c4f587d6cc05f098d4b32" kindref="member">resetkernelfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;MemoryInfo&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a7d534f17329c9acf9485e078a6080e2f" kindref="member">memoryinfofunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;PrintNodes&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a3d5b1e3155372dd26bcb9a3038ae04c9" kindref="member">printnodesfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;PrintNodesToStream&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa863597e5c3e071c24983923a2129676" kindref="member">printnodestostreamfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Rank&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a2fd17a343bb8e279772a034e47a83fa8" kindref="member">rankfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;NumProcesses&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac8ee11e8c9492452c3e6dcf7090e9ded" kindref="member">numprocessesfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetFakeNumProcesses&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ab6a5dca4dc574415e683fb905cbb3145" kindref="member">setfakenumprocesses_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SyncProcesses&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac8bdfb87beb589dd3bb23193c493bcf0" kindref="member">syncprocessesfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;TimeCommunication_i_i_b&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a0e9c471eb5f98a02d3ca156d14f26e48" kindref="member">timecommunication_i_i_bfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;TimeCommunicationv_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1acd8776ce859d051be6ceafd9e0e6e946" kindref="member">timecommunicationv_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;TimeCommunicationAlltoall_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a310b1d28a39ad60c300c65482c07c984" kindref="member">timecommunicationalltoall_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;TimeCommunicationAlltoallv_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afae83aa86d5242aadc8115fc737483f3" kindref="member">timecommunicationalltoallv_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;ProcessorName&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a3a9ced6396b1faf1586f1445abb01913" kindref="member">processornamefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;MPI_Abort&quot;</highlight><highlight class="normal">,<sp/>&amp;mpiabort_ifunction<sp/>);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cvdict_C&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a2e5fe1e5e305ccb5d0e6aa0070010ac8" kindref="member">cvdict_Cfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cvnodecollection_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aca6ed0b584c010e405b80265571b2398" kindref="member">cvnodecollection_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cvnodecollection_ia&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aa42324f977ed28b684e7ab22d67c865d" kindref="member">cvnodecollection_iafunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cvnodecollection_iv&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a9e6504338b334676bd5b66e29c9276eb" kindref="member">cvnodecollection_ivfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cva_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac9dd32bd55a9808ef4cb81bb4e77a809" kindref="member">cva_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;size_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a662fd765a5c3efdc0648b3dba7c8d102" kindref="member">size_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;ValidQ_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac5aea56f931da38c510d411c497cf6f6" kindref="member">validq_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;join_g_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a5fe28f71d59417195fa12dcad8fa36c0" kindref="member">join_g_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;MemberQ_g_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a675533625ac6e7e5b3568fb8cb967219" kindref="member">memberq_g_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Find_g_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ad17f02f074f901ee2121976ea49f10a6" kindref="member">find_g_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;eq_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a782716d237db1bcd4c7609aba1eccf0f" kindref="member">eq_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:beginiterator_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a8d06237d92d09e47f015c3bf3d8293e5" kindref="member">beginiterator_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:enditerator_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1af06a0d392c85297e27c28bf264587f86" kindref="member">enditerator_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:getnodeid_q&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a3871053002890110e6e5d2ca7a65e336" kindref="member">getnodeid_qfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:getnodeidmodelid_q&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1af38579ee06c38cb6f223a06e03d1306b" kindref="member">getnodeidmodelid_qfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:next_q&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ac3e1ca8ce7af48080db5c75da26c481f" kindref="member">next_qfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:eq_q_q&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ab69f7e966a42de02744887b1f759ae1a" kindref="member">eq_q_qfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;:lt_q_q&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afde20c69ecf6d9e63f56a7e305bfe517" kindref="member">lt_q_qfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;get_g_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a8ed45609d2a327e7a94347d0d79cfc29" kindref="member">get_g_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Take_g_a&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1abda70fda4df9f00980a9a47c93f0f4e8" kindref="member">take_g_afunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MUSIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetAcceptableLatency&quot;</highlight><highlight class="normal">,<sp/>&amp;setacceptablelatency_l_dfunction<sp/>);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetMaxBuffered&quot;</highlight><highlight class="normal">,<sp/>&amp;setmaxbuffered_l_ifunction<sp/>);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;EnableStructuralPlasticity&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aca5139a6ec9bfa4d82446916583b6732" kindref="member">enablestructuralplasticity_function</ref><sp/>);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;DisableStructuralPlasticity&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a160ab9c2a32424e25fc177fb252deef5" kindref="member">disablestructuralplasticity_function</ref><sp/>);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Disconnect_g_g_D_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a401ca743d3d97a78d5f4fea7f8717c2a" kindref="member">disconnect_g_g_D_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Disconnect_a&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1abb1d50ca3acac94bd180a9c7a2abd26a" kindref="member">disconnect_afunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SetStdpEps&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a1191f46af9a4d5fd6b5ed89a65fa4e53" kindref="member">setstdpeps_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SLI<sp/>functions<sp/>for<sp/>spatial<sp/>networks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CreateLayer_D_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a38a170298c798bad2696a43a60de3877" kindref="member">createlayer_D_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetPosition_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a114d0137771eac8a2d8a5db032f49bfc" kindref="member">getposition_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Displacement_g_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1acbc3db2c5de74620950fc59db8eff3bb" kindref="member">displacement_g_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Displacement_a_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ad2666aa2481cd1db2b2bcca406bdd9e4" kindref="member">displacement_a_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Distance_g_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1aeb6ec4b9967c2cc46f6903671ed971f3" kindref="member">distance_g_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Distance_a_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a59b6df5b38a03b48a30138576c8ee0c6" kindref="member">distance_a_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Distance_a&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a2af4e9218c66f4414df47a4b9cbe7928" kindref="member">distance_afunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CreateMask_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a13e97cc682de04af4c3fa6fe37ac1082" kindref="member">createmask_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;Inside_a_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a88ca1e4064eacf263475bac4811ac9be" kindref="member">inside_a_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;and_M_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afd8f7fd80e456de9e2c37ffea76ee117" kindref="member">and_M_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;or_M_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1afebe025ca98504d25190e25bd729e8ee" kindref="member">or_M_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;sub_M_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a58db5610e3061bf011aceb8c5e6c82be" kindref="member">sub_M_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;ConnectLayers_g_g_D&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ae0b3a98f1652d34e4ef281986a3c156c" kindref="member">connectlayers_g_g_Dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;GetLayerStatus_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1ab823ac6e0a556e0011d240de74148daf" kindref="member">getlayerstatus_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;DumpLayerNodes_os_g&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a101bdbdc5763efb0d616e2fd9f6d629e" kindref="member">dumplayernodes_os_gfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;DumpLayerConnections_os_g_g_l&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a8cefd7a5072c30128c1af9eda9bc97d2" kindref="member">dumplayerconnections_os_g_g_lfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;cvdict_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a9f0de2a8a84c8d5656205cdb64e3e2e1" kindref="member">cvdict_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;SelectNodesByMask_g_a_M&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classnest_1_1_nest_module_1a9a8064d331610a00463ec7760549e8dc" kindref="member">selectnodesbymask_g_a_Mfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>connection<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>OneToOneBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;one_to_one&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>AllToAllBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;all_to_all&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>FixedInDegreeBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;fixed_indegree&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>FixedOutDegreeBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;fixed_outdegree&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>BernoulliBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;pairwise_bernoulli&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>SymmetricBernoulliBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;symmetric_pairwise_bernoulli&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>FixedTotalNumberBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;fixed_total_number&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBNEUROSIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a0fe3b21a49179d12a2c7fec5346cfc3a" kindref="member">register_conn_builder</ref>&lt;<sp/>ConnectionGeneratorBuilder<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;conngen&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>MSP<sp/>growth<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1a34c0919b05dcf42548d2f3cc9f36a058" kindref="member">register_growth_curve</ref>&lt;<sp/>GrowthCurveSigmoid<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;sigmoid&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1a34c0919b05dcf42548d2f3cc9f36a058" kindref="member">register_growth_curve</ref>&lt;<sp/>GrowthCurveGaussian<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;gaussian&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a1bb61f56ad18de2dbd28058a4b05256b" kindref="member">sp_manager</ref>.<ref refid="classnest_1_1_s_p_manager_1a34c0919b05dcf42548d2f3cc9f36a058" kindref="member">register_growth_curve</ref>&lt;<sp/>GrowthCurveLinear<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;linear&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/>Token<sp/>statusd<sp/>=<sp/>i-&gt;baselookup(<sp/>Name(<sp/></highlight><highlight class="stringliteral">&quot;statusdict&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>dd<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>statusd<sp/>);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>dd-&gt;insert(<sp/>Name(<sp/></highlight><highlight class="stringliteral">&quot;kernelname&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StringDatum(<sp/></highlight><highlight class="stringliteral">&quot;NEST&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/>dd-&gt;insert(<sp/>Name(<sp/></highlight><highlight class="stringliteral">&quot;is_mpi&quot;</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BoolDatum(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().mpi_manager.is_mpi_used()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>ConstantParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;constant&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>UniformParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;uniform&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>UniformIntParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;uniform_int&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>NormalParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;normal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>LognormalParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;lognormal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>ExponentialParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;exponential&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>NodePosParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>SpatialDistanceParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;distance&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>GaussianParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;gaussian&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>Gaussian2DParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;gaussian2d&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>GammaParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;gamma&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/>register_parameter&lt;<sp/>ExpDistParameter<sp/>&gt;(<sp/></highlight><highlight class="stringliteral">&quot;exp_distribution&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_LIBNEUROSIM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CGParse&quot;</highlight><highlight class="normal">,<sp/>&amp;cgparse_sfunction<sp/>);</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CGParseFile&quot;</highlight><highlight class="normal">,<sp/>&amp;cgparsefile_sfunction<sp/>);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/>i-&gt;createcommand(<sp/></highlight><highlight class="stringliteral">&quot;CGSelectImplementation&quot;</highlight><highlight class="normal">,<sp/>&amp;cgselectimplementation_s_sfunction<sp/>);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>BallMask&lt;<sp/>2<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>BallMask&lt;<sp/>3<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>EllipseMask&lt;<sp/>2<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>EllipseMask&lt;<sp/>3<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>BoxMask&lt;<sp/>2<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>BoxMask&lt;<sp/>3<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_nest_module_1a31e3ed90ab9f53dd48d110a685814e54" kindref="member">register_mask</ref>(<sp/></highlight><highlight class="stringliteral">&quot;doughnut&quot;</highlight><highlight class="normal">,<sp/>create_doughnut<sp/>);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/>register_mask&lt;<sp/>GridMask&lt;<sp/>2<sp/>&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="3110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="nestkernel/nestmodule.cpp"/>
  </compounddef>
</doxygen>
