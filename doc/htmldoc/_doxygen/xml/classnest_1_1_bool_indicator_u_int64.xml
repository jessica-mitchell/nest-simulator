<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_bool_indicator_u_int64" kind="class" language="C++" prot="public">
    <compoundname>nest::BoolIndicatorUInt64</compoundname>
    <includes refid="per__thread__bool__indicator_8h" local="no">per_thread_bool_indicator.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classnest_1_1_bool_indicator_u_int64_1a0be5dc836e493a6464a3ddd67b476364" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint_fast64_t</type>
        <definition>constexpr std::uint_fast64_t nest::BoolIndicatorUInt64::true_uint64</definition>
        <argsstring></argsstring>
        <name>true_uint64</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="61" column="39" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_bool_indicator_u_int64_1aec934419edb63167c460ec7083648491" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint_fast64_t</type>
        <definition>constexpr std::uint_fast64_t nest::BoolIndicatorUInt64::false_uint64</definition>
        <argsstring></argsstring>
        <name>false_uint64</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="62" column="39" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_bool_indicator_u_int64_1a8450ab84ab9da4e7beac25c4f4d24f60" prot="private" static="no" mutable="no">
        <type>std::uint_fast64_t</type>
        <definition>std::uint_fast64_t nest::BoolIndicatorUInt64::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="63" column="22" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1ab18d470534499b820155a9e2c25c74fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::BoolIndicatorUInt64::BoolIndicatorUInt64</definition>
        <argsstring>()</argsstring>
        <name>BoolIndicatorUInt64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="49" column="3" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1acfb2ce9dcf97aa0d96ef2e9f391b639b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::BoolIndicatorUInt64::BoolIndicatorUInt64</definition>
        <argsstring>(const bool status)</argsstring>
        <name>BoolIndicatorUInt64</name>
        <param>
          <type>const bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="50" column="3" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1afe3b791585941e56581aee399e0b41df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::BoolIndicatorUInt64::is_true</definition>
        <argsstring>() const</argsstring>
        <name>is_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="52" column="8" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1a8456ddcdd075d4ad70a778ba9344e9ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::BoolIndicatorUInt64::is_false</definition>
        <argsstring>() const</argsstring>
        <name>is_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="53" column="8" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1a987458996864f21ffe9d921740bbde71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoolIndicatorUInt64::set_true</definition>
        <argsstring>()</argsstring>
        <name>set_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="55" column="8" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1ad4b47f44e6d09962613c1b4c3f367791" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoolIndicatorUInt64::set_false</definition>
        <argsstring>()</argsstring>
        <name>set_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="56" column="8" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_bool_indicator_u_int64_1a2cc029008ad8a01df915aef122fa0c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoolIndicatorUInt64::logical_and</definition>
        <argsstring>(const bool status)</argsstring>
        <name>logical_and</name>
        <param>
          <type>const bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="58" column="8" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="91" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A wrapper class for an integer that is only allowed to take the values 0 and 1. Used by <ref refid="classnest_1_1_per_thread_bool_indicator" kindref="compound">PerThreadBoolIndicator</ref> to create a thread-safe vector indicating per-thread status. See issue #1394. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::BoolIndicatorUInt64</label>
        <link refid="classnest_1_1_bool_indicator_u_int64"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/per_thread_bool_indicator.h" line="46" column="1" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="47" bodyend="64"/>
    <listofallmembers>
      <member refid="classnest_1_1_bool_indicator_u_int64_1ab18d470534499b820155a9e2c25c74fd" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>BoolIndicatorUInt64</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1acfb2ce9dcf97aa0d96ef2e9f391b639b" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>BoolIndicatorUInt64</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1aec934419edb63167c460ec7083648491" prot="private" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>false_uint64</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1a8456ddcdd075d4ad70a778ba9344e9ee" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>is_false</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1afe3b791585941e56581aee399e0b41df" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>is_true</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1a2cc029008ad8a01df915aef122fa0c84" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>logical_and</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1ad4b47f44e6d09962613c1b4c3f367791" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>set_false</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1a987458996864f21ffe9d921740bbde71" prot="public" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>set_true</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1a8450ab84ab9da4e7beac25c4f4d24f60" prot="private" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>status_</name></member>
      <member refid="classnest_1_1_bool_indicator_u_int64_1a0be5dc836e493a6464a3ddd67b476364" prot="private" virt="non-virtual"><scope>nest::BoolIndicatorUInt64</scope><name>true_uint64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
