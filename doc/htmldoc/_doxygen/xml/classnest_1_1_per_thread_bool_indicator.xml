<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_per_thread_bool_indicator" kind="class" language="C++" prot="public">
    <compoundname>nest::PerThreadBoolIndicator</compoundname>
    <includes refid="per__thread__bool__indicator_8h" local="no">per_thread_bool_indicator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_per_thread_bool_indicator_1a204aad3ab75954658aead2f9a1b0d365" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1_bool_indicator_u_int64" kindref="compound">BoolIndicatorUInt64</ref> &gt;</type>
        <definition>std::vector&lt; BoolIndicatorUInt64 &gt; nest::PerThreadBoolIndicator::per_thread_status_</definition>
        <argsstring></argsstring>
        <name>per_thread_status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="135" column="15" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1a88b6ee5266d9a72748e4ee3375a55edd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::PerThreadBoolIndicator::PerThreadBoolIndicator</definition>
        <argsstring>()</argsstring>
        <name>PerThreadBoolIndicator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="105" column="3" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1ae386c728d606f3042d954cdfdbf7f95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1_bool_indicator_u_int64" kindref="compound">BoolIndicatorUInt64</ref> &amp;</type>
        <definition>BoolIndicatorUInt64 &amp; nest::PerThreadBoolIndicator::operator[]</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="107" column="23" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1af3248add18f6f2bf30ed61999b7df6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::PerThreadBoolIndicator::initialize</definition>
        <argsstring>(const thread num_threads, const bool status)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>num_threads</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize to the given number of threads and set all elements to false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="112" column="8" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1a0e975f123d63eb9c8e174b7b41ebc68f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::PerThreadBoolIndicator::all_false</definition>
        <argsstring>() const</argsstring>
        <name>all_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for all threads and returns whether all elements are false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="117" column="8" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1a51720790d232c4b113e553d36186738b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::PerThreadBoolIndicator::all_true</definition>
        <argsstring>() const</argsstring>
        <name>all_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for all threads and returns whether all elements are true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="122" column="8" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="67" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1af0caf6edf9e59e7e93ad0447d0366cf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::PerThreadBoolIndicator::any_false</definition>
        <argsstring>() const</argsstring>
        <name>any_false</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for all threads and returns whether any elements are false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="127" column="8" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="81" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_per_thread_bool_indicator_1a8b6a0dd8c2787811ad8f721064d25f14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::PerThreadBoolIndicator::any_true</definition>
        <argsstring>() const</argsstring>
        <name>any_true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for all threads and returns whether any elements are true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/per_thread_bool_indicator.h" line="132" column="8" bodyfile="nestkernel/per_thread_bool_indicator.cpp" bodystart="95" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A thread-safe vector to keep track of the status across threads, for example during gather operations. Uses a vector of integers instead of a vector of bools to guarantee thread safety. See issue #1394. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::PerThreadBoolIndicator</label>
        <link refid="classnest_1_1_per_thread_bool_indicator"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/per_thread_bool_indicator.h" line="102" column="1" bodyfile="nestkernel/per_thread_bool_indicator.h" bodystart="103" bodyend="136"/>
    <listofallmembers>
      <member refid="classnest_1_1_per_thread_bool_indicator_1a0e975f123d63eb9c8e174b7b41ebc68f" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>all_false</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1a51720790d232c4b113e553d36186738b" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>all_true</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1af0caf6edf9e59e7e93ad0447d0366cf2" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>any_false</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1a8b6a0dd8c2787811ad8f721064d25f14" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>any_true</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1af3248add18f6f2bf30ed61999b7df6e4" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>initialize</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1ae386c728d606f3042d954cdfdbf7f95a" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>operator[]</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1a204aad3ab75954658aead2f9a1b0d365" prot="private" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>per_thread_status_</name></member>
      <member refid="classnest_1_1_per_thread_bool_indicator_1a88b6ee5266d9a72748e4ee3375a55edd" prot="public" virt="non-virtual"><scope>nest::PerThreadBoolIndicator</scope><name>PerThreadBoolIndicator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
