<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classToken" kind="class" language="C++" prot="public">
    <compoundname>Token</compoundname>
    <includes refid="token_8h" local="no">token.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classToken_1a0245e232bf41dbfae8b76f96305ea1a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Datum</definition>
        <argsstring></argsstring>
        <name>Datum</name>
        <qualifiedname>Token::Datum</qualifiedname>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="153" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classToken_1a5c5ccc0f2618ccabc7ad510604efdb0f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TokenArrayObj</definition>
        <argsstring></argsstring>
        <name>TokenArrayObj</name>
        <qualifiedname>Token::TokenArrayObj</qualifiedname>
        <param>
          <type><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="154" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" prot="private" static="no" mutable="no">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
        <definition>Datum* Token::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>Token::p</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="157" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="157" bodyend="-1"/>
        <referencedby refid="classToken_1a5670cb529c61f85f0fe79d98fea96c7b" compoundref="token_8h" startline="313" endline="322">assign_by_pointer</referencedby>
        <referencedby refid="classToken_1a0fb2d619ef8e12500e8eb9a546d8d49c" compoundref="token_8h" startline="299" endline="310">assign_by_ref</referencedby>
        <referencedby refid="classToken_1aa82cb2b6a7055ab37744fc5268729823" compoundref="token_8h" startline="332" endline="339">clear</referencedby>
        <referencedby refid="classToken_1a2c88e079ad4b9bc2769f54a37099e56a" compoundref="token_8h" startline="342" endline="345">contains</referencedby>
        <referencedby refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">datum</referencedby>
        <referencedby refid="classToken_1a749c13e9732489c612634a457f863633" compoundref="token_8h" startline="222" endline="229">detach</referencedby>
        <referencedby refid="classToken_1a397db8062278fec3e786aa62f9d9baf8" compoundref="token_8h" startline="348" endline="351">empty</referencedby>
        <referencedby refid="classToken_1a4810b8f65db618ce32b347c041e66cf5" compoundref="token_8cc" startline="146" endline="162">info</referencedby>
        <referencedby refid="classToken_1abeb808eba68fc7c5e45c656c09e2d01a" compoundref="token_8h" startline="265" endline="268">init_by_copy</referencedby>
        <referencedby refid="classToken_1aee2083d6b0e163a93edf196f05e8025e" compoundref="token_8h" startline="293" endline="296">init_by_pointer</referencedby>
        <referencedby refid="classToken_1ac8f072f708a9cc16a6069f723a66a9d9" compoundref="token_8h" startline="279" endline="283">init_by_ref</referencedby>
        <referencedby refid="classToken_1ada20a3824205f54e23415418c9a2bc54" compoundref="token_8h" startline="251" endline="255">init_move</referencedby>
        <referencedby refid="classTokenArrayObj_1a47cd2ac304d041eeb12121e8a433adcf" compoundref="tarrayobj_8cc" startline="487" endline="508">TokenArrayObj::insert_move</referencedby>
        <referencedby refid="classToken_1a0a851cec71bde92edd33e989f31640d5" compoundref="token_8h" startline="486" endline="489">is_a</referencedby>
        <referencedby refid="classToken_1a2f61f1702fa6214de27ccff368df11f5" compoundref="token_8h" startline="232" endline="240">move</referencedby>
        <referencedby refid="classToken_1a5c191febb25d94083151ea5cb31d7737" compoundref="token_8h" startline="354" endline="357">operator not</referencedby>
        <referencedby refid="classToken_1a5958e16977dd6fbbf1d347ec26241ad6" compoundref="token_8h" startline="381" endline="384">operator*</referencedby>
        <referencedby refid="classToken_1a0d3af35f8cec5c185178b2307e6ea03b" compoundref="token_8h" startline="374" endline="377">operator-&gt;</referencedby>
        <referencedby refid="classToken_1ac35d2a51c5b3d37a5465a9aee26018e1" compoundref="token_8h" startline="395" endline="414">operator=</referencedby>
        <referencedby refid="classToken_1a54cc7baea1e3f9cfe447ab2a4325771d" compoundref="token_8h" startline="433" endline="441">operator==</referencedby>
        <referencedby refid="classToken_1a6068e75d671be14b110a441649a238d7" compoundref="token_8cc" startline="165" endline="175">pprint</referencedby>
        <referencedby refid="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" compoundref="token_8h" startline="326" endline="329">swap</referencedby>
        <referencedby refid="classToken_1a127eb3b85c54f22d831985d538d5e9c9" compoundref="token_8cc" startline="51" endline="54">Token</referencedby>
        <referencedby refid="classToken_1a3d7d59eaac1535df1433357d5d372f84" compoundref="token_8h" startline="165" endline="172">~Token</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Token::accessed_</definition>
        <argsstring></argsstring>
        <name>accessed_</name>
        <qualifiedname>Token::accessed_</qualifiedname>
        <briefdescription>
<para>Flag for access control. </para>
        </briefdescription>
        <detaileddescription>
<para>Is set by <ref refid="group__DictUtils_1ga0445ccdaa7ff4b5a81644646bb83d631" kindref="member">getValue()</ref> and <ref refid="group__TokenUtils_1ga483a6d2950979332f9caa22fbbcb416e" kindref="member">setValue()</ref> via <ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="162" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="162" bodyend="-1"/>
        <referencedby refid="classToken_1adf58195db358356de7ddac51960de62d" compoundref="token_8h" startline="474" endline="477">accessed</referencedby>
        <referencedby refid="classToken_1a03824dc8178a9d8df607854039cf65dd" compoundref="token_8h" startline="456" endline="459">clear_access_flag</referencedby>
        <referencedby refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">datum</referencedby>
        <referencedby refid="classToken_1a817dd51bef53f348dea5a26ba6bb320f" compoundref="token_8h" startline="461" endline="464">set_access_flag</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classToken_1a3d7d59eaac1535df1433357d5d372f84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Token::~Token</definition>
        <argsstring>()</argsstring>
        <name>~Token</name>
        <qualifiedname>Token::~Token</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="165" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="165" bodyend="172"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a52263a9bcf2674ea188f25612d2de4e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const Token &amp;c_s)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>c_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="174" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="174" bodyend="181"/>
        <references refid="classDatum_1af968bcf24fef60342dcc5d374b8cd54e" compoundref="datum_8h" startline="54" endline="57">Datum::get_ptr</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a7a8392b70d88a39c39343e2f20611618" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(Datum *p_s=nullptr)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
          <declname>p_s</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>use existing pointer to datum, token takes responsibility of the pointer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="187" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classToken_1ad99b8a89955f1910b308449cefb267f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const Datum &amp;d)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const <ref refid="classDatum" kindref="compound">Datum</ref> &amp;</type>
          <declname>d</declname>
          <briefdescription><para>copy datum object and store its pointer. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="192" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="192" bodyend="195"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a127eb3b85c54f22d831985d538d5e9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(int)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="197" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="51" bodyend="54"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1ad20541ee1a245380b3df48ae80b0bade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(unsigned int)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>unsigned int</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="198" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="56" bodyend="59"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a88529e22c8f6687aaed0619b2eda627b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(long)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>long</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="199" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="61" bodyend="64"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1ae1f6c766cff632cedf6304ed4df7975a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(bool)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>bool</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="200" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="83" bodyend="86"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1af60dfbea410ebb77ffcae25d6927e817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(unsigned long)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>unsigned long</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="201" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="66" bodyend="69"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1aee8b87762558f515d04bc81660f8bd0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(double)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>double</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="205" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="78" bodyend="81"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1aa9afcb5557f7081658081ca1763e04ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const char *)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const char *</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="206" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="88" bodyend="91"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1ad1a68ec8c721b302aede85a6acb6804d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(std::string)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>std::string</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="207" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="93" bodyend="96"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1aee261a40b2d1606c5b748fc5b4601f44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="208" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="108" bodyend="111"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a391ea3d7b54ccd18a0dcea49bfb54439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const std::vector&lt; long &gt; &amp;)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const std::vector&lt; long &gt; &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="209" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="98" bodyend="101"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a995206fe7c076d80c9a885c1b535ff94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::Token</definition>
        <argsstring>(const std::vector&lt; size_t &gt; &amp;)</argsstring>
        <name>Token</name>
        <qualifiedname>Token::Token</qualifiedname>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="210" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="103" bodyend="106"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a0f93582914b0c3aaebd7ac0c0fb88795" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::operator size_t</definition>
        <argsstring>() const</argsstring>
        <name>operator size_t</name>
        <qualifiedname>Token::operator size_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="211" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="125" bodyend="128"/>
        <references refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" compoundref="tokenutils_8cc" startline="41" endline="50">getValue&lt; long &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a00f0e2b6140c987c0e49c1306f7fe354" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::operator long</definition>
        <argsstring>() const</argsstring>
        <name>operator long</name>
        <qualifiedname>Token::operator long</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="212" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="120" bodyend="123"/>
        <references refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" compoundref="tokenutils_8cc" startline="41" endline="50">getValue&lt; long &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a9d9ecf295a7bb23922db6ea5b9e97833" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::operator double</definition>
        <argsstring>() const</argsstring>
        <name>operator double</name>
        <qualifiedname>Token::operator double</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="213" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="130" bodyend="133"/>
        <references refid="tokenutils_8cc_1aeb08d5341a6bafebc5f8513da1eccb2b" compoundref="tokenutils_8cc" startline="74" endline="91">getValue&lt; double &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a34140d60656a12bbfcdfbcf85e985133" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <qualifiedname>Token::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="214" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="135" bodyend="138"/>
        <references refid="tokenutils_8cc_1a95ea4d0048b41f138634e4eca76292bf" compoundref="tokenutils_8cc" startline="115" endline="125">getValue&lt; bool &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a37a03ca940a3abaec1491c9306bafa2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Token::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <qualifiedname>Token::string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="215" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="140" bodyend="143"/>
        <references refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a749c13e9732489c612634a457f863633" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::detach</definition>
        <argsstring>()</argsstring>
        <name>detach</name>
        <qualifiedname>Token::detach</qualifiedname>
        <briefdescription>
<para>If the contained datum has more than one reference, clone it, so it can be modified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="222" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="222" bodyend="229"/>
        <references refid="classDatum_1ab06887e171572f71a041209053b1a0ff">Datum::clone</references>
        <references refid="classDatum_1add98b474ddf98b8352c49052c026f42b" compoundref="datum_8h" startline="116" endline="119">Datum::numReferences</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a2f61f1702fa6214de27ccff368df11f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::move</definition>
        <argsstring>(Token &amp;c)</argsstring>
        <name>move</name>
        <qualifiedname>Token::move</qualifiedname>
        <param>
          <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="232" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="232" bodyend="240"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
        <referencedby refid="classSLIArrayModule_1_1ArrayloadFunction_1ad6f6b784dc88e565f2c6eb44ea396590" compoundref="sliarray_8cc" startline="796" endline="826">SLIArrayModule::ArrayloadFunction::execute</referencedby>
        <referencedby refid="classDictconstructFunction_1a4a714112e05b609e5b63b08070d6c619" compoundref="slidict_8cc" startline="629" endline="678">DictconstructFunction::execute</referencedby>
        <referencedby refid="classTrieInfoFunction_1a2c49a8f1ced0a3098ff798d8dcbd2e45" compoundref="slitypecheck_8cc" startline="218" endline="235">TrieInfoFunction::execute</referencedby>
        <referencedby refid="classCva__tFunction_1a7172118a9841754c5187150f57f4b9ef" compoundref="slitypecheck_8cc" startline="197" endline="215">Cva_tFunction::execute</referencedby>
        <referencedby refid="classTypeFunction_1a942ac57d38a765c38e5c5ae6a705fb3b" compoundref="slitypecheck_8cc" startline="325" endline="339">TypeFunction::execute</referencedby>
        <referencedby refid="classDictionary_1a9ce327c0a94abb3a166d805e74b8af57" compoundref="dict_8h" startline="331" endline="336">Dictionary::insert_move</referencedby>
        <referencedby refid="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" compoundref="typechk_8cc" startline="208" endline="271">TypeTrie::insert_move</referencedby>
        <referencedby refid="classParser_1a1477eb52ba5b4021f7cc7290ac7d3ab7" compoundref="parser_8cc" startline="73" endline="208">Parser::operator()</referencedby>
        <referencedby refid="classScanner_1a728ec43cf0ee0ec80c595a58d046d9a1" compoundref="scanner_8cc" startline="528" endline="808">Scanner::operator()</referencedby>
        <referencedby refid="classDictionaryStack_1aa29e38886d0158d4cd2254753b38d0f3" compoundref="dictstack_8cc" startline="121" endline="133">DictionaryStack::top</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1ada20a3824205f54e23415418c9a2bc54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::init_move</definition>
        <argsstring>(Token &amp;rhs)</argsstring>
        <name>init_move</name>
        <qualifiedname>Token::init_move</qualifiedname>
        <param>
          <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Initialize the token by moving a datum from another token. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes that the token does not point to a valid datum and that the argument token does point to a valid datum. This function does not change the reference count of the datum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="251" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="251" bodyend="255"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1abeb808eba68fc7c5e45c656c09e2d01a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::init_by_copy</definition>
        <argsstring>(const Token &amp;rhs)</argsstring>
        <name>init_by_copy</name>
        <qualifiedname>Token::init_by_copy</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Initialize the token by moving a datum from another token. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes that the token does not point to a valid datum and that the argument token does point to a valid datum. This function does not change the reference count of the datum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="265" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="265" bodyend="268"/>
        <references refid="classDatum_1af968bcf24fef60342dcc5d374b8cd54e" compoundref="datum_8h" startline="54" endline="57">Datum::get_ptr</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1ac8f072f708a9cc16a6069f723a66a9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::init_by_ref</definition>
        <argsstring>(const Token &amp;rhs)</argsstring>
        <name>init_by_ref</name>
        <qualifiedname>Token::init_by_ref</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Initialize the token with a reference. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes that the token does not point to a valid datum and that the argument token does point to a valid datum. This function increases the reference count of the argument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="279" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="279" bodyend="283"/>
        <references refid="classDatum_1a8a547bad7564cd6e79fd9b1a245c9e8b" compoundref="datum_8h" startline="100" endline="103">Datum::addReference</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1aee2083d6b0e163a93edf196f05e8025e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::init_by_pointer</definition>
        <argsstring>(Datum *rhs)</argsstring>
        <name>init_by_pointer</name>
        <qualifiedname>Token::init_by_pointer</qualifiedname>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Initialize the token with a datum pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function assumes that the token does not point to a valid datum. The function assumes that the datum is new and DOES NOT increases its reference count. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="293" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="293" bodyend="296"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a0fb2d619ef8e12500e8eb9a546d8d49c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::assign_by_ref</definition>
        <argsstring>(const Token &amp;rhs)</argsstring>
        <name>assign_by_ref</name>
        <qualifiedname>Token::assign_by_ref</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="299" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="299" bodyend="310"/>
        <references refid="classDatum_1af968bcf24fef60342dcc5d374b8cd54e" compoundref="datum_8h" startline="54" endline="57">Datum::get_ptr</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
        <referencedby refid="classTrietypeFunction_1aa617a18f82017e4d01bf5711029d6ad1" compoundref="sliactions_8cc" startline="107" endline="111">TrietypeFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a5670cb529c61f85f0fe79d98fea96c7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::assign_by_pointer</definition>
        <argsstring>(Datum *rhs)</argsstring>
        <name>assign_by_pointer</name>
        <qualifiedname>Token::assign_by_pointer</qualifiedname>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="313" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="313" bodyend="322"/>
        <references refid="classDatum_1a8a547bad7564cd6e79fd9b1a245c9e8b" compoundref="datum_8h" startline="100" endline="103">Datum::addReference</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::swap</definition>
        <argsstring>(Token &amp;c)</argsstring>
        <name>swap</name>
        <qualifiedname>Token::swap</qualifiedname>
        <param>
          <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="326" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="326" bodyend="329"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <referencedby refid="classnest_1_1NestModule_1_1Cva__CFunction_1ad50bb68947cd4c10cb9aed223b664f21" compoundref="nestmodule_8cpp" startline="379" endline="391">nest::NestModule::Cva_CFunction::execute</referencedby>
        <referencedby refid="classCvx__aFunction_1af2bbcd7b524eeb6308f0d5493e9cb807" compoundref="slidata_8cc" startline="1288" endline="1299">Cvx_aFunction::execute</referencedby>
        <referencedby refid="classCvlit__nFunction_1a806be6bd17e5fec8fbcfa2ac78d1e377" compoundref="slidata_8cc" startline="1302" endline="1311">Cvlit_nFunction::execute</referencedby>
        <referencedby refid="classCvlit__pFunction_1ad248eb2534475a2135d578d9da633ff3" compoundref="slidata_8cc" startline="1338" endline="1347">Cvlit_pFunction::execute</referencedby>
        <referencedby refid="classCvlp__pFunction_1aebb8e56c7d99493139a374fa09751367" compoundref="slidata_8cc" startline="1353" endline="1363">Cvlp_pFunction::execute</referencedby>
        <referencedby refid="classCvn__sFunction_1ac5d8d6bfe59a37cf211724165726e266" compoundref="slidata_8cc" startline="1326" endline="1335">Cvn_sFunction::execute</referencedby>
        <referencedby refid="classCvn__lFunction_1ae1e3c2c4c519f637a28d4420cb5df0da" compoundref="slidata_8cc" startline="1314" endline="1323">Cvn_lFunction::execute</referencedby>
        <referencedby refid="classCvi__sFunction_1a9ae5d4fc2d8670968d34f8f72bc90aea" compoundref="slidata_8cc" startline="1367" endline="1376">Cvi_sFunction::execute</referencedby>
        <referencedby refid="classCvd__sFunction_1ab094f06ea6f7d5184df21eb49e333b32" compoundref="slidata_8cc" startline="1380" endline="1389">Cvd_sFunction::execute</referencedby>
        <referencedby refid="classIntegerFunction_1ae6379a2121330a09e1b1c0d1175ebf7a" compoundref="slimath_8cc" startline="41" endline="52">IntegerFunction::execute</referencedby>
        <referencedby refid="classDoubleFunction_1a99ee2ffbdf972d9fb4307d64584f6ff0" compoundref="slimath_8cc" startline="55" endline="67">DoubleFunction::execute</referencedby>
        <referencedby refid="classTypeTrie_1ab5a3623db41b0a42c07c9c21e1ba2ee8" compoundref="typechk_8cc" startline="160" endline="205">TypeTrie::getalternative</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1aa82cb2b6a7055ab37744fc5268729823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>Token::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="332" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="332" bodyend="339"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
        <referencedby refid="classScanner_1a728ec43cf0ee0ec80c595a58d046d9a1" compoundref="scanner_8cc" startline="528" endline="808">Scanner::operator()</referencedby>
        <referencedby refid="classToken_1ac35d2a51c5b3d37a5465a9aee26018e1" compoundref="token_8h" startline="395" endline="414">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a2c88e079ad4b9bc2769f54a37099e56a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::contains</definition>
        <argsstring>(const Datum &amp;d) const</argsstring>
        <name>contains</name>
        <qualifiedname>Token::contains</qualifiedname>
        <param>
          <type>const <ref refid="classDatum" kindref="compound">Datum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="342" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="342" bodyend="345"/>
        <references refid="classDatum_1a30302c3f9b5e9f86fc01021599011a7f" compoundref="datum_8h" startline="164" endline="167">Datum::equals</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <referencedby refid="classStopFunction_1a863876b5ded1356bac44f22242d849df" compoundref="slicontrol_8cc" startline="435" endline="491">StopFunction::execute</referencedby>
        <referencedby refid="classIparsestdinFunction_1a39112ef77e3073f05c4ec4b096cc6e78" compoundref="slicontrol_8cc" startline="619" endline="632">IparsestdinFunction::execute</referencedby>
        <referencedby refid="classParsestdinFunction_1ae0d612cb18cae7263ba533ba4340f8ab" compoundref="slicontrol_8cc" startline="643" endline="657">ParsestdinFunction::execute</referencedby>
        <referencedby refid="classIparseFunction_1a7d59b27525ce59b0612ff5165060ff1a" compoundref="slicontrol_8cc" startline="660" endline="689">IparseFunction::execute</referencedby>
        <referencedby refid="classToken__sFunction_1a815a864867352b958ee64d9ba3062192" compoundref="slicontrol_8cc" startline="1756" endline="1783">Token_sFunction::execute</referencedby>
        <referencedby refid="classToken__isFunction_1a4b8952da312c9b3f2ca5baf6d9dd388a" compoundref="slicontrol_8cc" startline="1796" endline="1819">Token_isFunction::execute</referencedby>
        <referencedby refid="classSymbol__sFunction_1a29d0c6f843a373b1ae04b2d44cd43ae9" compoundref="slicontrol_8cc" startline="1831" endline="1858">Symbol_sFunction::execute</referencedby>
        <referencedby refid="classParser_1a1477eb52ba5b4021f7cc7290ac7d3ab7" compoundref="parser_8cc" startline="73" endline="208">Parser::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a397db8062278fec3e786aa62f9d9baf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>Token::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="348" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="348" bodyend="351"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <referencedby refid="group__DictUtils_1gad4634f6e310641d68ed5efe2a2181e96" compoundref="dictutils_8h" startline="300" endline="310">append_property</referencedby>
        <referencedby refid="group__DictUtils_1ga3597227196f33fec1c8bb2f104ab2c57" compoundref="dictutils_8h" startline="318" endline="327">append_property&lt; std::vector&lt; double &gt; &gt;</referencedby>
        <referencedby refid="group__DictUtils_1gabf555c4346a3aeeae1e0b303beea2031" compoundref="dictutils_8h" startline="336" endline="345">append_property&lt; std::vector&lt; long &gt; &gt;</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1ad5640bc6c249b00cf94e816b7d954318" compoundref="model__manager_8cpp" startline="186" endline="215">nest::ModelManager::copy_model</referencedby>
        <referencedby refid="classKeysFunction_1a3bda2554f94bb7cedad50d09d0680bdf" compoundref="slidict_8cc" startline="878" endline="894">KeysFunction::execute</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a42095f521521f147812163a8b98ee96f" compoundref="connection__manager_8cpp" startline="946" endline="1015">nest::ConnectionManager::get_connections</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</referencedby>
        <referencedby refid="group__DictUtils_1gaeb39309693e8740af1323d58dae4277f" compoundref="dictutils_8cc" startline="26" endline="34">initialize_property_array</referencedby>
        <referencedby refid="group__DictUtils_1gaca5cefae6151612dea3da39adc295c78" compoundref="dictutils_8cc" startline="37" endline="45">initialize_property_doublevector</referencedby>
        <referencedby refid="group__DictUtils_1gadc6126c32cd382bccbcfbc788c6f650f" compoundref="dictutils_8cc" startline="48" endline="56">initialize_property_intvector</referencedby>
        <referencedby refid="group__SLIError_1gaf0e0e8a833e50337078b8dd48df80a53" compoundref="interpret_8cc" startline="718" endline="734">SLIInterpreter::raiseagain</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1a1408ac5b290bdea20840104e19415a99" compoundref="model__manager_8cpp" startline="291" endline="313">nest::ModelManager::set_model_defaults</referencedby>
        <referencedby refid="group__DictUtils_1ga44cdfb140502a5d84d5a798c259f0073" compoundref="dictutils_8h" startline="235" endline="255">updateValue</referencedby>
        <referencedby refid="classToken_1aceac558719bf21e2568771175204c988" compoundref="token_8h" startline="368" endline="371">valid</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a5c191febb25d94083151ea5cb31d7737" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::operator not</definition>
        <argsstring>() const</argsstring>
        <name>operator not</name>
        <qualifiedname>Token::operator not</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="354" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="354" bodyend="357"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
        <definition>Datum * Token::datum</definition>
        <argsstring>() const</argsstring>
        <name>datum</name>
        <qualifiedname>Token::datum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="360" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="360" bodyend="364"/>
        <references refid="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" compoundref="token_8h" startline="162">accessed_</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <referencedby refid="group__DictUtils_1gac6a7e892e132a5b1793361f38f5c3fbe" compoundref="dictutils_8cc" startline="94" endline="112">accumulate_property</referencedby>
        <referencedby refid="classSLIInterpreter_1a7b9a0d7ce52361709895f715e70e58fa" compoundref="interpret_8cc" startline="530" endline="542">SLIInterpreter::addlinkedusermodule</referencedby>
        <referencedby refid="classSLIInterpreter_1a4e2329896e852a91514ee595d968c87a" compoundref="interpret_8cc" startline="491" endline="527">SLIInterpreter::addmodule</referencedby>
        <referencedby refid="group__DictUtils_1gad4634f6e310641d68ed5efe2a2181e96" compoundref="dictutils_8h" startline="300" endline="310">append_property</referencedby>
        <referencedby refid="group__DictUtils_1ga3597227196f33fec1c8bb2f104ab2c57" compoundref="dictutils_8h" startline="318" endline="327">append_property&lt; std::vector&lt; double &gt; &gt;</referencedby>
        <referencedby refid="group__DictUtils_1gabf555c4346a3aeeae1e0b303beea2031" compoundref="dictutils_8h" startline="336" endline="345">append_property&lt; std::vector&lt; long &gt; &gt;</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapFunction_1acc8dffac98f526868409cb670d7cefc3" compoundref="sliarray_8cc" startline="935" endline="951">SLIArrayModule::IMapFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__ivFunction_1a78115ada84ec7863547ae2b0ec5d9988" compoundref="sliarray_8cc" startline="1055" endline="1071">SLIArrayModule::IMap_ivFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__dvFunction_1a4f11dde05e8d8b71b01876b4f38576e9" compoundref="sliarray_8cc" startline="1194" endline="1210">SLIArrayModule::IMap_dvFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapThreadFunction_1a65ccab87b9eb07fbbb6bf9ebf3c55f45" compoundref="sliarray_8cc" startline="1585" endline="1602">SLIArrayModule::IMapThreadFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapIndexedFunction_1a4f3cd79fe85fed0b8bf43b931cc53121" compoundref="sliarray_8cc" startline="1433" endline="1450">SLIArrayModule::IMapIndexedFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Iforall__ivFunction_1a5e582b640723e6b0b1b5e704abf54804" compoundref="sliarray_8cc" startline="3998" endline="4004">SLIArrayModule::Iforall_ivFunction::backtrace</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Iforall__dvFunction_1af1c35d434ddc42e7ba75d46ab02524c2" compoundref="sliarray_8cc" startline="4074" endline="4080">SLIArrayModule::Iforall_dvFunction::backtrace</referencedby>
        <referencedby refid="classIiterateFunction_1a84adf90bdea7b6cdedee224a4a044e25" compoundref="slibuiltins_8cc" startline="54" endline="66">IiterateFunction::backtrace</referencedby>
        <referencedby refid="classIloopFunction_1a330f92673b97cc9f533225a8c1bffd75" compoundref="slibuiltins_8cc" startline="133" endline="145">IloopFunction::backtrace</referencedby>
        <referencedby refid="classIrepeatFunction_1ab040dbc11430bb923a36eb4bd17dbbd3" compoundref="slibuiltins_8cc" startline="185" endline="200">IrepeatFunction::backtrace</referencedby>
        <referencedby refid="classIforFunction_1a1421554c9df020af5c2c4b3cf0f428e3" compoundref="slibuiltins_8cc" startline="252" endline="265">IforFunction::backtrace</referencedby>
        <referencedby refid="classIforallarrayFunction_1a8fc3ddc63d2135eaf886288775b6d61f" compoundref="slibuiltins_8cc" startline="315" endline="321">IforallarrayFunction::backtrace</referencedby>
        <referencedby refid="classIforallindexedarrayFunction_1a531456213b07ddafece59255bce630d2" compoundref="slibuiltins_8cc" startline="353" endline="359">IforallindexedarrayFunction::backtrace</referencedby>
        <referencedby refid="classIforallindexedstringFunction_1aac3f5ffeb497842c98c6e59900a9adec" compoundref="slibuiltins_8cc" startline="362" endline="368">IforallindexedstringFunction::backtrace</referencedby>
        <referencedby refid="classIforallstringFunction_1a455fa1dd605f8e6a83ff015cd7e9421a" compoundref="slibuiltins_8cc" startline="405" endline="411">IforallstringFunction::backtrace</referencedby>
        <referencedby refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" compoundref="conn__parameter_8cpp" startline="36" endline="74">nest::ConnParameter::create</referencedby>
        <referencedby refid="classnest_1_1AbstractLayer_1a268b14297e57188c5f29a44bad369990" compoundref="layer_8cpp" startline="55" endline="160">nest::AbstractLayer::create_layer</referencedby>
        <referencedby refid="classnest_1_1NestModule_1abf42d4f1fe428138838c05157320e16d" compoundref="nestmodule_8cpp" startline="179" endline="284">nest::NestModule::create_mask</referencedby>
        <referencedby refid="classnest_1_1NestModule_1a4c20345ebae75215125fb19fe97e363c" compoundref="nestmodule_8cpp" startline="108" endline="152">nest::NestModule::create_parameter</referencedby>
        <referencedby refid="sliarray_8cc_1ace077a477e0b9e4afdf1db8984ae8528" compoundref="sliarray_8cc" startline="4104" endline="4135">eq_execute</referencedby>
        <referencedby refid="classStrFunction_1a06a7bd24eec85681ab4907ebb18ec909" compoundref="sli__io_8cc" startline="488" endline="532">StrFunction::execute</referencedby>
        <referencedby refid="classFilesystemModule_1_1FileNamesFunction_1adbcab430dfe54063318d6936c7b2ad57" compoundref="filesystem_8cc" startline="75" endline="99">FilesystemModule::FileNamesFunction::execute</referencedby>
        <referencedby refid="classFilesystemModule_1_1CompareFilesFunction_1a136b74903479339705d94f6425bc4c29" compoundref="filesystem_8cc" startline="342" endline="392">FilesystemModule::CompareFilesFunction::execute</referencedby>
        <referencedby refid="classOOSupportModule_1_1CallMemberFunction_1a1d8c0996a6bfc265a390e3cd7ee238c4" compoundref="oosupport_8cc" startline="53" endline="77">OOSupportModule::CallMemberFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Sysexec__aFunction_1a2626fd11344b924a14c41412c3522280" compoundref="processes_8cc" startline="330" endline="373">Processes::Sysexec_aFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1WaitPIDFunction_1a92e4324861fe299280cd1a1410e66d08" compoundref="processes_8cc" startline="376" endline="445">Processes::WaitPIDFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1KillFunction_1ae89ebbe1ab8173610de30647823416e5" compoundref="processes_8cc" startline="449" endline="473">Processes::KillFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Dup2__is__isFunction_1a91699bdb35a66331dac59fd538bc06e7" compoundref="processes_8cc" startline="504" endline="534">Processes::Dup2_is_isFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Dup2__os__osFunction_1a00f6041c263835bcfe825e1c4181b04f" compoundref="processes_8cc" startline="538" endline="562">Processes::Dup2_os_osFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Dup2__is__osFunction_1a274fbfca6798b6f8eadcd782489bc7da" compoundref="processes_8cc" startline="566" endline="596">Processes::Dup2_is_osFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Dup2__os__isFunction_1a694c01127f6de3b098a47e7169fdc10d" compoundref="processes_8cc" startline="600" endline="624">Processes::Dup2_os_isFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1AvailableFunction_1a959990e5efbd5b6c04a3d99d3c58dc37" compoundref="processes_8cc" startline="628" endline="722">Processes::AvailableFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1MkfifoFunction_1a33838c7222fdbed1292e8200ee7d14f1" compoundref="processes_8cc" startline="791" endline="816">Processes::MkfifoFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1SetNonblockFunction_1a858f9ce60266d03a0259c91b47ae082b" compoundref="processes_8cc" startline="837" endline="885">Processes::SetNonblockFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Isatty__isFunction_1a187cc02fd8b473b51588330edbcab137" compoundref="processes_8cc" startline="927" endline="950">Processes::Isatty_isFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1Isatty__osFunction_1a59db8d41b20342d27929b437e754fc49" compoundref="processes_8cc" startline="902" endline="924">Processes::Isatty_osFunction::execute</referencedby>
        <referencedby refid="classMathLinkPutStringFunction_1ae4384a9906a5d544bd9633a317513609" compoundref="sli__io_8cc" startline="68" endline="87">MathLinkPutStringFunction::execute</referencedby>
        <referencedby refid="classXIfstreamFunction_1a478fd1764f9af82080cfbf5cec6a6330" compoundref="sli__io_8cc" startline="103" endline="132">XIfstreamFunction::execute</referencedby>
        <referencedby refid="classIfstreamFunction_1a05fd2998f9551713081f4ab2ad568f71" compoundref="sli__io_8cc" startline="135" endline="177">IfstreamFunction::execute</referencedby>
        <referencedby refid="classOfstreamFunction_1a3bfc2d133d5c7d3174a42f8000681e21" compoundref="sli__io_8cc" startline="194" endline="225">OfstreamFunction::execute</referencedby>
        <referencedby refid="classOfsopenFunction_1a8eaa5c2d3e4e60f0736bf967f22f526f" compoundref="sli__io_8cc" startline="254" endline="306">OfsopenFunction::execute</referencedby>
        <referencedby refid="classPrintFunction_1a07f2d0cea89be29ff4ed7d865be34932" compoundref="sli__io_8cc" startline="553" endline="580">PrintFunction::execute</referencedby>
        <referencedby refid="classPrettyprintFunction_1ae14c18102851a38269b7beca0660b858" compoundref="sli__io_8cc" startline="599" endline="625">PrettyprintFunction::execute</referencedby>
        <referencedby refid="classCloseistreamFunction_1afdc4747eb2c3320eb2d2d9b5588854b9" compoundref="sli__io_8cc" startline="755" endline="794">CloseistreamFunction::execute</referencedby>
        <referencedby refid="classCloseostreamFunction_1a224914523097a41793a5ffc641df69a9" compoundref="sli__io_8cc" startline="798" endline="841">CloseostreamFunction::execute</referencedby>
        <referencedby refid="classFlushFunction_1aaad54bad2651e4ba352fef4dbad61839" compoundref="sli__io_8cc" startline="632" endline="655">FlushFunction::execute</referencedby>
        <referencedby refid="classEndlFunction_1a0719edbb131482b3ee284a0bc0813b42" compoundref="sli__io_8cc" startline="670" endline="695">EndlFunction::execute</referencedby>
        <referencedby refid="classEndsFunction_1af7f52b0807266730c16d66d021ae15ae" compoundref="sli__io_8cc" startline="698" endline="723">EndsFunction::execute</referencedby>
        <referencedby refid="classEatwhiteFunction_1af9c5236c74051eb1073d4c2c2922c22e" compoundref="sli__io_8cc" startline="726" endline="751">EatwhiteFunction::execute</referencedby>
        <referencedby refid="classSetwFunction_1a639444f31137b44ccbc93777209dbc04" compoundref="sli__io_8cc" startline="844" endline="878">SetwFunction::execute</referencedby>
        <referencedby refid="classSetprecisionFunction_1a484f49c8c368728b9a6ce79faa8ad559" compoundref="sli__io_8cc" startline="895" endline="929">SetprecisionFunction::execute</referencedby>
        <referencedby refid="classIOSFixedFunction_1a0e62696df69769d63cfbf5e1764cb623" compoundref="sli__io_8cc" startline="932" endline="957">IOSFixedFunction::execute</referencedby>
        <referencedby refid="classIOSScientificFunction_1a2c692edc9585a09f1c7c82d2046126ed" compoundref="sli__io_8cc" startline="960" endline="985">IOSScientificFunction::execute</referencedby>
        <referencedby refid="classIOSDefaultFunction_1ac94c49cf89969dc55751d5e1f7504021" compoundref="sli__io_8cc" startline="988" endline="1013">IOSDefaultFunction::execute</referencedby>
        <referencedby refid="classIOSShowpointFunction_1adf961a408799f7e7c54141d92b7d060d" compoundref="sli__io_8cc" startline="1016" endline="1040">IOSShowpointFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowpointFunction_1a3678277749e51e41ca2f5ed5a0242f11" compoundref="sli__io_8cc" startline="1043" endline="1067">IOSNoshowpointFunction::execute</referencedby>
        <referencedby refid="classIOSShowbaseFunction_1a9fbf86437d23ed3b6e53badebe79af34" compoundref="sli__io_8cc" startline="1152" endline="1176">IOSShowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowbaseFunction_1a8313a3cd9219b554cfe797fad8861701" compoundref="sli__io_8cc" startline="1179" endline="1203">IOSNoshowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSDecFunction_1a91d1da26c1d6c9d29c509cd3836e25b4" compoundref="sli__io_8cc" startline="1125" endline="1149">IOSDecFunction::execute</referencedby>
        <referencedby refid="classIOSHexFunction_1a28f05670f46b13ecae6772eac22d969a" compoundref="sli__io_8cc" startline="1098" endline="1122">IOSHexFunction::execute</referencedby>
        <referencedby refid="classIOSOctFunction_1ab8338043115f277e44e3ccce57f69b47" compoundref="sli__io_8cc" startline="1071" endline="1095">IOSOctFunction::execute</referencedby>
        <referencedby refid="classIOSLeftFunction_1afa121be648a22eb36e11bdfbc1c93f08" compoundref="sli__io_8cc" startline="1206" endline="1232">IOSLeftFunction::execute</referencedby>
        <referencedby refid="classIOSRightFunction_1a644df4fd3ec022a3afb9aa3968672de2" compoundref="sli__io_8cc" startline="1235" endline="1261">IOSRightFunction::execute</referencedby>
        <referencedby refid="classIOSInternalFunction_1a08e35b114543764590f42756af91d11d" compoundref="sli__io_8cc" startline="1264" endline="1290">IOSInternalFunction::execute</referencedby>
        <referencedby refid="classGetcFunction_1aa41d75645dc805c050a16eb7bed8ec29" compoundref="sli__io_8cc" startline="1305" endline="1332">GetcFunction::execute</referencedby>
        <referencedby refid="classGetsFunction_1a63741e5159275d306a2ef0a6ce879684" compoundref="sli__io_8cc" startline="1345" endline="1374">GetsFunction::execute</referencedby>
        <referencedby refid="classGetlineFunction_1a8771fd53ab7271b139b35cabdfbd1c50" compoundref="sli__io_8cc" startline="1378" endline="1431">GetlineFunction::execute</referencedby>
        <referencedby refid="classIGoodFunction_1a355151f9a47f15fe3fbea1bfeadee5bc" compoundref="sli__io_8cc" startline="1434" endline="1473">IGoodFunction::execute</referencedby>
        <referencedby refid="classIClearFunction_1a990c48cc4088586150df536d873d2d1e" compoundref="sli__io_8cc" startline="1476" endline="1507">IClearFunction::execute</referencedby>
        <referencedby refid="classOClearFunction_1a74b14ccd534240951dc2da4cc0d54aa2" compoundref="sli__io_8cc" startline="1510" endline="1540">OClearFunction::execute</referencedby>
        <referencedby refid="classIFailFunction_1a8667515c9e6a69a7bdcd9e459e6fd21f" compoundref="sli__io_8cc" startline="1543" endline="1583">IFailFunction::execute</referencedby>
        <referencedby refid="classOGoodFunction_1ac51ac4d537d31b55820f339e75b0d612" compoundref="sli__io_8cc" startline="1587" endline="1625">OGoodFunction::execute</referencedby>
        <referencedby refid="classCvx__fFunction_1adedd2e3ca432b55aed8979edce566edd" compoundref="sli__io_8cc" startline="1712" endline="1726">Cvx_fFunction::execute</referencedby>
        <referencedby refid="classIEofFunction_1a96bb999b2b4af2938787791a3091fccd" compoundref="sli__io_8cc" startline="1628" endline="1666">IEofFunction::execute</referencedby>
        <referencedby refid="classOEofFunction_1a3981502575cdf5467ef5e21722a77893" compoundref="sli__io_8cc" startline="1670" endline="1708">OEofFunction::execute</referencedby>
        <referencedby refid="classIn__AvailFunction_1ad7231e2e9bf5d62e9d3c9413979b0b0b" compoundref="sli__io_8cc" startline="1729" endline="1757">In_AvailFunction::execute</referencedby>
        <referencedby refid="classReadDoubleFunction_1a521063b16d93a7f62e201d05b5366e0e" compoundref="sli__io_8cc" startline="1760" endline="1799">ReadDoubleFunction::execute</referencedby>
        <referencedby refid="classReadIntFunction_1ad377d00c3a38ee868885f3dba639a68e" compoundref="sli__io_8cc" startline="1802" endline="1841">ReadIntFunction::execute</referencedby>
        <referencedby refid="classReadWordFunction_1a5a1c212de7f15932e012067115d65930" compoundref="sli__io_8cc" startline="1855" endline="1886">ReadWordFunction::execute</referencedby>
        <referencedby refid="classNametypeFunction_1a8685ee2f3b0d4b7161d5d0c25c794a09" compoundref="sliactions_8cc" startline="51" endline="54">NametypeFunction::execute</referencedby>
        <referencedby refid="classProceduretypeFunction_1abd98f13722933c2823a5514b7c3c4f49" compoundref="sliactions_8cc" startline="57" endline="68">ProceduretypeFunction::execute</referencedby>
        <referencedby refid="classLitproceduretypeFunction_1ac9b12ad35f83838960f76b3377577db6" compoundref="sliactions_8cc" startline="71" endline="81">LitproceduretypeFunction::execute</referencedby>
        <referencedby refid="classFunctiontypeFunction_1a71bde29dfe7a9ab9ac5e6b0c248851e5" compoundref="sliactions_8cc" startline="84" endline="104">FunctiontypeFunction::execute</referencedby>
        <referencedby refid="classCallbacktypeFunction_1a6aac8e93eaf8ed14ae0314dfe2d1b581" compoundref="sliactions_8cc" startline="114" endline="129">CallbacktypeFunction::execute</referencedby>
        <referencedby refid="classTrietypeFunction_1aa617a18f82017e4d01bf5711029d6ad1" compoundref="sliactions_8cc" startline="107" endline="111">TrietypeFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1MapFunction_1abcd9126b3d411d21fabe02dfc723bc50" compoundref="sliarray_8cc" startline="1384" endline="1419">SLIArrayModule::MapFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapFunction_1a6b9a79df67e27e005879279412c2667d" compoundref="sliarray_8cc" startline="959" endline="1053">SLIArrayModule::IMapFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__ivFunction_1a0dac376ff89c51870e22f1053fc88e28" compoundref="sliarray_8cc" startline="1079" endline="1191">SLIArrayModule::IMap_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__dvFunction_1afad30d283cbf7574273f2b97281a21a0" compoundref="sliarray_8cc" startline="1213" endline="1326">SLIArrayModule::IMap_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1MapThreadFunction_1a3378a7ab705dee12fe8e79da158382f7" compoundref="sliarray_8cc" startline="1747" endline="1808">SLIArrayModule::MapThreadFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapThreadFunction_1aa111b125a5651529df48b2ee1b810ff6" compoundref="sliarray_8cc" startline="1610" endline="1722">SLIArrayModule::IMapThreadFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1MapIndexedFunction_1a824c8c7458c5c51d17bad41c0c4e385f" compoundref="sliarray_8cc" startline="1559" endline="1582">SLIArrayModule::MapIndexedFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapIndexedFunction_1abf8d07c9abeede15fbb3d9f28cc84847" compoundref="sliarray_8cc" startline="1458" endline="1555">SLIArrayModule::IMapIndexedFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1RangeFunction_1a348849a5076cd31741c5b6b0ec52c127" compoundref="sliarray_8cc" startline="59" endline="228">SLIArrayModule::RangeFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1ArraystoreFunction_1ae6c534234c0cd067341be3836846f05f" compoundref="sliarray_8cc" startline="855" endline="889">SLIArrayModule::ArraystoreFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1ArrayloadFunction_1ad6f6b784dc88e565f2c6eb44ea396590" compoundref="sliarray_8cc" startline="796" endline="826">SLIArrayModule::ArrayloadFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1ReverseFunction_1aae91230c93e3b78835696dc4d360f7bd" compoundref="sliarray_8cc" startline="415" endline="424">SLIArrayModule::ReverseFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1RotateFunction_1a255d720c6adb134c24a4e566234bf9db" compoundref="sliarray_8cc" startline="427" endline="438">SLIArrayModule::RotateFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1FlattenFunction_1a3afe87cf35012c4f0d828a3e23e2008d" compoundref="sliarray_8cc" startline="441" endline="526">SLIArrayModule::FlattenFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1TransposeFunction_1ac93a9da1e845320bc9515615cc03d811" compoundref="sliarray_8cc" startline="642" endline="709">SLIArrayModule::TransposeFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1PartitionFunction_1a26ee831b00be9ba77b57957f3b52ac55" compoundref="sliarray_8cc" startline="713" endline="769">SLIArrayModule::PartitionFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1ValidFunction_1ad8f0d39477e63f218f514d3833910e43" compoundref="sliarray_8cc" startline="1422" endline="1430">SLIArrayModule::ValidFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Put__a__a__tFunction_1a8ef92650f869aefb264bd341104c2884" compoundref="sliarray_8cc" startline="1813" endline="1897">SLIArrayModule::Put_a_a_tFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1AreaFunction_1a3a06a665d8c098da30320769540ebd6c" compoundref="sliarray_8cc" startline="2041" endline="2137">SLIArrayModule::AreaFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Area2Function_1abae669ae9be29d1cfb2ddf9eb2b30763" compoundref="sliarray_8cc" startline="2305" endline="2402">SLIArrayModule::Area2Function::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Cv1dFunction_1ae89a050ea858ee1da0e242a454818c9d" compoundref="sliarray_8cc" startline="2427" endline="2472">SLIArrayModule::Cv1dFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Cv2dFunction_1a53214436a73b79f8756b441f48497194" compoundref="sliarray_8cc" startline="2498" endline="2536">SLIArrayModule::Cv2dFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1GetMaxFunction_1a12cfde41cb2810be41a7c9cc27afb72f" compoundref="sliarray_8cc" startline="2551" endline="2599">SLIArrayModule::GetMaxFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1GetMinFunction_1a03f1707a3e081dc14a0eed642bdbcf29" compoundref="sliarray_8cc" startline="2613" endline="2662">SLIArrayModule::GetMinFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1DoubleVector2ArrayFunction_1a185951b1be4a3e38074b1d5354a1cf00" compoundref="sliarray_8cc" startline="3800" endline="3817">SLIArrayModule::DoubleVector2ArrayFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IntVector2ArrayFunction_1ab9389783749f512c1be148ff37830d80" compoundref="sliarray_8cc" startline="2929" endline="2946">SLIArrayModule::IntVector2ArrayFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Add__iv__ivFunction_1a18d3df7edaa78762d90efcff93f40bf4" compoundref="sliarray_8cc" startline="2949" endline="2984">SLIArrayModule::Add_iv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Add__i__ivFunction_1abb1d8c2a987d6b4ed260cb9736c77909" compoundref="sliarray_8cc" startline="2987" endline="3018">SLIArrayModule::Add_i_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Neg__ivFunction_1af39627c581fe5b5eeace2bbbb8551c29" compoundref="sliarray_8cc" startline="3021" endline="3045">SLIArrayModule::Neg_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Sub__iv__ivFunction_1a8503a5b4e904de863d0637aee925d5b2" compoundref="sliarray_8cc" startline="3048" endline="3083">SLIArrayModule::Sub_iv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Mul__iv__ivFunction_1acb9078bfd4b7bf835104c46468df994c" compoundref="sliarray_8cc" startline="3086" endline="3121">SLIArrayModule::Mul_iv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Mul__i__ivFunction_1a3ba4905608939cfb5da34047807fbac9" compoundref="sliarray_8cc" startline="3125" endline="3156">SLIArrayModule::Mul_i_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Mul__d__ivFunction_1ac29d3d68b4e09bae96e16a3aa5ea8e0e" compoundref="sliarray_8cc" startline="3159" endline="3190">SLIArrayModule::Mul_d_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Div__iv__ivFunction_1a62ea47b8cd8b42d22166a43f88217967" compoundref="sliarray_8cc" startline="3193" endline="3236">SLIArrayModule::Div_iv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Add__dv__dvFunction_1ac14df1b76137565c1442470c40e03550" compoundref="sliarray_8cc" startline="3262" endline="3297">SLIArrayModule::Add_dv_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Add__d__dvFunction_1a19cb9ed9a7372250986194164850fb67" compoundref="sliarray_8cc" startline="3338" endline="3370">SLIArrayModule::Add_d_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Sub__dv__dvFunction_1a3f734a69a48b080dd6f2f8cea2130cff" compoundref="sliarray_8cc" startline="3300" endline="3335">SLIArrayModule::Sub_dv_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Mul__dv__dvFunction_1accf09e7bf77df23d652e9a45460dc0e0" compoundref="sliarray_8cc" startline="3473" endline="3508">SLIArrayModule::Mul_dv_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Mul__d__dvFunction_1a81c8731b7ecf55d38cab3404c5bb4f96" compoundref="sliarray_8cc" startline="3374" endline="3406">SLIArrayModule::Mul_d_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Div__dv__dvFunction_1aa646c236981a12f71d5ecb98c6b82769" compoundref="sliarray_8cc" startline="3511" endline="3554">SLIArrayModule::Div_dv_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Neg__dvFunction_1a0fb33979b9aa11dff76c2d9b7126681f" compoundref="sliarray_8cc" startline="3410" endline="3434">SLIArrayModule::Neg_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Inv__dvFunction_1abcbcb2745ef331f9668d0948432751e7" compoundref="sliarray_8cc" startline="3438" endline="3469">SLIArrayModule::Inv_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Length__dvFunction_1aca721faeeac77bd462a9d360cd53934d" compoundref="sliarray_8cc" startline="3557" endline="3576">SLIArrayModule::Length_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Length__ivFunction_1a0c8a1a18c4192803e6052458f4c42215" compoundref="sliarray_8cc" startline="3239" endline="3258">SLIArrayModule::Length_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Get__iv__iFunction_1ab366f5eb8812c57b42d0c823374535bf" compoundref="sliarray_8cc" startline="3612" endline="3642">SLIArrayModule::Get_iv_iFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Get__iv__ivFunction_1a710adf31700444f81ecab6aec9a13375" compoundref="sliarray_8cc" startline="3645" endline="3682">SLIArrayModule::Get_iv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Get__dv__ivFunction_1a4679ac9613c72676b87dc2a9c3f66f07" compoundref="sliarray_8cc" startline="3685" endline="3722">SLIArrayModule::Get_dv_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Get__dv__iFunction_1a497f17488fdcf147f5b9ca33a90657b2" compoundref="sliarray_8cc" startline="3579" endline="3609">SLIArrayModule::Get_dv_iFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Put__dv__i__dFunction_1af6403dde52bec5f9d22b664c2517c0e9" compoundref="sliarray_8cc" startline="3726" endline="3762">SLIArrayModule::Put_dv_i_dFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Put__iv__i__iFunction_1a4f832a1a91cba516cb54b6f9eb4e08ed" compoundref="sliarray_8cc" startline="3765" endline="3797">SLIArrayModule::Put_iv_i_iFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Zeros__ivFunction_1a62b047c7259ce7595e8aa0ec34472ff9" compoundref="sliarray_8cc" startline="3870" endline="3892">SLIArrayModule::Zeros_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Zeros__dvFunction_1aa3be8ae73fe05d963bf462f6a0e9d14d" compoundref="sliarray_8cc" startline="3820" endline="3842">SLIArrayModule::Zeros_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Ones__dvFunction_1a017e285c4e37517c3135380bb50b7488" compoundref="sliarray_8cc" startline="3845" endline="3867">SLIArrayModule::Ones_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Ones__ivFunction_1a5d29138567ba47bcecd87a91d249cbbe" compoundref="sliarray_8cc" startline="3895" endline="3917">SLIArrayModule::Ones_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1ArangeFunction_1af6470ccd164e5e09e3893495205a9563" compoundref="sliarray_8cc" startline="232" endline="411">SLIArrayModule::ArangeFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Forall__ivFunction_1a572ace205ee02c80ef4a22f6a8624465" compoundref="sliarray_8cc" startline="3932" endline="3949">SLIArrayModule::Forall_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Forall__dvFunction_1a5d01e9d33562d7c7ac581dfce17af1e1" compoundref="sliarray_8cc" startline="4007" endline="4024">SLIArrayModule::Forall_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Iforall__ivFunction_1ae602e4241a67e74347349f38bd502ea1" compoundref="sliarray_8cc" startline="3956" endline="3994">SLIArrayModule::Iforall_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1Iforall__dvFunction_1a136f572ffc98f715236af13dd5fa2f02" compoundref="sliarray_8cc" startline="4032" endline="4070">SLIArrayModule::Iforall_dvFunction::execute</referencedby>
        <referencedby refid="classIsetcallbackFunction_1a8582d96366b149693ac2d1a386bf76b1" compoundref="slibuiltins_8cc" startline="44" endline="51">IsetcallbackFunction::execute</referencedby>
        <referencedby refid="classIiterateFunction_1a78d109942e0956bc6e9273b81e44238d" compoundref="slibuiltins_8cc" startline="69" endline="105">IiterateFunction::execute</referencedby>
        <referencedby refid="classIloopFunction_1a4c2403bbde76dba6bfc36f5593371722" compoundref="slibuiltins_8cc" startline="108" endline="130">IloopFunction::execute</referencedby>
        <referencedby refid="classIrepeatFunction_1a33ccc3d9adf3510f43ab5bda2192f32f" compoundref="slibuiltins_8cc" startline="154" endline="182">IrepeatFunction::execute</referencedby>
        <referencedby refid="classIforFunction_1af3a1e1c855088b809ec5e81f7640b2ab" compoundref="slibuiltins_8cc" startline="208" endline="249">IforFunction::execute</referencedby>
        <referencedby refid="classIforallarrayFunction_1af51a6e3cfb8ca6dd88b2f96e5010aa62" compoundref="slibuiltins_8cc" startline="273" endline="311">IforallarrayFunction::execute</referencedby>
        <referencedby refid="classIforallindexedarrayFunction_1a606dc49afac697692b360121b1b1eb8f" compoundref="slibuiltins_8cc" startline="330" endline="350">IforallindexedarrayFunction::execute</referencedby>
        <referencedby refid="classIforallindexedstringFunction_1af26a406c6024773901e8ce42c0fd8d65" compoundref="slibuiltins_8cc" startline="376" endline="402">IforallindexedstringFunction::execute</referencedby>
        <referencedby refid="classIforallstringFunction_1a18c3246cb5b985e82b2ce7af6589224d" compoundref="slibuiltins_8cc" startline="418" endline="442">IforallstringFunction::execute</referencedby>
        <referencedby refid="classLoopFunction_1ac6ada63adedd4667359f6b70a7001e08" compoundref="slicontrol_8cc" startline="144" endline="164">LoopFunction::execute</referencedby>
        <referencedby refid="classIfFunction_1a8d6b9199a537b999adafd1957535712c" compoundref="slicontrol_8cc" startline="215" endline="244">IfFunction::execute</referencedby>
        <referencedby refid="classIfelseFunction_1afdad3f2f84d8ef76d6e1f1717f1dd20d" compoundref="slicontrol_8cc" startline="268" endline="307">IfelseFunction::execute</referencedby>
        <referencedby refid="classRepeatFunction_1a8f12f2f2fe9d2456bdb668ebc4b0101f" compoundref="slicontrol_8cc" startline="331" endline="366">RepeatFunction::execute</referencedby>
        <referencedby refid="classIparseFunction_1a7d59b27525ce59b0612ff5165060ff1a" compoundref="slicontrol_8cc" startline="660" endline="689">IparseFunction::execute</referencedby>
        <referencedby refid="classDefFunction_1a8e3f4d2c5f3ca9fa95befc137f6c61bc" compoundref="slicontrol_8cc" startline="692" endline="719">DefFunction::execute</referencedby>
        <referencedby refid="classSetFunction_1a6890f47ecb8e5b4798446bd6e8a855cf" compoundref="slicontrol_8cc" startline="749" endline="774">SetFunction::execute</referencedby>
        <referencedby refid="classLoadFunction_1a931df53d863c155e65d52e27a31175af" compoundref="slicontrol_8cc" startline="789" endline="814">LoadFunction::execute</referencedby>
        <referencedby refid="classLookupFunction_1a18c6d646776c16458909272a80ce988c" compoundref="slicontrol_8cc" startline="831" endline="860">LookupFunction::execute</referencedby>
        <referencedby refid="classForFunction_1aa7dc8853b697ba747246c81d0e450d8f" compoundref="slicontrol_8cc" startline="894" endline="909">ForFunction::execute</referencedby>
        <referencedby refid="classForall__aFunction_1a2c5428ef925360bf22b41ac1aff70682" compoundref="slicontrol_8cc" startline="972" endline="990">Forall_aFunction::execute</referencedby>
        <referencedby refid="classForallindexed__aFunction_1ad301908bf986c2a91da7cac596821899" compoundref="slicontrol_8cc" startline="1032" endline="1051">Forallindexed_aFunction::execute</referencedby>
        <referencedby refid="classForallindexed__sFunction_1aecfa36bc795d180edcc12a9269fe2400" compoundref="slicontrol_8cc" startline="1059" endline="1078">Forallindexed_sFunction::execute</referencedby>
        <referencedby refid="classForall__sFunction_1ab78ede924a50fd08319e2819ffdf34ed" compoundref="slicontrol_8cc" startline="1086" endline="1105">Forall_sFunction::execute</referencedby>
        <referencedby refid="classRaiseerrorFunction_1a8acdd8bd27d26de1e7a83ea2bc69a856" compoundref="slicontrol_8cc" startline="1157" endline="1179">RaiseerrorFunction::execute</referencedby>
        <referencedby refid="classToken__sFunction_1a815a864867352b958ee64d9ba3062192" compoundref="slicontrol_8cc" startline="1756" endline="1783">Token_sFunction::execute</referencedby>
        <referencedby refid="classToken__isFunction_1a4b8952da312c9b3f2ca5baf6d9dd388a" compoundref="slicontrol_8cc" startline="1796" endline="1819">Token_isFunction::execute</referencedby>
        <referencedby refid="classSymbol__sFunction_1a29d0c6f843a373b1ae04b2d44cd43ae9" compoundref="slicontrol_8cc" startline="1831" endline="1858">Symbol_sFunction::execute</referencedby>
        <referencedby refid="classSetGuardFunction_1ad4e0723ec6968ad58fedb10623de38ae" compoundref="slicontrol_8cc" startline="1880" endline="1888">SetGuardFunction::execute</referencedby>
        <referencedby refid="classMessageFunction_1a35c4bb1201f075b46b948141acd06fab" compoundref="slicontrol_8cc" startline="2076" endline="2092">MessageFunction::execute</referencedby>
        <referencedby refid="classSetVerbosityFunction_1a3d35f5157556a0de39957d5aba34c849" compoundref="slicontrol_8cc" startline="2036" endline="2044">SetVerbosityFunction::execute</referencedby>
        <referencedby refid="classGet__aFunction_1ab72dabcd68d607a41a839744fb566687" compoundref="slidata_8cc" startline="58" endline="80">Get_aFunction::execute</referencedby>
        <referencedby refid="classGet__a__aFunction_1a32fd53efaba4706a8c842b9cf318015c" compoundref="slidata_8cc" startline="83" endline="147">Get_a_aFunction::execute</referencedby>
        <referencedby refid="classGet__pFunction_1af9801475d06ac33c5c0f072d3136dccb" compoundref="slidata_8cc" startline="150" endline="172">Get_pFunction::execute</referencedby>
        <referencedby refid="classGet__lpFunction_1aff9f8da214a91093ab1ef79a9a5a6b35" compoundref="slidata_8cc" startline="175" endline="196">Get_lpFunction::execute</referencedby>
        <referencedby refid="classAppend__aFunction_1a909cf04beb43e1b9a857e6dcad7f503e" compoundref="slidata_8cc" startline="199" endline="211">Append_aFunction::execute</referencedby>
        <referencedby refid="classAppend__pFunction_1aa21826307c0abbbc6ed4e6ee53727974" compoundref="slidata_8cc" startline="214" endline="226">Append_pFunction::execute</referencedby>
        <referencedby refid="classAppend__sFunction_1af6eaa8459abf96d54c9961a260354069" compoundref="slidata_8cc" startline="243" endline="258">Append_sFunction::execute</referencedby>
        <referencedby refid="classPrepend__aFunction_1a3db01620ea9b522adaece76825479153" compoundref="slidata_8cc" startline="487" endline="501">Prepend_aFunction::execute</referencedby>
        <referencedby refid="classPrepend__pFunction_1a1c42be5468e517bed9adbce723307d7b" compoundref="slidata_8cc" startline="504" endline="518">Prepend_pFunction::execute</referencedby>
        <referencedby refid="classPrepend__sFunction_1a611581c55782b8ce215ca75021187e6a" compoundref="slidata_8cc" startline="422" endline="437">Prepend_sFunction::execute</referencedby>
        <referencedby refid="classJoin__sFunction_1a4413051e31835331911998922d15a990" compoundref="slidata_8cc" startline="276" endline="296">Join_sFunction::execute</referencedby>
        <referencedby refid="classJoin__aFunction_1a4cc63bce20aefdfabdf80d535a6bf44d" compoundref="slidata_8cc" startline="299" endline="314">Join_aFunction::execute</referencedby>
        <referencedby refid="classJoin__pFunction_1a7714e09a02a219520660a24ae002b45e" compoundref="slidata_8cc" startline="317" endline="332">Join_pFunction::execute</referencedby>
        <referencedby refid="classInsert__sFunction_1ab81c4e533fa3fb0f55242f3472dd3e9b" compoundref="slidata_8cc" startline="348" endline="369">Insert_sFunction::execute</referencedby>
        <referencedby refid="classInsert__aFunction_1a8f4576e27c1c9e8fe7fc827fc1d4e129" compoundref="slidata_8cc" startline="440" endline="461">Insert_aFunction::execute</referencedby>
        <referencedby refid="classInsertElement__sFunction_1a0ff1e08436fc151eeb313f576f94741f" compoundref="slidata_8cc" startline="384" endline="405">InsertElement_sFunction::execute</referencedby>
        <referencedby refid="classInsertElement__aFunction_1a6aef5b3335eeb39d4a4be79385d5af5c" compoundref="slidata_8cc" startline="464" endline="484">InsertElement_aFunction::execute</referencedby>
        <referencedby refid="classReplace__sFunction_1a5a96e4144667a33ddaf3422477e0383b" compoundref="slidata_8cc" startline="536" endline="565">Replace_sFunction::execute</referencedby>
        <referencedby refid="classReplace__aFunction_1a15fcfc1caa39511ed24be5da4a4fe30b" compoundref="slidata_8cc" startline="568" endline="597">Replace_aFunction::execute</referencedby>
        <referencedby refid="classErase__sFunction_1ab5f76080bc0e0aec6f320ea0d8116d43" compoundref="slidata_8cc" startline="614" endline="642">Erase_sFunction::execute</referencedby>
        <referencedby refid="classErase__aFunction_1aca9f92e76bdedb8a913b2821c395cdb8" compoundref="slidata_8cc" startline="645" endline="673">Erase_aFunction::execute</referencedby>
        <referencedby refid="classErase__pFunction_1a0bd107272ebdce78a87183d4fa926ae6" compoundref="slidata_8cc" startline="676" endline="704">Erase_pFunction::execute</referencedby>
        <referencedby refid="classLength__sFunction_1a77af2e522b7d7173093371176bb241d0" compoundref="slidata_8cc" startline="815" endline="827">Length_sFunction::execute</referencedby>
        <referencedby refid="classLength__aFunction_1a4067e0663c6f07681fd4505f432cc5dc" compoundref="slidata_8cc" startline="841" endline="853">Length_aFunction::execute</referencedby>
        <referencedby refid="classLength__pFunction_1a3fbef27346e6068d9025e534fb8b2529" compoundref="slidata_8cc" startline="867" endline="879">Length_pFunction::execute</referencedby>
        <referencedby refid="classLength__lpFunction_1a8544761b717fb2efc3653b29f1fdb9c6" compoundref="slidata_8cc" startline="897" endline="909">Length_lpFunction::execute</referencedby>
        <referencedby refid="classCapacity__aFunction_1a40d5c6f0e402941d552ebdf74a1b686a" compoundref="slidata_8cc" startline="926" endline="938">Capacity_aFunction::execute</referencedby>
        <referencedby refid="classSize__aFunction_1a24d99e3d2b99a21cf3cc9145a198e9c1" compoundref="slidata_8cc" startline="953" endline="965">Size_aFunction::execute</referencedby>
        <referencedby refid="classReserve__aFunction_1ae27d33adb67654437f80324e39c0cb99" compoundref="slidata_8cc" startline="977" endline="996">Reserve_aFunction::execute</referencedby>
        <referencedby refid="classResize__aFunction_1ab3d3bb6094aab8c4e22c668ad45d4c58" compoundref="slidata_8cc" startline="1012" endline="1031">Resize_aFunction::execute</referencedby>
        <referencedby refid="classEmpty__aFunction_1ae353097dbb58488593ff15802de161ca" compoundref="slidata_8cc" startline="1034" endline="1052">Empty_aFunction::execute</referencedby>
        <referencedby refid="classReferences__aFunction_1ab12d0a827c0a4fbeefb6be4a2a691ba9" compoundref="slidata_8cc" startline="1055" endline="1068">References_aFunction::execute</referencedby>
        <referencedby refid="classShrink__aFunction_1a759e9af12a5f43910584ee43fc0ab623" compoundref="slidata_8cc" startline="1078" endline="1096">Shrink_aFunction::execute</referencedby>
        <referencedby refid="classCapacity__sFunction_1a82f776c834d6b598c3f35e0ac5c8d8e3" compoundref="slidata_8cc" startline="1099" endline="1111">Capacity_sFunction::execute</referencedby>
        <referencedby refid="classSize__sFunction_1a981246c0fa24ecae45be725431be5159" compoundref="slidata_8cc" startline="1114" endline="1126">Size_sFunction::execute</referencedby>
        <referencedby refid="classReserve__sFunction_1adec0e7c67b3105018a91b697c9b20f26" compoundref="slidata_8cc" startline="1129" endline="1149">Reserve_sFunction::execute</referencedby>
        <referencedby refid="classResize__sFunction_1a38ec46696152cb8a790647c439d5770b" compoundref="slidata_8cc" startline="1152" endline="1172">Resize_sFunction::execute</referencedby>
        <referencedby refid="classEmpty__sFunction_1a46e61f95fdff445f21b3030ea291223a" compoundref="slidata_8cc" startline="1176" endline="1194">Empty_sFunction::execute</referencedby>
        <referencedby refid="classGetinterval__sFunction_1a2f664c1725f2a9f623b7cd1d5fbfad91" compoundref="slidata_8cc" startline="1223" endline="1251">Getinterval_sFunction::execute</referencedby>
        <referencedby refid="classGetinterval__aFunction_1ab0eedf36879d2c8d0b93d1e28b2e4fa4" compoundref="slidata_8cc" startline="1255" endline="1284">Getinterval_aFunction::execute</referencedby>
        <referencedby refid="classCvx__aFunction_1af2bbcd7b524eeb6308f0d5493e9cb807" compoundref="slidata_8cc" startline="1288" endline="1299">Cvx_aFunction::execute</referencedby>
        <referencedby refid="classCvlit__nFunction_1a806be6bd17e5fec8fbcfa2ac78d1e377" compoundref="slidata_8cc" startline="1302" endline="1311">Cvlit_nFunction::execute</referencedby>
        <referencedby refid="classCvlit__pFunction_1ad248eb2534475a2135d578d9da633ff3" compoundref="slidata_8cc" startline="1338" endline="1347">Cvlit_pFunction::execute</referencedby>
        <referencedby refid="classCvlp__pFunction_1aebb8e56c7d99493139a374fa09751367" compoundref="slidata_8cc" startline="1353" endline="1363">Cvlp_pFunction::execute</referencedby>
        <referencedby refid="classCvn__sFunction_1ac5d8d6bfe59a37cf211724165726e266" compoundref="slidata_8cc" startline="1326" endline="1335">Cvn_sFunction::execute</referencedby>
        <referencedby refid="classCvn__lFunction_1ae1e3c2c4c519f637a28d4420cb5df0da" compoundref="slidata_8cc" startline="1314" endline="1323">Cvn_lFunction::execute</referencedby>
        <referencedby refid="classCvi__sFunction_1a9ae5d4fc2d8670968d34f8f72bc90aea" compoundref="slidata_8cc" startline="1367" endline="1376">Cvi_sFunction::execute</referencedby>
        <referencedby refid="classCvd__sFunction_1ab094f06ea6f7d5184df21eb49e333b32" compoundref="slidata_8cc" startline="1380" endline="1389">Cvd_sFunction::execute</referencedby>
        <referencedby refid="classGet__sFunction_1ad35c2fe3c47217904b98905094147d6c" compoundref="slidata_8cc" startline="1393" endline="1416">Get_sFunction::execute</referencedby>
        <referencedby refid="classPut__sFunction_1a7159845d8b8b2d06b155fdf845605163" compoundref="slidata_8cc" startline="708" endline="729">Put_sFunction::execute</referencedby>
        <referencedby refid="classPut__aFunction_1a3e1126cd8a259134a0a0da47b765b9fd" compoundref="slidata_8cc" startline="733" endline="753">Put_aFunction::execute</referencedby>
        <referencedby refid="classPut__pFunction_1abcd8cb3da4e7f6ab7a8ac9a302fae5c3" compoundref="slidata_8cc" startline="757" endline="777">Put_pFunction::execute</referencedby>
        <referencedby refid="classPut__lpFunction_1a23d24458374166a187457ecd6fb52445" compoundref="slidata_8cc" startline="781" endline="801">Put_lpFunction::execute</referencedby>
        <referencedby refid="classSearch__sFunction_1a3e2924ffacca427324a4b37999a38763" compoundref="slidata_8cc" startline="1431" endline="1463">Search_sFunction::execute</referencedby>
        <referencedby refid="classSearch__aFunction_1ab6f651211a05312b5767c75292651b76" compoundref="slidata_8cc" startline="1466" endline="1498">Search_aFunction::execute</referencedby>
        <referencedby refid="classIrepeatanyFunction_1a29162744029dd334e871466d25f9cc97" compoundref="slidata_8cc" startline="1507" endline="1521">IrepeatanyFunction::execute</referencedby>
        <referencedby refid="classDictputFunction_1a3ea668cab2ee261c382d6775ef34b635" compoundref="slidict_8cc" startline="100" endline="136">DictputFunction::execute</referencedby>
        <referencedby refid="classDictgetFunction_1a519110e233b1d80161bbd9b95e0a5b5d" compoundref="slidict_8cc" startline="167" endline="198">DictgetFunction::execute</referencedby>
        <referencedby refid="classDictbeginFunction_1a3fa95279ddb7e1dd1d93b40d1c648345" compoundref="slidict_8cc" startline="449" endline="472">DictbeginFunction::execute</referencedby>
        <referencedby refid="classDictinfoFunction_1a50aec73b84c4770a948c1ff1688e7477" compoundref="slidict_8cc" startline="229" endline="241">DictinfoFunction::execute</referencedby>
        <referencedby refid="classDicttopinfoFunction_1ad2ba8ae6f359feac029c196231ce1602" compoundref="slidict_8cc" startline="392" endline="402">DicttopinfoFunction::execute</referencedby>
        <referencedby refid="classWhoFunction_1a04ed295d22dc88f6f39aa1287d8070fc" compoundref="slidict_8cc" startline="421" endline="431">WhoFunction::execute</referencedby>
        <referencedby refid="classDictconstructFunction_1a4a714112e05b609e5b63b08070d6c619" compoundref="slidict_8cc" startline="629" endline="678">DictconstructFunction::execute</referencedby>
        <referencedby refid="classLength__dFunction_1ae039e5cbc9bc5bc31eb31ed9373e3ed2" compoundref="slidict_8cc" startline="258" endline="269">Length_dFunction::execute</referencedby>
        <referencedby refid="classEmpty__DFunction_1a2df994df311760209041e957ca3aa3c1" compoundref="slidict_8cc" startline="272" endline="284">Empty_DFunction::execute</referencedby>
        <referencedby refid="classCleardictFunction_1a3f46e75ae430cdd923fbfc827b514c53" compoundref="slidict_8cc" startline="719" endline="733">CleardictFunction::execute</referencedby>
        <referencedby refid="classClonedictFunction_1aeefdd73d2b1d15cb3e512caba56b2fb2" compoundref="slidict_8cc" startline="759" endline="767">ClonedictFunction::execute</referencedby>
        <referencedby refid="classUndefFunction_1a1e1950db6e4003a73d5f5a0bab8d9a00" compoundref="slidict_8cc" startline="544" endline="581">UndefFunction::execute</referencedby>
        <referencedby refid="classKnownFunction_1a370ff2065291c06b110507618dc27d78" compoundref="slidict_8cc" startline="697" endline="708">KnownFunction::execute</referencedby>
        <referencedby refid="classCva__dFunction_1a7dece55010db0710d0ac6876417f4037" compoundref="slidict_8cc" startline="827" endline="844">Cva_dFunction::execute</referencedby>
        <referencedby refid="classKeysFunction_1a3bda2554f94bb7cedad50d09d0680bdf" compoundref="slidict_8cc" startline="878" endline="894">KeysFunction::execute</referencedby>
        <referencedby refid="classValuesFunction_1adcbf9b5fa9231a27c58562f4495be132" compoundref="slidict_8cc" startline="928" endline="942">ValuesFunction::execute</referencedby>
        <referencedby refid="classRestoredstackFunction_1a8eff6cb578d0ce1dbe608321e3c29197" compoundref="slidict_8cc" startline="945" endline="970">RestoredstackFunction::execute</referencedby>
        <referencedby refid="classSLIgraphics_1_1ReadPGMFunction_1a017bd3640dae3912781d59cb88591e02" compoundref="sligraphics_8cc" startline="70" endline="116">SLIgraphics::ReadPGMFunction::execute</referencedby>
        <referencedby refid="classSLIgraphics_1_1WritePGMFunction_1a5df725032dbc769cd58f9a1031a9225e" compoundref="sligraphics_8cc" startline="261" endline="358">SLIgraphics::WritePGMFunction::execute</referencedby>
        <referencedby refid="classAdd__diFunction_1adc62afb79a89fbb6d4bc00881b78708c" compoundref="slimath_8cc" startline="96" endline="107">Add_diFunction::execute</referencedby>
        <referencedby refid="classAdd__iiFunction_1ac7f7102cef229bd5c768272693cfee50" compoundref="slimath_8cc" startline="70" endline="80">Add_iiFunction::execute</referencedby>
        <referencedby refid="classAdd__idFunction_1a8a3562e4a94fa7c32966b1614f767fa7" compoundref="slimath_8cc" startline="110" endline="122">Add_idFunction::execute</referencedby>
        <referencedby refid="classAdd__ddFunction_1a7878196d8bacb3ca68f3fad8f831fd3f" compoundref="slimath_8cc" startline="83" endline="93">Add_ddFunction::execute</referencedby>
        <referencedby refid="classSub__diFunction_1a5d1242d6b59e9eedad38ccd1242af939" compoundref="slimath_8cc" startline="151" endline="161">Sub_diFunction::execute</referencedby>
        <referencedby refid="classSub__iiFunction_1ab806b49fda226e2bd5b35448bc364ca8" compoundref="slimath_8cc" startline="125" endline="135">Sub_iiFunction::execute</referencedby>
        <referencedby refid="classSub__idFunction_1ae99e13f3f8ff597e9a96ec8d88f3bc22" compoundref="slimath_8cc" startline="164" endline="175">Sub_idFunction::execute</referencedby>
        <referencedby refid="classSub__ddFunction_1a2ee22c72d70d3ffc4650aa9444737448" compoundref="slimath_8cc" startline="138" endline="148">Sub_ddFunction::execute</referencedby>
        <referencedby refid="classMul__diFunction_1a5f9f06582ee189889fa6f8ed0163b667" compoundref="slimath_8cc" startline="204" endline="214">Mul_diFunction::execute</referencedby>
        <referencedby refid="classMul__iiFunction_1ab4868240a168126183652d955a397c1d" compoundref="slimath_8cc" startline="178" endline="188">Mul_iiFunction::execute</referencedby>
        <referencedby refid="classMul__idFunction_1a5870d318fa39a22ed85eb9b3949aa64c" compoundref="slimath_8cc" startline="217" endline="228">Mul_idFunction::execute</referencedby>
        <referencedby refid="classMul__ddFunction_1a9a71f82b7139462f6a59d2d4fa4c274e" compoundref="slimath_8cc" startline="191" endline="201">Mul_ddFunction::execute</referencedby>
        <referencedby refid="classDiv__diFunction_1ad076751d8287b98805db1924ab99e4d1" compoundref="slimath_8cc" startline="308" endline="325">Div_diFunction::execute</referencedby>
        <referencedby refid="classDiv__iiFunction_1a6add7a24f6908dbe4d1b192bc629cf1f" compoundref="slimath_8cc" startline="231" endline="248">Div_iiFunction::execute</referencedby>
        <referencedby refid="classDiv__idFunction_1a798f8d1eb5b3462c3394ec3363677ff3" compoundref="slimath_8cc" startline="328" endline="346">Div_idFunction::execute</referencedby>
        <referencedby refid="classDiv__ddFunction_1accc371b7bb3b7b4460352d9ce8cb3615" compoundref="slimath_8cc" startline="288" endline="305">Div_ddFunction::execute</referencedby>
        <referencedby refid="classMod__iiFunction_1a3ba11e0a5bedbb08e32efb603c039d93" compoundref="slimath_8cc" startline="258" endline="285">Mod_iiFunction::execute</referencedby>
        <referencedby refid="classSin__dFunction_1aae315b892f24a81fa5e871a2590adc4e" compoundref="slimath_8cc" startline="363" endline="372">Sin_dFunction::execute</referencedby>
        <referencedby refid="classAsin__dFunction_1adc1230bfc4bb2fcb0615fa823d6136a6" compoundref="slimath_8cc" startline="389" endline="397">Asin_dFunction::execute</referencedby>
        <referencedby refid="classCos__dFunction_1a7d9d4f60e5aef9fdea9b1d78d24729ad" compoundref="slimath_8cc" startline="415" endline="423">Cos_dFunction::execute</referencedby>
        <referencedby refid="classAcos__dFunction_1a1bbe3b831b8b7273e0132455b7d99a82" compoundref="slimath_8cc" startline="440" endline="447">Acos_dFunction::execute</referencedby>
        <referencedby refid="classExp__dFunction_1aa0425682a4917c78dcd8eed7c775584d" compoundref="slimath_8cc" startline="461" endline="469">Exp_dFunction::execute</referencedby>
        <referencedby refid="classLn__dFunction_1a1182db4c7e6c2a80a9cf8366e9244005" compoundref="slimath_8cc" startline="507" endline="521">Ln_dFunction::execute</referencedby>
        <referencedby refid="classLog__dFunction_1a701d41d1b7f3aa9016585ab08504785b" compoundref="slimath_8cc" startline="481" endline="495">Log_dFunction::execute</referencedby>
        <referencedby refid="classSqr__dFunction_1a7ef59acf4e7a1c615ffdd7ee14238c7a" compoundref="slimath_8cc" startline="530" endline="537">Sqr_dFunction::execute</referencedby>
        <referencedby refid="classSqrt__dFunction_1a4dd71783377ba895ea900422c41db37a" compoundref="slimath_8cc" startline="548" endline="562">Sqrt_dFunction::execute</referencedby>
        <referencedby refid="classPow__ddFunction_1a79b08d73ee5fb7f57b6bf5f230c80969" compoundref="slimath_8cc" startline="575" endline="593">Pow_ddFunction::execute</referencedby>
        <referencedby refid="classPow__diFunction_1ac0923f0015f3f1a6d76ed22e8203c12f" compoundref="slimath_8cc" startline="596" endline="616">Pow_diFunction::execute</referencedby>
        <referencedby refid="classModf__dFunction_1a86b6147cdd3b982eb7abf303d5f749a5" compoundref="slimath_8cc" startline="632" endline="644">Modf_dFunction::execute</referencedby>
        <referencedby refid="classFrexp__dFunction_1a0d05a546f1cdfbeca4e18ee091992de7" compoundref="slimath_8cc" startline="662" endline="674">Frexp_dFunction::execute</referencedby>
        <referencedby refid="classLdexp__diFunction_1a075b3d4af975cfc4de084cee04c72997" compoundref="slimath_8cc" startline="694" endline="705">Ldexp_diFunction::execute</referencedby>
        <referencedby refid="classDexp__iFunction_1a78fe12a604e5069c7f88cdd053e3267f" compoundref="slimath_8cc" startline="720" endline="730">Dexp_iFunction::execute</referencedby>
        <referencedby refid="classAbs__iFunction_1a96951691f32ae94347230e044d67f584" compoundref="slimath_8cc" startline="754" endline="762">Abs_iFunction::execute</referencedby>
        <referencedby refid="classAbs__dFunction_1ae932b226f4cc979a50a5a4ca462fced7" compoundref="slimath_8cc" startline="784" endline="792">Abs_dFunction::execute</referencedby>
        <referencedby refid="classNeg__iFunction_1a90fa5411cd53e49662c30ef26d19219e" compoundref="slimath_8cc" startline="809" endline="817">Neg_iFunction::execute</referencedby>
        <referencedby refid="classNeg__dFunction_1ad5f3d462d1120ce84d121c502b0eb9b4" compoundref="slimath_8cc" startline="833" endline="840">Neg_dFunction::execute</referencedby>
        <referencedby refid="classInv__dFunction_1adf50634e78d24677de9c5e15040cafe2" compoundref="slimath_8cc" startline="849" endline="868">Inv_dFunction::execute</referencedby>
        <referencedby refid="classEqFunction_1a183fd38b1b16d20ff2c93859bf3650f4" compoundref="slimath_8cc" startline="886" endline="897">EqFunction::execute</referencedby>
        <referencedby refid="classNeqFunction_1a37d3a120ba54b59c93c5bc485f3a6d92" compoundref="slimath_8cc" startline="913" endline="924">NeqFunction::execute</referencedby>
        <referencedby refid="classAndFunction_1a5b453fbad707ae3fa2944be2462af3b6" compoundref="slimath_8cc" startline="1169" endline="1180">AndFunction::execute</referencedby>
        <referencedby refid="classOrFunction_1a153979323cdee14d30dd0bdc9b9ad139" compoundref="slimath_8cc" startline="1112" endline="1124">OrFunction::execute</referencedby>
        <referencedby refid="classAnd__iiFunction_1ab4438c8e2ec244e641616c429b0077bd" compoundref="slimath_8cc" startline="1183" endline="1193">And_iiFunction::execute</referencedby>
        <referencedby refid="classOr__iiFunction_1a52cc897a4f1b6ae66c60e3776f4cf405" compoundref="slimath_8cc" startline="1196" endline="1206">Or_iiFunction::execute</referencedby>
        <referencedby refid="classXorFunction_1a638b44a694a6b6fd8e644e5207c0b084" compoundref="slimath_8cc" startline="1141" endline="1152">XorFunction::execute</referencedby>
        <referencedby refid="classNot__bFunction_1a85f9950a04b99ab37217911719646b46" compoundref="slimath_8cc" startline="1073" endline="1080">Not_bFunction::execute</referencedby>
        <referencedby refid="classNot__iFunction_1a2980f824ff6be71c838c82d5fa22fc16" compoundref="slimath_8cc" startline="1084" endline="1091">Not_iFunction::execute</referencedby>
        <referencedby refid="classGeq__iiFunction_1adb9567dd1162d015c350e4eecb0452c8" compoundref="slimath_8cc" startline="938" endline="949">Geq_iiFunction::execute</referencedby>
        <referencedby refid="classGeq__idFunction_1abfa47735f4aca091e1f0ac05f7c86be7" compoundref="slimath_8cc" startline="952" endline="963">Geq_idFunction::execute</referencedby>
        <referencedby refid="classGeq__diFunction_1aa061dfc9716c58eb0ca4f20810548560" compoundref="slimath_8cc" startline="966" endline="977">Geq_diFunction::execute</referencedby>
        <referencedby refid="classGeq__ddFunction_1a88e689255e5d935374c340a35407616c" compoundref="slimath_8cc" startline="980" endline="991">Geq_ddFunction::execute</referencedby>
        <referencedby refid="classLeq__iiFunction_1a970e655bab161b733c59de77ecf37b81" compoundref="slimath_8cc" startline="1005" endline="1016">Leq_iiFunction::execute</referencedby>
        <referencedby refid="classLeq__idFunction_1a242478cba96a40147deb69044a4f5a71" compoundref="slimath_8cc" startline="1019" endline="1030">Leq_idFunction::execute</referencedby>
        <referencedby refid="classLeq__diFunction_1a1b5a6dddcf5facc41323300222773772" compoundref="slimath_8cc" startline="1033" endline="1044">Leq_diFunction::execute</referencedby>
        <referencedby refid="classLeq__ddFunction_1af4437962bb4626d5843ff4c51ed53db3" compoundref="slimath_8cc" startline="1047" endline="1058">Leq_ddFunction::execute</referencedby>
        <referencedby refid="classGt__iiFunction_1a14581810c3f7baeaa4db209ee5c35f4e" compoundref="slimath_8cc" startline="1253" endline="1267">Gt_iiFunction::execute</referencedby>
        <referencedby refid="classGt__ddFunction_1a060e8778be3d70a291f25b9dd99f544b" compoundref="slimath_8cc" startline="1270" endline="1284">Gt_ddFunction::execute</referencedby>
        <referencedby refid="classGt__idFunction_1a91f4f9c0f92b1799bc90ae6c2612a807" compoundref="slimath_8cc" startline="1220" endline="1233">Gt_idFunction::execute</referencedby>
        <referencedby refid="classGt__diFunction_1a20dd028c6f829b4e399b73d769eef5e9" compoundref="slimath_8cc" startline="1236" endline="1249">Gt_diFunction::execute</referencedby>
        <referencedby refid="classGt__ssFunction_1a2b74649010dc2364ee03f4e817738a5f" compoundref="slimath_8cc" startline="1288" endline="1302">Gt_ssFunction::execute</referencedby>
        <referencedby refid="classLt__iiFunction_1a4d9f322d00a8f85473e9817664132ccc" compoundref="slimath_8cc" startline="1350" endline="1364">Lt_iiFunction::execute</referencedby>
        <referencedby refid="classLt__ddFunction_1a499089d678af7233ac278af0fd3a622a" compoundref="slimath_8cc" startline="1367" endline="1381">Lt_ddFunction::execute</referencedby>
        <referencedby refid="classLt__idFunction_1abc6c29e9330ffcd8d3eb80fecadd0dad" compoundref="slimath_8cc" startline="1315" endline="1329">Lt_idFunction::execute</referencedby>
        <referencedby refid="classLt__diFunction_1a9c29f0fbac6667d2512ae3a49ce86383" compoundref="slimath_8cc" startline="1332" endline="1346">Lt_diFunction::execute</referencedby>
        <referencedby refid="classLt__ssFunction_1a602f9010049e4d5bca353ef961bd5994" compoundref="slimath_8cc" startline="1385" endline="1399">Lt_ssFunction::execute</referencedby>
        <referencedby refid="classIntegerFunction_1ae6379a2121330a09e1b1c0d1175ebf7a" compoundref="slimath_8cc" startline="41" endline="52">IntegerFunction::execute</referencedby>
        <referencedby refid="classDoubleFunction_1a99ee2ffbdf972d9fb4307d64584f6ff0" compoundref="slimath_8cc" startline="55" endline="67">DoubleFunction::execute</referencedby>
        <referencedby refid="classUnitStep__iFunction_1acc06a1df307d659a0bf11ec902474c4f" compoundref="slimath_8cc" startline="1427" endline="1447">UnitStep_iFunction::execute</referencedby>
        <referencedby refid="classUnitStep__dFunction_1ad745fde1bb76e9ef7567f94295f0481e" compoundref="slimath_8cc" startline="1404" endline="1423">UnitStep_dFunction::execute</referencedby>
        <referencedby refid="classUnitStep__iaFunction_1a9378a2bbd2c679ee91d218f2dfd11a9d" compoundref="slimath_8cc" startline="1485" endline="1515">UnitStep_iaFunction::execute</referencedby>
        <referencedby refid="classUnitStep__daFunction_1afd850dcce0ebe6542fc9396a53624830" compoundref="slimath_8cc" startline="1451" endline="1481">UnitStep_daFunction::execute</referencedby>
        <referencedby refid="classRound__dFunction_1af27685e891ef78c97ae95e6f818bbc40" compoundref="slimath_8cc" startline="1519" endline="1527">Round_dFunction::execute</referencedby>
        <referencedby refid="classFloor__dFunction_1a3c010192ea5a0c0d9c9181a14e94f73a" compoundref="slimath_8cc" startline="1531" endline="1539">Floor_dFunction::execute</referencedby>
        <referencedby refid="classCeil__dFunction_1a38d5f4e4fb116575eda31ea510aeae88" compoundref="slimath_8cc" startline="1543" endline="1551">Ceil_dFunction::execute</referencedby>
        <referencedby refid="classMax__i__iFunction_1ad2d3f51c67c4d28b097a84d9673ff804" compoundref="slimath_8cc" startline="1556" endline="1570">Max_i_iFunction::execute</referencedby>
        <referencedby refid="classMax__i__dFunction_1a8e1be6febab52033e2f6acb0c3f2627f" compoundref="slimath_8cc" startline="1572" endline="1586">Max_i_dFunction::execute</referencedby>
        <referencedby refid="classMax__d__iFunction_1a65b5dfaaecc02bf6a193f009d5304286" compoundref="slimath_8cc" startline="1588" endline="1602">Max_d_iFunction::execute</referencedby>
        <referencedby refid="classMax__d__dFunction_1a12a335f8b56dc403556908f9d5d21613" compoundref="slimath_8cc" startline="1604" endline="1618">Max_d_dFunction::execute</referencedby>
        <referencedby refid="classMin__i__iFunction_1a091ef6965b8624bb1db8697d3290fd66" compoundref="slimath_8cc" startline="1623" endline="1637">Min_i_iFunction::execute</referencedby>
        <referencedby refid="classMin__i__dFunction_1a7b7f2d597342e3d06d89a6eedbdefbb0" compoundref="slimath_8cc" startline="1639" endline="1653">Min_i_dFunction::execute</referencedby>
        <referencedby refid="classMin__d__iFunction_1a99963c12a9af8f53e55987050d537901" compoundref="slimath_8cc" startline="1655" endline="1669">Min_d_iFunction::execute</referencedby>
        <referencedby refid="classMin__d__dFunction_1a1dc138fde311c0dbff357616995be88f" compoundref="slimath_8cc" startline="1671" endline="1685">Min_d_dFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegcompFunction_1a53639d7552193a3584196ca6ed941072" compoundref="sliregexp_8cc" startline="110" endline="139">RegexpModule::RegcompFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegexecFunction_1a758ff72802b6e21876dddb2de99cf2f5" compoundref="sliregexp_8cc" startline="168" endline="214">RegexpModule::RegexecFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegerrorFunction_1af18a480fa01f15cbf5331b922351f48f" compoundref="sliregexp_8cc" startline="142" endline="165">RegexpModule::RegerrorFunction::execute</referencedby>
        <referencedby refid="classNpopFunction_1a9408bc97e94fb191ee8f32ded1d5162a" compoundref="slistack_8cc" startline="66" endline="86">NpopFunction::execute</referencedby>
        <referencedby refid="classIndexFunction_1a97e740d3b55a9f8f16252c7bd813c311" compoundref="slistack_8cc" startline="158" endline="179">IndexFunction::execute</referencedby>
        <referencedby refid="classRollFunction_1ab7b94aa99d7280f54b556c13da886475" compoundref="slistack_8cc" startline="244" endline="280">RollFunction::execute</referencedby>
        <referencedby refid="classCopyFunction_1a71b4d78c5aaacdc99e2ee285b9bf5173" compoundref="slistack_8cc" startline="193" endline="217">CopyFunction::execute</referencedby>
        <referencedby refid="classRestoreestackFunction_1ab57f3dfe40346099a01e6c191ad934ea" compoundref="slistack_8cc" startline="395" endline="408">RestoreestackFunction::execute</referencedby>
        <referencedby refid="classRestoreostackFunction_1af9bdc7256f3e08450c360213c2803ec9" compoundref="slistack_8cc" startline="423" endline="437">RestoreostackFunction::execute</referencedby>
        <referencedby refid="classSLIStartup_1_1GetenvFunction_1a5f82485ea399b2fbbaa149e01125f636" compoundref="slistartup_8cc" startline="110" endline="133">SLIStartup::GetenvFunction::execute</referencedby>
        <referencedby refid="classTrieFunction_1a8cdb26a7ae4b1a3b6cd8e13157ce885c" compoundref="slitypecheck_8cc" startline="48" endline="70">TrieFunction::execute</referencedby>
        <referencedby refid="classTrieInfoFunction_1a2c49a8f1ced0a3098ff798d8dcbd2e45" compoundref="slitypecheck_8cc" startline="218" endline="235">TrieInfoFunction::execute</referencedby>
        <referencedby refid="classAddtotrieFunction_1a1cba5d0fe23d66917d4f2f841d727b92" compoundref="slitypecheck_8cc" startline="90" endline="149">AddtotrieFunction::execute</referencedby>
        <referencedby refid="classCva__tFunction_1a7172118a9841754c5187150f57f4b9ef" compoundref="slitypecheck_8cc" startline="197" endline="215">Cva_tFunction::execute</referencedby>
        <referencedby refid="classCvt__aFunction_1a87592d8d63fbc05452337a37eda7b0d3" compoundref="slitypecheck_8cc" startline="302" endline="317">Cvt_aFunction::execute</referencedby>
        <referencedby refid="structnest_1_1Time_1_1ms_1ad8e170368ee978c428e0dcf47dd87cea" compoundref="nest__time_8cpp" startline="143" endline="159">nest::Time::ms::fromtoken</referencedby>
        <referencedby refid="group__DictUtils_1ga46187a005b28a029032ae44cdfacd12f" compoundref="dictutils_8h" startline="88" endline="134">get_double_in_range</referencedby>
        <referencedby refid="group__DictUtils_1ga2884b30013642c7ea26a1a6e64707f8c" compoundref="dictutils_8h" startline="152" endline="198">get_long_in_range</referencedby>
        <referencedby refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" compoundref="interpret_8cc" startline="924" endline="937">SLIInterpreter::getcurrentname</referencedby>
        <referencedby refid="group__TokenUtils_1ga4aece43f7810964c322ab7d7219cbe63" compoundref="tokenutils_8h" startline="152" endline="160">getValue</referencedby>
        <referencedby refid="tokenutils_8cc_1a95ea4d0048b41f138634e4eca76292bf" compoundref="tokenutils_8cc" startline="115" endline="125">getValue&lt; bool &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1aeb08d5341a6bafebc5f8513da1eccb2b" compoundref="tokenutils_8cc" startline="74" endline="91">getValue&lt; double &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" compoundref="tokenutils_8cc" startline="41" endline="50">getValue&lt; long &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</referencedby>
        <referencedby refid="classProcesses_1a61d91f79c5cb92e4c0ce6aa4bc4eb412" compoundref="processes_8cc" startline="161" endline="264">Processes::init</referencedby>
        <referencedby refid="neststartup_8cpp_1ad3935984e6911e711b0a40aa27670e75" compoundref="neststartup_8cpp" startline="71" endline="149">neststartup</referencedby>
        <referencedby refid="classParser_1a1477eb52ba5b4021f7cc7290ac7d3ab7" compoundref="parser_8cc" startline="73" endline="208">Parser::operator()</referencedby>
        <referencedby refid="classSLIInterpreter_1a1f76b68c473ace082511ddaa9eca5733" compoundref="interpret_8cc" startline="651" endline="715">SLIInterpreter::print_error</referencedby>
        <referencedby refid="group__DictUtils_1gab7a520a9b1a45325ab4fcc550dee5e9b" compoundref="dictutils_8cc" startline="59" endline="73">provide_property</referencedby>
        <referencedby refid="classnest_1_1FreeLayer_1acb2f436d36da84d837609d56562af384" compoundref="free__layer_8h" startline="113" endline="251">nest::FreeLayer&lt; D &gt;::set_status</referencedby>
        <referencedby refid="group__TokenUtils_1ga483a6d2950979332f9caa22fbbcb416e" compoundref="tokenutils_8h" startline="177" endline="186">setValue</referencedby>
        <referencedby refid="tokenutils_8cc_1adecd0efa9c7a3b66e074715e97c54f5c" compoundref="tokenutils_8cc" startline="128" endline="138">setValue&lt; bool &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a6bca9eb7cda2a3fd18e97e6a986c85b4" compoundref="tokenutils_8cc" startline="95" endline="104">setValue&lt; double &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a76463d42ed8c9825c9ef11cd4b8cde13" compoundref="tokenutils_8cc" startline="53" endline="62">setValue&lt; long &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1ad50a65570f12e32bb82dc42a893d4f28" compoundref="tokenutils_8cc" startline="187" endline="234">setValue&lt; std::string &gt;</referencedby>
        <referencedby refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" compoundref="interpret_8cc" startline="986" endline="1018">SLIInterpreter::stack_backtrace</referencedby>
        <referencedby refid="classProcesses_1a2b77dd80a339131defa64a0d65dd42ee" compoundref="processes_8cc" startline="98" endline="110">Processes::systemerror</referencedby>
        <referencedby refid="namespacenest_1a6d83992e5c06d61f33858456ac630dc4" compoundref="dict__util_8h" startline="45" endline="66">nest::updateValueParam</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1aceac558719bf21e2568771175204c988" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <qualifiedname>Token::valid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="368" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="368" bodyend="371"/>
        <references refid="classToken_1a397db8062278fec3e786aa62f9d9baf8" compoundref="token_8h" startline="348" endline="351">empty</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a0d3af35f8cec5c185178b2307e6ea03b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
        <definition>Datum * Token::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>Token::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="374" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="374" bodyend="377"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a5958e16977dd6fbbf1d347ec26241ad6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> &amp;</type>
        <definition>Datum &amp; Token::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>Token::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="381" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="381" bodyend="384"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a686d5cc07b218619903404c6c1e97e49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::type_info &amp;</type>
        <definition>const std::type_info &amp; Token::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>Token::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="388" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="388" bodyend="391"/>
        <referencedby refid="classToken_1a4810b8f65db618ce32b347c041e66cf5" compoundref="token_8cc" startline="146" endline="162">info</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1ac35d2a51c5b3d37a5465a9aee26018e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
        <definition>Token &amp; Token::operator=</definition>
        <argsstring>(const Token &amp;c_s)</argsstring>
        <name>operator=</name>
        <qualifiedname>Token::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>c_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="395" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="395" bodyend="414"/>
        <references refid="classToken_1aa82cb2b6a7055ab37744fc5268729823" compoundref="token_8h" startline="332" endline="339">clear</references>
        <references refid="classDatum_1af968bcf24fef60342dcc5d374b8cd54e" compoundref="datum_8h" startline="54" endline="57">Datum::get_ptr</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a4faa6809fcf7b97998cb509c72aead40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
        <definition>Token &amp; Token::operator=</definition>
        <argsstring>(Datum *p_s)</argsstring>
        <name>operator=</name>
        <qualifiedname>Token::operator=</qualifiedname>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
          <declname>p_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="417" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="417" bodyend="429"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" compoundref="datum_8h" startline="106" endline="113">Datum::removeReference</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a54cc7baea1e3f9cfe447ab2a4325771d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::operator==</definition>
        <argsstring>(const Token &amp;t) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Token::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="433" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="433" bodyend="441"/>
        <references refid="classDatum_1a30302c3f9b5e9f86fc01021599011a7f" compoundref="datum_8h" startline="164" endline="167">Datum::equals</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a0decf050ae6acadaa47040d3101ca4f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::operator!=</definition>
        <argsstring>(const Token &amp;t) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Token::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="445" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classToken_1a4810b8f65db618ce32b347c041e66cf5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Token::info</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>info</name>
        <qualifiedname>Token::info</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="450" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="146" bodyend="162"/>
        <references refid="classDatum_1af7725a211bd45f39beae0f5771038c75" compoundref="datum_8cc" startline="31" endline="34">Datum::info</references>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classToken_1a686d5cc07b218619903404c6c1e97e49" compoundref="token_8h" startline="388" endline="391">type</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a6068e75d671be14b110a441649a238d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Token::pprint</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>pprint</name>
        <qualifiedname>Token::pprint</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="452" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="165" bodyend="175"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <references refid="classDatum_1a9a0232698bafa153d6286a5f3534187a">Datum::pprint</references>
        <referencedby refid="classSLIInterpreter_1ab345ed039af59fb2b2b546f18f153eba" compoundref="interpret_8cc" startline="1048" endline="1198">SLIInterpreter::debug_commandline</referencedby>
        <referencedby refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" compoundref="tokenstack_8cc" startline="30" endline="46">TokenStack::dump</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapFunction_1a6b9a79df67e27e005879279412c2667d" compoundref="sliarray_8cc" startline="959" endline="1053">SLIArrayModule::IMapFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__ivFunction_1a0dac376ff89c51870e22f1053fc88e28" compoundref="sliarray_8cc" startline="1079" endline="1191">SLIArrayModule::IMap_ivFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMap__dvFunction_1afad30d283cbf7574273f2b97281a21a0" compoundref="sliarray_8cc" startline="1213" endline="1326">SLIArrayModule::IMap_dvFunction::execute</referencedby>
        <referencedby refid="classSLIArrayModule_1_1IMapIndexedFunction_1abf8d07c9abeede15fbb3d9f28cc84847" compoundref="sliarray_8cc" startline="1458" endline="1555">SLIArrayModule::IMapIndexedFunction::execute</referencedby>
        <referencedby refid="classIforallindexedstringFunction_1af26a406c6024773901e8ce42c0fd8d65" compoundref="slibuiltins_8cc" startline="376" endline="402">IforallindexedstringFunction::execute</referencedby>
        <referencedby refid="classIforallstringFunction_1a18c3246cb5b985e82b2ce7af6589224d" compoundref="slibuiltins_8cc" startline="418" endline="442">IforallstringFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a03824dc8178a9d8df607854039cf65dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::clear_access_flag</definition>
        <argsstring>()</argsstring>
        <name>clear_access_flag</name>
        <qualifiedname>Token::clear_access_flag</qualifiedname>
        <briefdescription>
<para>Clear accessed flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="456" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="456" bodyend="459"/>
        <references refid="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" compoundref="token_8h" startline="162">accessed_</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a817dd51bef53f348dea5a26ba6bb320f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Token::set_access_flag</definition>
        <argsstring>() const</argsstring>
        <name>set_access_flag</name>
        <qualifiedname>Token::set_access_flag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="461" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="461" bodyend="464"/>
        <references refid="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" compoundref="token_8h" startline="162">accessed_</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1adf58195db358356de7ddac51960de62d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::accessed</definition>
        <argsstring>() const</argsstring>
        <name>accessed</name>
        <qualifiedname>Token::accessed</qualifiedname>
        <briefdescription>
<para>Check for access. </para>
        </briefdescription>
        <detaileddescription>
<para>Access control does not differentiate between read and write access, and relies on getValue&lt;&gt;, setValue&lt;&gt; to use <ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum()</ref> to access the data in the <ref refid="classToken" kindref="compound">Token</ref>. The access flag should be cleared before entering the code for which access is to be checked. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="474" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="474" bodyend="477"/>
        <references refid="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" compoundref="token_8h" startline="162">accessed_</references>
      </memberdef>
      <memberdef kind="function" id="classToken_1a0a851cec71bde92edd33e989f31640d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DatumType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Token::is_a</definition>
        <argsstring>() const</argsstring>
        <name>is_a</name>
        <qualifiedname>Token::is_a</qualifiedname>
        <briefdescription>
<para>Check whether <ref refid="classToken" kindref="compound">Token</ref> contains a <ref refid="classDatum" kindref="compound">Datum</ref> of a given type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if <ref refid="classToken" kindref="compound">Token</ref> is of type given by template parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="486" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="486" bodyend="489"/>
        <references refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" compoundref="token_8h" startline="157">p</references>
        <referencedby refid="classnest_1_1AbstractLayer_1a268b14297e57188c5f29a44bad369990" compoundref="layer_8cpp" startline="55" endline="160">nest::AbstractLayer::create_layer</referencedby>
        <referencedby refid="structnest_1_1weight__recorder_1_1Parameters___1ab4f0b47823f61ca3c54b28aef291edbc" compoundref="weight__recorder_8cpp" startline="83" endline="128">nest::weight_recorder::Parameters_::set</referencedby>
        <referencedby refid="classnest_1_1FreeLayer_1acb2f436d36da84d837609d56562af384" compoundref="free__layer_8h" startline="113" endline="251">nest::FreeLayer&lt; D &gt;::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classToken_1a8f6de6fc2b2785c2fc7a32eab99e22a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Token::matches_as_string</definition>
        <argsstring>(const Token &amp;rhs) const</argsstring>
        <name>matches_as_string</name>
        <qualifiedname>Token::matches_as_string</qualifiedname>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Returns true if token equals rhs as string. </para>
        </briefdescription>
        <detaileddescription>
<para>The main purpose of this method is to allow seamless comparison of <ref refid="classLiteralDatum" kindref="compound">LiteralDatum</ref> and StringDatum tokens. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="498" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.cc" bodystart="192" bodyend="204"/>
        <references refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</references>
        <referencedby refid="classnest_1_1NodeManager_1ae485df8e2fb82bca92d59d538e47aa99" compoundref="node__manager_8cpp" startline="312" endline="393">nest::NodeManager::get_nodes</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A type-independent container for C++-types. </para>
    </briefdescription>
    <detaileddescription>
<para>Class <ref refid="classToken" kindref="compound">Token</ref> is a wrapper class around <ref refid="classDatum" kindref="compound">Datum</ref> pointers and non-Datum objects. In fact, since <ref refid="classDatum" kindref="compound">Datum</ref> objects have a memory manager, we should avoid creating <ref refid="classDatum" kindref="compound">Datum</ref> objects on the stack as local variables. Class <ref refid="classToken" kindref="compound">Token</ref> takes ownership of the <ref refid="classDatum" kindref="compound">Datum</ref> pointers and will properly delete them when they are no longer needed. Thus, use one of the following idioms:</para>
<para><simplesect kind="par"><title>Construction</title><para></para>
</simplesect>
<programlisting><codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>t(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>IntergerDatum(<sp/>5<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>t<sp/>=<sp/>5;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>t<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>5<sp/>);</highlight></codeline>
</programlisting></para>
<para>The object constructor <computeroutput><ref refid="classToken" kindref="compound">Token</ref>(<ref refid="classDatum" kindref="compound">Datum</ref>&amp;)</computeroutput> is historic and should not be used anymore.</para>
<para><simplesect kind="par"><title>Assignment</title><para></para>
</simplesect>
<programlisting><codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>t1<sp/>=<sp/>t;</highlight></codeline>
<codeline><highlight class="normal">t1.<ref refid="classToken_1a2f61f1702fa6214de27ccff368df11f5" kindref="member">move</ref>(<sp/>t<sp/>);<sp/></highlight><highlight class="comment">//<sp/>move<sp/>Datum<sp/>from<sp/>t<sp/>to<sp/>t1</highlight></codeline>
</programlisting></para>
<para><computeroutput>TokenArrays</computeroutput>, <computeroutput><ref refid="classTokenStack" kindref="compound">TokenStack</ref></computeroutput>, and <computeroutput><ref refid="classDictionary" kindref="compound">Dictionary</ref></computeroutput> are token containers. Their assignment interface takes</para>
<para><orderedlist>
<listitem><para><ref refid="classDatum" kindref="compound">Datum</ref> pointers</para>
</listitem><listitem><para><ref refid="classToken" kindref="compound">Token</ref> references</para>
</listitem></orderedlist>
</para>
<para>Thus, the recommended assignments are</para>
<para><programlisting><codeline><highlight class="normal">array.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>5<sp/>)<sp/>);</highlight></codeline>
</programlisting></para>
<para>It directly passes the <ref refid="classDatum" kindref="compound">Datum</ref> pointer to the location in the array. Some convenient ways to write assignments are actually inefficient.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
<orderedlist>
<listitem><para><computeroutput>a.push_back(5);</computeroutput></para>
<para>This is convenient notation, but it is much more expensive because it is equivalent to the following code: <programlisting><codeline><highlight class="normal"><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref><sp/>tmp1(<sp/>5<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>tmp2(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>mp1<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>tmp3(<sp/>tmp2<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>more<sp/>Datum<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespacenest_1_1names_1aa689f9c844899d76cc06e33a7a1fa455" kindref="member">a</ref>.push_back_move(<sp/>tmp3<sp/>);</highlight></codeline>
</programlisting></para>
<para>The compiler can optimize away some of the inefficiencies, but benchmarks showed a big residual overhead compared to directly assigning the <ref refid="classDatum" kindref="compound">Datum</ref> pointer.</para>
</listitem><listitem><para><computeroutput>a.push_back(IntegerDatum(5));</computeroutput></para>
<para>This looks efficient, but in fact it is not, because it is equivalent to: <programlisting><codeline><highlight class="normal"><ref refid="classToken" kindref="compound">Token</ref><sp/>tmp1(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>5<sp/>)<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespacenest_1_1names_1aa689f9c844899d76cc06e33a7a1fa455" kindref="member">a</ref>.push_back_move(<sp/>tmp1<sp/>);</highlight></codeline>
</programlisting></para>
</listitem><listitem><para><computeroutput>a.push_back(t);</computeroutput></para>
<para>Involves one <ref refid="classDatum" kindref="compound">Datum</ref> copy</para>
</listitem><listitem><para><computeroutput>a.push_back_move(t);</computeroutput></para>
<para>Moves the pointer and leaves a void token behind. </para>
</listitem></orderedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Datum</label>
        <link refid="classDatum"/>
        <childnode refid="3" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="5">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="3">
        <label>SLIType</label>
        <link refid="classSLIType"/>
        <childnode refid="4" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>defaultaction</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Token</label>
        <link refid="classToken"/>
        <childnode refid="2" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/token.h" line="151" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/token.h" bodystart="152" bodyend="499"/>
    <listofallmembers>
      <member refid="classToken_1adf58195db358356de7ddac51960de62d" prot="public" virt="non-virtual"><scope>Token</scope><name>accessed</name></member>
      <member refid="classToken_1a58b0d4c3bc53815e151a405400bbe2c2" prot="private" virt="non-virtual"><scope>Token</scope><name>accessed_</name></member>
      <member refid="classToken_1a5670cb529c61f85f0fe79d98fea96c7b" prot="public" virt="non-virtual"><scope>Token</scope><name>assign_by_pointer</name></member>
      <member refid="classToken_1a0fb2d619ef8e12500e8eb9a546d8d49c" prot="public" virt="non-virtual"><scope>Token</scope><name>assign_by_ref</name></member>
      <member refid="classToken_1aa82cb2b6a7055ab37744fc5268729823" prot="public" virt="non-virtual"><scope>Token</scope><name>clear</name></member>
      <member refid="classToken_1a03824dc8178a9d8df607854039cf65dd" prot="public" virt="non-virtual"><scope>Token</scope><name>clear_access_flag</name></member>
      <member refid="classToken_1a2c88e079ad4b9bc2769f54a37099e56a" prot="public" virt="non-virtual"><scope>Token</scope><name>contains</name></member>
      <member refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" prot="public" virt="non-virtual"><scope>Token</scope><name>datum</name></member>
      <member refid="classToken_1a0245e232bf41dbfae8b76f96305ea1a4" prot="private" virt="non-virtual"><scope>Token</scope><name>Datum</name></member>
      <member refid="classToken_1a749c13e9732489c612634a457f863633" prot="public" virt="non-virtual"><scope>Token</scope><name>detach</name></member>
      <member refid="classToken_1a397db8062278fec3e786aa62f9d9baf8" prot="public" virt="non-virtual"><scope>Token</scope><name>empty</name></member>
      <member refid="classToken_1a4810b8f65db618ce32b347c041e66cf5" prot="public" virt="non-virtual"><scope>Token</scope><name>info</name></member>
      <member refid="classToken_1abeb808eba68fc7c5e45c656c09e2d01a" prot="public" virt="non-virtual"><scope>Token</scope><name>init_by_copy</name></member>
      <member refid="classToken_1aee2083d6b0e163a93edf196f05e8025e" prot="public" virt="non-virtual"><scope>Token</scope><name>init_by_pointer</name></member>
      <member refid="classToken_1ac8f072f708a9cc16a6069f723a66a9d9" prot="public" virt="non-virtual"><scope>Token</scope><name>init_by_ref</name></member>
      <member refid="classToken_1ada20a3824205f54e23415418c9a2bc54" prot="public" virt="non-virtual"><scope>Token</scope><name>init_move</name></member>
      <member refid="classToken_1a0a851cec71bde92edd33e989f31640d5" prot="public" virt="non-virtual"><scope>Token</scope><name>is_a</name></member>
      <member refid="classToken_1a8f6de6fc2b2785c2fc7a32eab99e22a0" prot="public" virt="non-virtual"><scope>Token</scope><name>matches_as_string</name></member>
      <member refid="classToken_1a2f61f1702fa6214de27ccff368df11f5" prot="public" virt="non-virtual"><scope>Token</scope><name>move</name></member>
      <member refid="classToken_1a34140d60656a12bbfcdfbcf85e985133" prot="public" virt="non-virtual"><scope>Token</scope><name>operator bool</name></member>
      <member refid="classToken_1a9d9ecf295a7bb23922db6ea5b9e97833" prot="public" virt="non-virtual"><scope>Token</scope><name>operator double</name></member>
      <member refid="classToken_1a00f0e2b6140c987c0e49c1306f7fe354" prot="public" virt="non-virtual"><scope>Token</scope><name>operator long</name></member>
      <member refid="classToken_1a5c191febb25d94083151ea5cb31d7737" prot="public" virt="non-virtual"><scope>Token</scope><name>operator not</name></member>
      <member refid="classToken_1a0f93582914b0c3aaebd7ac0c0fb88795" prot="public" virt="non-virtual"><scope>Token</scope><name>operator size_t</name></member>
      <member refid="classToken_1a37a03ca940a3abaec1491c9306bafa2a" prot="public" virt="non-virtual"><scope>Token</scope><name>operator std::string</name></member>
      <member refid="classToken_1a0decf050ae6acadaa47040d3101ca4f8" prot="public" virt="non-virtual"><scope>Token</scope><name>operator!=</name></member>
      <member refid="classToken_1a5958e16977dd6fbbf1d347ec26241ad6" prot="public" virt="non-virtual"><scope>Token</scope><name>operator*</name></member>
      <member refid="classToken_1a0d3af35f8cec5c185178b2307e6ea03b" prot="public" virt="non-virtual"><scope>Token</scope><name>operator-&gt;</name></member>
      <member refid="classToken_1ac35d2a51c5b3d37a5465a9aee26018e1" prot="public" virt="non-virtual"><scope>Token</scope><name>operator=</name></member>
      <member refid="classToken_1a4faa6809fcf7b97998cb509c72aead40" prot="public" virt="non-virtual"><scope>Token</scope><name>operator=</name></member>
      <member refid="classToken_1a54cc7baea1e3f9cfe447ab2a4325771d" prot="public" virt="non-virtual"><scope>Token</scope><name>operator==</name></member>
      <member refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" prot="private" virt="non-virtual"><scope>Token</scope><name>p</name></member>
      <member refid="classToken_1a6068e75d671be14b110a441649a238d7" prot="public" virt="non-virtual"><scope>Token</scope><name>pprint</name></member>
      <member refid="classToken_1a817dd51bef53f348dea5a26ba6bb320f" prot="public" virt="non-virtual"><scope>Token</scope><name>set_access_flag</name></member>
      <member refid="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" prot="public" virt="non-virtual"><scope>Token</scope><name>swap</name></member>
      <member refid="classToken_1a52263a9bcf2674ea188f25612d2de4e4" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a7a8392b70d88a39c39343e2f20611618" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1ad99b8a89955f1910b308449cefb267f9" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a127eb3b85c54f22d831985d538d5e9c9" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1ad20541ee1a245380b3df48ae80b0bade" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a88529e22c8f6687aaed0619b2eda627b" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1ae1f6c766cff632cedf6304ed4df7975a" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1af60dfbea410ebb77ffcae25d6927e817" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1aee8b87762558f515d04bc81660f8bd0b" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1aa9afcb5557f7081658081ca1763e04ff" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1ad1a68ec8c721b302aede85a6acb6804d" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1aee261a40b2d1606c5b748fc5b4601f44" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a391ea3d7b54ccd18a0dcea49bfb54439" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a995206fe7c076d80c9a885c1b535ff94" prot="public" virt="non-virtual"><scope>Token</scope><name>Token</name></member>
      <member refid="classToken_1a5c5ccc0f2618ccabc7ad510604efdb0f" prot="private" virt="non-virtual"><scope>Token</scope><name>TokenArrayObj</name></member>
      <member refid="classToken_1a686d5cc07b218619903404c6c1e97e49" prot="public" virt="non-virtual"><scope>Token</scope><name>type</name></member>
      <member refid="classToken_1aceac558719bf21e2568771175204c988" prot="public" virt="non-virtual"><scope>Token</scope><name>valid</name></member>
      <member refid="classToken_1a3d7d59eaac1535df1433357d5d372f84" prot="public" virt="non-virtual"><scope>Token</scope><name>~Token</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
