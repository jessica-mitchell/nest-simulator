<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1TimeMultipleRequired" kind="class" language="C++" prot="public">
    <compoundname>nest::TimeMultipleRequired</compoundname>
    <basecompoundref refid="classnest_1_1KernelException" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1TimeMultipleRequired_1ad3194607867a4bd743609a35ddce9c4a" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string nest::TimeMultipleRequired::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>nest::TimeMultipleRequired::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="843" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TimeMultipleRequired_1a8d470cb8ec06dc7e06c5228c54c4cbd9" prot="private" static="no" mutable="no">
        <type>const <ref refid="className" kindref="compound">Name</ref></type>
        <definition>const Name nest::TimeMultipleRequired::prop_a_</definition>
        <argsstring></argsstring>
        <name>prop_a_</name>
        <qualifiedname>nest::TimeMultipleRequired::prop_a_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="844" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="844" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TimeMultipleRequired_1a68dcb474549c9009b881599cbdb2e6d5" prot="private" static="no" mutable="no">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>const Time nest::TimeMultipleRequired::val_a_</definition>
        <argsstring></argsstring>
        <name>val_a_</name>
        <qualifiedname>nest::TimeMultipleRequired::val_a_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="845" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="845" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TimeMultipleRequired_1a9fd86183766e513a8e91d93aaf96dbac" prot="private" static="no" mutable="no">
        <type>const <ref refid="className" kindref="compound">Name</ref></type>
        <definition>const Name nest::TimeMultipleRequired::prop_b_</definition>
        <argsstring></argsstring>
        <name>prop_b_</name>
        <qualifiedname>nest::TimeMultipleRequired::prop_b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="846" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TimeMultipleRequired_1af35f80a07ecfa5ef18b94886ad4f0f73" prot="private" static="no" mutable="no">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>const Time nest::TimeMultipleRequired::val_b_</definition>
        <argsstring></argsstring>
        <name>val_b_</name>
        <qualifiedname>nest::TimeMultipleRequired::val_b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="847" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="847" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1TimeMultipleRequired_1a36ab50b81a8b78f2e92c4db183ce87b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::TimeMultipleRequired::TimeMultipleRequired</definition>
        <argsstring>(const std::string &amp;model, const Name &amp;name_a, const Time &amp;value_a, const Name &amp;name_b, const Time &amp;value_b)</argsstring>
        <name>TimeMultipleRequired</name>
        <qualifiedname>nest::TimeMultipleRequired::TimeMultipleRequired</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>name_a</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>value_a</declname>
        </param>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>name_b</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>value_b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>model should be passed from get_name() to ensure that names of copied models are reported correctly. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>name of model causing problem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_a</parametername>
</parameternamelist>
<parameterdescription>
<para>name of dividend </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_a</parametername>
</parameternamelist>
<parameterdescription>
<para>value of dividend </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_b</parametername>
</parameternamelist>
<parameterdescription>
<para>name of divisor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_b</parametername>
</parameternamelist>
<parameterdescription>
<para>value of divisor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="823" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="823" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TimeMultipleRequired_1aecd48a3a25691488cfd84bbbae0cb3e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::TimeMultipleRequired::~TimeMultipleRequired</definition>
        <argsstring>() override</argsstring>
        <name>~TimeMultipleRequired</name>
        <qualifiedname>nest::TimeMultipleRequired::~TimeMultipleRequired</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="836" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="836" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TimeMultipleRequired_1a1100b64c2f134c67b2f0432aeca42f4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string nest::TimeMultipleRequired::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <qualifiedname>nest::TimeMultipleRequired::message</qualifiedname>
        <reimplements refid="classnest_1_1KernelException_1a485c64ff3ea756a5eb6118799e0f1c74">message</reimplements>
        <briefdescription>
<para>Returns a diagnostic message or empty string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="840" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.cpp" bodystart="321" bodyend="327"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown if a <ref refid="classnest_1_1Time" kindref="compound">Time</ref> object should be a multiple of another. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1StepMultipleRequired" kindref="compound">StepMultipleRequired</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::TimeMultipleRequired</label>
        <link refid="classnest_1_1TimeMultipleRequired"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="3">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="7" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="9">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="8">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="1">
        <label>nest::TimeMultipleRequired</label>
        <link refid="classnest_1_1TimeMultipleRequired"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>prop_a_</edgelabel>
          <edgelabel>prop_b_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>val_a_</edgelabel>
          <edgelabel>val_b_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="811" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="812" bodyend="848"/>
    <listofallmembers>
      <member refid="classnest_1_1KernelException_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1a1100b64c2f134c67b2f0432aeca42f4b" prot="public" virt="virtual"><scope>nest::TimeMultipleRequired</scope><name>message</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1ad3194607867a4bd743609a35ddce9c4a" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>model_</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1a8d470cb8ec06dc7e06c5228c54c4cbd9" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>prop_a_</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1a9fd86183766e513a8e91d93aaf96dbac" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>prop_b_</name></member>
      <member refid="classSLIException_1ace48f5938754e82931bab7f54471dd3f" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>SLIException</name></member>
      <member refid="classSLIException_1a5da1b6d493d134687d9ce01e9799b59d" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>SLIException</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1a36ab50b81a8b78f2e92c4db183ce87b2" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>TimeMultipleRequired</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1a68dcb474549c9009b881599cbdb2e6d5" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>val_a_</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1af35f80a07ecfa5ef18b94886ad4f0f73" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>val_b_</name></member>
      <member refid="classSLIException_1a4ac56d362c7d86819a47c76571c9c031" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>what</name></member>
      <member refid="classSLIException_1af0e8f12a5e346db4c028d23a2974f016" prot="private" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>what_</name></member>
      <member refid="classnest_1_1KernelException_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>~KernelException</name></member>
      <member refid="classSLIException_1a671677b69bcc3895df94a069067c0578" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>~SLIException</name></member>
      <member refid="classnest_1_1TimeMultipleRequired_1aecd48a3a25691488cfd84bbbae0cb3e7" prot="public" virt="non-virtual"><scope>nest::TimeMultipleRequired</scope><name>~TimeMultipleRequired</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
