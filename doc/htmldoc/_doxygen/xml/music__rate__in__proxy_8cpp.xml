<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="music__rate__in__proxy_8cpp" kind="file" language="C++">
    <compoundname>music_rate_in_proxy.cpp</compoundname>
    <includes refid="music__rate__in__proxy_8h" local="yes">music_rate_in_proxy.h</includes>
    <incdepgraph>
      <node id="1">
        <label>music_rate_in_proxy.cpp</label>
        <link refid="music__rate__in__proxy_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>music_rate_in_proxy.h</label>
        <link refid="music__rate__in__proxy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>music_rate_in_proxy.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="music__rate__in__proxy_8h" kindref="compound">music_rate_in_proxy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MUSIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arraydatum_8h" kindref="compound">arraydatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictutils_8h" kindref="compound">dictutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="doubledatum_8h" kindref="compound">doubledatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integerdatum_8h" kindref="compound">integerdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compose.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event__delivery__manager__impl_8h" kindref="compound">event_delivery_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Default<sp/>constructors<sp/>defining<sp/>default<sp/>parameters<sp/>and<sp/>state</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">nest::music_rate_in_proxy::Parameters_::Parameters_()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>:<sp/>port_name_(<sp/></highlight><highlight class="stringliteral">&quot;rate_in&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>,<sp/>channel_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">nest::music_rate_in_proxy::State_::State_()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>:<sp/>registered_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>Parameter<sp/>extraction<sp/>and<sp/>manipulation<sp/>functions</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">nest::music_rate_in_proxy::Parameters_::get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/>names::port_name<sp/>]<sp/>=<sp/>port_name_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">nest::music_rate_in_proxy::Parameters_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d,<sp/>State_&amp;<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>is<sp/>not<sp/>possible,<sp/>as<sp/>P_<sp/>does<sp/>not<sp/>know<sp/>about<sp/>get_name()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if(d-&gt;known(names::port_name)<sp/>and<sp/>s.registered_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>throw<sp/>MUSICPortAlreadyPublished(get_name(),<sp/>P_.port_name_);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>s.registered_<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>updateValue&lt;<sp/>string<sp/>&gt;(<sp/>d,<sp/>names::port_name,<sp/>port_name_<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>updateValue&lt;<sp/>long<sp/>&gt;(<sp/>d,<sp/>names::music_channel,<sp/>channel_<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">nest::music_rate_in_proxy::State_::get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/>names::registered<sp/>]<sp/>=<sp/>registered_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">nest::music_rate_in_proxy::State_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>Default<sp/>and<sp/>copy<sp/>constructor<sp/>for<sp/>node</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">nest::music_rate_in_proxy::music_rate_in_proxy()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>:<sp/>DeviceNode()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>,<sp/>P_()</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>,<sp/>S_()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">nest::music_rate_in_proxy::music_rate_in_proxy(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>music_rate_in_proxy&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>:<sp/>DeviceNode(<sp/><ref refid="namespacenest_1_1names_1aaaa28a9fba4f2e503b794e38f3ea4341" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>,<sp/>P_(<sp/><ref refid="namespacenest_1_1names_1aaaa28a9fba4f2e503b794e38f3ea4341" kindref="member">n</ref>.P_<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>,<sp/>S_(<sp/><ref refid="namespacenest_1_1names_1aaaa28a9fba4f2e503b794e38f3ea4341" kindref="member">n</ref>.S_<sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1a10bb77aea4fd28a36ab8335ab5fbda45" kindref="member">kernel</ref>().music_manager.register_music_in_port(<sp/>P_.port_name_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>Node<sp/>initialization<sp/>functions</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">nest::music_rate_in_proxy::init_buffers_()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">nest::music_rate_in_proxy::pre_run_hook()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>publish<sp/>the<sp/>port<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>S_.registered_<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a10bb77aea4fd28a36ab8335ab5fbda45" kindref="member">kernel</ref>().music_manager.register_music_rate_in_proxy(<sp/>P_.port_name_,<sp/>P_.channel_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.registered_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">nest::music_rate_in_proxy::get_status(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="135"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>P_.get(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>S_.get(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/>names::data<sp/>]<sp/>=<sp/><ref refid="arraydatum_8h_1a4017529a13c3554e5231690909cdce58" kindref="member">DoubleVectorDatum</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;(<sp/>1,<sp/>B_.data_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">nest::music_rate_in_proxy::set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>Parameters_<sp/>ptmp<sp/>=<sp/>P_;<sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>ptmp.set(<sp/>d,<sp/>S_<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>State_<sp/>stmp<sp/>=<sp/>S_;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>stmp.set(<sp/>d,<sp/>P_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>temporaries<sp/>contain<sp/>consistent<sp/>set<sp/>of<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1a10bb77aea4fd28a36ab8335ab5fbda45" kindref="member">kernel</ref>().music_manager.register_music_in_port(<sp/>ptmp.port_name_<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1a10bb77aea4fd28a36ab8335ab5fbda45" kindref="member">kernel</ref>().music_manager.unregister_music_in_port(<sp/>P_.port_name_<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>P_<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>S_<sp/>=<sp/>stmp;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">nest::music_rate_in_proxy::update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">nest::music_rate_in_proxy::handle(<sp/>InstantaneousRateConnectionEvent&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1a10bb77aea4fd28a36ab8335ab5fbda45" kindref="member">kernel</ref>().event_delivery_manager.send_secondary(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>e<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/music_rate_in_proxy.cpp"/>
  </compounddef>
</doxygen>
