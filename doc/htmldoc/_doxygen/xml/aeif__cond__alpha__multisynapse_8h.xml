<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="aeif__cond__alpha__multisynapse_8h" kind="file" language="C++">
    <compoundname>aeif_cond_alpha_multisynapse.h</compoundname>
    <includes local="yes">config.h</includes>
    <includes local="no">sstream</includes>
    <includedby refid="aeif__cond__alpha__multisynapse_8cpp" local="yes">aeif_cond_alpha_multisynapse.cpp</includedby>
    <includedby refid="modelsmodule_8cpp" local="yes">modelsmodule.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>aeif_cond_alpha_multisynapse.h</label>
        <link refid="aeif__cond__alpha__multisynapse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>aeif_cond_alpha_multisynapse.cpp</label>
        <link refid="aeif__cond__alpha__multisynapse_8cpp"/>
      </node>
      <node id="1">
        <label>aeif_cond_alpha_multisynapse.h</label>
        <link refid="aeif__cond__alpha__multisynapse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>aeif_cond_alpha_multisynapse.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AEIF_COND_ALPHA_MULTISYNAPSE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AEIF_COND_ALPHA_MULTISYNAPSE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_matrix.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_odeiv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="archiving__node_8h" kindref="compound">archiving_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection_8h" kindref="compound">connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__types_8h" kindref="compound">nest_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ring__buffer_8h" kindref="compound">ring_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger_8h" kindref="compound">universal_data_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>neuron,<sp/>integrate-and-fire,<sp/>adaptive<sp/>threshold,<sp/>conductance-based</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">Short<sp/>description</highlight></codeline>
<codeline lineno="48"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">Conductance<sp/>based<sp/>adaptive<sp/>exponential<sp/>integrate-and-fire<sp/>neuron<sp/>model</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="53"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">``aeif_cond_alpha_multisynapse``<sp/>is<sp/>a<sp/>conductance-based<sp/>adaptive</highlight></codeline>
<codeline lineno="56"><highlight class="comment">exponential<sp/>integrate-and-fire<sp/>neuron<sp/>model<sp/>according<sp/>to<sp/>Brette<sp/>and</highlight></codeline>
<codeline lineno="57"><highlight class="comment">Gerstner<sp/>(2005)<sp/>with<sp/>multiple<sp/>synaptic<sp/>rise<sp/>time<sp/>and<sp/>decay<sp/>time</highlight></codeline>
<codeline lineno="58"><highlight class="comment">constants,<sp/>and<sp/>synaptic<sp/>conductance<sp/>modeled<sp/>by<sp/>an<sp/>alpha<sp/>function.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">It<sp/>allows<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>synaptic<sp/>time<sp/>constants.<sp/>Synaptic</highlight></codeline>
<codeline lineno="61"><highlight class="comment">conductance<sp/>is<sp/>modeled<sp/>by<sp/>an<sp/>alpha<sp/>function,<sp/>as<sp/>described<sp/>by<sp/>A.<sp/>Roth</highlight></codeline>
<codeline lineno="62"><highlight class="comment">and<sp/>M.<sp/>C.<sp/>W.<sp/>van<sp/>Rossum<sp/>in<sp/>Computational<sp/>Modeling<sp/>Methods<sp/>for</highlight></codeline>
<codeline lineno="63"><highlight class="comment">Neuroscientists,<sp/>MIT<sp/>Press<sp/>2013,<sp/>Chapter<sp/>6.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">The<sp/>time<sp/>constants<sp/>are<sp/>supplied<sp/>by<sp/>an<sp/>array,<sp/>``tau_syn``,<sp/>and<sp/>the<sp/>pertaining</highlight></codeline>
<codeline lineno="66"><highlight class="comment">synaptic<sp/>reversal<sp/>potentials<sp/>are<sp/>supplied<sp/>by<sp/>the<sp/>array<sp/>``E_rev``.<sp/>Port<sp/>numbers</highlight></codeline>
<codeline lineno="67"><highlight class="comment">are<sp/>automatically<sp/>assigned<sp/>in<sp/>the<sp/>range<sp/>from<sp/>1<sp/>to<sp/>n_receptors.</highlight></codeline>
<codeline lineno="68"><highlight class="comment">During<sp/>connection,<sp/>the<sp/>ports<sp/>are<sp/>selected<sp/>with<sp/>the<sp/>property<sp/>``receptor_type``.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">When<sp/>connecting<sp/>to<sp/>conductance-based<sp/>multisynapse<sp/>models,<sp/>all<sp/>synaptic<sp/>weights</highlight></codeline>
<codeline lineno="71"><highlight class="comment">must<sp/>be<sp/>non-negative.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment">The<sp/>membrane<sp/>potential<sp/>is<sp/>given<sp/>by<sp/>the<sp/>following<sp/>differential<sp/>equation:</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="76"><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>C<sp/>dV/dt<sp/>=<sp/>-g_L(V-E_L)<sp/>+<sp/>g_L<sp/>\cdot<sp/>\Delta_T<sp/>\cdot<sp/>\exp((V-V_T)/\Delta_T)</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>+<sp/>I_{syn_{tot}}(V,<sp/>t)-<sp/>w<sp/>+<sp/>I_e</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">where</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>I_{syn_{tot}}(V,t)<sp/>=<sp/>\sum_i<sp/>g_i(t)<sp/>(V<sp/>-<sp/>E_{rev,i})<sp/>,</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">the<sp/>synapse<sp/>`i`<sp/>is<sp/>excitatory<sp/>or<sp/>inhibitory<sp/>depending<sp/>on<sp/>the<sp/>value<sp/>of</highlight></codeline>
<codeline lineno="87"><highlight class="comment">:math:`E_{rev,i}`<sp/>and<sp/>the<sp/>differential<sp/>equation<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="88"><highlight class="comment">spike-adaptation<sp/>current<sp/>`w`<sp/>is</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>\tau_w<sp/>\cdot<sp/>dw/dt<sp/>=<sp/>a(V<sp/>-<sp/>E_L)<sp/>-<sp/>w</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">When<sp/>the<sp/>neuron<sp/>fires<sp/>a<sp/>spike,<sp/>the<sp/>adaptation<sp/>current<sp/>:math:`w<sp/>&lt;-<sp/>w<sp/>+<sp/>b`.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">For<sp/>implementation<sp/>details<sp/>see<sp/>the</highlight></codeline>
<codeline lineno="97"><highlight class="comment">`aeif_models_implementation<sp/>&lt;../model_details/aeif_models_implementation.ipynb&gt;`_<sp/>notebook.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">Parameters</highlight></codeline>
<codeline lineno="100"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">The<sp/>following<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>in<sp/>the<sp/>status<sp/>dictionary.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="105"><highlight class="comment">**Dynamic<sp/>state<sp/>variables:**</highlight></codeline>
<codeline lineno="106"><highlight class="comment">--------------------------------------------------------</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>V_m<sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Membrane<sp/>potential</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>w<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pA<sp/><sp/><sp/><sp/><sp/><sp/>Spike-adaptation<sp/>current</highlight></codeline>
<codeline lineno="109"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="112"><highlight class="comment">**Membrane<sp/>Parameters**</highlight></codeline>
<codeline lineno="113"><highlight class="comment">--------------------------------------------------------</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>C_m<sp/><sp/><sp/><sp/><sp/>pF<sp/><sp/><sp/><sp/><sp/><sp/>Capacity<sp/>of<sp/>the<sp/>membrane</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>t_ref<sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Duration<sp/>of<sp/>refractory<sp/>period</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>V_reset<sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Reset<sp/>value<sp/>for<sp/>V_m<sp/>after<sp/>a<sp/>spike</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>E_L<sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>g_L<sp/><sp/><sp/><sp/><sp/>nS<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>conductance</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>I_e<sp/><sp/><sp/><sp/><sp/>pA<sp/><sp/><sp/><sp/><sp/><sp/>Constant<sp/>external<sp/>input<sp/>current</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>Delta_T<sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Slope<sp/>factor</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>V_th<sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Spike<sp/>initiation<sp/>threshold</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>V_peak<sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Spike<sp/>detection<sp/>threshold</highlight></codeline>
<codeline lineno="123"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">========<sp/>=======<sp/>==================================</highlight></codeline>
<codeline lineno="126"><highlight class="comment">**Spike<sp/>adaptation<sp/>parameters**</highlight></codeline>
<codeline lineno="127"><highlight class="comment">---------------------------------------------------</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>a<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ns<sp/><sp/><sp/><sp/><sp/><sp/>Subthreshold<sp/>adaptation</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>b<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pA<sp/><sp/><sp/><sp/><sp/><sp/>Spike-triggered<sp/>adaptation</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>tau_w<sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Adaptation<sp/>time<sp/>constant</highlight></codeline>
<codeline lineno="131"><highlight class="comment">========<sp/>=======<sp/>==================================</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">========<sp/>=============<sp/>========================================================</highlight></codeline>
<codeline lineno="134"><highlight class="comment">**Synaptic<sp/>parameters**</highlight></codeline>
<codeline lineno="135"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="136"><highlight class="comment">E_rev<sp/><sp/><sp/><sp/>list<sp/>of<sp/>mV<sp/><sp/><sp/><sp/>Reversal<sp/>potential</highlight></codeline>
<codeline lineno="137"><highlight class="comment">tau_syn<sp/><sp/>list<sp/>of<sp/>ms<sp/><sp/><sp/><sp/>Time<sp/>constant<sp/>of<sp/>synaptic<sp/>conductance</highlight></codeline>
<codeline lineno="138"><highlight class="comment">========<sp/>=============<sp/>========================================================</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">=============<sp/>=======<sp/>=========================================================</highlight></codeline>
<codeline lineno="141"><highlight class="comment">**Integration<sp/>parameters**</highlight></codeline>
<codeline lineno="142"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="143"><highlight class="comment">gsl_error_tol<sp/>real<sp/><sp/><sp/><sp/>This<sp/>parameter<sp/>controls<sp/>the<sp/>admissible<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSL<sp/>integrator.<sp/>Reduce<sp/>it<sp/>if<sp/>NEST<sp/>complains<sp/>about</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical<sp/>instabilities.</highlight></codeline>
<codeline lineno="146"><highlight class="comment">=============<sp/>=======<sp/>=========================================================</highlight></codeline>
<codeline lineno="147"><highlight class="comment"></highlight></codeline>
<codeline lineno="148"><highlight class="comment">Sends</highlight></codeline>
<codeline lineno="149"><highlight class="comment">+++++</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">SpikeEvent</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">Receives</highlight></codeline>
<codeline lineno="154"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">SpikeEvent,<sp/>CurrentEvent,<sp/>DataLoggingRequest</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment">See<sp/>also</highlight></codeline>
<codeline lineno="159"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="160"><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment">aeif_cond_alpha_multisynapse</highlight></codeline>
<codeline lineno="162"><highlight class="comment"></highlight></codeline>
<codeline lineno="163"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aeif_cond_alpha_multisynapse_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">aeif_cond_alpha_multisynapse<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArchivingNode</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>aeif_cond_alpha_multisynapse();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>aeif_cond_alpha_multisynapse(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aeif_cond_alpha_multisynapse&amp;<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>~aeif_cond_alpha_multisynapse()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aeif_cond_alpha_multisynapse_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">Node::handle</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">Node::handles_test_event</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>send_test_event(<sp/>Node&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>SpikeEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>CurrentEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>DataLoggingRequest&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>SpikeEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>CurrentEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>DataLoggingRequest&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_buffers_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pre_run_hook()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>three<sp/>classes<sp/>need<sp/>to<sp/>be<sp/>friends<sp/>to<sp/>access<sp/>the<sp/>State_<sp/>class/member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DynamicRecordablesMap&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DynamicUniversalDataLogger&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataAccessFunctor&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parameters_</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V_peak_;<sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V_reset_;<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_ref_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">g_L</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">C_m</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">E_L</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a1a0c19ae36291eb1b9ad5a466691a8f3" kindref="member">Delta_T</ref>;<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a806424bc333ead688f64182a63f38b99" kindref="member">tau_w</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a7b383c5d74fcb49623336cdb4902fe4e" kindref="member">a</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a0c0feeb5503e2bbffd5e0a6edd7d3625" kindref="member">V_th</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1a228b1519e7af110298060b0c838896f5" kindref="member">tau_syn</ref>;<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/><ref refid="namespacenest_1_1names_1aa7c4e60c7380080de7393fabafeaa9a9" kindref="member">E_rev</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">I_e</ref>;<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a9fba7506acfb5e0be108ddf83814a2f6" kindref="member">gsl_error_tol</ref>;<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boolean<sp/>flag<sp/>which<sp/>indicates<sp/>whether<sp/>the<sp/>neuron<sp/>has<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_connections_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_();<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;,<sp/>Node*<sp/>node<sp/>);<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a5d3d216be7a1525d4bdcfd50e5eb3101" kindref="member">n_receptors</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa7c4e60c7380080de7393fabafeaa9a9" kindref="member">E_rev</ref>.size();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">State_</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StateVecElems</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_M<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W,<sp/><sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DG,<sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G,<sp/><sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STATE_VECTOR_MIN_SIZE</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUMBER_OF_FIXED_STATES_ELEMENTS<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>V_M,<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_STATE_ELEMENTS_PER_RECEPTOR<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>DG,<sp/>G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>y_;<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;,<sp/>Node*<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>};<sp/></highlight><highlight class="comment">//<sp/>State_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffers_</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/>aeif_cond_alpha_multisynapse&amp;<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>aeif_cond_alpha_multisynapse&amp;<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>DynamicUniversalDataLogger&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;<sp/>logger_;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>RingBuffer<sp/>&gt;<sp/>spikes_;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>RingBuffer<sp/>currents_;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step*<sp/>s_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control*<sp/>c_;<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve*<sp/>e_;<sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_system<sp/>sys_;<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>IntegrationStep_<sp/>is<sp/>initialized<sp/>with<sp/>step_,<sp/>and<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>change<sp/>after<sp/>nodes<sp/>have<sp/>been<sp/>created,<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>place<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IntegrationStep_;<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_stim_;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Variables_</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>g0_;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a9ab6322903e03ee802d9d6ba336984be" kindref="member">V_peak</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refractory_counts_;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>members<sp/>-----------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>Parameters_<sp/>P_;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>State_<sp/>S_;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>Variables_<sp/>V_;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>Buffers_<sp/>B_;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>functions<sp/>for<sp/>UniversalDataLogger<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>DynamicRecordablesMap&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;<sp/>recordablesMap_;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>Access<sp/>Functor<sp/>getter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>DataAccessFunctor&lt;<sp/>aeif_cond_alpha_multisynapse<sp/>&gt;<sp/>get_data_access_functor(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elem<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>get_state_element(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elem<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.y_[<sp/>elem<sp/>];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>that<sp/>inserts<sp/>the<sp/>synaptic<sp/>conductances<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recordables<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>Name<sp/>get_g_receptor_name(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>receptor<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert_conductance_recordables(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="396"><highlight class="normal">aeif_cond_alpha_multisynapse::send_test_event(<sp/>Node&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>SpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.handles_test_event(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>,<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="405"><highlight class="normal">aeif_cond_alpha_multisynapse::handles_test_event(<sp/>CurrentEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="415"><highlight class="normal">aeif_cond_alpha_multisynapse::handles_test_event(<sp/>DataLoggingRequest&amp;<sp/>dlr,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.logger_.connect_logging_device(<sp/>dlr,<sp/>recordablesMap_<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">aeif_cond_alpha_multisynapse::get_status(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="426"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>P_.get(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>S_.get(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ArchivingNode_1acd46838612262b4a5d4cacdf7d901145" kindref="member">ArchivingNode::get_status</ref>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1af23802d960e3bad87b63c3ec4b563176" kindref="member">names::recordables</ref><sp/>]<sp/>=<sp/>recordablesMap_.get_list();</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>AEIF_COND_ALPHA_MULTISYNAPSE_H<sp/>//</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/aeif_cond_alpha_multisynapse.h"/>
  </compounddef>
</doxygen>
