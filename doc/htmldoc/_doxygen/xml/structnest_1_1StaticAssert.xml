<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structnest_1_1StaticAssert" kind="struct" language="C++" prot="public">
    <compoundname>nest::StaticAssert</compoundname>
    <includes refid="static__assert_8h" local="no">static_assert.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Compile time assertions. </para>
    </briefdescription>
    <detaileddescription>
<para>Usage: <programlisting><codeline><highlight class="normal">static<sp/>const<sp/>StaticAssert&lt;bool-test&gt;::success<sp/>unique-var-name;</highlight></codeline>
</programlisting></para>
<para>or</para>
<para><programlisting><codeline><highlight class="normal">typedef<sp/>StaticAssert&lt;bool-test&gt;::success<sp/>unique-type-name;</highlight></codeline>
</programlisting></para>
<para>Allows compilation if the bool-test is true. If bool-test is false, fails to compile because success is not defined. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::StaticAssert&lt; bool &gt;</label>
        <link refid="structnest_1_1StaticAssert"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/static_assert.h" line="46" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/static_assert.h" bodystart="47" bodyend="48"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
