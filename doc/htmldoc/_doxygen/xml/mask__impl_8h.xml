<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mask__impl_8h" kind="file" language="C++">
    <compoundname>mask_impl.h</compoundname>
    <includes refid="mask_8h" local="yes">mask.h</includes>
    <includedby refid="layer_8cpp" local="yes">layer.cpp</includedby>
    <includedby refid="nestmodule_8cpp" local="yes">nestmodule.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="35">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>iterator</label>
      </node>
      <node id="51">
        <label>arraydatum.h</label>
      </node>
      <node id="14">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>stdint.h</label>
      </node>
      <node id="21">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>dictutils.h</label>
      </node>
      <node id="1">
        <label>mask_impl.h</label>
        <link refid="mask__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="39">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>stdexcept</label>
      </node>
      <node id="8">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>string</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="33">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>dict.h</label>
      </node>
      <node id="10">
        <label>cfloat</label>
      </node>
      <node id="28">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>ostream</label>
      </node>
      <node id="22">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="62">
        <label>slitype.h</label>
      </node>
      <node id="50">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>random</label>
      </node>
      <node id="61">
        <label>slimodule.h</label>
      </node>
      <node id="44">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>bitset</label>
      </node>
      <node id="46">
        <label>ctime</label>
      </node>
      <node id="43">
        <label>token.h</label>
      </node>
      <node id="27">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
      <node id="59">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="38">
        <label>utility</label>
      </node>
      <node id="40">
        <label>array</label>
      </node>
      <node id="41">
        <label>sstream</label>
      </node>
      <node id="60">
        <label>slifunction.h</label>
      </node>
      <node id="56">
        <label>randutils.hpp</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="32">
        <label>dictdatum.h</label>
      </node>
      <node id="31">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="19">
        <label>name.h</label>
      </node>
      <node id="45">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstddef</label>
      </node>
      <node id="15">
        <label>climits</label>
      </node>
      <node id="20">
        <label>sliexceptions.h</label>
      </node>
      <node id="2">
        <label>mask.h</label>
        <link refid="mask_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>type_traits</label>
      </node>
      <node id="4">
        <label>config.h</label>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>cstring</label>
      </node>
      <node id="47">
        <label>memory</label>
      </node>
      <node id="53">
        <label>initializer_list</label>
      </node>
      <node id="3">
        <label>numerics.h</label>
        <link refid="numerics_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>compose.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>layer.cpp</label>
        <link refid="layer_8cpp"/>
      </node>
      <node id="1">
        <label>mask_impl.h</label>
        <link refid="mask__impl_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nestmodule.cpp</label>
        <link refid="nestmodule_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>mask_impl.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MASK_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MASK_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mask_8h" kindref="compound">mask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">AbstractMask*</highlight></codeline>
<codeline lineno="33" refid="classnest_1_1Mask_1a26c865ca83050e6dff23c56ef880f702" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a26c865ca83050e6dff23c56ef880f702" kindref="member">Mask&lt; D &gt;::intersect_mask</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/>other_d<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;<ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_d<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Masks<sp/>must<sp/>have<sp/>same<sp/>number<sp/>of<sp/>dimensions.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1IntersectionMask" kindref="compound">IntersectionMask&lt; D &gt;</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*other_d<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref>*</highlight></codeline>
<codeline lineno="45" refid="classnest_1_1Mask_1ae6318d1bdb788014d3ab08b25c8cc240" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1ae6318d1bdb788014d3ab08b25c8cc240" kindref="member">Mask&lt; D &gt;::union_mask</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/>other_d<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;<ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_d<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Masks<sp/>must<sp/>have<sp/>same<sp/>number<sp/>of<sp/>dimensions.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1UnionMask" kindref="compound">UnionMask&lt; D &gt;</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*other_d<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref>*</highlight></codeline>
<codeline lineno="57" refid="classnest_1_1Mask_1ac19b409451836f97eeb0c884009ef6a2" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1ac19b409451836f97eeb0c884009ef6a2" kindref="member">Mask&lt; D &gt;::minus_mask</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/>other_d<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;<ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>other_d<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>(<sp/></highlight><highlight class="stringliteral">&quot;Masks<sp/>must<sp/>have<sp/>same<sp/>number<sp/>of<sp/>dimensions.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1DifferenceMask" kindref="compound">DifferenceMask&lt; D &gt;</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*other_d<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classnest_1_1Mask_1a8f5f7b1b18f31e4a927705b536c05a72" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">Mask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;<sp/>pt<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="70"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1af83e7e1d4ba3689610d5e9d44b60337b" kindref="member">inside</ref>(<sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>(<sp/>pt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classnest_1_1Mask_1a7b0e35f7bed34d2b143d322caad7b40d" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a7b0e35f7bed34d2b143d322caad7b40d" kindref="member">Mask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb<sp/>=<sp/>get_bbox();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right[<sp/>i<sp/>]<sp/>&lt;<sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>or<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left[<sp/>i<sp/>]<sp/>&gt;<sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classnest_1_1BoxMask_1aea241631da9ecae255d4bd1ef66b01ee" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">BoxMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1af83e7e1d4ba3689610d5e9d44b60337b" kindref="member">inside</ref>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left<sp/>)<sp/>and<sp/><ref refid="namespacenest_1af83e7e1d4ba3689610d5e9d44b60337b" kindref="member">inside</ref>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classnest_1_1BoxMask_1a322db758ec9f4d01613257696e47f14e" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BoxMask_1a322db758ec9f4d01613257696e47f14e" kindref="member">BoxMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>There<sp/>could<sp/>be<sp/>some<sp/>inconsistencies<sp/>with<sp/>the<sp/>boundaries.<sp/>For<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inside()<sp/>function<sp/>we<sp/>had<sp/>to<sp/>add<sp/>an<sp/>epsilon<sp/>because<sp/>of<sp/>rounding<sp/>errors<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>occur<sp/>if<sp/>node<sp/>IDs<sp/>are<sp/>on<sp/>the<sp/>boundary<sp/>if<sp/>we<sp/>have<sp/>rotation.<sp/>This<sp/>might<sp/>lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>overlap<sp/>of<sp/>the<sp/>inside<sp/>and<sp/>outside<sp/>functions.<sp/>None<sp/>of<sp/>the<sp/>tests<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>picked<sp/>up<sp/>any<sp/>problems<sp/>with<sp/>this<sp/>potential<sp/>overlap<sp/>as<sp/>of<sp/>yet<sp/>(autumn<sp/>2017),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>don&apos;t<sp/>know<sp/>if<sp/>it<sp/>is<sp/>an<sp/>actual<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right[<sp/>i<sp/>]<sp/>&lt;<sp/>min_values_[<sp/>i<sp/>]<sp/>or<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left[<sp/>i<sp/>]<sp/>&gt;<sp/>max_values_[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="118" refid="classnest_1_1BoxMask_1a6c1c222f2395dc1225cfdf7e88830e96" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BoxMask_1a6c1c222f2395dc1225cfdf7e88830e96" kindref="member">BoxMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/>min_values_,<sp/>max_values_<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="125" refid="classnest_1_1BoxMask_1aec86bd53af1d2965c6074c2e7199a916" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BoxMask_1aec86bd53af1d2965c6074c2e7199a916" kindref="member">BoxMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BoxMask" kindref="compound">BoxMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">DictionaryDatum</highlight></codeline>
<codeline lineno="132" refid="classnest_1_1BoxMask_1a76e6a22e7dae694f5fc51728e0cc14cf" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BoxMask_1a76e6a22e7dae694f5fc51728e0cc14cf" kindref="member">BoxMask&lt; D &gt;::get_dict</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>maskd(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>def&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>get_name(),<sp/>maskd<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>def&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a75e71dfa981ee8509c2aa146b7e396a8" kindref="member">names::lower_left</ref>,<sp/>lower_left_.get_vector()<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>def&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a7fb918b2ff99e770996f82413334e9fa" kindref="member">names::upper_right</ref>,<sp/>upper_right_.get_vector()<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a323de702e5fcaa35e5a340b111d9d8c7" kindref="member">names::azimuth_angle</ref>,<sp/>azimuth_angle_<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1aa417330e403a076c8081b89c104e8b9d" kindref="member">names::polar_angle</ref>,<sp/>polar_angle_<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classnest_1_1BallMask_1aa1333e47b3ea84a0df6259f7afa6ca1b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">BallMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimizing<sp/>by<sp/>trying<sp/>to<sp/>avoid<sp/>expensive<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dim_sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>check<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>di<sp/>=<sp/>std::abs(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref>[<sp/>i<sp/>]<sp/>-<sp/>center_[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>di<sp/>&gt;<sp/>radius_<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>dim_sum<sp/>+=<sp/>di;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Next,<sp/>check<sp/>if<sp/>we<sp/>are<sp/>inside<sp/>a<sp/>diamond<sp/>(rotated<sp/>square),<sp/>which<sp/>fits<sp/>inside<sp/>the<sp/>ball.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dim_sum<sp/>&lt;=<sp/>radius_<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Point<sp/>must<sp/>be<sp/>somewhere<sp/>between<sp/>the<sp/>ball<sp/>mask<sp/>edge<sp/>and<sp/>the<sp/>diamond<sp/>edge,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>revert<sp/>to<sp/>expensive<sp/>calculation<sp/>in<sp/>this<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>-<sp/>center_<sp/>).length()<sp/>&lt;=<sp/>radius_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classnest_1_1BallMask_1a9e776c941a7dbe9283dbe01c1e8c434b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BallMask_1a9e776c941a7dbe9283dbe01c1e8c434b" kindref="member">BallMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>checks<sp/>if<sp/>the<sp/>box<sp/>is<sp/>outside<sp/>the<sp/>bounding<sp/>box<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ball.<sp/>This<sp/>could<sp/>be<sp/>made<sp/>more<sp/>refined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right[<sp/>i<sp/>]<sp/>&lt;<sp/>center_[<sp/>i<sp/>]<sp/>-<sp/>radius_<sp/>or<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left[<sp/>i<sp/>]<sp/>&gt;<sp/>center_[<sp/>i<sp/>]<sp/>+<sp/>radius_<sp/>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="188" refid="classnest_1_1BallMask_1afa453afb7170dfe250771822e8a592ae" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BallMask_1afa453afb7170dfe250771822e8a592ae" kindref="member">BallMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb(<sp/>center_,<sp/>center_<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>-=<sp/>radius_;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>+=<sp/>radius_;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bb;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="201" refid="classnest_1_1BallMask_1acd33fd08014eb4997e6ca73975d42790" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BallMask_1acd33fd08014eb4997e6ca73975d42790" kindref="member">BallMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="202"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BallMask" kindref="compound">BallMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">DictionaryDatum</highlight></codeline>
<codeline lineno="208" refid="classnest_1_1BallMask_1a2350c9669f42bfb9e8a74c256cd0ebaf" refkind="member"><highlight class="normal"><ref refid="classnest_1_1BallMask_1a2350c9669f42bfb9e8a74c256cd0ebaf" kindref="member">BallMask&lt; D &gt;::get_dict</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>maskd(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>def&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>get_name(),<sp/>maskd<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a8f817af25b26e2bd60c68d56296200b9" kindref="member">names::radius</ref>,<sp/>radius_<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>def&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref>,<sp/>center_.get_vector()<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classnest_1_1EllipseMask_1a301acea8cd6cac2977ee38fdd48923c7" refkind="member"><highlight class="normal"><ref refid="classnest_1_1EllipseMask_1a301acea8cd6cac2977ee38fdd48923c7" kindref="member">EllipseMask&lt; D &gt;::create_bbox_</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>assumes<sp/>3D<sp/>when<sp/>constructing<sp/>the<sp/>radius<sp/>vector.<sp/>This<sp/>could<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>avoided<sp/>with<sp/>more<sp/>if<sp/>tests,<sp/>but<sp/>the<sp/>vector<sp/>is<sp/>only<sp/>made<sp/>once<sp/>and<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>big.<sp/>The<sp/>construction<sp/>of<sp/>the<sp/>box<sp/>is<sp/>done<sp/>in<sp/>accordance<sp/>with<sp/>the<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>radii(<sp/>3<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>azimuth_angle_<sp/>==<sp/>0.0<sp/>and<sp/>polar_angle_<sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>0<sp/>]<sp/>=<sp/>major_axis_<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>1<sp/>]<sp/>=<sp/>minor_axis_<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>2<sp/>]<sp/>=<sp/>polar_axis_<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ellipse<sp/>or<sp/>ellipsoid<sp/>is<sp/>tilted,<sp/>we<sp/>make<sp/>the<sp/>boundary<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>quadratic,<sp/>with<sp/>the<sp/>length<sp/>of<sp/>the<sp/>sides<sp/>equal<sp/>to<sp/>the<sp/>axis<sp/>with<sp/>greatest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length.<sp/>This<sp/>could<sp/>be<sp/>more<sp/>refined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>greatest_semi_axis<sp/>=<sp/><ref refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730" kindref="member">std::max</ref>(<sp/>major_axis_,<sp/>polar_axis_<sp/>)<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>0<sp/>]<sp/>=<sp/>greatest_semi_axis;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>1<sp/>]<sp/>=<sp/>greatest_semi_axis;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>radii[<sp/>2<sp/>]<sp/>=<sp/>greatest_semi_axis;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox_.lower_left[<sp/>i<sp/>]<sp/>=<sp/>center_[<sp/>i<sp/>]<sp/>-<sp/>radii[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox_.upper_right[<sp/>i<sp/>]<sp/>=<sp/>center_[<sp/>i<sp/>]<sp/>+<sp/>radii[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classnest_1_1EllipseMask_1aea912e19bfb39eb9bafad15a3bce3b9c" refkind="member"><highlight class="normal"><ref refid="classnest_1_1EllipseMask_1aea912e19bfb39eb9bafad15a3bce3b9c" kindref="member">EllipseMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="254"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>only<sp/>checks<sp/>if<sp/>the<sp/>box<sp/>is<sp/>outside<sp/>the<sp/>bounding<sp/>box<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ellipse.<sp/>This<sp/>could<sp/>be<sp/>made<sp/>more<sp/>refined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/>bb<sp/>=<sp/>bbox_;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right[<sp/>i<sp/>]<sp/>&lt;<sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>or<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left[<sp/>i<sp/>]<sp/>&gt;<sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="272" refid="classnest_1_1EllipseMask_1ad947dff3bfd811f39a0c3a7d83523e3d" refkind="member"><highlight class="normal"><ref refid="classnest_1_1EllipseMask_1ad947dff3bfd811f39a0c3a7d83523e3d" kindref="member">EllipseMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="273"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bbox_;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="279" refid="classnest_1_1EllipseMask_1a32fba5364c9a24e0db08dcf780a5c0da" refkind="member"><highlight class="normal"><ref refid="classnest_1_1EllipseMask_1a32fba5364c9a24e0db08dcf780a5c0da" kindref="member">EllipseMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="280"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1EllipseMask" kindref="compound">EllipseMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">DictionaryDatum</highlight></codeline>
<codeline lineno="286" refid="classnest_1_1EllipseMask_1a8d6841133f95384364d6dd5838f027b7" refkind="member"><highlight class="normal"><ref refid="classnest_1_1EllipseMask_1a8d6841133f95384364d6dd5838f027b7" kindref="member">EllipseMask&lt; D &gt;::get_dict</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="287"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/>maskd(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>def&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>get_name(),<sp/>maskd<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1ab2a9f513fb6ef6bd26974a9274d283d1" kindref="member">names::major_axis</ref>,<sp/>major_axis_<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a809c7a36e162a46afa6f3ad75c798139" kindref="member">names::minor_axis</ref>,<sp/>minor_axis_<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1acde35daead1d278f3f9d313aca4386e8" kindref="member">names::polar_axis</ref>,<sp/>polar_axis_<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>def&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref>,<sp/>center_.get_vector()<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1a323de702e5fcaa35e5a340b111d9d8c7" kindref="member">names::azimuth_angle</ref>,<sp/>azimuth_angle_<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/>maskd,<sp/><ref refid="namespacenest_1_1names_1aa417330e403a076c8081b89c104e8b9d" kindref="member">names::polar_angle</ref>,<sp/>polar_angle_<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classnest_1_1IntersectionMask_1af98ed3b6f15fa235730b261d3912963b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">IntersectionMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)<sp/>and<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classnest_1_1IntersectionMask_1ad7c29ac3f2faf7dd0ba04bce7d357b73" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">IntersectionMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="311"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>and<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classnest_1_1IntersectionMask_1a9edbc98ac29ff15842141a0b7fd0f0d4" refkind="member"><highlight class="normal"><ref refid="classnest_1_1IntersectionMask_1a9edbc98ac29ff15842141a0b7fd0f0d4" kindref="member">IntersectionMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>or<sp/>mask2_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="324" refid="classnest_1_1IntersectionMask_1a3093a52d626ca1b8363b8124b4299153" refkind="member"><highlight class="normal"><ref refid="classnest_1_1IntersectionMask_1a3093a52d626ca1b8363b8124b4299153" kindref="member">IntersectionMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="325"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb<sp/>=<sp/>mask1_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb2<sp/>=<sp/>mask2_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bb2.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>&gt;<sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>=<sp/>bb2.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bb2.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>&lt;<sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>=<sp/>bb2.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bb;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="344" refid="classnest_1_1IntersectionMask_1a7d1bfde8434919e8cbf00d180550364b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1IntersectionMask_1a7d1bfde8434919e8cbf00d180550364b" kindref="member">IntersectionMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="345"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1IntersectionMask" kindref="compound">IntersectionMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classnest_1_1UnionMask_1a485d2090f419ab681f7d385fd7d8c445" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">UnionMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)<sp/>or<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classnest_1_1UnionMask_1add6c7bfb4a10d49c91e338b2793f148d" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">UnionMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="359"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>or<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classnest_1_1UnionMask_1ace8240b0e3b49ed4936aba7b55251186" refkind="member"><highlight class="normal"><ref refid="classnest_1_1UnionMask_1ace8240b0e3b49ed4936aba7b55251186" kindref="member">UnionMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="366"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>and<sp/>mask2_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="372" refid="classnest_1_1UnionMask_1a5d05be9a0c42df0b2fcc82ae0b502c93" refkind="member"><highlight class="normal"><ref refid="classnest_1_1UnionMask_1a5d05be9a0c42df0b2fcc82ae0b502c93" kindref="member">UnionMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="373"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb<sp/>=<sp/>mask1_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb2<sp/>=<sp/>mask2_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>D;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bb2.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>&lt;<sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>]<sp/>=<sp/>bb2.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref>[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bb2.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>&gt;<sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>]<sp/>=<sp/>bb2.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bb;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="392" refid="classnest_1_1UnionMask_1aeb1c46c09d667b5380c2fac2f85077c3" refkind="member"><highlight class="normal"><ref refid="classnest_1_1UnionMask_1aeb1c46c09d667b5380c2fac2f85077c3" kindref="member">UnionMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1UnionMask" kindref="compound">UnionMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classnest_1_1DifferenceMask_1ac21318e7d0f67ca3696c9c32269a47d8" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">DifferenceMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="400"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)<sp/>and<sp/>not<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classnest_1_1DifferenceMask_1a3ed4c69b087ed5a1c0cad0a64a8c79c2" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">DifferenceMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="407"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>and<sp/>mask2_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="classnest_1_1DifferenceMask_1a7c8a8e942970876ccd1340cbfaa947bf" refkind="member"><highlight class="normal"><ref refid="classnest_1_1DifferenceMask_1a7c8a8e942970876ccd1340cbfaa947bf" kindref="member">DifferenceMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="414"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;outside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)<sp/>or<sp/>mask2_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="420" refid="classnest_1_1DifferenceMask_1a1badb3807d5b7c12fa1514115817684a" refkind="member"><highlight class="normal"><ref refid="classnest_1_1DifferenceMask_1a1badb3807d5b7c12fa1514115817684a" kindref="member">DifferenceMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask1_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="427" refid="classnest_1_1DifferenceMask_1a612505a3b99f369e36f66cc75796ac7b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1DifferenceMask_1a612505a3b99f369e36f66cc75796ac7b" kindref="member">DifferenceMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="428"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1DifferenceMask" kindref="compound">DifferenceMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classnest_1_1ConverseMask_1a33e5a2e02fa5cf33a30ccb499df455b4" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">ConverseMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="435"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;inside(<sp/>-<ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classnest_1_1ConverseMask_1a03470e5fa16fddad3e441be0b7979252" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">ConverseMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="442"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;inside(<sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/>-<ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right,<sp/>-<ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classnest_1_1ConverseMask_1aa2d242b9dbb50cf44e1098993a860bf8" refkind="member"><highlight class="normal"><ref refid="classnest_1_1ConverseMask_1aa2d242b9dbb50cf44e1098993a860bf8" kindref="member">ConverseMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="449"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;outside(<sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/>-<ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right,<sp/>-<ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="455" refid="classnest_1_1ConverseMask_1a14ae007c33bb42534c83955ded4f875e" refkind="member"><highlight class="normal"><ref refid="classnest_1_1ConverseMask_1a14ae007c33bb42534c83955ded4f875e" kindref="member">ConverseMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="456"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb<sp/>=<sp/>m_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/>-bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref>,<sp/>-bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref><sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="463" refid="classnest_1_1ConverseMask_1a8d085ed4cd4fd697594489b8438f10a6" refkind="member"><highlight class="normal"><ref refid="classnest_1_1ConverseMask_1a8d085ed4cd4fd697594489b8438f10a6" kindref="member">ConverseMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="464"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1ConverseMask" kindref="compound">ConverseMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="classnest_1_1AnchoredMask_1a71c77edf77f094e97c30df9bbd54a9a4" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">AnchoredMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Position" kindref="compound">Position&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;inside(<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>-<sp/>anchor_<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classnest_1_1AnchoredMask_1aadac8662743ac595a8c641f321715bdf" refkind="member"><highlight class="normal"><ref refid="classnest_1_1Mask_1a20df18bae0e8e78e06c68b6654f1ca8c" kindref="member">AnchoredMask&lt; D &gt;::inside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="478"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;inside(<sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left<sp/>-<sp/>anchor_,<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right<sp/>-<sp/>anchor_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="classnest_1_1AnchoredMask_1a07172e23c56ce5e5c90e77b87671fd07" refkind="member"><highlight class="normal"><ref refid="classnest_1_1AnchoredMask_1a07172e23c56ce5e5c90e77b87671fd07" kindref="member">AnchoredMask&lt; D &gt;::outside</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="485"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_-&gt;outside(<sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.lower_left<sp/>-<sp/>anchor_,<sp/><ref refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e" kindref="member">b</ref>.upper_right<sp/>-<sp/>anchor_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref></highlight></codeline>
<codeline lineno="491" refid="classnest_1_1AnchoredMask_1a0cb880e91532f0d303e2b4d26bedee54" refkind="member"><highlight class="normal"><ref refid="classnest_1_1AnchoredMask_1a0cb880e91532f0d303e2b4d26bedee54" kindref="member">AnchoredMask&lt; D &gt;::get_bbox</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="492"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref><sp/>bb<sp/>=<sp/>m_-&gt;get_bbox();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1Box" kindref="compound">Box&lt; D &gt;</ref>(<sp/>bb.<ref refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" kindref="member">lower_left</ref><sp/>+<sp/>anchor_,<sp/>bb.<ref refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" kindref="member">upper_right</ref><sp/>+<sp/>anchor_<sp/>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><ref refid="classnest_1_1Mask" kindref="compound">Mask&lt; D &gt;</ref>*</highlight></codeline>
<codeline lineno="499" refid="classnest_1_1AnchoredMask_1ac41968806bec80b9b6dc8617873f9176" refkind="member"><highlight class="normal"><ref refid="classnest_1_1AnchoredMask_1ac41968806bec80b9b6dc8617873f9176" kindref="member">AnchoredMask&lt; D &gt;::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="500"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1AnchoredMask" kindref="compound">AnchoredMask</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D<sp/>&gt;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">DictionaryDatum</highlight></codeline>
<codeline lineno="506" refid="classnest_1_1AnchoredMask_1a42dbfeed6de00b9ba25426fa6be4bdfa" refkind="member"><highlight class="normal"><ref refid="classnest_1_1AnchoredMask_1a42dbfeed6de00b9ba25426fa6be4bdfa" kindref="member">AnchoredMask&lt; D &gt;::get_dict</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="507"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/>m_-&gt;get_dict();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>def&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5" kindref="member">names::anchor</ref>,<sp/>anchor_.get_vector()<sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask_impl.h"/>
  </compounddef>
</doxygen>
