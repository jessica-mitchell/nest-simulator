<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="node__manager_8cpp" kind="file" language="C++">
    <compoundname>node_manager.cpp</compoundname>
    <includes refid="node__manager_8h" local="yes">node_manager.h</includes>
    <includes local="no">set</includes>
    <includes local="yes">compose.hpp</includes>
    <includes refid="logging_8h" local="yes">logging.h</includes>
    <includes refid="event__delivery__manager_8h" local="yes">event_delivery_manager.h</includes>
    <includes refid="genericmodel_8h" local="yes">genericmodel.h</includes>
    <includes refid="kernel__manager_8h" local="yes">kernel_manager.h</includes>
    <includes refid="model_8h" local="yes">model.h</includes>
    <includes refid="model__manager__impl_8h" local="yes">model_manager_impl.h</includes>
    <includes refid="node_8h" local="yes">node.h</includes>
    <includes refid="vp__manager_8h" local="yes">vp_manager.h</includes>
    <includes refid="vp__manager__impl_8h" local="yes">vp_manager_impl.h</includes>
    <includes local="yes">dictutils.h</includes>
    <incdepgraph>
      <node id="86">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="43">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iterator</label>
      </node>
      <node id="124">
        <label>target_identifier.h</label>
        <link refid="target__identifier_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>arraydatum.h</label>
      </node>
      <node id="5">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>mpi_manager_impl.h</label>
        <link refid="mpi__manager__impl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="84">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="53">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>string_utils.h</label>
        <link refid="string__utils_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>dictutils.h</label>
      </node>
      <node id="35">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cmath</label>
      </node>
      <node id="16">
        <label>cassert</label>
      </node>
      <node id="47">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>stdexcept</label>
      </node>
      <node id="77">
        <label>numeric</label>
      </node>
      <node id="122">
        <label>model_manager_impl.h</label>
        <link refid="model__manager__impl_8h"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>string</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="121">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>aggregatedatum.h</label>
      </node>
      <node id="65">
        <label>dict.h</label>
      </node>
      <node id="31">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cfloat</label>
      </node>
      <node id="39">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>ostream</label>
      </node>
      <node id="34">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="92">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>slitype.h</label>
      </node>
      <node id="106">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>allocator.h</label>
      </node>
      <node id="98">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>enum_bitfield.h</label>
        <link refid="enum__bitfield_8h"/>
      </node>
      <node id="82">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>random</label>
      </node>
      <node id="68">
        <label>slimodule.h</label>
      </node>
      <node id="52">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>bitset</label>
      </node>
      <node id="1">
        <label>node_manager.cpp</label>
        <link refid="node__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>ctime</label>
      </node>
      <node id="51">
        <label>token.h</label>
      </node>
      <node id="102">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>unistd.h</label>
      </node>
      <node id="38">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="66">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="72">
        <label>block_vector.h</label>
        <link refid="block__vector_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>new</label>
      </node>
      <node id="78">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>utility</label>
      </node>
      <node id="48">
        <label>array</label>
      </node>
      <node id="49">
        <label>sstream</label>
      </node>
      <node id="125">
        <label>vp_manager_impl.h</label>
        <link refid="vp__manager__impl_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>slifunction.h</label>
      </node>
      <node id="110">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>randutils.hpp</label>
      </node>
      <node id="25">
        <label>cstdlib</label>
      </node>
      <node id="118">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>dictdatum.h</label>
      </node>
      <node id="15">
        <label>sys/time.h</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>name.h</label>
      </node>
      <node id="54">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="80">
        <label>deque</label>
      </node>
      <node id="109">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="114">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>sliexceptions.h</label>
      </node>
      <node id="112">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>vector_util.h</label>
        <link refid="vector__util_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>type_traits</label>
      </node>
      <node id="119">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="11">
        <label>config.h</label>
      </node>
      <node id="18">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>algorithm</label>
      </node>
      <node id="75">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>cstring</label>
      </node>
      <node id="96">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>memory</label>
      </node>
      <node id="101">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>logging.h</label>
        <link refid="logging_8h"/>
      </node>
      <node id="61">
        <label>initializer_list</label>
      </node>
      <node id="27">
        <label>numerics.h</label>
        <link refid="numerics_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>compose.hpp</label>
      </node>
      <node id="93">
        <label>sort.h</label>
        <link refid="sort_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stopwatch.h</label>
        <link refid="stopwatch_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>node_manager.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="node__manager_8h" kindref="compound">node_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compose.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logging_8h" kindref="compound">logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event__delivery__manager_8h" kindref="compound">event_delivery_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericmodel_8h" kindref="compound">genericmodel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8h" kindref="compound">model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model__manager__impl_8h" kindref="compound">model_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="node_8h" kindref="compound">node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vp__manager_8h" kindref="compound">vp_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vp__manager__impl_8h" kindref="compound">vp_manager_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dictutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classnest_1_1NodeManager_1a75edf1b8841759b88e502b28b0589766" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a75edf1b8841759b88e502b28b0589766" kindref="member">NodeManager::NodeManager</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>:<sp/>local_nodes_(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>,<sp/>wfr_nodes_vec_()</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>,<sp/>wfr_is_used_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>,<sp/>wfr_network_size_(<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>zero<sp/>to<sp/>force<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>,<sp/>num_active_nodes_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>,<sp/>num_thread_local_devices_()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>,<sp/>have_nodes_changed_(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>,<sp/>exceptions_raised_()<sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>call<sp/>kernel(),<sp/>not<sp/>complete<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classnest_1_1NodeManager_1a1533a039c29ab6a51bab1987a3136ab3" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a1533a039c29ab6a51bab1987a3136ab3" kindref="member">NodeManager::~NodeManager</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>destruct<sp/>nodes<sp/>here,<sp/>since<sp/>devices<sp/>may<sp/>need<sp/>to<sp/>close<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a9b271216cabc00dd720e6ee280e5c7ec" kindref="member">destruct_nodes_</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classnest_1_1NodeManager_1a1add23cb71fcdd7bba78421494f3dca1" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a1add23cb71fcdd7bba78421494f3dca1" kindref="member">NodeManager::initialize</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>force<sp/>construction<sp/>of<sp/>wfr_nodes_vec_<sp/>to<sp/>ensure<sp/>consistent<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1aebcb5f3d56a9fef4299a18898e495f7b" kindref="member">wfr_network_size_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>.resize(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>.resize(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a801fd82238c17423ed9dfda3f512602a" kindref="member">ensure_valid_thread_local_ids</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a8c0b5c1af05747706bf5d7f6f624f13c" kindref="member">sw_construction_create_</ref>.<ref refid="classnest_1_1Stopwatch_1ae5b0aeb25872f4e6d630384e27f22559" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classnest_1_1NodeManager_1ac08841a5dbcf756fb1796d690bcc73dc" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ac08841a5dbcf756fb1796d690bcc73dc" kindref="member">NodeManager::finalize</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a9b271216cabc00dd720e6ee280e5c7ec" kindref="member">destruct_nodes_</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classnest_1_1NodeManager_1a9700eb7f8939c4db871d9483b7c8d188" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a9700eb7f8939c4db871d9483b7c8d188" kindref="member">NodeManager::change_number_of_threads</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>nodes<sp/>exist<sp/>at<sp/>this<sp/>point,<sp/>so<sp/>nothing<sp/>to<sp/>tear<sp/>down.<sp/>See</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>checks<sp/>for<sp/>node_manager.size()<sp/>in<sp/>VPManager::set_status()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a1add23cb71fcdd7bba78421494f3dca1" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">DictionaryDatum</highlight></codeline>
<codeline lineno="93" refid="classnest_1_1NodeManager_1a8dff5dbae74f671b28513c2bfa402675" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a4c9026ded8f30c78fc99cc9ca690f601" kindref="member">NodeManager::get_status</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>idx<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>=<sp/><ref refid="classnest_1_1NodeManager_1ad376a94a0b04bdbe90d6d2205f133aed" kindref="member">get_mpi_local_node_or_device_head</ref>(<sp/>idx<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>DictionaryDatum<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>-&gt;get_status_base();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></highlight></codeline>
<codeline lineno="105" refid="classnest_1_1NodeManager_1a8e6c4a313d6bf3d30f0d0ef111567575" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a8e6c4a313d6bf3d30f0d0ef111567575" kindref="member">NodeManager::add_node</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/><ref refid="namespacenest_1_1names_1ab7414ebe7026db2392fb2cc8e6d0e885" kindref="member">model_id</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a8c0b5c1af05747706bf5d7f6f624f13c" kindref="member">sw_construction_create_</ref>.<ref refid="classnest_1_1Stopwatch_1ae80b1941ac79667732c90314755b017a" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a52f1f074e2f17109e68704897a9a2976" kindref="member">have_nodes_changed_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1BadProperty" kindref="compound">BadProperty</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Model" kindref="compound">Model</ref>*<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1a8058f85d46bd4af4c2f726be59aa269b" kindref="member">get_node_model</ref>(<sp/><ref refid="namespacenest_1_1names_1ab7414ebe7026db2392fb2cc8e6d0e885" kindref="member">model_id</ref><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>-&gt;deprecation_warning(<sp/></highlight><highlight class="stringliteral">&quot;Create&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>min_node_id<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>.at(<sp/>0<sp/>).get_max_node_id()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>max_node_id<sp/>=<sp/>min_node_id<sp/>+<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>max_node_id<sp/>&lt;<sp/>min_node_id<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" kindref="member">LOG</ref>(<sp/><ref refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" kindref="member">M_ERROR</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NodeManager::add_node&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requested<sp/>number<sp/>of<sp/>nodes<sp/>will<sp/>overflow<sp/>the<sp/>memory.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>nodes<sp/>were<sp/>created&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1KernelException" kindref="compound">KernelException</ref>(<sp/></highlight><highlight class="stringliteral">&quot;OutOfMemory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a81f62008f5752675d486a9d91ef05831" kindref="member">modelrange_manager</ref>.<ref refid="classnest_1_1ModelRangeManager_1a1ccd0037bf5e449cac22d80711fc7793" kindref="member">add_range</ref>(<sp/><ref refid="namespacenest_1_1names_1ab7414ebe7026db2392fb2cc8e6d0e885" kindref="member">model_id</ref>,<sp/>min_node_id,<sp/>max_node_id<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>any<sp/>exceptions<sp/>from<sp/>previous<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;<sp/>&gt;(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>()<sp/>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" kindref="member">swap</ref>(<sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nc_ptr<sp/>=<sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref>(<sp/>min_node_id,<sp/>max_node_id,<sp/><ref refid="namespacenest_1_1names_1ab7414ebe7026db2392fb2cc8e6d0e885" kindref="member">model_id</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>-&gt;has_proxies()<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a2fdd0174dbf1bf97c20a37bea8867140" kindref="member">add_neurons_</ref>(<sp/>*<ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/>min_node_id,<sp/>max_node_id,<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>-&gt;one_node_per_process()<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a0c14759edc75eb1c32c8d1ba475a69b2" kindref="member">add_devices_</ref>(<sp/>*<ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/>min_node_id,<sp/>max_node_id,<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1ad949c0a73a73c3be7b24d7ba4ed0175a" kindref="member">add_music_nodes_</ref>(<sp/>*<ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/>min_node_id,<sp/>max_node_id,<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>any<sp/>exceptions<sp/>have<sp/>been<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++t<sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref>.at(<sp/>t<sp/>).get()<sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>*(<sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref>.at(<sp/>t<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>activate<sp/>off-grid<sp/>communication<sp/>only<sp/>after<sp/>nodes<sp/>have<sp/>been<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>-&gt;is_off_grid()<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" kindref="member">event_delivery_manager</ref>.<ref refid="classnest_1_1EventDeliveryManager_1abecd604a0371f3f9a0625ceb9795ee36" kindref="member">set_off_grid_communication</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" kindref="member">LOG</ref>(<sp/><ref refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" kindref="member">M_INFO</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NodeManager::add_node&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Neuron<sp/>models<sp/>emitting<sp/>precisely<sp/>timed<sp/>spikes<sp/>exist:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>kernel<sp/>property<sp/>off_grid_spiking<sp/>has<sp/>been<sp/>set<sp/>to<sp/>true.\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;NOTE:<sp/>Mixing<sp/>precise-spiking<sp/>and<sp/>normal<sp/>neuron<sp/>models<sp/>may<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lead<sp/>to<sp/>inconsistent<sp/>results.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>resize<sp/>the<sp/>target<sp/>table<sp/>for<sp/>delivery<sp/>of<sp/>events<sp/>to<sp/>devices<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sure<sp/>the<sp/>first<sp/>dimension<sp/>matches<sp/>the<sp/>number<sp/>of<sp/>local<sp/>nodes<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>dimension<sp/>matches<sp/>number<sp/>of<sp/>synapse<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a8ac8d6d68a9cde77289adee0f18bb03c" kindref="member">resize_target_table_devices_to_number_of_neurons</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1ConnectionManager_1a7c615b8040991ef941ed79f1da616e62" kindref="member">resize_target_table_devices_to_number_of_synapse_types</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a8c0b5c1af05747706bf5d7f6f624f13c" kindref="member">sw_construction_create_</ref>.<ref refid="classnest_1_1Stopwatch_1ae7799c842d1a9a6c65e65d686025ba2d" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nc_ptr;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classnest_1_1NodeManager_1a2fdd0174dbf1bf97c20a37bea8867140" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a2fdd0174dbf1bf97c20a37bea8867140" kindref="member">NodeManager::add_neurons_</ref>(<sp/><ref refid="classnest_1_1Model" kindref="compound">Model</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>min_node_id,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>max_node_id,<sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>nc_ptr<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_vps<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a8ddd2beb1aea2c9385b93ad4b842a2cb" kindref="member">get_num_virtual_processes</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Upper<sp/>limit<sp/>for<sp/>number<sp/>of<sp/>neurons<sp/>per<sp/>thread;<sp/>in<sp/>practice,<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max_new_per_thread-1<sp/>or<sp/>max_new_per_thread<sp/>nodes<sp/>will<sp/>be<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_new_per_thread<sp/>=</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>std::ceil(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>max_node_id<sp/>-<sp/>min_node_id<sp/>+<sp/>1<sp/>)<sp/>/<sp/>num_vps<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.reserve_additional(<sp/>t,<sp/>max_new_per_thread<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>find<sp/>smallest<sp/>node<sp/>ID<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>node<sp/>ID<sp/>local<sp/>to<sp/>this<sp/>vp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>-<sp/>node_id<sp/>&gt;=<sp/>min_node_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1aa3d11af1445df6d186a4be6a5bbd5b3f" kindref="member">thread_to_vp</ref>(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_node_id_vp<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a847b957940c17b0a9c912facf1996f3c" kindref="member">node_id_to_vp</ref>(<sp/>min_node_id<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>node_id<sp/>=<sp/>min_node_id<sp/>+<sp/>(<sp/>num_vps<sp/>+<sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>-<sp/>min_node_id_vp<sp/>)<sp/>%<sp/>num_vps;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>node_id<sp/>&lt;=<sp/>max_node_id<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.create(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" kindref="member">set_node_id_</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" kindref="member">set_nc_</ref>(<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" kindref="member">set_model_id</ref>(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.get_model_id()<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" kindref="member">set_thread</ref>(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" kindref="member">set_vp</ref>(<sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" kindref="member">set_initialized</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].add_local_node(<sp/>*node<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_id<sp/>+=<sp/>num_vps;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].set_max_node_id(<sp/>max_node_id<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>create<sp/>a<sp/>new<sp/>exception<sp/>here,<sp/>err&apos;s<sp/>lifetime<sp/>ends<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>catch<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref>.at(<sp/>t<sp/>)<sp/>=<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classnest_1_1NodeManager_1a0c14759edc75eb1c32c8d1ba475a69b2" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a0c14759edc75eb1c32c8d1ba475a69b2" kindref="member">NodeManager::add_devices_</ref>(<sp/><ref refid="classnest_1_1Model" kindref="compound">Model</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>min_node_id,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>max_node_id,<sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>nc_ptr<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_per_thread<sp/>=<sp/>max_node_id<sp/>-<sp/>min_node_id<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.reserve_additional(<sp/>t,<sp/>n_per_thread<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>min_node_id;<sp/>node_id<sp/>&lt;=<sp/>max_node_id;<sp/>++node_id<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>track<sp/>of<sp/>number<sp/>of<sp/>thread<sp/>local<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>[<sp/>t<sp/>];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.create(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" kindref="member">set_node_id_</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" kindref="member">set_nc_</ref>(<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" kindref="member">set_model_id</ref>(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.get_model_id()<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" kindref="member">set_thread</ref>(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" kindref="member">set_vp</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.thread_to_vp(<sp/>t<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a7d4d7c594bd3cfbf892f040f248ac153" kindref="member">set_local_device_id</ref>(<sp/><ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>[<sp/>t<sp/>]<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" kindref="member">set_initialized</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].add_local_node(<sp/>*node<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].set_max_node_id(<sp/>max_node_id<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>create<sp/>a<sp/>new<sp/>exception<sp/>here,<sp/>err&apos;s<sp/>lifetime<sp/>ends<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>catch<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref>.at(<sp/>t<sp/>)<sp/>=<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="classnest_1_1NodeManager_1ad949c0a73a73c3be7b24d7ba4ed0175a" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ad949c0a73a73c3be7b24d7ba4ed0175a" kindref="member">NodeManager::add_music_nodes_</ref>(<sp/><ref refid="classnest_1_1Model" kindref="compound">Model</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>min_node_id,<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>max_node_id,<sp/><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref><sp/>nc_ptr<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>min_node_id;<sp/>node_id<sp/>&lt;=<sp/>max_node_id;<sp/>++node_id<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>track<sp/>of<sp/>number<sp/>of<sp/>thread<sp/>local<sp/>devices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>[<sp/>t<sp/>];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.create(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" kindref="member">set_node_id_</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" kindref="member">set_nc_</ref>(<sp/>nc_ptr<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" kindref="member">set_model_id</ref>(<sp/><ref refid="namespacenest_1_1names_1ab13a9c81386468eaede1c9c5c189cdd3" kindref="member">model</ref>.get_model_id()<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" kindref="member">set_thread</ref>(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" kindref="member">set_vp</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.thread_to_vp(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a7d4d7c594bd3cfbf892f040f248ac153" kindref="member">set_local_device_id</ref>(<sp/><ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>[<sp/>t<sp/>]<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" kindref="member">set_initialized</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>0<sp/>].add_local_node(<sp/>*node<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>.at(<sp/>t<sp/>).set_max_node_id(<sp/>max_node_id<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>create<sp/>a<sp/>new<sp/>exception<sp/>here,<sp/>err&apos;s<sp/>lifetime<sp/>ends<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>catch<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a13587b920020ce4c7c157a8e54d5e17e" kindref="member">exceptions_raised_</ref>.at(<sp/>t<sp/>)<sp/>=<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></highlight></codeline>
<codeline lineno="312" refid="classnest_1_1NodeManager_1ae485df8e2fb82bca92d59d538e47aa99" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ae485df8e2fb82bca92d59d538e47aa99" kindref="member">NodeManager::get_nodes</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local_only<sp/>)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>long<sp/>&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref>-&gt;empty()<sp/>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>long<sp/>&gt;<sp/>&gt;<sp/>nodes_on_thread;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes_on_thread.resize(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/><ref refid="classnest_1_1NodeManager_1a264043547cdea9a9c528384bcd655e2b" kindref="member">get_local_nodes</ref>(<sp/>tid<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_on_thread[<sp/>tid<sp/>].push_back(<sp/>node.get_node_id()<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>barrier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vec<sp/>:<sp/>nodes_on_thread<sp/>)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nodes.insert(<sp/>nodes.end(),<sp/>vec.begin(),<sp/>vec.end()<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/>0;<sp/>tid<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++tid<sp/>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>those<sp/>nodes<sp/>fulfilling<sp/>the<sp/>key/value<sp/>pairs<sp/>of<sp/>the<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/><ref refid="classnest_1_1NodeManager_1a264043547cdea9a9c528384bcd655e2b" kindref="member">get_local_nodes</ref>(<sp/>tid<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>=<sp/>node.get_node_id();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryDatum<sp/>node_status<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a4c9026ded8f30c78fc99cc9ca690f601" kindref="member">get_status</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>Dictionary::iterator<sp/>dict_entry<sp/>=<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref>-&gt;begin();<sp/>dict_entry<sp/>!=<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref>-&gt;end();<sp/>++dict_entry<sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>node_status-&gt;known(<sp/>dict_entry-&gt;first<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Token<sp/>token<sp/>=<sp/>node_status-&gt;lookup(<sp/>dict_entry-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>token<sp/>==<sp/>dict_entry-&gt;second<sp/>or<sp/>token.matches_as_string(<sp/>dict_entry-&gt;second<sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>match<sp/>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push_back(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>local_only<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>long<sp/>&gt;<sp/>globalnodes;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" kindref="member">communicate</ref>(<sp/>nodes,<sp/>globalnodes<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>globalnodes.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>globalnodes[<sp/>i<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.push_back(<sp/>globalnodes[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>rid<sp/>of<sp/>any<sp/>multiple<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a54cad81a8fdaa7618b888d9678b41c33" kindref="member">std::sort</ref>(<sp/>nodes.begin(),<sp/>nodes.end()<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>long<sp/>&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/>std::unique(<sp/>nodes.begin(),<sp/>nodes.end()<sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>nodes.resize(<sp/>it<sp/>-<sp/>nodes.begin()<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a54cad81a8fdaa7618b888d9678b41c33" kindref="member">std::sort</ref>(<sp/>nodes.begin(),<sp/>nodes.end()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>nodes<sp/>are<sp/>sorted<sp/>prior<sp/>to<sp/>creating<sp/>the<sp/>NodeCollection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>IntVectorDatum<sp/>nodes_datum(<sp/>nodes<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="nest__datums_8h_1a46dc3375f57e5fdc088238d79b4545f9" kindref="member">NodeCollectionDatum</ref><sp/>nodecollection(<sp/><ref refid="classnest_1_1NodeCollection_1a016062fcd624a01663b5d8fcc87cdffb" kindref="member">NodeCollection::create</ref>(<sp/>nodes_datum<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(<sp/>nodecollection<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classnest_1_1NodeManager_1a178aff3a1bd286e6256c7146952ddaa6" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a178aff3a1bd286e6256c7146952ddaa6" kindref="member">NodeManager::is_local_node</ref>(<sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="397"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a7fec83282e1abdf3097ec5e9df6ee637" kindref="member">is_local_vp</ref>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>-&gt;get_vp()<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classnest_1_1NodeManager_1ad1aef057211358f9a75baa1ca8ba58c1" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ad1aef057211358f9a75baa1ca8ba58c1" kindref="member">NodeManager::is_local_node_id</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a847b957940c17b0a9c912facf1996f3c" kindref="member">node_id_to_vp</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a7fec83282e1abdf3097ec5e9df6ee637" kindref="member">is_local_vp</ref>(<sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></highlight></codeline>
<codeline lineno="409" refid="classnest_1_1NodeManager_1aa6e170165e803d3604b6bdc42912a6e9" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1aa6e170165e803d3604b6bdc42912a6e9" kindref="member">NodeManager::get_max_num_local_nodes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="410"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>ceil(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>)<sp/>/<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_virtual_processes()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></highlight></codeline>
<codeline lineno="416" refid="classnest_1_1NodeManager_1ae2839661293edec53d413cd5f3c2aabe" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ae2839661293edec53d413cd5f3c2aabe" kindref="member">NodeManager::get_num_thread_local_devices</ref>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="417"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1NodeManager_1ae5aa61b5677eaf447a588214f66da427" kindref="member">num_thread_local_devices_</ref>[<sp/>t<sp/>];</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*</highlight></codeline>
<codeline lineno="422" refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">NodeManager::get_node_or_proxy</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id,<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>assert(<sp/>0<sp/>&lt;=<sp/>t<sp/>and<sp/>(<sp/>t<sp/>==<sp/>-1<sp/>or<sp/>t<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>assert(<sp/>0<sp/>&lt;<sp/>node_id<sp/>and<sp/>node_id<sp/>&lt;=<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1acc955f7172e28dd05d2d0496ecdf2423" kindref="member">get_proxy_node</ref>(<sp/>t,<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*</highlight></codeline>
<codeline lineno="437" refid="classnest_1_1NodeManager_1aa8bc8e084baa168cd5b4754031930d34" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" kindref="member">NodeManager::get_node_or_proxy</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>assert(<sp/>0<sp/>&lt;<sp/>node_id<sp/>and<sp/>node_id<sp/>&lt;=<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a847b957940c17b0a9c912facf1996f3c" kindref="member">node_id_to_vp</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.is_local_vp(<sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1acc955f7172e28dd05d2d0496ecdf2423" kindref="member">get_proxy_node</ref>(<sp/>0,<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a58ddc7ca0a301790ffe71f5a9c795de7" kindref="member">vp_to_thread</ref>(<sp/><ref refid="namespacenest_1_1names_1a69f9c342c45c3f44427ce00f808da0e4" kindref="member">vp</ref><sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1acc955f7172e28dd05d2d0496ecdf2423" kindref="member">get_proxy_node</ref>(<sp/>t,<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*</highlight></codeline>
<codeline lineno="458" refid="classnest_1_1NodeManager_1ad376a94a0b04bdbe90d6d2205f133aed" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ad376a94a0b04bdbe90d6d2205f133aed" kindref="member">NodeManager::get_mpi_local_node_or_device_head</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a58ddc7ca0a301790ffe71f5a9c795de7" kindref="member">vp_to_thread</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.node_id_to_vp(<sp/>node_id<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1acc955f7172e28dd05d2d0496ecdf2423" kindref="member">get_proxy_node</ref>(<sp/>t,<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>node-&gt;<ref refid="classnest_1_1Node_1a3cadfe2698c39c5fd327f5d70d0b8adf" kindref="member">has_proxies</ref>()<sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>0<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">std::vector&lt;<sp/>Node*<sp/>&gt;</highlight></codeline>
<codeline lineno="477" refid="classnest_1_1NodeManager_1a907f84fe45e7f1317bd4e1a67f530a61" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a907f84fe45e7f1317bd4e1a67f530a61" kindref="member">NodeManager::get_thread_siblings</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="478"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>num_threads<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>Node*<sp/>&gt;<sp/>siblings(<sp/>num_threads<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>num_threads;<sp/>++t<sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1NoThreadSiblingsAvailable" kindref="compound">NoThreadSiblingsAvailable</ref>(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>siblings[<sp/>t<sp/>]<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>siblings;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="classnest_1_1NodeManager_1a801fd82238c17423ed9dfda3f512602a" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a801fd82238c17423ed9dfda3f512602a" kindref="member">NodeManager::ensure_valid_thread_local_ids</ref>()</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>network<sp/>size<sp/>changed,<sp/>in<sp/>order<sp/>to<sp/>not<sp/>enter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>critical<sp/>region<sp/>if<sp/>it<sp/>is<sp/>not<sp/>necessary.<sp/>Note<sp/>that<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>also<sp/>covers<sp/>that<sp/>case<sp/>that<sp/>nodes<sp/>have<sp/>been<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>==<sp/><ref refid="classnest_1_1NodeManager_1aebcb5f3d56a9fef4299a18898e495f7b" kindref="member">wfr_network_size_</ref><sp/>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical(<sp/>update_wfr_nodes_vec<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>may<sp/>be<sp/>called<sp/>from<sp/>a<sp/>thread-parallel<sp/>context,<sp/>when<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invoked<sp/>by<sp/>TargetIdentifierIndex::set_target()<sp/>during<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wiring.<sp/>Nested<sp/>OpenMP<sp/>parallelism<sp/>is<sp/>problematic,<sp/>therefore,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enforce<sp/>single<sp/>threading<sp/>here.<sp/>This<sp/>should<sp/>be<sp/>unproblematic<sp/>wrt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>performance,<sp/>because<sp/>the<sp/>wfr_nodes_vec_<sp/>is<sp/>rebuilt<sp/>only<sp/>once<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changes<sp/>in<sp/>network<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>again,<sp/>if<sp/>the<sp/>network<sp/>size<sp/>changed,<sp/>since<sp/>a<sp/>previous<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>have<sp/>updated<sp/>wfr_nodes_vec_<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>!=<sp/><ref refid="classnest_1_1NodeManager_1aebcb5f3d56a9fef4299a18898e495f7b" kindref="member">wfr_network_size_</ref><sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>clear<sp/>the<sp/>existing<sp/>wfr_nodes_vec_<sp/>and<sp/>then<sp/>rebuild<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>.clear();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>.resize(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/>0;<sp/>tid<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++tid<sp/>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>[<sp/>tid<sp/>].clear();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_thread_local_wfr_nodes<sp/>=<sp/>std::count_if(<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].begin(),</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].end(),</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1SparseNodeArray_1_1NodeEntry" kindref="compound">SparseNodeArray::NodeEntry</ref>&amp;<sp/>elem<sp/>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem.<ref refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a5f4a3cf79653f046e9bdf6a80ad3ac91" kindref="member">get_node</ref>()-&gt;node_uses_wfr_;<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>[<sp/>tid<sp/>].reserve(<sp/>num_thread_local_wfr_nodes<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node_it<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].begin();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>node_it<sp/>&lt;<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].end();<sp/>++node_it,<sp/>++idx<sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/>node_it-&gt;get_node();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;set_thread_lid(<sp/>idx<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>node-&gt;node_uses_wfr_<sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>[<sp/>tid<sp/>].push_back(<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>for<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1aebcb5f3d56a9fef4299a18898e495f7b" kindref="member">wfr_network_size_</ref><sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wfr_is_used_<sp/>indicates,<sp/>whether<sp/>at<sp/>least<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>threads<sp/>has<sp/>a<sp/>neuron<sp/>that<sp/>uses<sp/>waveform<sp/>relaxation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>threads<sp/>then<sp/>need<sp/>to<sp/>perform<sp/>a<sp/>wfr_update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step,<sp/>because<sp/>gather_events()<sp/>has<sp/>to<sp/>be<sp/>done<sp/>in<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>openmp<sp/>single<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a52295870eeb56aa420d5447dbf5f3a28" kindref="member">wfr_is_used_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/>0;<sp/>tid<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++tid<sp/>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classnest_1_1NodeManager_1a5a977ee49ab9a6ebf8090bda9e047d54" kindref="member">wfr_nodes_vec_</ref>[<sp/>tid<sp/>].<ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a52295870eeb56aa420d5447dbf5f3a28" kindref="member">wfr_is_used_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>critical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="classnest_1_1NodeManager_1a9b271216cabc00dd720e6ee280e5c7ec" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a9b271216cabc00dd720e6ee280e5c7ec" kindref="member">NodeManager::destruct_nodes_</ref>()</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>tid<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>:<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node.get_node();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].clear();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="classnest_1_1NodeManager_1aa0db2bfeb38e55cfdc8252a41845141c" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1aa0db2bfeb38e55cfdc8252a41845141c" kindref="member">NodeManager::set_status_single_node_</ref>(<sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear_flags<sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>proxies<sp/>have<sp/>no<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.is_proxy()<sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>clear_flags<sp/>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>-&gt;clear_access_flags();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.set_status_base(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Not<sp/>sure<sp/>this<sp/>check<sp/>should<sp/>be<sp/>at<sp/>single<sp/>neuron<sp/>level;<sp/>advantage<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>stops<sp/>after<sp/>first<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logging_8h_1a91f6a947f0219a1ffb76f912c65cba95" kindref="member">ALL_ENTRIES_ACCESSED</ref>(<sp/>*<ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NodeManager::set_status&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unread<sp/>dictionary<sp/>entries:<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="classnest_1_1NodeManager_1aa58e4f4dd0009bcdd9547d04375b694f" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1aa58e4f4dd0009bcdd9547d04375b694f" kindref="member">NodeManager::prepare_node_</ref>(<sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Frozen<sp/>nodes<sp/>are<sp/>initialized<sp/>and<sp/>calibrated,<sp/>so<sp/>that<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>ring<sp/>buffers<sp/>and<sp/>can<sp/>accept<sp/>incoming<sp/>spikes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>-&gt;init();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>-&gt;pre_run_hook();</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="classnest_1_1NodeManager_1a5024846165430a49270e72e139407db5" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a5024846165430a49270e72e139407db5" kindref="member">NodeManager::prepare_nodes</ref>()</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().is_initialized()<sp/>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>initialize<sp/>the<sp/>buffers<sp/>of<sp/>each<sp/>node<sp/>and<sp/>calibrate<sp/>it.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_active_nodes<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>counts<sp/>nodes<sp/>that<sp/>will<sp/>be<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_active_wfr_nodes<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>counts<sp/>nodes<sp/>that<sp/>use<sp/>waveform<sp/>relaxation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;<sp/>&gt;<sp/>exceptions_raised(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().vp_manager.get_num_threads()<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(<sp/>+<sp/>:<sp/>num_active_nodes,<sp/>num_active_wfr_nodes<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>prepare<sp/>nodes<sp/>in<sp/>a<sp/>parallel<sp/>region.<sp/>Therefore,<sp/>we<sp/>need<sp/>to<sp/>catch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exceptions<sp/>here<sp/>and<sp/>then<sp/>handle<sp/>them<sp/>after<sp/>the<sp/>parallel<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator" kindref="compound">SparseNodeArray::const_iterator</ref><sp/>it<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].begin();<sp/>it<sp/>!=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1aa58e4f4dd0009bcdd9547d04375b694f" kindref="member">prepare_node_</ref>(<sp/>(<sp/>it<sp/>)-&gt;get_node()<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>it-&gt;get_node()<sp/>)-&gt;is_frozen()<sp/>)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_active_nodes;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>it-&gt;get_node()<sp/>)-&gt;node_uses_wfr()<sp/>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_active_wfr_nodes;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>throw<sp/>the<sp/>exception<sp/>after<sp/>parallel<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exceptions_raised.at(<sp/>t<sp/>)<sp/>=<sp/>std::shared_ptr&lt;<sp/>WrappedThreadException<sp/>&gt;(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>any<sp/>exceptions<sp/>have<sp/>been<sp/>raised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/>0;<sp/>tid<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++tid<sp/>)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exceptions_raised.at(<sp/>tid<sp/>).get()<sp/>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>WrappedThreadException(<sp/>*(<sp/>exceptions_raised.at(<sp/>tid<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>os;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>std::string<sp/>tmp_str<sp/>=<sp/>num_active_nodes<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>node&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nodes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Preparing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_active_nodes<sp/>&lt;&lt;<sp/>tmp_str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>simulation.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num_active_wfr_nodes<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp_str<sp/>=<sp/>num_active_wfr_nodes<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>uses<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;<sp/>use<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_active_wfr_nodes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>them&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmp_str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;iterative<sp/>solution<sp/>techniques.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a3783ae708ada8dcbde71fbc3b0bdf239" kindref="member">num_active_nodes_</ref><sp/>=<sp/>num_active_nodes;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><ref refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" kindref="member">LOG</ref>(<sp/><ref refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" kindref="member">M_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;NodeManager::prepare_nodes&quot;</highlight><highlight class="normal">,<sp/>os.str()<sp/>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="classnest_1_1NodeManager_1ac99133b91c8280ca9ec6dca876ea9634" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1ac99133b91c8280ca9ec6dca876ea9634" kindref="member">NodeManager::post_run_cleanup</ref>()</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>t<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator" kindref="compound">SparseNodeArray::const_iterator</ref><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].begin();<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>!=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].end();<sp/>++<ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>-&gt;get_node()-&gt;post_run_cleanup();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="classnest_1_1NodeManager_1a4dcd6368bfc2a47cefae88e7264a9893" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a4dcd6368bfc2a47cefae88e7264a9893" kindref="member">NodeManager::finalize_nodes</ref>()</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>tid<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" kindref="member">get_thread_id</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator" kindref="compound">SparseNodeArray::const_iterator</ref><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].begin();<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>!=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>tid<sp/>].end();<sp/>++<ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>-&gt;get_node()-&gt;finalize();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="classnest_1_1NodeManager_1a834b299d80a29979238589e61d413378" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a834b299d80a29979238589e61d413378" kindref="member">NodeManager::check_wfr_use</ref>()</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1NodeManager_1a52295870eeb56aa420d5447dbf5f3a28" kindref="member">wfr_is_used_</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" kindref="member">mpi_manager</ref>.<ref refid="classnest_1_1MPIManager_1a3a49dc7c95b5a7e8daadb0480cae3c4c" kindref="member">any_true</ref>(<sp/><ref refid="classnest_1_1NodeManager_1a52295870eeb56aa420d5447dbf5f3a28" kindref="member">wfr_is_used_</ref><sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1DataSecondaryEvent_1a3640d11d4d2359909f612263eda76492" kindref="member">GapJunctionEvent::set_coeff_length</ref>(</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_min_delay()<sp/>*<sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().simulation_manager.get_wfr_interpolation_order()<sp/>+<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1DataSecondaryEvent_1a3640d11d4d2359909f612263eda76492" kindref="member">InstantaneousRateConnectionEvent::set_coeff_length</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_min_delay()<sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1DataSecondaryEvent_1a3640d11d4d2359909f612263eda76492" kindref="member">DelayedRateConnectionEvent::set_coeff_length</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_min_delay()<sp/>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1DataSecondaryEvent_1a3640d11d4d2359909f612263eda76492" kindref="member">DiffusionConnectionEvent::set_coeff_length</ref>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_min_delay()<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="classnest_1_1NodeManager_1a6c70952e62625a89a6b82a972d31e488" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a6c70952e62625a89a6b82a972d31e488" kindref="member">NodeManager::print</ref>(<sp/>std::ostream&amp;<sp/>out<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="716"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>max_node_id<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_node_id_width<sp/>=<sp/>std::floor(<sp/>std::log10(<sp/>max_node_id<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>node_id_range_width<sp/>=<sp/>6<sp/>+<sp/>2<sp/>*<sp/>max_node_id_width;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;<sp/>modelrange<sp/>&gt;::const_iterator<sp/>it<sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().modelrange_manager.begin();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().modelrange_manager.end();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>first_node_id<sp/>=<sp/>it-&gt;get_first_node_id();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>last_node_id<sp/>=<sp/>it-&gt;get_last_node_id();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Model" kindref="compound">Model</ref>*<sp/><ref refid="namespacenest_1a113f9049bd2e4bf0b496cb6e8625df45" kindref="member">mod</ref><sp/>=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" kindref="member">model_manager</ref>.<ref refid="classnest_1_1ModelManager_1a8058f85d46bd4af4c2f726be59aa269b" kindref="member">get_node_model</ref>(<sp/>it-&gt;get_model_id()<sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>node_id_range_strs;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>node_id_range_strs<sp/>&lt;&lt;<sp/>std::setw(<sp/>max_node_id_width<sp/>+<sp/>1<sp/>)<sp/>&lt;&lt;<sp/>first_node_id;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>last_node_id<sp/>!=<sp/>first_node_id<sp/>)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node_id_range_strs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>..<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(<sp/>max_node_id_width<sp/>+<sp/>1<sp/>)<sp/>&lt;&lt;<sp/>last_node_id;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::setw(<sp/>node_id_range_width<sp/>)<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>node_id_range_strs.str()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="namespacenest_1a113f9049bd2e4bf0b496cb6e8625df45" kindref="member">mod</ref>-&gt;get_name();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>it<sp/>+<sp/>1<sp/>!=<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().modelrange_manager.end()<sp/>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="classnest_1_1NodeManager_1ac3991ea302917428914481485f522207" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a88ff132a048d366a6a24dada6add71f4" kindref="member">NodeManager::set_status</ref>(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>node_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" kindref="member">vp_manager</ref>.<ref refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" kindref="member">get_num_threads</ref>();<sp/>++t<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1Node" kindref="compound">Node</ref>*<sp/>node<sp/>=<sp/><ref refid="classnest_1_1NodeManager_1a807cfe6cdac819360c1d64839c4f274b" kindref="member">local_nodes_</ref>[<sp/>t<sp/>].get_node_by_node_id(<sp/>node_id<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1NodeManager_1aa0db2bfeb38e55cfdc8252a41845141c" kindref="member">set_status_single_node_</ref>(<sp/>*node,<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="classnest_1_1NodeManager_1a4c9026ded8f30c78fc99cc9ca690f601" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a4c9026ded8f30c78fc99cc9ca690f601" kindref="member">NodeManager::get_status</ref>(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>def&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1aa48a316651c514d926ede93bbcf0e8b7" kindref="member">names::network_size</ref>,<sp/><ref refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a040ef461fee680688ace14f48bd2cc12" kindref="member">names::time_construction_create</ref>,<sp/><ref refid="classnest_1_1NodeManager_1a8c0b5c1af05747706bf5d7f6f624f13c" kindref="member">sw_construction_create_</ref>.<ref refid="classnest_1_1Stopwatch_1a036f2b7f1243a3fcb75df713845f2dd1" kindref="member">elapsed</ref>()<sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classnest_1_1NodeManager_1a88ff132a048d366a6a24dada6add71f4" refkind="member"><highlight class="normal"><ref refid="classnest_1_1NodeManager_1a88ff132a048d366a6a24dada6add71f4" kindref="member">NodeManager::set_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)</highlight></codeline>
<codeline lineno="766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_manager.cpp"/>
  </compounddef>
</doxygen>
