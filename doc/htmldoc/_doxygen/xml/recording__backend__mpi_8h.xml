<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="recording__backend__mpi_8h" kind="file" language="C++">
    <compoundname>recording_backend_mpi.h</compoundname>
    <includes refid="recording__backend_8h" local="yes">recording_backend.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includes local="no">mpi.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">set</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="recording__backend__mpi_8cpp" local="yes">recording_backend_mpi.cpp</includedby>
    <incdepgraph>
      <node id="8">
        <label>netinet/in.h</label>
      </node>
      <node id="6">
        <label>arpa/inet.h</label>
      </node>
      <node id="11">
        <label>unistd.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="4">
        <label>dictdatum.h</label>
      </node>
      <node id="1">
        <label>recording_backend_mpi.h</label>
        <link refid="recording__backend__mpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>name.h</label>
      </node>
      <node id="10">
        <label>sys/socket.h</label>
      </node>
      <node id="7">
        <label>mpi.h</label>
      </node>
      <node id="9">
        <label>set</label>
      </node>
      <node id="2">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>recording_backend_mpi.cpp</label>
        <link refid="recording__backend__mpi_8cpp"/>
      </node>
      <node id="1">
        <label>recording_backend_mpi.h</label>
        <link refid="recording__backend__mpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnest_1_1_recording_backend_m_p_i" prot="public">nest::RecordingBackendMPI</innerclass>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>recording_backend_mpi.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RECORDING_BACKEND_MPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECORDING_BACKEND_MPI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="recording__backend_8h" kindref="compound">recording_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>NOINDEX</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">Recording<sp/>backend<sp/>`mpi`<sp/>-<sp/>Send<sp/>data<sp/>with<sp/>MPI</highlight></codeline>
<codeline lineno="37"><highlight class="comment">############################################</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="40"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">..<sp/>admonition::<sp/>Availability</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>This<sp/>stimulation<sp/>backend<sp/>is<sp/>only<sp/>available<sp/>if<sp/>NEST<sp/>was<sp/>compiled<sp/>with</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>:ref:`support<sp/>for<sp/>MPI<sp/>&lt;compile-with-mpi&gt;`.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">The<sp/>`mpi`<sp/>recording<sp/>backend<sp/>sends<sp/>collected<sp/>data<sp/>to<sp/>a<sp/>remote<sp/>process</highlight></codeline>
<codeline lineno="48"><highlight class="comment">using<sp/>MPI.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">The<sp/>name<sp/>of<sp/>the<sp/>MPI<sp/>port<sp/>to<sp/>send<sp/>data<sp/>to<sp/>is<sp/>read<sp/>from<sp/>a<sp/>file<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="51"><highlight class="comment">device<sp/>configured<sp/>to<sp/>use<sp/>this<sp/>backend.<sp/>The<sp/>file<sp/>needs<sp/>to<sp/>be<sp/>named</highlight></codeline>
<codeline lineno="52"><highlight class="comment">according<sp/>to<sp/>the<sp/>following<sp/>pattern:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">::</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>{data_path}/{data_prefix}{label}/{node_id}.txt</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">The<sp/>``data_path``<sp/>and<sp/>``data_prefix``<sp/>are<sp/>global<sp/>kernel<sp/>properties,</highlight></codeline>
<codeline lineno="59"><highlight class="comment">while<sp/>`label`<sp/>is<sp/>a<sp/>property<sp/>of<sp/>the<sp/>device<sp/>in<sp/>question<sp/>and<sp/>`node_id`</highlight></codeline>
<codeline lineno="60"><highlight class="comment">its<sp/>node<sp/>ID.<sp/>This<sp/>path<sp/>can<sp/>only<sp/>be<sp/>set<sp/>outside<sp/>of<sp/>a<sp/>`Run`<sp/>context</highlight></codeline>
<codeline lineno="61"><highlight class="comment">(i.e.<sp/>after<sp/>``Prepare()``<sp/>has<sp/>been<sp/>called,<sp/>but<sp/>``Cleanup()``<sp/>has<sp/>not).</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">Communication<sp/>Protocol</highlight></codeline>
<codeline lineno="64"><highlight class="comment">++++++++++++++++++++++</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">The<sp/>following<sp/>protocol<sp/>is<sp/>used<sp/>to<sp/>exchange<sp/>information<sp/>between<sp/>both</highlight></codeline>
<codeline lineno="67"><highlight class="comment">MPI<sp/>processes.<sp/>The<sp/>protocol<sp/>is<sp/>described<sp/>using<sp/>the<sp/>following<sp/>format</highlight></codeline>
<codeline lineno="68"><highlight class="comment">for<sp/>the<sp/>MPI<sp/>messages:<sp/>(value,<sp/>number,<sp/>type,<sp/>source/destination,<sp/>tag)</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment">1)<sp/>``Prepare``<sp/><sp/>:<sp/>Connection<sp/>of<sp/>MPI<sp/>port<sp/>included<sp/>in<sp/>the<sp/>port_file<sp/>(see<sp/>below)</highlight></codeline>
<codeline lineno="71"><highlight class="comment">2)<sp/>``Run``<sp/>begin:<sp/>Send<sp/>at<sp/>each<sp/>beginning<sp/>of<sp/>the<sp/>run<sp/>(true,<sp/>1,<sp/>CXX_BOOL,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="72"><highlight class="comment">3)<sp/>``Run``<sp/>end<sp/><sp/>:<sp/>Receive<sp/>at<sp/>each<sp/>ending<sp/>of<sp/>the<sp/>run<sp/>(true,<sp/>1,<sp/>CXX_BOOL,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="73"><highlight class="comment">4)<sp/>``Run``<sp/>end<sp/><sp/>:<sp/>Send<sp/>shape<sp/>of<sp/>the<sp/>data<sp/>of<sp/>the<sp/>run<sp/>(shape,<sp/>1,INT,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="74"><highlight class="comment">5)<sp/>``Run``<sp/>end<sp/><sp/>:<sp/>Send<sp/>data<sp/>of<sp/>the<sp/>data<sp/>of<sp/>the<sp/>run<sp/>(data,<sp/>shape,<sp/>DOUBLE,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="comment">6)<sp/>``Run``<sp/>end<sp/><sp/>:<sp/>Send<sp/>at<sp/>each<sp/>ending<sp/>of<sp/>the<sp/>run<sp/>(true,<sp/>1,<sp/>CXX_BOOL,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="76"><highlight class="comment">7)<sp/>``Cleanup``<sp/><sp/>:<sp/>Send<sp/>at<sp/>this<sp/>en<sp/>of<sp/>the<sp/>simulation<sp/>(true,<sp/>1,<sp/>CXX_BOOL,<sp/>0,<sp/>2)</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">Data<sp/>format</highlight></codeline>
<codeline lineno="79"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">The<sp/>format<sp/>of<sp/>the<sp/>data<sp/>sent<sp/>is<sp/>an<sp/>array<sp/>consisting<sp/>of<sp/>(id<sp/>device,<sp/>id<sp/>node,<sp/>time</highlight></codeline>
<codeline lineno="82"><highlight class="comment">is<sp/>ms).</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classnest_1_1_recording_backend_m_p_i" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_recording_backend_m_p_i" kindref="compound">RecordingBackendMPI</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend" kindref="compound">RecordingBackend</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a1f957ff079992f1ceeaf75fb32a67db4" kindref="member">RecordingBackendMPI</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a8b7f02b299c9681373cfdc8de5c3a617" kindref="member">~RecordingBackendMPI</ref>()<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a0fcdcb78829faf69e47fa9dac76f29bc" kindref="member">initialize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1ac7a47988eeb34f8bcd517f773480fa01" kindref="member">finalize</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1aca238fd90a38083e517640f7b36d23cf" kindref="member">enroll</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1aa7ca898f0079c2380631ce812f20dcdf" kindref="member">disenroll</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>&amp;<sp/>device<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1ac724027e289f2afd907701fed5b131fa" kindref="member">set_value_names</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>Name<sp/>&gt;&amp;<sp/>double_value_names,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>Name<sp/>&gt;&amp;<sp/>long_value_names<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1af08f3f771cef6363f8b4be4dc84992fa" kindref="member">cleanup</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a15529b16af1c77a4333fc5dda5220e38" kindref="member">prepare</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a66706a8e4259b49223922d02a3b6d12e" kindref="member">write</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_event" kindref="compound">Event</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>long<sp/>&gt;&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a5c9a9b23df5ff2423cf94d81b32d0d41" kindref="member">set_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1ac306cf8443090e39916032cbd7803f2f" kindref="member">get_status</ref>(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a7acfbdb39b2f3b4c279a610ca78239c4" kindref="member">pre_run_hook</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1ab4716e0fe1d7185149dd878795083d47" kindref="member">post_run_hook</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1acfb3cad5eccb54776a2c7ff33771708a" kindref="member">post_step_hook</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a51e8770de46db69a26f05ef642bd3508" kindref="member">check_device_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a4391b8d7e19bb999a00f41162d898d60" kindref="member">get_device_defaults</ref>(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_backend_m_p_i_1a8e9e1b3b5b44b09ed744fc5177581ccb" kindref="member">get_device_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,<sp/>DictionaryDatum&amp;<sp/>params_dictionary<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enrolled_;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prepared_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>std::array&lt;<sp/>double,<sp/>3<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>buffer_;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::map&lt;<sp/>index,<sp/>std::tuple&lt;<sp/>int,<sp/>MPI_Comm*,<sp/>const<sp/>RecordingDevice*<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>device_map;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>device_map<sp/>devices_;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;<sp/>std::string,<sp/>std::tuple&lt;<sp/>int,<sp/>MPI_Comm*,<sp/>int<sp/>&gt;<sp/>&gt;<sp/>comm_map;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>comm_map<sp/>commMap_;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_port(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref>*<sp/>device,<sp/>std::string*<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_port(<sp/><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref><sp/>index_node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="namespacenest_1_1names_1a841558ae50522d9976fc231279505b40" kindref="member">label</ref>,<sp/>std::string*<sp/><ref refid="namespacenest_1_1names_1a9955ac68258526384f84dba6828ca402" kindref="member">port_name</ref><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>send_data(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MPI_Comm*<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a30b3f9cb3c24869421dea79ceee584fb" kindref="member">data</ref>[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RECORDING_BACKEND_MPI_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="nestkernel/recording_backend_mpi.h"/>
  </compounddef>
</doxygen>
