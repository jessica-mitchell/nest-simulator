<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1FreeLayer" kind="class" language="C++" prot="public">
    <compoundname>nest::FreeLayer</compoundname>
    <basecompoundref refid="classnest_1_1Layer" prot="public" virt="non-virtual">nest::Layer&lt; D &gt;</basecompoundref>
    <includes refid="free__layer_8h" local="no">free_layer.h</includes>
    <innerclass refid="classnest_1_1FreeLayer_1_1NodePositionData" prot="protected">nest::FreeLayer::NodePositionData</innerclass>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1FreeLayer_1a8733508fe4998adf0c25afc412126936" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &gt;</type>
        <definition>std::vector&lt; Position&lt; D &gt; &gt; nest::FreeLayer&lt; D &gt;::positions_</definition>
        <argsstring></argsstring>
        <name>positions_</name>
        <qualifiedname>nest::FreeLayer::positions_</qualifiedname>
        <briefdescription>
<para>Vector of positions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="76" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1FreeLayer_1af3209bf045d48ec434d83130cde96910" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::FreeLayer&lt; D &gt;::num_local_nodes_</definition>
        <argsstring></argsstring>
        <name>num_local_nodes_</name>
        <qualifiedname>nest::FreeLayer::num_local_nodes_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="78" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1FreeLayer_1a6baeb70ed0dc8b7bd41fa0c135e4b509" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::FreeLayer&lt; D &gt;::get_position</definition>
        <argsstring>(index sind) const</argsstring>
        <name>get_position</name>
        <qualifiedname>nest::FreeLayer::get_position</qualifiedname>
        <reimplements refid="classnest_1_1Layer_1acd44b40683a603583aca0a1a51c1468f">get_position</reimplements>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>sind</declname>
        </param>
        <briefdescription>
<para>Get position of node. </para>
        </briefdescription>
        <detaileddescription>
<para>Only possible for local nodes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sind</parametername>
</parameternamelist>
<parameterdescription>
<para>index of node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>position of node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="51" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1FreeLayer_1acb2f436d36da84d837609d56562af384" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::FreeLayer&lt; D &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::FreeLayer::set_status</qualifiedname>
        <reimplements refid="classnest_1_1AbstractLayer_1ad06fa8f1d890798881a7ae445b964108">set_status</reimplements>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Change properties of the layer according to the entries in the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classDictionary" kindref="compound">Dictionary</ref> with named parameter settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="52" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="113" bodyend="251"/>
        <references refid="classTokenArray_1a56314c4f339a8c3dfe3a21548d2de55a" compoundref="tokenarray_8h" startline="141" endline="144">TokenArray::begin</references>
        <references refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">Token::datum</references>
        <references refid="classTokenArray_1ad49f197e0fa072b80f71ea82a64671e5" compoundref="tokenarray_8h" startline="150" endline="153">TokenArray::end</references>
        <references refid="namespacenest_1_1names_1a5f8923b9f6231a23846f62a4aecb6f40" compoundref="nest__names_8h" startline="196">nest::names::extent</references>
        <references refid="classnest_1_1NodeManager_1ad376a94a0b04bdbe90d6d2205f133aed" compoundref="node__manager_8cpp" startline="458" endline="474">nest::NodeManager::get_mpi_local_node_or_device_head</references>
        <references refid="namespacenest_1a16717a46436ebcc2eae54f5baf6ab33f" compoundref="nest_8cpp" startline="84" endline="87">nest::get_rank_synced_rng</references>
        <references refid="classToken_1a0a851cec71bde92edd33e989f31640d5" compoundref="token_8h" startline="486" endline="489">Token::is_a</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="className_1a8ee5a44599eb7a686ee64c343e0c8e18" compoundref="name_8h" startline="118" endline="122">Name::lookup</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="namespacenest_1_1names_1ad361447568cf4aa76b9ae33410acb636" compoundref="nest__names_8h" startline="373">nest::names::positions</references>
        <references refid="classnest_1_1Layer_1a7e195bd64082ccf858d4419328b000d7" compoundref="layer__impl_8h" startline="82" endline="91">nest::Layer&lt; D &gt;::set_status</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1FreeLayer_1aa4bc8a616463884614fd0d29592ab51a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::FreeLayer&lt; D &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::FreeLayer::get_status</qualifiedname>
        <reimplements refid="classnest_1_1AbstractLayer_1a4e6967b12d99eccd9dc329daa1149c96">get_status</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Export properties of the layer by setting entries in the status dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classDictionary" kindref="compound">Dictionary</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="53" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="255" bodyend="265"/>
        <references refid="classnest_1_1Layer_1aa997b0fe16bc08093545385042fe6e19" compoundref="layer__impl_8h" startline="95" endline="108">nest::Layer&lt; D &gt;::get_status</references>
        <references refid="namespacenest_1_1names_1ad361447568cf4aa76b9ae33410acb636" compoundref="nest__names_8h" startline="373">nest::names::positions</references>
        <references refid="classTokenArray_1acbf2202157ead1bb583c43a8465b3876" compoundref="tokenarray_8h" startline="266" endline="270">TokenArray::push_back</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1FreeLayer_1ad3fe5e6f34d4be2486cd8d325c71ec56" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ins</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::FreeLayer&lt; D &gt;::communicate_positions_</definition>
        <argsstring>(Ins iter, NodeCollectionPTR node_collection)</argsstring>
        <name>communicate_positions_</name>
        <qualifiedname>nest::FreeLayer::communicate_positions_</qualifiedname>
        <param>
          <type>Ins</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>node_collection</declname>
        </param>
        <briefdescription>
<para>Communicate positions across MPI processes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>Insert iterator which will receive pairs of <ref refid="classnest_1_1Position" kindref="compound">Position</ref>,node ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_collection</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> of the layer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="62" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="277" bodyend="327"/>
        <references refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" compoundref="mpi__manager_8cpp" startline="1061" endline="1063">nest::MPIManager::communicate</references>
        <references refid="classnest_1_1FreeLayer_1_1NodePositionData_1ae9db612b84c52147ab24377a86811ed2" compoundref="free__layer_8h" startline="85" endline="88">nest::FreeLayer&lt; D &gt;::NodePositionData::get_node_id</references>
        <references refid="classnest_1_1FreeLayer_1_1NodePositionData_1a432c914c08d7cf0ef97480888dff7f36" compoundref="free__layer_8h" startline="90" endline="93">nest::FreeLayer&lt; D &gt;::NodePositionData::get_position</references>
        <references refid="namespacenest_1a9127a40cb54f0b6b64a6bc716c4ffa57" compoundref="spatial_8cpp" startline="83" endline="108">nest::get_position</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1FreeLayer_1ab3201672033e5215b9bdeb2cb526f061" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::FreeLayer&lt; D &gt;::insert_global_positions_ntree_</definition>
        <argsstring>(Ntree&lt; D, index &gt; &amp;tree, NodeCollectionPTR node_collection)</argsstring>
        <name>insert_global_positions_ntree_</name>
        <qualifiedname>nest::FreeLayer::insert_global_positions_ntree_</qualifiedname>
        <reimplements refid="classnest_1_1Layer_1ac03f53f6e62c44af5adc7f8043ab52ca">insert_global_positions_ntree_</reimplements>
        <param>
          <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>&lt; D, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>node_collection</declname>
        </param>
        <briefdescription>
<para>Insert global position info into ntree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="64" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="331" bodyend="335"/>
        <references refid="classnest_1_1Ntree_1ae8a66ad3f812ec29ab4ba076004ca54d" compoundref="ntree_8h" startline="328" endline="331">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::end</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1FreeLayer_1a09296d377a06ea3aa2dd32332ce67272" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::FreeLayer&lt; D &gt;::insert_global_positions_vector_</definition>
        <argsstring>(std::vector&lt; std::pair&lt; Position&lt; D &gt;, index &gt; &gt; &amp;vec, NodeCollectionPTR node_collection)</argsstring>
        <name>insert_global_positions_vector_</name>
        <qualifiedname>nest::FreeLayer::insert_global_positions_vector_</qualifiedname>
        <reimplements refid="classnest_1_1Layer_1a7a60d49f6d728e7694ff2557391b9f2a">insert_global_positions_vector_</reimplements>
        <param>
          <type>std::vector&lt; std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        </param>
        <briefdescription>
<para>Insert global position info into vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="65" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="347" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1FreeLayer_1a7b8c3cd27e95f1464825521bc22f734e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::FreeLayer&lt; D &gt;::lid_to_position_id_</definition>
        <argsstring>(index lid) const</argsstring>
        <name>lid_to_position_id_</name>
        <qualifiedname>nest::FreeLayer::lid_to_position_id_</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <briefdescription>
<para>Calculate the index in the position vector on this MPI process based on the local ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lid</parametername>
</parameternamelist>
<parameterdescription>
<para>local ID of the node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index in the local position vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="73" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="359" bodyend="375"/>
        <references refid="classnest_1_1MPIManager_1a496c51140dd2f76db937357bb70ac565" compoundref="mpi__manager_8h" startline="513" endline="516">nest::MPIManager::get_num_processes</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classnest_1_1Layer" kindref="compound">Layer</ref> with free positioning of neurons, positions specified by user. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>nest::AbstractLayer</label>
        <link refid="classnest_1_1AbstractLayer"/>
      </node>
      <node id="1">
        <label>nest::FreeLayer&lt; D &gt;</label>
        <link refid="classnest_1_1FreeLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Layer&lt; D &gt;</label>
        <link refid="classnest_1_1Layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>nest::AbstractLayer</label>
        <link refid="classnest_1_1AbstractLayer"/>
      </node>
      <node id="1">
        <label>nest::FreeLayer&lt; D &gt;</label>
        <link refid="classnest_1_1FreeLayer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Layer&lt; D &gt;</label>
        <link refid="classnest_1_1Layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" line="48" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/free_layer.h" bodystart="49" bodyend="109"/>
    <listofallmembers>
      <member refid="classnest_1_1AbstractLayer_1a0ad131746b1272ec9866a336dc380a91" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>AbstractLayer</name></member>
      <member refid="classnest_1_1Layer_1a003b69d3b9c07caafa4b91c5afd26e71" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>cached_ntree_</name></member>
      <member refid="classnest_1_1AbstractLayer_1a1e8fda88e7029c3b23f35819cba848c6" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>cached_ntree_md_</name></member>
      <member refid="classnest_1_1Layer_1a078e2a5d9e67fd18a21f8cfabb74bebb" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>cached_vector_</name></member>
      <member refid="classnest_1_1AbstractLayer_1add028a9b29284bac5c09ac20f6b42c3b" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>cached_vector_md_</name></member>
      <member refid="classnest_1_1Layer_1a3bdf16e4d5e8ce0a7d2c8807b9e858c2" prot="protected" virt="virtual"><scope>nest::FreeLayer</scope><name>clear_ntree_cache_</name></member>
      <member refid="classnest_1_1Layer_1a0320d45963d9093ac80d6908f140b3f0" prot="protected" virt="virtual"><scope>nest::FreeLayer</scope><name>clear_vector_cache_</name></member>
      <member refid="classnest_1_1FreeLayer_1ad3fe5e6f34d4be2486cd8d325c71ec56" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>communicate_positions_</name></member>
      <member refid="classnest_1_1Layer_1a5bdc6e9ae51ca2c547ef62a25315681d" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>compute_displacement</name></member>
      <member refid="classnest_1_1Layer_1a52c45681c7e56df3264fe31db5032108" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>compute_displacement</name></member>
      <member refid="classnest_1_1Layer_1a066ca032ad333cb421c3f4538fb2630f" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>compute_displacement</name></member>
      <member refid="classnest_1_1Layer_1a319156f736642bdb7bc5483c79b10530" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>compute_displacement</name></member>
      <member refid="classnest_1_1Layer_1acb771d17f684fe36675ad7395d520b2e" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>compute_distance</name></member>
      <member refid="classnest_1_1Layer_1ad01a6f6f14f46165fea0ec5c6fc9da08" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>compute_distance</name></member>
      <member refid="classnest_1_1Layer_1a8680705537ec5ed10f3dadd966075feb" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>compute_distance</name></member>
      <member refid="classnest_1_1Layer_1a805e0bc30af5b8449cbb5ee09fbd71fb" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>connect</name></member>
      <member refid="classnest_1_1AbstractLayer_1a268b14297e57188c5f29a44bad369990" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>create_layer</name></member>
      <member refid="classnest_1_1Layer_1af80ad7c54c28a5b07c63093944324cfe" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>do_get_global_positions_ntree_</name></member>
      <member refid="classnest_1_1Layer_1ac1b9a1c8651f3eefae09c200e00974af" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>dump_connections</name></member>
      <member refid="classnest_1_1Layer_1a84ccd5b88b173dedb7cb3b4b9b6c2a95" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>dump_nodes</name></member>
      <member refid="classnest_1_1Layer_1a3fe40a896502071fc257e0bf4b7f5961" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>extent_</name></member>
      <member refid="classnest_1_1Layer_1a53c46f3e1dabf057073dab59b51813e3" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_center</name></member>
      <member refid="classnest_1_1Layer_1a950a740d35b4f44772ac737cf3d7c752" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_extent</name></member>
      <member refid="classnest_1_1Layer_1a72db1887553137c059800b8b2fc58cd1" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_global_nodes</name></member>
      <member refid="classnest_1_1Layer_1a616cfe345fae749c13eb188e9ea41df5" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_global_positions_ntree</name></member>
      <member refid="classnest_1_1Layer_1a6dd26a0979ad92d43e94bb71c45fd687" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_global_positions_ntree</name></member>
      <member refid="classnest_1_1Layer_1a40a6e749847f747190339cd061acb284" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_global_positions_vector</name></member>
      <member refid="classnest_1_1Layer_1a9cf7738cc88a6531a2aab4adf2be51df" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_global_positions_vector</name></member>
      <member refid="classnest_1_1Layer_1ada8205d96ffe19011863cbacab86bba9" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_lower_left</name></member>
      <member refid="classnest_1_1AbstractLayer_1a560ba4e701334a2040b56a34c60f3d64" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_metadata</name></member>
      <member refid="classnest_1_1AbstractLayer_1aa22fca27ef998582d5ede2a7f293478b" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_node_collection</name></member>
      <member refid="classnest_1_1Layer_1a6e68c37a78e18c593855cc6875c1dbf2" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_num_dimensions</name></member>
      <member refid="classnest_1_1Layer_1a8ea1571c299ddf01b5dcd2544507c83e" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>get_periodic_mask</name></member>
      <member refid="classnest_1_1FreeLayer_1a6baeb70ed0dc8b7bd41fa0c135e4b509" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_position</name></member>
      <member refid="classnest_1_1Layer_1a96bf140046dc1815263bad1be6395219" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_position_vector</name></member>
      <member refid="classnest_1_1FreeLayer_1aa4bc8a616463884614fd0d29592ab51a" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>get_status</name></member>
      <member refid="classnest_1_1FreeLayer_1ab3201672033e5215b9bdeb2cb526f061" prot="protected" virt="virtual"><scope>nest::FreeLayer</scope><name>insert_global_positions_ntree_</name></member>
      <member refid="classnest_1_1FreeLayer_1a09296d377a06ea3aa2dd32332ce67272" prot="protected" virt="virtual"><scope>nest::FreeLayer</scope><name>insert_global_positions_vector_</name></member>
      <member refid="classnest_1_1Layer_1a44db808bdb6b71ff3392cd4d743f49e1" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>Layer</name></member>
      <member refid="classnest_1_1Layer_1afe8b87e0bc750f510e35a413e6cea13b" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>Layer</name></member>
      <member refid="classnest_1_1FreeLayer_1a7b8c3cd27e95f1464825521bc22f734e" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>lid_to_position_id_</name></member>
      <member refid="classnest_1_1Layer_1af53da8f0c9a40e6c25a99fac5e303487" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>lower_left_</name></member>
      <member refid="classnest_1_1AbstractLayer_1a32cbd1dbb9fdfd0b12903814aeb5c066" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>node_collection_</name></member>
      <member refid="classnest_1_1FreeLayer_1af3209bf045d48ec434d83130cde96910" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>num_local_nodes_</name></member>
      <member refid="classnest_1_1Layer_1ac2a10c1e0879d2166cdbcfdb0ba3a82e" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>periodic_</name></member>
      <member refid="classnest_1_1FreeLayer_1a8733508fe4998adf0c25afc412126936" prot="protected" virt="non-virtual"><scope>nest::FreeLayer</scope><name>positions_</name></member>
      <member refid="classnest_1_1AbstractLayer_1a54c83f92a30139407e7477a8ce019414" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>set_node_collection</name></member>
      <member refid="classnest_1_1FreeLayer_1acb2f436d36da84d837609d56562af384" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>set_status</name></member>
      <member refid="classnest_1_1AbstractLayer_1a5ffddcffaba780d5e7b61d2850d2c922" prot="public" virt="virtual"><scope>nest::FreeLayer</scope><name>~AbstractLayer</name></member>
      <member refid="classnest_1_1Layer_1a5c95831f62337f6b03b7a3030721140e" prot="public" virt="non-virtual"><scope>nest::FreeLayer</scope><name>~Layer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
