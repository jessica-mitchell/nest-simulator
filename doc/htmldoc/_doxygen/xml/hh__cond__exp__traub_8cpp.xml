<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="hh__cond__exp__traub_8cpp" kind="file" language="C++">
    <compoundname>hh_cond_exp_traub.cpp</compoundname>
    <includes refid="hh__cond__exp__traub_8h" local="yes">hh_cond_exp_traub.h</includes>
    <incdepgraph>
      <node id="1">
        <label>hh_cond_exp_traub.cpp</label>
        <link refid="hh__cond__exp__traub_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>hh_cond_exp_traub.h</label>
        <link refid="hh__cond__exp__traub_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>hh_cond_exp_traub.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hh__cond__exp__traub_8h" kindref="compound">hh_cond_exp_traub.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict__util_8h" kindref="compound">dict_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="numerics_8h" kindref="compound">numerics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exceptions_8h" kindref="compound">exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger__impl_8h" kindref="compound">universal_data_logger_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dictutils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="classnest_1_1RecordablesMap" kindref="compound">nest::RecordablesMap&lt; nest::hh_cond_exp_traub &gt;</ref><sp/>nest::hh_cond_exp_traub::recordablesMap_;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Override<sp/>the<sp/>create()<sp/>method<sp/>with<sp/>one<sp/>call<sp/>to<sp/>RecordablesMap::insert_()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>quantity<sp/>to<sp/>be<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="classnest_1_1RecordablesMap_1a303b1d32c8f72ab936b4afe76bca9588" kindref="member">RecordablesMap&lt; hh_cond_exp_traub &gt;::create</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>standard<sp/>names<sp/>wherever<sp/>you<sp/>can<sp/>for<sp/>consistency!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::V_M<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a92406873ef51f13963f209b9beec8f9e" kindref="member">names::g_ex</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::G_EXC<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1af2d957936a8e2c0eb4180f9d911c7c1a" kindref="member">names::g_in</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::G_INH<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a5cad11d17bb6030b7d33a2bb0d678fd8" kindref="member">names::Act_m</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::HH_M<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a23e074eb6f5908eccc3b57f78a6efdf1" kindref="member">names::Inact_h</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::HH_H<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1ac6484ea3cc286f1a484ea52e09a1985b" kindref="member">names::Act_n</ref>,<sp/>&amp;hh_cond_exp_traub::get_y_elem_&lt;<sp/>hh_cond_exp_traub::State_::HH_N<sp/>&gt;<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">hh_cond_exp_traub_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f[],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pnode<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>shorthand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>nest::hh_cond_exp_traub::State_<sp/><ref refid="namespacenest_1_1names_1ad31ff3d9ef6e8e758f4f565da364d1ae" kindref="member">S</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>access<sp/>to<sp/>node<sp/>so<sp/>we<sp/>can<sp/>almost<sp/>work<sp/>as<sp/>in<sp/>a<sp/>member<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>assert(<sp/>pnode<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nest::hh_cond_exp_traub&amp;<sp/>node<sp/>=<sp/>*(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/>nest::hh_cond_exp_traub*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pnode<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>y[]<sp/>here<sp/>is---and<sp/>must<sp/>be---the<sp/>state<sp/>vector<sp/>supplied<sp/>by<sp/>the<sp/>integrator,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>state<sp/>vector<sp/>in<sp/>the<sp/>node,<sp/>node.S_.y[].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>code<sp/>is<sp/>verbose<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>clarity.<sp/>We<sp/>assume<sp/>that<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>good<sp/>compiler<sp/>will<sp/>optimize<sp/>the<sp/>verbosity<sp/>away<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ionic<sp/>currents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_Na<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>node.P_.g_Na<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_M<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_M<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_M<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_H<sp/>]<sp/>*<sp/>(<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.E_Na<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_K<sp/>=</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>node.P_.g_K<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_N<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_N<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_N<sp/>]<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_N<sp/>]<sp/>*<sp/>(<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.E_K<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_L<sp/>=<sp/>node.P_.g_L<sp/>*<sp/>(<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.E_L<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_syn_exc<sp/>=<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::G_EXC<sp/>]<sp/>*<sp/>(<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.E_ex<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_syn_inh<sp/>=<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::G_INH<sp/>]<sp/>*<sp/>(<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.E_in<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>membrane<sp/>potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>f[<sp/>S::V_M<sp/>]<sp/>=<sp/>(<sp/>-I_Na<sp/>-<sp/>I_K<sp/>-<sp/>I_L<sp/>-<sp/>I_syn_exc<sp/>-<sp/>I_syn_inh<sp/>+<sp/>node.B_.I_stim_<sp/>+<sp/>node.P_.I_e<sp/>)<sp/>/<sp/>node.P_.C_m;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>channel<sp/>dynamics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V<sp/>=<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::V_M<sp/>]<sp/>-<sp/>node.P_.V_T;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_n<sp/>=<sp/>0.032<sp/>*<sp/>(<sp/>15.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>15.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_n<sp/>=<sp/>0.5<sp/>*<sp/>std::exp(<sp/>(<sp/>10.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>40.<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_m<sp/>=<sp/>0.32<sp/>*<sp/>(<sp/>13.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>13.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>4.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_m<sp/>=<sp/>0.28<sp/>*<sp/>(<sp/>V<sp/>-<sp/>40.<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>V<sp/>-<sp/>40.<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_h<sp/>=<sp/>0.128<sp/>*<sp/>std::exp(<sp/>(<sp/>17.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>18.<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_h<sp/>=<sp/>4.<sp/>/<sp/>(<sp/>1.<sp/>+<sp/>std::exp(<sp/>(<sp/>40.<sp/>-<sp/>V<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>f[<sp/>S::HH_M<sp/>]<sp/>=<sp/>alpha_m<sp/>-<sp/>(<sp/>alpha_m<sp/>+<sp/>beta_m<sp/>)<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_M<sp/>];<sp/></highlight><highlight class="comment">//<sp/>m-variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>f[<sp/>S::HH_H<sp/>]<sp/>=<sp/>alpha_h<sp/>-<sp/>(<sp/>alpha_h<sp/>+<sp/>beta_h<sp/>)<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_H<sp/>];<sp/></highlight><highlight class="comment">//<sp/>h-variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>f[<sp/>S::HH_N<sp/>]<sp/>=<sp/>alpha_n<sp/>-<sp/>(<sp/>alpha_n<sp/>+<sp/>beta_n<sp/>)<sp/>*<sp/><ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::HH_N<sp/>];<sp/></highlight><highlight class="comment">//<sp/>n-variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>synapses:<sp/>exponential<sp/>conductance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>f[<sp/>S::G_EXC<sp/>]<sp/>=<sp/>-<ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::G_EXC<sp/>]<sp/>/<sp/>node.P_.tau_synE;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>f[<sp/>S::G_INH<sp/>]<sp/>=<sp/>-<ref refid="namespacenest_1_1names_1a4ace48062a2b7d7d3daecba136c2d64d" kindref="member">y</ref>[<sp/>S::G_INH<sp/>]<sp/>/<sp/>node.P_.tau_synI;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GSL_SUCCESS;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>Default<sp/>constructors<sp/>defining<sp/>default<sp/>parameters<sp/>and<sp/>state</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">nest::hh_cond_exp_traub::Parameters_::Parameters_()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="namespacenest_1_1names_1ae8ea11d29f6f997137801c99fd2346be" kindref="member">g_Na</ref>(<sp/>20000.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Sodium<sp/>Conductance<sp/>(nS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a075931e9b0c62e1725010ebd8fab4ae6" kindref="member">g_K</ref>(<sp/>6000.0<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>K<sp/>Conductance<sp/><sp/><sp/><sp/><sp/><sp/>(nS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">g_L</ref>(<sp/>10.0<sp/>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Leak<sp/>Conductance<sp/><sp/><sp/>(nS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">C_m</ref>(<sp/>200.0<sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Membrane<sp/>Capacitance<sp/>(pF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a6ed56b943f0e47a0efe10f80a1202b36" kindref="member">E_Na</ref>(<sp/>50.0<sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reversal<sp/>potentials<sp/>(mV)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a4a657c0b726dff1ae825b7289476b3ea" kindref="member">E_K</ref>(<sp/>-90.0<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">E_L</ref>(<sp/>-60.0<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1ae547e8ea8df673534a5c3fa93446d2f7" kindref="member">V_T</ref>(<sp/>-63.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>adjusts<sp/>threshold<sp/>to<sp/>around<sp/>-50<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a9d1236d8d205532be26c276729092a0c" kindref="member">E_ex</ref>(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a1302a87ebd71d9021ff90e7b3095c3f2" kindref="member">E_in</ref>(<sp/>-80.0<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>,<sp/>tau_synE(<sp/>5.0<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>Synaptic<sp/>Time<sp/>Constant<sp/>Excitatory<sp/>Synapse<sp/>(ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>,<sp/>tau_synI(<sp/>10.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Synaptic<sp/>Time<sp/>Constant<sp/>Excitatory<sp/>Synapse<sp/>(ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>,<sp/>t_ref_(<sp/>2.0<sp/>)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refractory<sp/>time<sp/>in<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">I_e</ref>(<sp/>0.0<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stimulus<sp/>Current<sp/>(pA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">nest::hh_cond_exp_traub::State_::State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>:<sp/>r_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>y_[<sp/>0<sp/>]<sp/>=<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref>.E_L;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>STATE_VEC_SIZE;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>y_[<sp/>i<sp/>]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>equilibrium<sp/>values<sp/>for<sp/>(in)activation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_n<sp/>=<sp/>0.032<sp/>*<sp/>(<sp/>15.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>15.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_n<sp/>=<sp/>0.5<sp/>*<sp/>std::exp(<sp/>(<sp/>10.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>40.<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_m<sp/>=<sp/>0.32<sp/>*<sp/>(<sp/>13.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>13.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>4.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_m<sp/>=<sp/>0.28<sp/>*<sp/>(<sp/>y_[<sp/>0<sp/>]<sp/>-<sp/>40.<sp/>)<sp/>/<sp/>(<sp/>std::exp(<sp/>(<sp/>y_[<sp/>0<sp/>]<sp/>-<sp/>40.<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>-<sp/>1.<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_h<sp/>=<sp/>0.128<sp/>*<sp/>std::exp(<sp/>(<sp/>17.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>18.<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_h<sp/>=<sp/>4.<sp/>/<sp/>(<sp/>1.<sp/>+<sp/>std::exp(<sp/>(<sp/>40.<sp/>-<sp/>y_[<sp/>0<sp/>]<sp/>)<sp/>/<sp/>5.<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>y_[<sp/>HH_H<sp/>]<sp/>=<sp/>alpha_h<sp/>/<sp/>(<sp/>alpha_h<sp/>+<sp/>beta_h<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>y_[<sp/>HH_N<sp/>]<sp/>=<sp/>alpha_n<sp/>/<sp/>(<sp/>alpha_n<sp/>+<sp/>beta_n<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>y_[<sp/>HH_M<sp/>]<sp/>=<sp/>alpha_m<sp/>/<sp/>(<sp/>alpha_m<sp/>+<sp/>beta_m<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">nest::hh_cond_exp_traub::State_::State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>:<sp/>r_(<sp/>s.r_<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>STATE_VEC_SIZE;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>y_[<sp/>i<sp/>]<sp/>=<sp/>s.y_[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">nest::hh_cond_exp_traub::State_&amp;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">nest::hh_cond_exp_traub::State_::operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>s<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>r_<sp/>=<sp/>s.r_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>STATE_VEC_SIZE;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>y_[<sp/>i<sp/>]<sp/>=<sp/>s.y_[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>Parameter<sp/>and<sp/>state<sp/>extractions<sp/>and<sp/>manipulation<sp/>functions</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">nest::hh_cond_exp_traub::Parameters_::get(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae8ea11d29f6f997137801c99fd2346be" kindref="member">names::g_Na</ref>,<sp/><ref refid="namespacenest_1_1names_1ae8ea11d29f6f997137801c99fd2346be" kindref="member">g_Na</ref><sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a075931e9b0c62e1725010ebd8fab4ae6" kindref="member">names::g_K</ref>,<sp/><ref refid="namespacenest_1_1names_1a075931e9b0c62e1725010ebd8fab4ae6" kindref="member">g_K</ref><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">names::g_L</ref>,<sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">g_L</ref><sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">names::C_m</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">C_m</ref><sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a6ed56b943f0e47a0efe10f80a1202b36" kindref="member">names::E_Na</ref>,<sp/><ref refid="namespacenest_1_1names_1a6ed56b943f0e47a0efe10f80a1202b36" kindref="member">E_Na</ref><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a4a657c0b726dff1ae825b7289476b3ea" kindref="member">names::E_K</ref>,<sp/><ref refid="namespacenest_1_1names_1a4a657c0b726dff1ae825b7289476b3ea" kindref="member">E_K</ref><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">names::E_L</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">E_L</ref><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae547e8ea8df673534a5c3fa93446d2f7" kindref="member">names::V_T</ref>,<sp/><ref refid="namespacenest_1_1names_1ae547e8ea8df673534a5c3fa93446d2f7" kindref="member">V_T</ref><sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a9d1236d8d205532be26c276729092a0c" kindref="member">names::E_ex</ref>,<sp/><ref refid="namespacenest_1_1names_1a9d1236d8d205532be26c276729092a0c" kindref="member">E_ex</ref><sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1302a87ebd71d9021ff90e7b3095c3f2" kindref="member">names::E_in</ref>,<sp/><ref refid="namespacenest_1_1names_1a1302a87ebd71d9021ff90e7b3095c3f2" kindref="member">E_in</ref><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a305ab08238308dbd82aeeaa1fd7e67d0" kindref="member">names::tau_syn_ex</ref>,<sp/>tau_synE<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab12dee2ee1f5c6e86eaaad11b28d4de0" kindref="member">names::tau_syn_in</ref>,<sp/>tau_synI<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a7971c19aa06d9537038659f874a43458" kindref="member">names::t_ref</ref>,<sp/>t_ref_<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">names::I_e</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">I_e</ref><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">nest::hh_cond_exp_traub::Parameters_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>Node*<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae8ea11d29f6f997137801c99fd2346be" kindref="member">names::g_Na</ref>,<sp/><ref refid="namespacenest_1_1names_1ae8ea11d29f6f997137801c99fd2346be" kindref="member">g_Na</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a075931e9b0c62e1725010ebd8fab4ae6" kindref="member">names::g_K</ref>,<sp/><ref refid="namespacenest_1_1names_1a075931e9b0c62e1725010ebd8fab4ae6" kindref="member">g_K</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">names::g_L</ref>,<sp/><ref refid="namespacenest_1_1names_1a17c4a30b46956ab16334ff1c2a743fbb" kindref="member">g_L</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">names::C_m</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">C_m</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a6ed56b943f0e47a0efe10f80a1202b36" kindref="member">names::E_Na</ref>,<sp/><ref refid="namespacenest_1_1names_1a6ed56b943f0e47a0efe10f80a1202b36" kindref="member">E_Na</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a4a657c0b726dff1ae825b7289476b3ea" kindref="member">names::E_K</ref>,<sp/><ref refid="namespacenest_1_1names_1a4a657c0b726dff1ae825b7289476b3ea" kindref="member">E_K</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">names::E_L</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">E_L</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae547e8ea8df673534a5c3fa93446d2f7" kindref="member">names::V_T</ref>,<sp/><ref refid="namespacenest_1_1names_1ae547e8ea8df673534a5c3fa93446d2f7" kindref="member">V_T</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a9d1236d8d205532be26c276729092a0c" kindref="member">names::E_ex</ref>,<sp/><ref refid="namespacenest_1_1names_1a9d1236d8d205532be26c276729092a0c" kindref="member">E_ex</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1302a87ebd71d9021ff90e7b3095c3f2" kindref="member">names::E_in</ref>,<sp/><ref refid="namespacenest_1_1names_1a1302a87ebd71d9021ff90e7b3095c3f2" kindref="member">E_in</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a305ab08238308dbd82aeeaa1fd7e67d0" kindref="member">names::tau_syn_ex</ref>,<sp/>tau_synE,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab12dee2ee1f5c6e86eaaad11b28d4de0" kindref="member">names::tau_syn_in</ref>,<sp/>tau_synI,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a7971c19aa06d9537038659f874a43458" kindref="member">names::t_ref</ref>,<sp/>t_ref_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">names::I_e</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">I_e</ref>,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">C_m</ref><sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Capacitance<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tau_synE<sp/>&lt;=<sp/>0<sp/>or<sp/>tau_synI<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>time<sp/>constants<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t_ref_<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Refractory<sp/>time<sp/>cannot<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">nest::hh_cond_exp_traub::State_::get(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="238"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>y_[<sp/>V_M<sp/>]<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Membrane<sp/>potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a5cad11d17bb6030b7d33a2bb0d678fd8" kindref="member">names::Act_m</ref>,<sp/>y_[<sp/>HH_M<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a23e074eb6f5908eccc3b57f78a6efdf1" kindref="member">names::Inact_h</ref>,<sp/>y_[<sp/>HH_H<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ac6484ea3cc286f1a484ea52e09a1985b" kindref="member">names::Act_n</ref>,<sp/>y_[<sp/>HH_N<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">nest::hh_cond_exp_traub::State_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;,<sp/>Node*<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>y_[<sp/>V_M<sp/>],<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a5cad11d17bb6030b7d33a2bb0d678fd8" kindref="member">names::Act_m</ref>,<sp/>y_[<sp/>HH_M<sp/>],<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a23e074eb6f5908eccc3b57f78a6efdf1" kindref="member">names::Inact_h</ref>,<sp/>y_[<sp/>HH_H<sp/>],<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ac6484ea3cc286f1a484ea52e09a1985b" kindref="member">names::Act_n</ref>,<sp/>y_[<sp/>HH_N<sp/>],<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>y_[<sp/>HH_M<sp/>]<sp/>&lt;<sp/>0<sp/>or<sp/>y_[<sp/>HH_H<sp/>]<sp/>&lt;<sp/>0<sp/>or<sp/>y_[<sp/>HH_N<sp/>]<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>(in)activation<sp/>variables<sp/>must<sp/>be<sp/>non-negative.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">nest::hh_cond_exp_traub::Buffers_::Buffers_(<sp/>hh_cond_exp_traub&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>:<sp/>logger_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>,<sp/>s_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>,<sp/>c_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>,<sp/>e_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>of<sp/>the<sp/>remaining<sp/>members<sp/>is<sp/>deferred<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init_buffers_().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">nest::hh_cond_exp_traub::Buffers_::Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>hh_cond_exp_traub&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>:<sp/>logger_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>,<sp/>s_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>,<sp/>c_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>,<sp/>e_(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>of<sp/>the<sp/>remaining<sp/>members<sp/>is<sp/>deferred<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init_buffers_().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/>Default<sp/>and<sp/>copy<sp/>constructor<sp/>for<sp/>node,<sp/>and<sp/>destructor</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">nest::hh_cond_exp_traub::hh_cond_exp_traub()</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>:<sp/>ArchivingNode()</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>,<sp/>P_()</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>,<sp/>S_(<sp/>P_<sp/>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>,<sp/>B_(<sp/>*this<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>recordablesMap_.create();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">nest::hh_cond_exp_traub::hh_cond_exp_traub(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>hh_cond_exp_traub&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>:<sp/>ArchivingNode(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>,<sp/>P_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.P_<sp/>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>,<sp/>S_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.S_<sp/>)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>,<sp/>B_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.B_,<sp/>*this<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">nest::hh_cond_exp_traub::~hh_cond_exp_traub()</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GSL<sp/>structs<sp/>may<sp/>not<sp/>have<sp/>been<sp/>allocated,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>protect<sp/>destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>B_.s_<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step_free(<sp/>B_.s_<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>B_.c_<sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control_free(<sp/>B_.c_<sp/>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>B_.e_<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve_free(<sp/>B_.e_<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>Node<sp/>initialization<sp/>functions</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">nest::hh_cond_exp_traub::init_buffers_()</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>B_.spike_exc_.clear();<sp/></highlight><highlight class="comment">//<sp/>includes<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>B_.spike_inh_.clear();<sp/></highlight><highlight class="comment">//<sp/>includes<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>B_.currents_.clear();<sp/><sp/></highlight><highlight class="comment">//<sp/>includes<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>ArchivingNode::clear_history();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>B_.logger_.reset();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>B_.step_<sp/>=<sp/>Time::get_resolution().get_ms();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>B_.IntegrationStep_<sp/>=<sp/>B_.step_;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>B_.I_stim_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>B_.s_<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.s_<sp/>=<sp/>gsl_odeiv_step_alloc(<sp/>gsl_odeiv_step_rkf45,<sp/>State_::STATE_VEC_SIZE<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step_reset(<sp/>B_.s_<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>B_.c_<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.c_<sp/>=<sp/>gsl_odeiv_control_y_new(<sp/>1<ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>-3,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control_init(<sp/>B_.c_,<sp/>1<ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>-3,<sp/>0.0,<sp/>1.0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>B_.e_<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.e_<sp/>=<sp/>gsl_odeiv_evolve_alloc(<sp/>State_::STATE_VEC_SIZE<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve_reset(<sp/>B_.e_<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>B_.sys_.function<sp/>=<sp/>hh_cond_exp_traub_dynamics;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>B_.sys_.jacobian<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>B_.sys_.dimension<sp/>=<sp/>State_::STATE_VEC_SIZE;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>B_.sys_.params<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">nest::hh_cond_exp_traub::pre_run_hook()</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ensures<sp/>initialization<sp/>in<sp/>case<sp/>mm<sp/>connected<sp/>after<sp/>Simulate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>B_.logger_.init();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>V_.refractory_counts_<sp/>=<sp/>Time(<sp/>Time::ms(<sp/>P_.t_ref_<sp/>)<sp/>).get_steps();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>V_.U_old_<sp/>=<sp/>S_.y_[<sp/>State_::V_M<sp/>];</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>Update<sp/>and<sp/>spike<sp/>handling<sp/>functions</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">nest::hh_cond_exp_traub::update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e" kindref="member">origin</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>to<sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lag<sp/>=<sp/>from;<sp/>lag<sp/>&lt;<sp/>to;<sp/>++lag<sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tt<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>all<sp/>relative!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.U_old_<sp/>=<sp/>S_.y_[<sp/>State_::V_M<sp/>];</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>adaptive<sp/>step<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>tt<sp/>&lt;<sp/>B_.step_<sp/>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>gsl_odeiv_evolve_apply(<sp/>B_.e_,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_.c_,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_.s_,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;B_.sys_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>system<sp/>of<sp/>ODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>t...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B_.step_,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...to<sp/>t=t+h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;B_.IntegrationStep_,<sp/></highlight><highlight class="comment">//<sp/>integration<sp/>window<sp/>(written<sp/>on!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.y_<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neuron<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>!=<sp/>GSL_SUCCESS<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>GSLSolverFailure(<sp/>get_name(),<sp/>status<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.y_[<sp/>State_::G_EXC<sp/>]<sp/>+=<sp/>B_.spike_exc_.get_value(<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.y_[<sp/>State_::G_INH<sp/>]<sp/>+=<sp/>B_.spike_inh_.get_value(<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sending<sp/>spikes:<sp/>crossing<sp/>0<sp/>mV,<sp/>pseudo-refractoriness<sp/>and<sp/>local<sp/>maximum...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refractory?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>S_.r_<sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--S_.r_;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(threshold<sp/><sp/><sp/>and<sp/><sp/><sp/><sp/>maximum<sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>S_.y_[<sp/>State_::V_M<sp/>]<sp/>&gt;=<sp/>P_.V_T<sp/>+<sp/>30.<sp/>and<sp/>V_.U_old_<sp/>&gt;<sp/>S_.y_[<sp/>State_::V_M<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S_.r_<sp/>=<sp/>V_.refractory_counts_;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_spiketime(<sp/>Time::step(<sp/><ref refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e" kindref="member">origin</ref>.get_steps()<sp/>+<sp/>lag<sp/>+<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpikeEvent<sp/>se;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().event_delivery_manager.send(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>se,<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>input<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.I_stim_<sp/>=<sp/>B_.currents_.get_value(<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>state<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.logger_.record_data(<sp/><ref refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e" kindref="member">origin</ref>.get_steps()<sp/>+<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">nest::hh_cond_exp_traub::handle(<sp/>SpikeEvent&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_delay_steps()<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight()<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.spike_exc_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight()<sp/>*<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_multiplicity()<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>with<sp/>negative<sp/>weight,<sp/>ie<sp/>positive<sp/>value,<sp/>since<sp/>we<sp/>are<sp/>changing<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>conductance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.spike_inh_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight()<sp/>*<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_multiplicity()<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">nest::hh_cond_exp_traub::handle(<sp/>CurrentEvent&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_delay_steps()<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>=<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_current();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>weighted<sp/>current;<sp/>HEP<sp/>2002-10-04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>B_.currents_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>*<sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal">nest::hh_cond_exp_traub::handle(<sp/>DataLoggingRequest&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>B_.logger_.handle(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/hh_cond_exp_traub.cpp"/>
  </compounddef>
</doxygen>
