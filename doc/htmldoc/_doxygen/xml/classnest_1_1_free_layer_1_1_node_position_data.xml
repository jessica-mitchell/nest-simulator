<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_free_layer_1_1_node_position_data" kind="class" language="C++" prot="protected">
    <compoundname>nest::FreeLayer::NodePositionData</compoundname>
    <includes refid="free__layer_8h" local="no">free_layer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_free_layer_1_1_node_position_data_1af020d68e239c57b8307ea90dd82cc0ff" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::FreeLayer&lt; D &gt;::NodePositionData::node_id_</definition>
        <argsstring></argsstring>
        <name>node_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="106" column="12" bodyfile="nestkernel/free_layer.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_free_layer_1_1_node_position_data_1aeee4da674955bba8d6ff3703a6ee39ad" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::FreeLayer&lt; D &gt;::NodePositionData::pos_[D]</definition>
        <argsstring>[D]</argsstring>
        <name>pos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="107" column="12" bodyfile="nestkernel/free_layer.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_free_layer_1_1_node_position_data_1ae9db612b84c52147ab24377a86811ed2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::FreeLayer&lt; D &gt;::NodePositionData::get_node_id</definition>
        <argsstring>() const</argsstring>
        <name>get_node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="85" column="5" bodyfile="nestkernel/free_layer.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_free_layer_1_1_node_position_data_1a432c914c08d7cf0ef97480888dff7f36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::FreeLayer&lt; D &gt;::NodePositionData::get_position</definition>
        <argsstring>() const</argsstring>
        <name>get_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="90" column="5" bodyfile="nestkernel/free_layer.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_free_layer_1_1_node_position_data_1a59f9b3e94581d4db3a65790467a4663a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::FreeLayer&lt; D &gt;::NodePositionData::operator&lt;</definition>
        <argsstring>(const NodePositionData &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classnest_1_1_free_layer_1_1_node_position_data" kindref="compound">NodePositionData</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="94" column="5" bodyfile="nestkernel/free_layer.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_free_layer_1_1_node_position_data_1ac6c5b0df9707ae326f6362c713ccc4a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::FreeLayer&lt; D &gt;::NodePositionData::operator==</definition>
        <argsstring>(const NodePositionData &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnest_1_1_free_layer_1_1_node_position_data" kindref="compound">NodePositionData</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/free_layer.h" line="100" column="5" bodyfile="nestkernel/free_layer.h" bodystart="100" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is used when communicating positions across MPI procs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::FreeLayer&lt; D &gt;::NodePositionData</label>
        <link refid="classnest_1_1_free_layer_1_1_node_position_data"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/free_layer.h" line="81" column="3" bodyfile="nestkernel/free_layer.h" bodystart="82" bodyend="108"/>
    <listofallmembers>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1ae9db612b84c52147ab24377a86811ed2" prot="public" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1a432c914c08d7cf0ef97480888dff7f36" prot="public" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>get_position</name></member>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1af020d68e239c57b8307ea90dd82cc0ff" prot="private" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>node_id_</name></member>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1a59f9b3e94581d4db3a65790467a4663a" prot="public" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>operator&lt;</name></member>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1ac6c5b0df9707ae326f6362c713ccc4a6" prot="public" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>operator==</name></member>
      <member refid="classnest_1_1_free_layer_1_1_node_position_data_1aeee4da674955bba8d6ff3703a6ee39ad" prot="private" virt="non-virtual"><scope>nest::FreeLayer::NodePositionData</scope><name>pos_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
