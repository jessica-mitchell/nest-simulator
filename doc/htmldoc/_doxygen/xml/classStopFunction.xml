<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classStopFunction" kind="class" language="C++" prot="public">
    <compoundname>StopFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="slicontrol_8h" local="no">slicontrol.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classStopFunction_1a20f22214366ca1bb6d9e8946971baa2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>StopFunction::StopFunction</definition>
        <argsstring>()</argsstring>
        <name>StopFunction</name>
        <qualifiedname>StopFunction::StopFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="151" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classStopFunction_1a863876b5ded1356bac44f22242d849df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void StopFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>StopFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: stop - raise a stop signal </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: stop -&gt; -</para>
<para>Desctiption: stop causes the execution stack to be popped until an enclosing stopped context is found. Effectively, the stopped/stop combination equals the catch/throw pair of C++. stop/stopped is used to implement SLI&apos;s error handling capabilities.</para>
<para>Notes: stop, stopped is PostScript compatible.</para>
<para>References: The Red Book, sec. 3.10</para>
<para>SeeAlso: stopped, raiseerror </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="154" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.cc" bodystart="435" bodyend="491"/>
        <references refid="classSLIInterpreter_1ae955a59aada4f5dec01bb77ff0400242" compoundref="interpret_8h" startline="576" endline="579">SLIInterpreter::catch_errors</references>
        <references refid="classTokenStack_1a718dc49b82f89b99d9d8a59155adb97d" compoundref="tokenstack_8h" startline="55" endline="58">TokenStack::clear</references>
        <references refid="classToken_1a2c88e079ad4b9bc2769f54a37099e56a" compoundref="token_8h" startline="342" endline="345">Token::contains</references>
        <references refid="classSLIInterpreter_1ab345ed039af59fb2b2b546f18f153eba" compoundref="interpret_8cc" startline="1048" endline="1198">SLIInterpreter::debug_commandline</references>
        <references refid="classSLIInterpreter_1a00d437b4b61acb86f8cf6ee97fce8b80" compoundref="interpret_8h" startline="454" endline="457">SLIInterpreter::debug_mode_on</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classSLIInterpreter_1a55d34ddea528b469d72f1cf367f44b6a" compoundref="interpret_8h" startline="445" endline="448">SLIInterpreter::get_debug_mode</references>
        <references refid="classSLIInterpreter_1ab527da2fa52972b0f7d96ee7859cae1c" compoundref="interpret_8h" startline="131">SLIInterpreter::istopped_name</references>
        <references refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" compoundref="tokenstack_8h" startline="184" endline="187">TokenStack::load</references>
        <references refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" compoundref="interpret_8cc" startline="774" endline="824">SLIInterpreter::message</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" compoundref="tokenstack_8h" startline="62" endline="65">TokenStack::push</references>
        <references refid="classSLIInterpreter_1aaa48321bbd17de75ecf8283bf3d9f4ef" compoundref="interpret_8h" startline="542" endline="545">SLIInterpreter::show_backtrace</references>
        <references refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" compoundref="interpret_8cc" startline="986" endline="1018">SLIInterpreter::stack_backtrace</references>
        <references refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" compoundref="tokenstack_8h" startline="116" endline="119">TokenStack::top</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>StopFunction</label>
        <link refid="classStopFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>StopFunction</label>
        <link refid="classStopFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="148" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="149" bodyend="155"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>StopFunction</scope><name>backtrace</name></member>
      <member refid="classStopFunction_1a863876b5ded1356bac44f22242d849df" prot="public" virt="virtual"><scope>StopFunction</scope><name>execute</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>StopFunction</scope><name>SLIFunction</name></member>
      <member refid="classStopFunction_1a20f22214366ca1bb6d9e8946971baa2e" prot="public" virt="non-virtual"><scope>StopFunction</scope><name>StopFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>StopFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
