<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_box_mask" kind="class" language="C++" prot="public">
    <compoundname>nest::BoxMask</compoundname>
    <basecompoundref refid="classnest_1_1_mask" prot="public" virt="non-virtual">nest::Mask&lt; D &gt;</basecompoundref>
    <includes refid="mask_8h" local="no">mask.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a57b24d50b7df9c45483745dc90df7e77" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::lower_left_</definition>
        <argsstring></argsstring>
        <name>lower_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="266" column="12" bodyfile="nestkernel/mask.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a699d017f705e8306777ba1b74d168af4" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::upper_right_</definition>
        <argsstring></argsstring>
        <name>upper_right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="267" column="12" bodyfile="nestkernel/mask.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1adb56982a1b7afd6cbb62e5d2711629da" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::min_values_</definition>
        <argsstring></argsstring>
        <name>min_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="275" column="12" bodyfile="nestkernel/mask.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a1fcfbcc3d474196496319d00674d90b0" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::max_values_</definition>
        <argsstring></argsstring>
        <name>max_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="276" column="12" bodyfile="nestkernel/mask.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1af67cfefb9c122799c6b51f23c7177c91" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::azimuth_angle_</definition>
        <argsstring></argsstring>
        <name>azimuth_angle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="278" column="10" bodyfile="nestkernel/mask.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a864117c7e0be76d0a1c52376c20820a4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::polar_angle_</definition>
        <argsstring></argsstring>
        <name>polar_angle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="279" column="10" bodyfile="nestkernel/mask.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1afa3cf3b33865ed5b9fd35c70526d02ee" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::azimuth_cos_</definition>
        <argsstring></argsstring>
        <name>azimuth_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="280" column="10" bodyfile="nestkernel/mask.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ae22c92dc1dc68cd6859b0c05937c6ce8" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::azimuth_sin_</definition>
        <argsstring></argsstring>
        <name>azimuth_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="281" column="10" bodyfile="nestkernel/mask.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ae457375f2d6f478376664c4f6a7f5b92" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::polar_cos_</definition>
        <argsstring></argsstring>
        <name>polar_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="282" column="10" bodyfile="nestkernel/mask.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a1eb52a8f9c0d13d050863e6a9bbad580" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::polar_sin_</definition>
        <argsstring></argsstring>
        <name>polar_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="283" column="10" bodyfile="nestkernel/mask.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1acb314713b7fd4c76d0d240e484075bea" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::cntr_</definition>
        <argsstring></argsstring>
        <name>cntr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="285" column="12" bodyfile="nestkernel/mask.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ac997908fb8c59685af19502a564e742d" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::BoxMask&lt; D &gt;::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="286" column="12" bodyfile="nestkernel/mask.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1af2df9bf928ae7b5dddf148c8663f2c80" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_x_az_cos_</definition>
        <argsstring></argsstring>
        <name>cntr_x_az_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="287" column="10" bodyfile="nestkernel/mask.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1aed92cab07c0ede459f5516b2deec75f5" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_x_az_sin_</definition>
        <argsstring></argsstring>
        <name>cntr_x_az_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="288" column="10" bodyfile="nestkernel/mask.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ac72b72b5e633e79bba1cdc349b956d42" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_y_az_cos_</definition>
        <argsstring></argsstring>
        <name>cntr_y_az_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="289" column="10" bodyfile="nestkernel/mask.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a5b2861ee1456145ad35c32eb7262c4bd" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_y_az_sin_</definition>
        <argsstring></argsstring>
        <name>cntr_y_az_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="290" column="10" bodyfile="nestkernel/mask.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a079d03d0d3cbaa0dc97e68c18cf6764d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_z_pol_cos_</definition>
        <argsstring></argsstring>
        <name>cntr_z_pol_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="291" column="10" bodyfile="nestkernel/mask.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a1c7c1ed6144baced0310192b6acd4037" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_z_pol_sin_</definition>
        <argsstring></argsstring>
        <name>cntr_z_pol_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="292" column="10" bodyfile="nestkernel/mask.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a1bb7acfd5144ba81a592f64d8a5089a2" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_x_az_cos_pol_cos_</definition>
        <argsstring></argsstring>
        <name>cntr_x_az_cos_pol_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="293" column="10" bodyfile="nestkernel/mask.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a52b4273c9dc45375e1423447390455e9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_x_az_cos_pol_sin_</definition>
        <argsstring></argsstring>
        <name>cntr_x_az_cos_pol_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="294" column="10" bodyfile="nestkernel/mask.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ab78330d891845d675805bf6e87e34fcc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_y_az_sin_pol_cos_</definition>
        <argsstring></argsstring>
        <name>cntr_y_az_sin_pol_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="295" column="10" bodyfile="nestkernel/mask.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a1cb30c5f0f7ff2038bc7e24cc65b77d9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::cntr_y_az_sin_pol_sin_</definition>
        <argsstring></argsstring>
        <name>cntr_y_az_sin_pol_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="296" column="10" bodyfile="nestkernel/mask.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a5b5b23adae3532ef78243c3be2857e5c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::az_cos_pol_cos_</definition>
        <argsstring></argsstring>
        <name>az_cos_pol_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="297" column="10" bodyfile="nestkernel/mask.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1abd39ad0fd79b32583559e73cdecb5e06" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::az_cos_pol_sin_</definition>
        <argsstring></argsstring>
        <name>az_cos_pol_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="298" column="10" bodyfile="nestkernel/mask.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ae3015e51ebc0f654a3d0fd359c5a0320" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::az_sin_pol_cos_</definition>
        <argsstring></argsstring>
        <name>az_sin_pol_cos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="299" column="10" bodyfile="nestkernel/mask.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1a5bd8861bb1fe5f0a496dcd3efeb43692" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::BoxMask&lt; D &gt;::az_sin_pol_sin_</definition>
        <argsstring></argsstring>
        <name>az_sin_pol_sin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="300" column="10" bodyfile="nestkernel/mask.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_box_mask_1ab980c5daff776af593149dea6dcf8003" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; D &gt;::is_rotated_</definition>
        <argsstring></argsstring>
        <name>is_rotated_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="302" column="8" bodyfile="nestkernel/mask.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_box_mask_1a04c40ffa62333c05342e6a34eaf2766b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::BoxMask&lt; D &gt;::BoxMask</definition>
        <argsstring>(const DictionaryDatum &amp;)</argsstring>
        <name>BoxMask</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parameters that should be in the dictionary: lower_left - <ref refid="classnest_1_1_position" kindref="compound">Position</ref> of lower left corner (array of doubles) upper_right - <ref refid="classnest_1_1_position" kindref="compound">Position</ref> of upper right corner (array of doubles) azimuth_angle - Rotation angle in degrees from x-axis (double), optional polar_angle - Rotation angle in degrees from z-axis (double), the polar angle does not apply in 2D, optional </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="221" column="3" bodyfile="nestkernel/mask.h" bodystart="749" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a6650d3bf93bbb1c4d014893bbaef799c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::BoxMask&lt; D &gt;::BoxMask</definition>
        <argsstring>(const Position&lt; D &gt; &amp;lower_left, const Position&lt; D &gt; &amp;upper_right, const double azimuth_angle=0.0, const double polar_angle=0.0)</argsstring>
        <name>BoxMask</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>lower_left</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>upper_right</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>azimuth_angle</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>polar_angle</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="223" column="3" bodyfile="nestkernel/mask.h" bodystart="833" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a2eb946a63b546dba987dc38385f8926d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::BoxMask&lt; D &gt;::~BoxMask</definition>
        <argsstring>() override</argsstring>
        <name>~BoxMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="228" column="3" bodyfile="nestkernel/mask.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a93d91095c71dce25fcca0a834d7f9fa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; D &gt;::inside</definition>
        <argsstring>(const Position&lt; D &gt; &amp;p) const override</argsstring>
        <name>inside</name>
        <reimplements refid="classnest_1_1_mask_1a43d1949f739d9bc932e2aadb25d573de">inside</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if point is inside the box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="237" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1aea241631da9ecae255d4bd1ef66b01ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; D &gt;::inside</definition>
        <argsstring>(const Box&lt; D &gt; &amp;b) const override</argsstring>
        <name>inside</name>
        <reimplements refid="classnest_1_1_mask_1a4ca07f89ca3d3139c2903137a642c114">inside</reimplements>
        <param>
          <type>const <ref refid="structnest_1_1_box" kindref="compound">Box</ref>&lt; D &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the whole given box is inside this box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="242" column="8" bodyfile="nestkernel/mask_impl.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a322db758ec9f4d01613257696e47f14e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; D &gt;::outside</definition>
        <argsstring>(const Box&lt; D &gt; &amp;b) const override</argsstring>
        <name>outside</name>
        <reimplements refid="classnest_1_1_mask_1a7b0e35f7bed34d2b143d322caad7b40d">outside</reimplements>
        <param>
          <type>const <ref refid="structnest_1_1_box" kindref="compound">Box</ref>&lt; D &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the whole given box is outside this box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="247" column="8" bodyfile="nestkernel/mask_impl.h" bodystart="98" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a6c1c222f2395dc1225cfdf7e88830e96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structnest_1_1_box" kindref="compound">Box</ref>&lt; D &gt;</type>
        <definition>Box&lt; D &gt; nest::BoxMask&lt; D &gt;::get_bbox</definition>
        <argsstring>() const override</argsstring>
        <name>get_bbox</name>
        <reimplements refid="classnest_1_1_mask_1a5762fcaec01449570b208b4de6923295">get_bbox</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The whole mask is inside (i.e., false everywhere outside) the bounding box. <simplesect kind="return"><para>bounding box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="249" column="7" bodyfile="nestkernel/mask_impl.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a76e6a22e7dae694f5fc51728e0cc14cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DictionaryDatum</type>
        <definition>DictionaryDatum nest::BoxMask&lt; D &gt;::get_dict</definition>
        <argsstring>() const override</argsstring>
        <name>get_dict</name>
        <reimplements refid="classnest_1_1_abstract_mask_1afaa2c932fb8581e1417eddc784754a94">get_dict</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a dictionary with the definition for this mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="251" column="19" bodyfile="nestkernel/mask_impl.h" bodystart="132" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1aec86bd53af1d2965c6074c2e7199a916" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1_mask" kindref="compound">Mask</ref>&lt; D &gt; *</type>
        <definition>Mask&lt; D &gt; * nest::BoxMask&lt; D &gt;::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classnest_1_1_mask_1a9d7b816374204f095198b9f949aebd78">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clone method. <simplesect kind="return"><para>dynamically allocated copy of mask object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="253" column="8" bodyfile="nestkernel/mask_impl.h" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1aa3e147ab1315f2e4740b98266ab1faf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; 2 &gt;::inside</definition>
        <argsstring>(const Position&lt; 2 &gt; &amp;p) const</argsstring>
        <name>inside</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; 2 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.cpp" line="278" column="9" bodyfile="nestkernel/mask.cpp" bodystart="278" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1aa45bec2bcaa8f0f53b3e4229c2b32e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::BoxMask&lt; 3 &gt;::inside</definition>
        <argsstring>(const Position&lt; 3 &gt; &amp;p) const</argsstring>
        <name>inside</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; 3 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.cpp" line="305" column="9" bodyfile="nestkernel/mask.cpp" bodystart="305" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a5ac26dff7ec140be7c9c6c60b316f696" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Name</type>
        <definition>Name nest::BoxMask&lt; 2 &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="736" column="9" bodyfile="nestkernel/mask.h" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1aa518a7bfa92da311926730eb548bc5d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Name</type>
        <definition>Name nest::BoxMask&lt; 3 &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="743" column="9" bodyfile="nestkernel/mask.h" bodystart="743" bodyend="746"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnest_1_1_box_mask_1a28079f5429a9376d83486b186ce3b3fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Name</type>
        <definition>static Name nest::BoxMask&lt; D &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the name of this mask type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="258" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1_box_mask_1aaa25df149001648ccac085b261f5c7c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoxMask&lt; D &gt;::calculate_min_max_values_</definition>
        <argsstring>()</argsstring>
        <name>calculate_min_max_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the min/max x, y, z values in case of a rotated box. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.h" line="264" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1a87dceb69e63a14f37fb99914de3a990d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoxMask&lt; 2 &gt;::calculate_min_max_values_</definition>
        <argsstring>()</argsstring>
        <name>calculate_min_max_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.cpp" line="115" column="9" bodyfile="nestkernel/mask.cpp" bodystart="115" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_box_mask_1ab9ae756087734d0f537358982f3c8534" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BoxMask&lt; 3 &gt;::calculate_min_max_values_</definition>
        <argsstring>()</argsstring>
        <name>calculate_min_max_values_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mask.cpp" line="158" column="9" bodyfile="nestkernel/mask.cpp" bodystart="158" bodyend="274"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classnest_1_1_mask" kindref="compound">Mask</ref> defining a box region. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::BoxMask&lt; D &gt;</label>
        <link refid="classnest_1_1_box_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1_abstract_mask"/>
      </node>
      <node id="2">
        <label>nest::Mask&lt; D &gt;</label>
        <link refid="classnest_1_1_mask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::BoxMask&lt; D &gt;</label>
        <link refid="classnest_1_1_box_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1_abstract_mask"/>
      </node>
      <node id="2">
        <label>nest::Mask&lt; D &gt;</label>
        <link refid="classnest_1_1_mask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/mask.h" line="210" column="1" bodyfile="nestkernel/mask.h" bodystart="211" bodyend="303"/>
    <listofallmembers>
      <member refid="classnest_1_1_box_mask_1a5b5b23adae3532ef78243c3be2857e5c" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>az_cos_pol_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1abd39ad0fd79b32583559e73cdecb5e06" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>az_cos_pol_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1ae3015e51ebc0f654a3d0fd359c5a0320" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>az_sin_pol_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a5bd8861bb1fe5f0a496dcd3efeb43692" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>az_sin_pol_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1af67cfefb9c122799c6b51f23c7177c91" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>azimuth_angle_</name></member>
      <member refid="classnest_1_1_box_mask_1afa3cf3b33865ed5b9fd35c70526d02ee" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>azimuth_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1ae22c92dc1dc68cd6859b0c05937c6ce8" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>azimuth_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1a04c40ffa62333c05342e6a34eaf2766b" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>BoxMask</name></member>
      <member refid="classnest_1_1_box_mask_1a6650d3bf93bbb1c4d014893bbaef799c" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>BoxMask</name></member>
      <member refid="classnest_1_1_box_mask_1aaa25df149001648ccac085b261f5c7c9" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>calculate_min_max_values_</name></member>
      <member refid="classnest_1_1_box_mask_1a87dceb69e63a14f37fb99914de3a990d" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>calculate_min_max_values_</name></member>
      <member refid="classnest_1_1_box_mask_1ab9ae756087734d0f537358982f3c8534" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>calculate_min_max_values_</name></member>
      <member refid="classnest_1_1_box_mask_1aec86bd53af1d2965c6074c2e7199a916" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>clone</name></member>
      <member refid="classnest_1_1_box_mask_1acb314713b7fd4c76d0d240e484075bea" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_</name></member>
      <member refid="classnest_1_1_box_mask_1af2df9bf928ae7b5dddf148c8663f2c80" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_x_az_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a1bb7acfd5144ba81a592f64d8a5089a2" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_x_az_cos_pol_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a52b4273c9dc45375e1423447390455e9" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_x_az_cos_pol_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1aed92cab07c0ede459f5516b2deec75f5" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_x_az_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1ac72b72b5e633e79bba1cdc349b956d42" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_y_az_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a5b2861ee1456145ad35c32eb7262c4bd" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_y_az_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1ab78330d891845d675805bf6e87e34fcc" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_y_az_sin_pol_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a1cb30c5f0f7ff2038bc7e24cc65b77d9" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_y_az_sin_pol_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1a079d03d0d3cbaa0dc97e68c18cf6764d" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_z_pol_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a1c7c1ed6144baced0310192b6acd4037" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>cntr_z_pol_sin_</name></member>
      <member refid="classnest_1_1_box_mask_1ac997908fb8c59685af19502a564e742d" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>eps_</name></member>
      <member refid="classnest_1_1_box_mask_1a6c1c222f2395dc1225cfdf7e88830e96" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>get_bbox</name></member>
      <member refid="classnest_1_1_box_mask_1a76e6a22e7dae694f5fc51728e0cc14cf" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>get_dict</name></member>
      <member refid="classnest_1_1_box_mask_1a28079f5429a9376d83486b186ce3b3fd" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_box_mask_1a5ac26dff7ec140be7c9c6c60b316f696" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_box_mask_1aa518a7bfa92da311926730eb548bc5d3" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_box_mask_1a93d91095c71dce25fcca0a834d7f9fa3" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_box_mask_1aea241631da9ecae255d4bd1ef66b01ee" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_box_mask_1aa3e147ab1315f2e4740b98266ab1faf8" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_box_mask_1aa45bec2bcaa8f0f53b3e4229c2b32e4e" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_mask_1a8f5f7b1b18f31e4a927705b536c05a72" prot="public" virt="virtual" ambiguityscope="nest::Mask::"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_mask_1a20df18bae0e8e78e06c68b6654f1ca8c" prot="public" virt="non-virtual" ambiguityscope="nest::Mask::"><scope>nest::BoxMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_mask_1a26c865ca83050e6dff23c56ef880f702" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>intersect_mask</name></member>
      <member refid="classnest_1_1_box_mask_1ab980c5daff776af593149dea6dcf8003" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>is_rotated_</name></member>
      <member refid="classnest_1_1_box_mask_1a57b24d50b7df9c45483745dc90df7e77" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>lower_left_</name></member>
      <member refid="classnest_1_1_box_mask_1a1fcfbcc3d474196496319d00674d90b0" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>max_values_</name></member>
      <member refid="classnest_1_1_box_mask_1adb56982a1b7afd6cbb62e5d2711629da" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>min_values_</name></member>
      <member refid="classnest_1_1_mask_1ac19b409451836f97eeb0c884009ef6a2" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>minus_mask</name></member>
      <member refid="classnest_1_1_box_mask_1a322db758ec9f4d01613257696e47f14e" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>outside</name></member>
      <member refid="classnest_1_1_box_mask_1a864117c7e0be76d0a1c52376c20820a4" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>polar_angle_</name></member>
      <member refid="classnest_1_1_box_mask_1ae457375f2d6f478376664c4f6a7f5b92" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>polar_cos_</name></member>
      <member refid="classnest_1_1_box_mask_1a1eb52a8f9c0d13d050863e6a9bbad580" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>polar_sin_</name></member>
      <member refid="classnest_1_1_mask_1ae6318d1bdb788014d3ab08b25c8cc240" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>union_mask</name></member>
      <member refid="classnest_1_1_box_mask_1a699d017f705e8306777ba1b74d168af4" prot="protected" virt="non-virtual"><scope>nest::BoxMask</scope><name>upper_right_</name></member>
      <member refid="classnest_1_1_abstract_mask_1a5933f9f222c335b21f90ef55c1caa430" prot="public" virt="virtual"><scope>nest::BoxMask</scope><name>~AbstractMask</name></member>
      <member refid="classnest_1_1_box_mask_1a2eb946a63b546dba987dc38385f8926d" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>~BoxMask</name></member>
      <member refid="classnest_1_1_mask_1a4361fce7b927c7b0f8f4f7e1384bb00f" prot="public" virt="non-virtual"><scope>nest::BoxMask</scope><name>~Mask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
