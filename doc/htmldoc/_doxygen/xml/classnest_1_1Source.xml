<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1Source" kind="class" language="C++" prot="public">
    <compoundname>nest::Source</compoundname>
    <includes refid="source_8h" local="no">source.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t nest::Source::node_id_</definition>
        <argsstring></argsstring>
        <name>node_id_</name>
        <qualifiedname>nest::Source::node_id_</qualifiedname>
        <bitfield> NUM_BITS_NODE_ID</bitfield>
        <briefdescription>
<para>node ID of source </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="43" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="classnest_1_1Source_1a8b53686ebda72d8c0171527845b00b60" compoundref="source_8h" startline="143" endline="146">disable</referencedby>
        <referencedby refid="classnest_1_1Source_1a93b60cd213b282f71e0aed829fcf0b0c" compoundref="source_8h" startline="113" endline="116">get_node_id</referencedby>
        <referencedby refid="classnest_1_1Source_1a1216310968f77e1c6991586f99bd91b2" compoundref="source_8h" startline="149" endline="152">is_disabled</referencedby>
        <referencedby refid="classnest_1_1Source_1a2a9ddcebb7a64bd6bb1b134b358543b3" compoundref="source_8h" startline="106" endline="110">set_node_id</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Source_1aa29d96455123cc150bda46aa3ad64739" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::Source::processed_</definition>
        <argsstring></argsstring>
        <name>processed_</name>
        <qualifiedname>nest::Source::processed_</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
<para>whether this target has already been moved to the MPI buffer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="44" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="classnest_1_1Source_1a9aff2e9f9b73cd435d33cde51f2bfaf2" compoundref="source_8h" startline="125" endline="128">is_processed</referencedby>
        <referencedby refid="classnest_1_1Source_1a9b2bed4910e907434fda5bb570fab492" compoundref="source_8h" startline="119" endline="122">set_processed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Source_1a813bc11a8270f61c44dd2cdee77182a2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::Source::primary_</definition>
        <argsstring></argsstring>
        <name>primary_</name>
        <qualifiedname>nest::Source::primary_</qualifiedname>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="46" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="classnest_1_1Source_1ae0eb3222c8dbadeb38cd7256f7c687e1" compoundref="source_8h" startline="137" endline="140">is_primary</referencedby>
        <referencedby refid="classnest_1_1Source_1acf74bfd1d91610e84a0d428fcc761180" compoundref="source_8h" startline="131" endline="134">set_primary</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1Source_1a47c19903dfb31042e712ad0869a4af98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::Source::Source</definition>
        <argsstring>()</argsstring>
        <name>Source</name>
        <qualifiedname>nest::Source::Source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="49" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a14fd5302a49cfc60a693f10ddeb1008e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::Source::Source</definition>
        <argsstring>(const uint64_t node_id, const bool primary)</argsstring>
        <name>Source</name>
        <qualifiedname>nest::Source::Source</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>primary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="50" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="97" bodyend="103"/>
        <references refid="namespacenest_1a25366fb96059da57852da80b15ec6cf0" compoundref="nest__types_8h" startline="105">nest::MAX_NODE_ID</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a2a9ddcebb7a64bd6bb1b134b358543b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Source::set_node_id</definition>
        <argsstring>(const uint64_t node_id)</argsstring>
        <name>set_node_id</name>
        <qualifiedname>nest::Source::set_node_id</qualifiedname>
        <param>
          <type>const uint64_t</type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Sets node_id_ to the specified value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="55" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="106" bodyend="110"/>
        <references refid="namespacenest_1a25366fb96059da57852da80b15ec6cf0" compoundref="nest__types_8h" startline="105">nest::MAX_NODE_ID</references>
        <references refid="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" compoundref="source_8h" startline="43">node_id_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a93b60cd213b282f71e0aed829fcf0b0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t nest::Source::get_node_id</definition>
        <argsstring>() const</argsstring>
        <name>get_node_id</name>
        <qualifiedname>nest::Source::get_node_id</qualifiedname>
        <briefdescription>
<para>Returns this <ref refid="classnest_1_1Source" kindref="compound">Source</ref>&apos;s node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="60" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="113" bodyend="116"/>
        <references refid="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" compoundref="source_8h" startline="43">node_id_</references>
        <referencedby refid="classnest_1_1SourceTable_1ac7f8bae3617bf28a6995058adfae00fd" compoundref="source__table_8cpp" startline="384" endline="449">nest::SourceTable::get_next_target_data</referencedby>
        <referencedby refid="classnest_1_1SourceTable_1ab1a4ac5a832fced02275d667529efaed" compoundref="source__table_8cpp" startline="289" endline="299">nest::SourceTable::next_entry_has_same_source_</referencedby>
        <referencedby refid="classnest_1_1SourceTable_1a427e9d3941f3d9f61ee1515d8b1c6521" compoundref="source__table_8cpp" startline="316" endline="381">nest::SourceTable::populate_target_data_fields_</referencedby>
        <referencedby refid="classnest_1_1SourceTable_1a88dd05c73fb0befe340db581607bd6ea" compoundref="source__table_8cpp" startline="302" endline="313">nest::SourceTable::previous_entry_has_same_source_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a9b2bed4910e907434fda5bb570fab492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Source::set_processed</definition>
        <argsstring>(const bool processed)</argsstring>
        <name>set_processed</name>
        <qualifiedname>nest::Source::set_processed</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>processed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="62" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="119" bodyend="122"/>
        <references refid="classnest_1_1Source_1aa29d96455123cc150bda46aa3ad64739" compoundref="source_8h" startline="44">processed_</references>
        <referencedby refid="classnest_1_1SourceTable_1ac7f8bae3617bf28a6995058adfae00fd" compoundref="source__table_8cpp" startline="384" endline="449">nest::SourceTable::get_next_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a9aff2e9f9b73cd435d33cde51f2bfaf2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::Source::is_processed</definition>
        <argsstring>() const</argsstring>
        <name>is_processed</name>
        <qualifiedname>nest::Source::is_processed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="63" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="125" bodyend="128"/>
        <references refid="classnest_1_1Source_1aa29d96455123cc150bda46aa3ad64739" compoundref="source_8h" startline="44">processed_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1acf74bfd1d91610e84a0d428fcc761180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Source::set_primary</definition>
        <argsstring>(const bool primary)</argsstring>
        <name>set_primary</name>
        <qualifiedname>nest::Source::set_primary</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>primary</declname>
        </param>
        <briefdescription>
<para>Sets whether <ref refid="classnest_1_1Source" kindref="compound">Source</ref> is primary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="68" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="131" bodyend="134"/>
        <references refid="classnest_1_1Source_1a813bc11a8270f61c44dd2cdee77182a2" compoundref="source_8h" startline="46">primary_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1ae0eb3222c8dbadeb38cd7256f7c687e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::Source::is_primary</definition>
        <argsstring>() const</argsstring>
        <name>is_primary</name>
        <qualifiedname>nest::Source::is_primary</qualifiedname>
        <briefdescription>
<para>Returns whether <ref refid="classnest_1_1Source" kindref="compound">Source</ref> is primary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="73" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="137" bodyend="140"/>
        <references refid="classnest_1_1Source_1a813bc11a8270f61c44dd2cdee77182a2" compoundref="source_8h" startline="46">primary_</references>
        <referencedby refid="classnest_1_1SourceTable_1a427e9d3941f3d9f61ee1515d8b1c6521" compoundref="source__table_8cpp" startline="316" endline="381">nest::SourceTable::populate_target_data_fields_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a8b53686ebda72d8c0171527845b00b60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Source::disable</definition>
        <argsstring>()</argsstring>
        <name>disable</name>
        <qualifiedname>nest::Source::disable</qualifiedname>
        <briefdescription>
<para>Disables <ref refid="classnest_1_1Source" kindref="compound">Source</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="78" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="143" bodyend="146"/>
        <references refid="namespacenest_1a1abfcf67404c7321ae381589a495390e" compoundref="nest__types_8h" startline="104">nest::DISABLED_NODE_ID</references>
        <references refid="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" compoundref="source_8h" startline="43">node_id_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Source_1a1216310968f77e1c6991586f99bd91b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::Source::is_disabled</definition>
        <argsstring>() const</argsstring>
        <name>is_disabled</name>
        <qualifiedname>nest::Source::is_disabled</qualifiedname>
        <briefdescription>
<para>Returns whether <ref refid="classnest_1_1Source" kindref="compound">Source</ref> is disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="149" bodyend="152"/>
        <references refid="namespacenest_1a1abfcf67404c7321ae381589a495390e" compoundref="nest__types_8h" startline="104">nest::DISABLED_NODE_ID</references>
        <references refid="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" compoundref="source_8h" startline="43">node_id_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1Source_1acdf7a7214ab951f8e15eeb6a7369cb13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Source &amp;lhs, const Source &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>nest::Source::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="85" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="friend" id="classnest_1_1Source_1a4f2de7a4fc7dd75a39c2d2a76780e4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Source &amp;lhs, const Source &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>nest::Source::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="86" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="friend" id="classnest_1_1Source_1ae214c26c2c705e1ab8e157e0ec0824fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Source &amp;lhs, const Source &amp;rhs)</argsstring>
        <name>operator==</name>
        <qualifiedname>nest::Source::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Source" kindref="compound">Source</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="87" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="167" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores the node ID of a presynaptic neuron and the number of local targets, along with a flag, whether this entry has been processed yet. </para>
    </briefdescription>
    <detaileddescription>
<para>Used in <ref refid="classnest_1_1SourceTable" kindref="compound">SourceTable</ref>. </para>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" line="40" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/source.h" bodystart="41" bodyend="88"/>
    <listofallmembers>
      <member refid="classnest_1_1Source_1a8b53686ebda72d8c0171527845b00b60" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>disable</name></member>
      <member refid="classnest_1_1Source_1a93b60cd213b282f71e0aed829fcf0b0c" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1Source_1a1216310968f77e1c6991586f99bd91b2" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1Source_1ae0eb3222c8dbadeb38cd7256f7c687e1" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>is_primary</name></member>
      <member refid="classnest_1_1Source_1a9aff2e9f9b73cd435d33cde51f2bfaf2" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>is_processed</name></member>
      <member refid="classnest_1_1Source_1aadd035eaf16dd26b284185fa46712fe9" prot="private" virt="non-virtual"><scope>nest::Source</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Source_1acdf7a7214ab951f8e15eeb6a7369cb13" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>operator&lt;</name></member>
      <member refid="classnest_1_1Source_1ae214c26c2c705e1ab8e157e0ec0824fc" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>operator==</name></member>
      <member refid="classnest_1_1Source_1a4f2de7a4fc7dd75a39c2d2a76780e4ba" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>operator&gt;</name></member>
      <member refid="classnest_1_1Source_1a813bc11a8270f61c44dd2cdee77182a2" prot="private" virt="non-virtual"><scope>nest::Source</scope><name>primary_</name></member>
      <member refid="classnest_1_1Source_1aa29d96455123cc150bda46aa3ad64739" prot="private" virt="non-virtual"><scope>nest::Source</scope><name>processed_</name></member>
      <member refid="classnest_1_1Source_1a2a9ddcebb7a64bd6bb1b134b358543b3" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>set_node_id</name></member>
      <member refid="classnest_1_1Source_1acf74bfd1d91610e84a0d428fcc761180" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>set_primary</name></member>
      <member refid="classnest_1_1Source_1a9b2bed4910e907434fda5bb570fab492" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>set_processed</name></member>
      <member refid="classnest_1_1Source_1a47c19903dfb31042e712ad0869a4af98" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>Source</name></member>
      <member refid="classnest_1_1Source_1a14fd5302a49cfc60a693f10ddeb1008e" prot="public" virt="non-virtual"><scope>nest::Source</scope><name>Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
