<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1bernoulli__synapse" kind="class" language="C++" prot="public">
    <compoundname>nest::bernoulli_synapse</compoundname>
    <basecompoundref refid="classnest_1_1Connection" prot="public" virt="non-virtual">nest::Connection&lt; targetidentifierT &gt;</basecompoundref>
    <includes refid="bernoulli__synapse_8h" local="no">bernoulli_synapse.h</includes>
    <innerclass refid="classnest_1_1bernoulli__synapse_1_1ConnTestDummyNode" prot="public">nest::bernoulli_synapse::ConnTestDummyNode</innerclass>
    <templateparamlist>
      <param>
        <type>typename targetidentifierT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1bernoulli__synapse_1a7ec5a2fd361685b4c89be833513af0b6" prot="public" static="no">
        <type><ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref></type>
        <definition>typedef CommonSynapseProperties nest::bernoulli_synapse&lt; targetidentifierT &gt;::CommonPropertiesType</definition>
        <argsstring></argsstring>
        <name>CommonPropertiesType</name>
        <qualifiedname>nest::bernoulli_synapse::CommonPropertiesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="96" column="35" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1bernoulli__synapse_1a65a4b6787fb80670873a37e8fc3eca07" prot="public" static="no">
        <type><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref>&lt; targetidentifierT &gt;</type>
        <definition>typedef Connection&lt; targetidentifierT &gt; nest::bernoulli_synapse&lt; targetidentifierT &gt;::ConnectionBase</definition>
        <argsstring></argsstring>
        <name>ConnectionBase</name>
        <qualifiedname>nest::bernoulli_synapse::ConnectionBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="97" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1bernoulli__synapse_1ae1497e0a96b31a6ec1f5cd132069a244" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::bernoulli_synapse&lt; targetidentifierT &gt;::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <qualifiedname>nest::bernoulli_synapse::weight_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="187" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="187" bodyend="-1"/>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" compoundref="bernoulli__synapse_8h" startline="147" endline="174">nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</referencedby>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a577a5545567c351fd2cd57323a68f8f6" compoundref="bernoulli__synapse_8h" startline="181" endline="184">nest::bernoulli_synapse&lt; targetidentifierT &gt;::set_weight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1bernoulli__synapse_1a687cd70f5b52863acd49dd1d6c8e5383" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::bernoulli_synapse&lt; targetidentifierT &gt;::p_transmit_</definition>
        <argsstring></argsstring>
        <name>p_transmit_</name>
        <qualifiedname>nest::bernoulli_synapse::p_transmit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="188" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="188" bodyend="-1"/>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" compoundref="bernoulli__synapse_8h" startline="147" endline="174">nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1af48deb428b22429c9735d51a95f2b9de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::bernoulli_synapse&lt; targetidentifierT &gt;::bernoulli_synapse</definition>
        <argsstring>()</argsstring>
        <name>bernoulli_synapse</name>
        <qualifiedname>nest::bernoulli_synapse::bernoulli_synapse</qualifiedname>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets default values for all parameters. Needed by <ref refid="classnest_1_1GenericConnectorModel" kindref="compound">GenericConnectorModel</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="103" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1af806b6d523c696b038c7f877f19f7eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::bernoulli_synapse&lt; targetidentifierT &gt;::bernoulli_synapse</definition>
        <argsstring>(const bernoulli_synapse &amp;rhs)=default</argsstring>
        <name>bernoulli_synapse</name>
        <qualifiedname>nest::bernoulli_synapse::bernoulli_synapse</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1bernoulli__synapse" kindref="compound">bernoulli_synapse</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor from a property object. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be defined properly in order for GenericConnector to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="114" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a301a8c4fccc74caba8d4de32fdaaf2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1bernoulli__synapse" kindref="compound">bernoulli_synapse</ref> &amp;</type>
        <definition>bernoulli_synapse &amp; nest::bernoulli_synapse&lt; targetidentifierT &gt;::operator=</definition>
        <argsstring>(const bernoulli_synapse &amp;rhs)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nest::bernoulli_synapse::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1bernoulli__synapse" kindref="compound">bernoulli_synapse</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="115" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1af445220c7eedf5053de99a21d98e524d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::bernoulli_synapse&lt; targetidentifierT &gt;::check_connection</definition>
        <argsstring>(Node &amp;s, Node &amp;t, rport receptor_type, const CommonPropertiesType &amp;)</argsstring>
        <name>check_connection</name>
        <qualifiedname>nest::bernoulli_synapse::check_connection</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1bernoulli__synapse_1a7ec5a2fd361685b4c89be833513af0b6" kindref="member">CommonPropertiesType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="140" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="140" bodyend="144"/>
        <references refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" compoundref="connection_8h" startline="316" endline="343">nest::Connection&lt; targetidentifierT &gt;::check_connection_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</definition>
        <argsstring>(Event &amp;e, thread t, const CommonSynapseProperties &amp;)</argsstring>
        <name>send</name>
        <qualifiedname>nest::bernoulli_synapse::send</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="147" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="147" bodyend="174"/>
        <references refid="classnest_1_1BaseRandomGenerator_1ac9f238412d989640ad55a82e8d9e3a45">nest::BaseRandomGenerator::drand</references>
        <references refid="classnest_1_1bernoulli__synapse_1a239230687eac7f8868b89c8a5e8fc56e" compoundref="connection_8h" startline="175" endline="178">nest::bernoulli_synapse&lt; targetidentifierT &gt;::get_delay_steps</references>
        <references refid="classnest_1_1SpikeEvent_1aa42007ca40102dba9b4e9b1284be5a7a" compoundref="event_8h" startline="427" endline="430">nest::SpikeEvent::get_multiplicity</references>
        <references refid="classnest_1_1bernoulli__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" compoundref="connection_8h" startline="237" endline="240">nest::bernoulli_synapse&lt; targetidentifierT &gt;::get_rport</references>
        <references refid="classnest_1_1bernoulli__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" compoundref="connection_8h" startline="232" endline="235">nest::bernoulli_synapse&lt; targetidentifierT &gt;::get_target</references>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
        <references refid="classnest_1_1bernoulli__synapse_1a687cd70f5b52863acd49dd1d6c8e5383" compoundref="bernoulli__synapse_8h" startline="188">nest::bernoulli_synapse&lt; targetidentifierT &gt;::p_transmit_</references>
        <references refid="classnest_1_1SpikeEvent_1a819b5dd1687ab5f6baea8f69a2b9f6ff" compoundref="event_8h" startline="421" endline="424">nest::SpikeEvent::set_multiplicity</references>
        <references refid="classnest_1_1bernoulli__synapse_1ae1497e0a96b31a6ec1f5cd132069a244" compoundref="bernoulli__synapse_8h" startline="187">nest::bernoulli_synapse&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a35dda780ae612aff6c7098f829162d6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::bernoulli_synapse&lt; targetidentifierT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::bernoulli_synapse::get_status</qualifiedname>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="176" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="193" bodyend="199"/>
        <references refid="namespacenest_1_1names_1a88f1d79501575c9a0a4b5efbe6b0e703" compoundref="nest__names_8h" startline="360">nest::names::p_transmit</references>
        <references refid="namespacenest_1_1names_1afb868eddb8599cce2bba3dd5790365b3" compoundref="nest__names_8h" startline="437">nest::names::size_of</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a47c725c9d6e8ffa06b68d4c65f96358b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::bernoulli_synapse&lt; targetidentifierT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d, ConnectorModel &amp;cm)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::bernoulli_synapse::set_status</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="178" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="203" bodyend="213"/>
        <references refid="namespacenest_1_1names_1a88f1d79501575c9a0a4b5efbe6b0e703" compoundref="nest__names_8h" startline="360">nest::names::p_transmit</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a577a5545567c351fd2cd57323a68f8f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::bernoulli_synapse&lt; targetidentifierT &gt;::set_weight</definition>
        <argsstring>(double w)</argsstring>
        <name>set_weight</name>
        <qualifiedname>nest::bernoulli_synapse::set_weight</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="181" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="181" bodyend="184"/>
        <references refid="classnest_1_1bernoulli__synapse_1ae1497e0a96b31a6ec1f5cd132069a244" compoundref="bernoulli__synapse_8h" startline="187">nest::bernoulli_synapse&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Connection&lt; targetidentifierT &gt;::get_delay_steps</definition>
        <argsstring>() const</argsstring>
        <name>get_delay_steps</name>
        <qualifiedname>nest::bernoulli_synapse::get_delay_steps</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="121" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="175" bodyend="178"/>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" compoundref="bernoulli__synapse_8h" startline="147" endline="174">nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::Connection&lt; targetidentifierT &gt;::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <qualifiedname>nest::bernoulli_synapse::get_rport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="122" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="237" bodyend="240"/>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" compoundref="bernoulli__synapse_8h" startline="147" endline="174">nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1bernoulli__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * nest::Connection&lt; targetidentifierT &gt;::get_target</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target</name>
        <qualifiedname>nest::bernoulli_synapse::get_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="123" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="232" bodyend="235"/>
        <referencedby refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" compoundref="bernoulli__synapse_8h" startline="147" endline="174">nest::bernoulli_synapse&lt; targetidentifierT &gt;::send</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
      </node>
      <node id="1">
        <label>nest::bernoulli_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1bernoulli__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
        <childnode refid="3" relation="usage">
          <edgelabel>syn_id_delay_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::SynIdDelay</label>
        <link refid="structnest_1_1SynIdDelay"/>
      </node>
      <node id="1">
        <label>nest::bernoulli_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1bernoulli__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" line="92" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/bernoulli_synapse.h" bodystart="93" bodyend="189"/>
    <listofallmembers>
      <member refid="classnest_1_1bernoulli__synapse_1af48deb428b22429c9735d51a95f2b9de" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>bernoulli_synapse</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1af806b6d523c696b038c7f877f19f7eb5" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>bernoulli_synapse</name></member>
      <member refid="classnest_1_1Connection_1a98a2af4db1c9a34d011be0c89a731c9b" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>calibrate</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1af445220c7eedf5053de99a21d98e524d" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>check_connection</name></member>
      <member refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" prot="protected" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>check_connection_</name></member>
      <member refid="classnest_1_1Connection_1ae7698c05fc210ced5bbf31b02dd6e05b" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a7ec5a2fd361685b4c89be833513af0b6" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>CommonPropertiesType</name></member>
      <member refid="classnest_1_1Connection_1acb7166410b78749a3c989e98868d1020" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1Connection_1a9237d0912e8b9c7fbb5d32d4c7abcb8d" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a65a4b6787fb80670873a37e8fc3eca07" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>ConnectionBase</name></member>
      <member refid="classnest_1_1Connection_1a811dff4d6dbbca5a8cae4de925aa9faf" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>disable</name></member>
      <member refid="classnest_1_1Connection_1a913d4f9af27b5a6145b4f197660ad9a5" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>EventType</name></member>
      <member refid="classnest_1_1Connection_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_delay</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a7c32524ac24f7d591bd14a5cc9219618" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_label</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_rport</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a35dda780ae612aff6c7098f829162d6b" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_status</name></member>
      <member refid="classnest_1_1Connection_1a2aca6e34443f8ef8576e23f097b199df" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_syn_id</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>get_target</name></member>
      <member refid="classnest_1_1Connection_1af8930ce6e4fee3c867cccac967970bd2" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a301a8c4fccc74caba8d4de32fdaaf2f5" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1Connection_1a111070d4cbb64481c2e72cdd65e372db" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::bernoulli_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a687cd70f5b52863acd49dd1d6c8e5383" prot="private" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>p_transmit_</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a621c9a6947bdf1225d1d98dbbe27f407" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>send</name></member>
      <member refid="classnest_1_1Connection_1abebbbd505fa36932bde4860d98eaed2e" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_delay</name></member>
      <member refid="classnest_1_1Connection_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1adce5ef19844ee30d96e7d39b5fe1a7f1" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a47c725c9d6e8ffa06b68d4c65f96358b" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_status</name></member>
      <member refid="classnest_1_1Connection_1a7abf9bd27ab16f395112be31001bae3c" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1a577a5545567c351fd2cd57323a68f8f6" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>set_weight</name></member>
      <member refid="classnest_1_1Connection_1a0007e829af9dc39e624c5f349259a8ca" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>source_has_more_targets</name></member>
      <member refid="classnest_1_1Connection_1a27f971c956034918da99deb971949a26" prot="protected" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>syn_id_delay_</name></member>
      <member refid="classnest_1_1Connection_1af2b2773f69c67db7330eb1064a199af7" prot="protected" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>target_</name></member>
      <member refid="classnest_1_1Connection_1aa1e3449ea1e2ff5f7dd2338bbf3feafe" prot="public" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1bernoulli__synapse_1ae1497e0a96b31a6ec1f5cd132069a244" prot="private" virt="non-virtual"><scope>nest::bernoulli_synapse</scope><name>weight_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
