<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="delay__checker_8cpp" kind="file" language="C++">
    <compoundname>delay_checker.cpp</compoundname>
    <includes refid="delay__checker_8h" local="yes">delay_checker.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="exceptions_8h" local="yes">exceptions.h</includes>
    <includes refid="kernel__manager_8h" local="yes">kernel_manager.h</includes>
    <includes refid="nest__timeconverter_8h" local="yes">nest_timeconverter.h</includes>
    <incdepgraph>
      <node id="108">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>delay_checker.cpp</label>
        <link refid="delay__checker_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="44">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>iterator</label>
      </node>
      <node id="34">
        <label>arraydatum.h</label>
      </node>
      <node id="12">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstdint</label>
      </node>
      <node id="89">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="54">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stopwatch.h</label>
      </node>
      <node id="95">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>dictutils.h</label>
      </node>
      <node id="37">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="48">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>stdexcept</label>
      </node>
      <node id="93">
        <label>numeric</label>
      </node>
      <node id="2">
        <label>delay_checker.h</label>
        <link refid="delay__checker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="73">
        <label>sort.h</label>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="122">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>aggregatedatum.h</label>
      </node>
      <node id="66">
        <label>dict.h</label>
      </node>
      <node id="33">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cfloat</label>
      </node>
      <node id="40">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>ostream</label>
      </node>
      <node id="36">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="72">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>slitype.h</label>
      </node>
      <node id="100">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>allocator.h</label>
      </node>
      <node id="83">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>random</label>
      </node>
      <node id="85">
        <label>logging.h</label>
      </node>
      <node id="69">
        <label>slimodule.h</label>
      </node>
      <node id="53">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>bitset</label>
      </node>
      <node id="96">
        <label>block_vector.h</label>
      </node>
      <node id="60">
        <label>lockptr.h</label>
      </node>
      <node id="56">
        <label>ctime</label>
      </node>
      <node id="52">
        <label>token.h</label>
      </node>
      <node id="88">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>unistd.h</label>
      </node>
      <node id="39">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
      <node id="67">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="109">
        <label>new</label>
      </node>
      <node id="94">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>utility</label>
      </node>
      <node id="49">
        <label>array</label>
      </node>
      <node id="50">
        <label>sstream</label>
      </node>
      <node id="68">
        <label>slifunction.h</label>
      </node>
      <node id="104">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>enum_bitfield.h</label>
      </node>
      <node id="65">
        <label>randutils.hpp</label>
      </node>
      <node id="7">
        <label>cstdlib</label>
      </node>
      <node id="118">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>dictdatum.h</label>
      </node>
      <node id="119">
        <label>sys/time.h</label>
      </node>
      <node id="25">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="21">
        <label>name.h</label>
      </node>
      <node id="11">
        <label>numerics.h</label>
      </node>
      <node id="55">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstddef</label>
      </node>
      <node id="80">
        <label>deque</label>
      </node>
      <node id="103">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>climits</label>
      </node>
      <node id="112">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sliexceptions.h</label>
      </node>
      <node id="106">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>vector_util.h</label>
      </node>
      <node id="99">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>type_traits</label>
      </node>
      <node id="120">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>set</label>
      </node>
      <node id="16">
        <label>config.h</label>
      </node>
      <node id="27">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>algorithm</label>
      </node>
      <node id="91">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>cstring</label>
      </node>
      <node id="76">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>memory</label>
      </node>
      <node id="87">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>initializer_list</label>
      </node>
      <node id="51">
        <label>compose.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>delay_checker.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="delay__checker_8h" kindref="compound">delay_checker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>min,<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exceptions_8h" kindref="compound">exceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kernel__manager_8h" kindref="compound">kernel_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__timeconverter_8h" kindref="compound">nest_timeconverter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1a1c77c98b14da5b38aebcc334c78730ba" kindref="member">nest::DelayChecker::DelayChecker</ref>()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>:<sp/>min_delay_(<sp/>Time::pos_inf()<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>,<sp/>max_delay_(<sp/>Time::neg_inf()<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>,<sp/>user_set_delay_extrema_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>,<sp/>freeze_delay_update_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1a1c77c98b14da5b38aebcc334c78730ba" kindref="member">nest::DelayChecker::DelayChecker</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DelayChecker&amp;<sp/>cr<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>:<sp/>min_delay_(<sp/>cr.min_delay_<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,<sp/>max_delay_(<sp/>cr.max_delay_<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>,<sp/>user_set_delay_extrema_(<sp/>cr.user_set_delay_extrema_<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>,<sp/>freeze_delay_update_(<sp/>cr.freeze_delay_update_<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>min_delay_.calibrate();<sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>of<sp/>change<sp/>in<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>max_delay_.calibrate();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1ac0fa016d296b2f329aa3a2b12eec048d" kindref="member">nest::DelayChecker::calibrate</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeConverter&amp;<sp/>tc<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calibrate<sp/>will<sp/>be<sp/>called<sp/>after<sp/>a<sp/>change<sp/>in<sp/>resolution,<sp/>when<sp/>there<sp/>are<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>network<sp/>elements<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>min_delay_<sp/>==<sp/><ref refid="classnest_1_1_time_1acb1c377c4d654c34797f9fef4c02250a" kindref="member">Time::pos_inf</ref>()<sp/>or<sp/>max_delay_<sp/>==<sp/><ref refid="classnest_1_1_time_1aced9f70610dd53cd35d58a2927d3f21b" kindref="member">Time::neg_inf</ref>()<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>min_delay_<sp/>=<sp/>tc.from_old_tics(<sp/>min_delay_.<ref refid="classnest_1_1_time_1aa6d82d03d2328ecabd07ac9288b7d2f4" kindref="member">get_tics</ref>()<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>max_delay_<sp/>=<sp/>tc.from_old_tics(<sp/>max_delay_.<ref refid="classnest_1_1_time_1aa6d82d03d2328ecabd07ac9288b7d2f4" kindref="member">get_tics</ref>()<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_d<sp/>=<sp/>min_delay_.<ref refid="classnest_1_1_time_1aff831a8475d8060353c4cae73cc5748c" kindref="member">get_ms</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_d<sp/>=<sp/>max_delay_.<ref refid="classnest_1_1_time_1aff831a8475d8060353c4cae73cc5748c" kindref="member">get_ms</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>DelayChecker::set_min_max_delay_(<sp/>min_d,<sp/>max_d<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">nest::DelayChecker::set_min_max_delay_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_d<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>minimum<sp/>delay,<sp/>we<sp/>always<sp/>round<sp/>down.<sp/>The<sp/>easiest<sp/>way<sp/>to<sp/>do<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>to<sp/>round<sp/>up<sp/>and<sp/>then<sp/>subtract<sp/>one<sp/>step.<sp/>The<sp/>only<sp/>remaining<sp/>edge<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>that<sp/>the<sp/>min<sp/>delay<sp/>is<sp/>exactly<sp/>at<sp/>a<sp/>step,<sp/>in<sp/>which<sp/>case<sp/>one<sp/>would<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>min<sp/>delay<sp/>that<sp/>is<sp/>one<sp/>step<sp/>too<sp/>small.<sp/>We<sp/>can<sp/>detect<sp/>this<sp/>by<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>additional<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Time<sp/>new_min_delay;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>new_min_delay_steps<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1ab09a27c7668460aa1e2630aabecd5338" kindref="member">Time::ms_stamp</ref>(<sp/>min_d<sp/>)<sp/>).get_steps();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>new_min_delay_steps<sp/>)<sp/>).get_ms()<sp/>&gt;<sp/>min_d<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>new_min_delay_steps<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>new_min_delay<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>new_min_delay_steps<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>maximum<sp/>delay,<sp/>we<sp/>always<sp/>round<sp/>up,<sp/>using<sp/>ms_stamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>Time<sp/>new_max_delay<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1ab09a27c7668460aa1e2630aabecd5338" kindref="member">Time::ms_stamp</ref>(<sp/>max_d<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_min_delay<sp/>&lt;<sp/><ref refid="classnest_1_1_time_1a6f14dc87dbd694a028020f00a5a92d7c" kindref="member">Time::get_resolution</ref>()<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_min_delay.get_ms(),<sp/></highlight><highlight class="stringliteral">&quot;min_delay<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>resolution.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_max_delay<sp/>&lt;<sp/>new_min_delay<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_min_delay.get_ms(),<sp/></highlight><highlight class="stringliteral">&quot;min_delay<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>max_delay.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>min_delay_<sp/>=<sp/>new_min_delay;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>max_delay_<sp/>=<sp/>new_max_delay;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>and<sp/>maximum<sp/>delays<sp/>were<sp/>changed<sp/>to<sp/>%1<sp/>ms<sp/>and<sp/>%2<sp/>ms.&quot;</highlight><highlight class="normal">,<sp/>min_delay_.get_ms(),<sp/>max_delay_.get_ms()<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG(<sp/>M_INFO,<sp/></highlight><highlight class="stringliteral">&quot;DelayChecker::set_min_max_delay_&quot;</highlight><highlight class="normal">,<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1adb57dc9a9f4b500b7194990b310927b3" kindref="member">nest::DelayChecker::get_status</ref>(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">names::min_delay</ref><sp/>]<sp/>=<sp/>get_min_delay().get_ms();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">names::max_delay</ref><sp/>]<sp/>=<sp/>get_max_delay().get_ms();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1a3bbfadbb5fc47a2027fd13ff27adf909" kindref="member">nest::DelayChecker::set_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_d_tmp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>min_delay_updated<sp/>=<sp/>updateValue&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544" kindref="member">names::min_delay</ref>,<sp/>min_d_tmp<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_d_tmp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>max_delay_updated<sp/>=<sp/>updateValue&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174" kindref="member">names::max_delay</ref>,<sp/>max_d_tmp<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>min_delay_updated<sp/>xor<sp/>max_delay_updated<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Both<sp/>min_delay<sp/>and<sp/>max_delay<sp/>have<sp/>to<sp/>be<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>min_delay_updated<sp/>and<sp/>max_delay_updated<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().connection_manager.get_num_connections()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Connections<sp/>already<sp/>exist.<sp/>Please<sp/>call<sp/>ResetKernel<sp/>first&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DelayChecker::set_min_max_delay_(<sp/>min_d_tmp,<sp/>max_d_tmp<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>user_set_delay_extrema_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1a4a0e6ca8d78a66919f2688e286bf66cb" kindref="member">nest::DelayChecker::assert_valid_delay_ms</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>requested_new_delay<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>new_delay<sp/>=<sp/><ref refid="classnest_1_1_time_1a817fe09798a12167761ce5711af5ce48" kindref="member">Time::delay_ms_to_steps</ref>(<sp/>requested_new_delay<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_delay_ms<sp/>=<sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>new_delay<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_delay<sp/>&lt;<sp/><ref refid="classnest_1_1_time_1a6f14dc87dbd694a028020f00a5a92d7c" kindref="member">Time::get_resolution</ref>().get_steps()<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_delay_ms,<sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>resolution&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>already<sp/>simulated,<sp/>the<sp/>new<sp/>delay<sp/>has<sp/>to<sp/>be<sp/>checked<sp/>against<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>min_delay<sp/>and<sp/>the<sp/>max_delay<sp/>which<sp/>have<sp/>been<sp/>used<sp/>during<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().simulation_manager.has_been_simulated()<sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_min_delay<sp/>=<sp/>new_delay<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a9ea22ac11166a9e3ed07638a9dd8a51f" kindref="member">get_min_delay</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_max_delay<sp/>=<sp/>new_delay<sp/>&gt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a4c78cbb86f7d3fc1204395e31c20ef5a" kindref="member">get_max_delay</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bad_min_delay<sp/>or<sp/>bad_max_delay<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_delay_ms,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>and<sp/>maximum<sp/>delay<sp/>cannot<sp/>be<sp/>changed<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;after<sp/>Simulate<sp/>has<sp/>been<sp/>called.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_min_delay<sp/>=<sp/>new_delay<sp/>&lt;<sp/>min_delay_.get_steps();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_max_delay<sp/>=<sp/>new_delay<sp/>&gt;<sp/>max_delay_.get_steps();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_min_delay<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>user_set_delay_extrema_<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_delay_ms,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>min_delay.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>may<sp/>set<sp/>min_delay<sp/>before<sp/>creating<sp/>connections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>freeze_delay_update_<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_delay_<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>new_delay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_max_delay<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>user_set_delay_extrema_<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/>new_delay_ms,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>max_delay.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>may<sp/>set<sp/>min_delay<sp/>before<sp/>creating<sp/>connections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>freeze_delay_update_<sp/>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_delay_<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>new_delay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="classnest_1_1_delay_checker_1afd253171e8f64e64ff5cd672b4ba1799" kindref="member">nest::DelayChecker::assert_two_valid_delays_steps</ref>(<sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>new_delay1,<sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>new_delay2<sp/>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>ldelay<sp/>=<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">std::min</ref>(<sp/>new_delay1,<sp/>new_delay2<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref><sp/>hdelay<sp/>=<sp/><ref refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730" kindref="member">std::max</ref>(<sp/>new_delay1,<sp/>new_delay2<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ldelay<sp/>&lt;<sp/><ref refid="classnest_1_1_time_1a6f14dc87dbd694a028020f00a5a92d7c" kindref="member">Time::get_resolution</ref>().get_steps()<sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>ldelay<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>resolution&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().simulation_manager.has_been_simulated()<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_min_delay<sp/>=<sp/>ldelay<sp/>&lt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a9ea22ac11166a9e3ed07638a9dd8a51f" kindref="member">get_min_delay</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_max_delay<sp/>=<sp/>hdelay<sp/>&gt;<sp/><ref refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" kindref="member">kernel</ref>().<ref refid="classnest_1_1_kernel_manager_1a0e27508a351fe5c17f42aea52caedb3e" kindref="member">connection_manager</ref>.<ref refid="classnest_1_1_connection_manager_1a4c78cbb86f7d3fc1204395e31c20ef5a" kindref="member">get_max_delay</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bad_min_delay<sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>ldelay<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>delay<sp/>cannot<sp/>be<sp/>changed<sp/>after<sp/>Simulate<sp/>has<sp/>been<sp/>called.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bad_max_delay<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>hdelay<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>delay<sp/>cannot<sp/>be<sp/>changed<sp/>after<sp/>Simulate<sp/>has<sp/>been<sp/>called.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_min_delay<sp/>=<sp/>ldelay<sp/>&lt;<sp/>min_delay_.get_steps();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_max_delay<sp/>=<sp/>hdelay<sp/>&gt;<sp/>max_delay_.get_steps();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_min_delay<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>user_set_delay_extrema_<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>ldelay<sp/>),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>min_delay.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>may<sp/>set<sp/>min_delay<sp/>before<sp/>creating<sp/>connections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>freeze_delay_update_<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_delay_<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>ldelay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_max_delay<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>user_set_delay_extrema_<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadDelay(<sp/><ref refid="classnest_1_1_time_1a24d25307fd9f343ac6ae01ff0f17f0fe" kindref="member">Time::delay_steps_to_ms</ref>(<sp/>hdelay<sp/>),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Delay<sp/>must<sp/>be<sp/>smaller<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>max_delay.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>may<sp/>set<sp/>max_delay<sp/>before<sp/>creating<sp/>connections.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>freeze_delay_update_<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_delay_<sp/>=<sp/>Time(<sp/><ref refid="classnest_1_1_time_1a6d8d183308b48509a8b2ce27361cffed" kindref="member">Time::step</ref>(<sp/>hdelay<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="nestkernel/delay_checker.cpp"/>
  </compounddef>
</doxygen>
