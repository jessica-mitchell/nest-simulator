<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_send_buffer_position" kind="class" language="C++" prot="public">
    <compoundname>nest::SendBufferPosition</compoundname>
    <includes refid="send__buffer__position_8h" local="no">send_buffer_position.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a46e184c3edf1082d2fdf39a0276d1ae6" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        <definition>thread nest::SendBufferPosition::begin_rank_</definition>
        <argsstring></argsstring>
        <name>begin_rank_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="44" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1aba6a901f6eda8a78c52b13fc05afc55f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        <definition>thread nest::SendBufferPosition::end_rank_</definition>
        <argsstring></argsstring>
        <name>end_rank_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="45" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1abf7896c7cc830af8b7e47805115f5ee5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        <definition>thread nest::SendBufferPosition::max_size_</definition>
        <argsstring></argsstring>
        <name>max_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="46" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a0b618a87762cd9572bbe690421569552" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::SendBufferPosition::num_spike_data_written_</definition>
        <argsstring></argsstring>
        <name>num_spike_data_written_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="47" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a5b4cc68b4cadfe5bbd22e901339ff0c1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::SendBufferPosition::send_recv_count_per_rank_</definition>
        <argsstring></argsstring>
        <name>send_recv_count_per_rank_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="48" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a10294ed710b1e2aec716b8a30e2ea0a7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref> &gt;</type>
        <definition>std::vector&lt; thread &gt; nest::SendBufferPosition::idx_</definition>
        <argsstring></argsstring>
        <name>idx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="49" column="15" bodyfile="nestkernel/send_buffer_position.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a9a56705e04c167181a117019a61e4f59" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref> &gt;</type>
        <definition>std::vector&lt; thread &gt; nest::SendBufferPosition::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="50" column="15" bodyfile="nestkernel/send_buffer_position.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_send_buffer_position_1a2594c64daf1b1c4d9ef6b7deae535c01" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref> &gt;</type>
        <definition>std::vector&lt; thread &gt; nest::SendBufferPosition::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="51" column="15" bodyfile="nestkernel/send_buffer_position.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1af8c857c2f036f07ccd9cceb7d95c553b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        <definition>thread nest::SendBufferPosition::rank_to_index_</definition>
        <argsstring>(const thread rank) const</argsstring>
        <name>rank_to_index_</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="53" column="10" bodyfile="nestkernel/send_buffer_position.h" bodystart="113" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1a271a9dd1821f0798edc0e8196a9f4ff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::SendBufferPosition::SendBufferPosition</definition>
        <argsstring>(const AssignedRanks &amp;assigned_ranks, const unsigned int send_recv_count_per_rank)</argsstring>
        <name>SendBufferPosition</name>
        <param>
          <type>const <ref refid="structnest_1_1_assigned_ranks" kindref="compound">AssignedRanks</ref> &amp;</type>
          <declname>assigned_ranks</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>send_recv_count_per_rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="56" column="3" bodyfile="nestkernel/send_buffer_position.h" bodystart="90" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1aa8246668bce066f003a45a8e8b6dd84b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int nest::SendBufferPosition::idx</definition>
        <argsstring>(const thread rank) const</argsstring>
        <name>idx</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns current index of specified rank in MPI buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="61" column="16" bodyfile="nestkernel/send_buffer_position.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1a45c75fc9caba373d77541374a3508fff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int nest::SendBufferPosition::begin</definition>
        <argsstring>(const thread rank) const</argsstring>
        <name>begin</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns begin index of specified rank in MPI buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="66" column="16" bodyfile="nestkernel/send_buffer_position.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1a705b223d08a0f3dd9cb65df10e785ad2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int nest::SendBufferPosition::end</definition>
        <argsstring>(const thread rank) const</argsstring>
        <name>end</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns end index of specified rank in MPI buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="71" column="16" bodyfile="nestkernel/send_buffer_position.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1a4f0a4d918a83fef0fe92fa4258bff72f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SendBufferPosition::is_chunk_filled</definition>
        <argsstring>(const thread rank) const</argsstring>
        <name>is_chunk_filled</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the part of the buffer on the specified rank has been filled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank denoting which part of the buffer we check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="79" column="8" bodyfile="nestkernel/send_buffer_position.h" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1aec7c3a61ebedfe592e56a2049f3b657b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SendBufferPosition::are_all_chunks_filled</definition>
        <argsstring>() const</argsstring>
        <name>are_all_chunks_filled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the parts of the MPI buffer assigned to this thread has been filled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="85" column="8" bodyfile="nestkernel/send_buffer_position.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_send_buffer_position_1a77c94f98ca3374875492454b401cbee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SendBufferPosition::increase</definition>
        <argsstring>(const thread rank)</argsstring>
        <name>increase</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/send_buffer_position.h" line="87" column="8" bodyfile="nestkernel/send_buffer_position.h" bodystart="151" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class simplifies keeping track of write position in MPI buffer while collocating spikes. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::SendBufferPosition</label>
        <link refid="classnest_1_1_send_buffer_position"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/send_buffer_position.h" line="41" column="1" bodyfile="nestkernel/send_buffer_position.h" bodystart="42" bodyend="88"/>
    <listofallmembers>
      <member refid="classnest_1_1_send_buffer_position_1aec7c3a61ebedfe592e56a2049f3b657b" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>are_all_chunks_filled</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a45c75fc9caba373d77541374a3508fff" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>begin</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a9a56705e04c167181a117019a61e4f59" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>begin_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a46e184c3edf1082d2fdf39a0276d1ae6" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>begin_rank_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a705b223d08a0f3dd9cb65df10e785ad2" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>end</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a2594c64daf1b1c4d9ef6b7deae535c01" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>end_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1aba6a901f6eda8a78c52b13fc05afc55f" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>end_rank_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1aa8246668bce066f003a45a8e8b6dd84b" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>idx</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a10294ed710b1e2aec716b8a30e2ea0a7" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>idx_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a77c94f98ca3374875492454b401cbee5" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>increase</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a4f0a4d918a83fef0fe92fa4258bff72f" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>is_chunk_filled</name></member>
      <member refid="classnest_1_1_send_buffer_position_1abf7896c7cc830af8b7e47805115f5ee5" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>max_size_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a0b618a87762cd9572bbe690421569552" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>num_spike_data_written_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1af8c857c2f036f07ccd9cceb7d95c553b" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>rank_to_index_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a5b4cc68b4cadfe5bbd22e901339ff0c1" prot="private" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>send_recv_count_per_rank_</name></member>
      <member refid="classnest_1_1_send_buffer_position_1a271a9dd1821f0798edc0e8196a9f4ff6" prot="public" virt="non-virtual"><scope>nest::SendBufferPosition</scope><name>SendBufferPosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
