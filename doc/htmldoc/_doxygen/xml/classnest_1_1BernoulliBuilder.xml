<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1BernoulliBuilder" kind="class" language="C++" prot="public">
    <compoundname>nest::BernoulliBuilder</compoundname>
    <basecompoundref refid="classnest_1_1ConnBuilder" prot="public" virt="non-virtual">nest::ConnBuilder</basecompoundref>
    <includes refid="conn__builder_8h" local="no">conn_builder.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1BernoulliBuilder_1a28c12825a6048510c4e6c683e6afebd0" prot="private" static="no" mutable="no">
        <type><ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref></type>
        <definition>ParameterDatum nest::BernoulliBuilder::p_</definition>
        <argsstring></argsstring>
        <name>p_</name>
        <briefdescription>
<para>connection probability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="380" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="380" bodyend="-1"/>
        <referencedby refid="classnest_1_1BernoulliBuilder_1a9708be45b91c4b07e89987209d4fab43" compoundref="conn__builder_8cpp" startline="1544" endline="1566">BernoulliBuilder</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1BernoulliBuilder_1a9708be45b91c4b07e89987209d4fab43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::BernoulliBuilder::BernoulliBuilder</definition>
        <argsstring>(NodeCollectionPTR, NodeCollectionPTR, const DictionaryDatum &amp;, const std::vector&lt; DictionaryDatum &gt; &amp;)</argsstring>
        <name>BernoulliBuilder</name>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>sources</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>targets</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>conn_spec</defname>
        </param>
        <param>
          <type>const std::vector&lt; DictionaryDatum &gt; &amp;</type>
          <defname>syn_specs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="370" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1544" bodyend="1566"/>
        <references refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d">nest::names::p</references>
        <references refid="classnest_1_1BernoulliBuilder_1a28c12825a6048510c4e6c683e6afebd0" compoundref="conn__builder_8h" startline="380">p_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1BernoulliBuilder_1a0aa500518f0f92edf83f9273f25a3495" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::BernoulliBuilder::connect_</definition>
        <argsstring>() override</argsstring>
        <name>connect_</name>
        <reimplements refid="classnest_1_1ConnBuilder_1abbe0a9ef49761e33196033449eb409cc">connect_</reimplements>
        <briefdescription>
<para>Implements the actual connection algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="376" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1570" bodyend="1624"/>
        <references refid="classnest_1_1SparseNodeArray_1a5e621396e30b098cbb9fac0afea7de5d" compoundref="sparse__node__array_8h" startline="227" endline="230">nest::SparseNodeArray::begin</references>
        <references refid="classnest_1_1SparseNodeArray_1a93393a4f5435a71467f775c682173dcd" compoundref="sparse__node__array_8h" startline="233" endline="236">nest::SparseNodeArray::end</references>
        <references refid="classnest_1_1NodeManager_1a264043547cdea9a9c528384bcd655e2b" compoundref="node__manager_8h" startline="344" endline="347">nest::NodeManager::get_local_nodes</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319">nest::names::n</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="254">nest::KernelManager::node_manager</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1BernoulliBuilder_1a1f205dd554c84cf6374c29469ed0d3c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::BernoulliBuilder::inner_connect_</definition>
        <argsstring>(const int, RngPtr, Node *, index)</argsstring>
        <name>inner_connect_</name>
        <param>
          <type>const int</type>
          <defname>tid</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <defname>rng</defname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <defname>target</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>tnode_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="379" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1627" bodyend="1656"/>
        <references refid="classnest_1_1BaseRandomGenerator_1ac9f238412d989640ad55a82e8d9e3a45">nest::BaseRandomGenerator::drand</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
      <node id="1">
        <label>nest::BernoulliBuilder</label>
        <link refid="classnest_1_1BernoulliBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
      <node id="1">
        <label>nest::BernoulliBuilder</label>
        <link refid="classnest_1_1BernoulliBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="367" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="368" bodyend="381"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnBuilder_1a0a0cffe24ec8a736bafc21cf376a5078" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>all_parameters_scalar_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae4f5e56dc411af3804240dd632c4f3ec" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>allow_autapses_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a59ab20628f392f86dd5c7d739e648c66" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>allow_multapses_</name></member>
      <member refid="classnest_1_1BernoulliBuilder_1a9708be45b91c4b07e89987209d4fab43" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>BernoulliBuilder</name></member>
      <member refid="classnest_1_1ConnBuilder_1aaaf1a924c8030b8971b6f86e448615cb" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>change_connected_synaptic_elements</name></member>
      <member refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>ConnBuilder</name></member>
      <member refid="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>connect</name></member>
      <member refid="classnest_1_1BernoulliBuilder_1a0aa500518f0f92edf83f9273f25a3495" prot="protected" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad0b9124c3f087f1699800935054ad91a" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>ConnParameterMap</name></member>
      <member refid="classnest_1_1ConnBuilder_1aacdef9d1a02f25cd6b427cf4173ade5b" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>creates_symmetric_connections_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>default_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a780c5320b5a14d18a42452ee055e649c" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>default_weight_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a386e5b955385f3490bd28479285c06eb" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>default_weight_and_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aa5fb972b09aa51c867008682aaac31ee" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4fafe51332d31c75a637d4837bbaea4d" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>disconnect</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3e48d3be487889e2af93d8bc0c428f46" prot="protected" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abba02533d1aa42c88177b68ff11dd3f7" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>exceptions_raised_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>get_default_delay</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>get_synapse_model</name></member>
      <member refid="classnest_1_1BernoulliBuilder_1a1f205dd554c84cf6374c29469ed0d3c5" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>inner_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac46d2f5b591f00c2e1fed3e35e6b9b35" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>is_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a90063b4c289115d9337a4bf3bc28bff8" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>loop_over_targets_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a15a2456e42f5637e1d8001ae73fa7e52" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>make_symmetric_</name></member>
      <member refid="classnest_1_1BernoulliBuilder_1a28c12825a6048510c4e6c683e6afebd0" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>p_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae6927c7fa75b13b37b25fb0851cd5faa" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>param_dicts_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0242d555bdaa2756db3a6744a9da65b" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>post_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac5ff17cf7dc8accebf3a60fb8ca08b83" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>pre_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aff777833ec510565b318f0059df520a0" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>register_parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1e5a7be0ac2f6bcc77a77d3e974a8e6d" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>requires_proxies</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7742245ffd86ae962c26b92dab363cd6" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>reset_delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a993a31f7f69de094a8bd007c66cdc089" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>reset_weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0eb35bbf0f42c4139e0f1f562a4a0a3" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_default_weight_or_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a46694477447f70340fb29a9d31449b95" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_post_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a344a8fc339bc288dd272b370213ce18a" prot="public" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_pre_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a67a9c61ef70dbca8ff24722766b0faba" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_structural_plasticity_parameters</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9c2e48ef813d9123f9c61df2f40ef1ea" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_synapse_model_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1d5db8eeefd6c7602d16da5f05618c9e" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>set_synapse_params</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3edb34cd9b903094a46df238bb26cfb9" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>single_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a07998ea08ce1a6d1afdf67b42d0f94c3" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>single_disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9cb089bbde94e308f255a41c2abd09a3" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>skip_conn_parameter_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a41b508eee3fcc1be96d808ae78b4cb3f" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>skip_syn_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a464b9cad4d0148634d443398c1d7d5a9" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>sources_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9480e4b0e2834e4ee8a4dcd24a02106b" prot="protected" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>sp_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0b6de2eafc3c8a10286b5420bd1068d" prot="protected" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>sp_disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae01b03e86e9634b7dc9f6e6b08d123c5" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>supports_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>synapse_model_id_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abca9a10069e6ff74d67f2c8cf218b57e" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>synapse_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7cabed3a9ba94e4ef4cc401019bb824d" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>targets_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4b0dff13dcdd94d8a1e7184911b5f4b8" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>update_param_dict_</name></member>
      <member refid="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>use_post_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>use_pre_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" prot="protected" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>use_structural_plasticity_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4bac8367e1e0b6a93f57a5e09166e54c" prot="private" virt="non-virtual"><scope>nest::BernoulliBuilder</scope><name>weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a8f4f6f5f4e9ac3ed75dd9f0cb6467740" prot="public" virt="virtual"><scope>nest::BernoulliBuilder</scope><name>~ConnBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
