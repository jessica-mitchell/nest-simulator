<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1stdp__pl__synapse__hom" kind="class" language="C++" prot="public">
    <compoundname>nest::stdp_pl_synapse_hom</compoundname>
    <basecompoundref refid="classnest_1_1Connection" prot="public" virt="non-virtual">nest::Connection&lt; targetidentifierT &gt;</basecompoundref>
    <includes refid="stdp__pl__synapse__hom_8h" local="no">stdp_pl_synapse_hom.h</includes>
    <innerclass refid="classnest_1_1stdp__pl__synapse__hom_1_1ConnTestDummyNode" prot="public">nest::stdp_pl_synapse_hom::ConnTestDummyNode</innerclass>
    <templateparamlist>
      <param>
        <type>typename targetidentifierT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1stdp__pl__synapse__hom_1a85885ddeea946c57f3a0707d83d8eb61" prot="public" static="no">
        <type><ref refid="classnest_1_1STDPPLHomCommonProperties" kindref="compound">STDPPLHomCommonProperties</ref></type>
        <definition>typedef STDPPLHomCommonProperties nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::CommonPropertiesType</definition>
        <argsstring></argsstring>
        <name>CommonPropertiesType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="131" column="37" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1stdp__pl__synapse__hom_1afaeb55f380ffd07b49914b587b4cd098" prot="public" static="no">
        <type><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref>&lt; targetidentifierT &gt;</type>
        <definition>typedef Connection&lt; targetidentifierT &gt; nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::ConnectionBase</definition>
        <argsstring></argsstring>
        <name>ConnectionBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="132" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classnest_1_1stdp__pl__synapse__hom_1a274fc2aa05d85440ae063e82b6eb805f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4" kindref="member">ConnectionModelProperties</ref></type>
        <definition>constexpr ConnectionModelProperties nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::properties</definition>
        <argsstring></argsstring>
        <name>properties</name>
        <initializer>= <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4a122ce5b1aeb9e739c55b05197eb38429" kindref="member">ConnectionModelProperties::HAS_DELAY</ref>
    | <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4a79cf97983e8d689411b370cb052d5af0" kindref="member">ConnectionModelProperties::IS_PRIMARY</ref> | <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4a2cef5e26942eae3db952a091588257be" kindref="member">ConnectionModelProperties::SUPPORTS_HPC</ref>
    | <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4a1a187e7f68d67927bf19b8ec3cb409de" kindref="member">ConnectionModelProperties::SUPPORTS_LBL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="134" column="46" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1stdp__pl__synapse__hom_1a766f8a6b7d13396408b811ae27b3954e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="233" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="233" bodyend="-1"/>
        <referencedby refid="classnest_1_1stdp__pl__synapse__hom_1ac11277ed429d4e718367f51d69f82c8e" compoundref="stdp__pl__synapse__hom_8h" startline="213" endline="216">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::set_weight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1stdp__pl__synapse__hom_1aaed35e40e5ca4604a35b305c14b5c094" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::Kplus_</definition>
        <argsstring></argsstring>
        <name>Kplus_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="234" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1stdp__pl__synapse__hom_1a37b2da4f43317c90c6a705498c65f1bc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::t_lastspike_</definition>
        <argsstring></argsstring>
        <name>t_lastspike_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="235" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="235" bodyend="-1"/>
        <referencedby refid="classnest_1_1stdp__pl__synapse__hom_1a23c016c3633085698e96d193aa5d3d4a" compoundref="stdp__pl__synapse__hom_8h" startline="203" endline="210">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1aca8e23db88035118ab2f65e08ba0a97e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::stdp_pl_synapse_hom</definition>
        <argsstring>()</argsstring>
        <name>stdp_pl_synapse_hom</name>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets default values for all parameters. Needed by <ref refid="classnest_1_1GenericConnectorModel" kindref="compound">GenericConnectorModel</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="142" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="296" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a9dfc8d10d6d7c3a000c43962ac2d96d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::stdp_pl_synapse_hom</definition>
        <argsstring>(const stdp_pl_synapse_hom &amp;)=default</argsstring>
        <name>stdp_pl_synapse_hom</name>
        <param>
          <type>const <ref refid="classnest_1_1stdp__pl__synapse__hom" kindref="compound">stdp_pl_synapse_hom</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor from a property object. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be defined properly in order for GenericConnector to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="148" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1af3dc4f0010938473a95f38d6cd417500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1stdp__pl__synapse__hom" kindref="compound">stdp_pl_synapse_hom</ref> &amp;</type>
        <definition>stdp_pl_synapse_hom&amp; nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::operator=</definition>
        <argsstring>(const stdp_pl_synapse_hom &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnest_1_1stdp__pl__synapse__hom" kindref="compound">stdp_pl_synapse_hom</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="149" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a55d973a5e8b491315279d4c0741b217d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <param>
          <type>DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get all properties of this connection and put them into a dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="163" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="306" bodyend="316"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1aa2fdd33b52d0e5f4c17aacd228e23fc0">nest::names::Kplus</references>
        <references refid="namespacenest_1_1names_1ae6b92d4e93ee249f1ca8d83358917ec5">nest::names::size_of</references>
        <references refid="namespacenest_1_1names_1a89371cf52bd3967922c650c11858cf7d">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1ab3b18e97d55b71a3f347b91366347610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d, ConnectorModel &amp;cm)</argsstring>
        <name>set_status</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Set properties of this connection from the values given in dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="168" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="320" bodyend="327"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1aa2fdd33b52d0e5f4c17aacd228e23fc0">nest::names::Kplus</references>
        <references refid="namespacenest_1_1names_1a89371cf52bd3967922c650c11858cf7d">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a5cd4081b3f076e4e7a19f7926908b11b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::send</definition>
        <argsstring>(Event &amp;e, thread t, const STDPPLHomCommonProperties &amp;)</argsstring>
        <name>send</name>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1STDPPLHomCommonProperties" kindref="compound">STDPPLHomCommonProperties</ref> &amp;</type>
          <defname>cp</defname>
        </param>
        <briefdescription>
<para>Send an event to the receiver of this connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The port under which this connection is stored in the <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="174" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="252" bodyend="293"/>
        <references refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" compoundref="numerics_8cpp" startline="72">numerics::e</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1aa93a7f7f8ccafde2e02d7e1cf97e8882">nest::names::start</references>
        <references refid="namespacenest_1_1names_1a8a52d627cf6eb1d90e4baabe764f36f4">nest::names::t_spike</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="classnest_1_1STDPPLHomCommonProperties_1aa47a8c5058f62bce65d470e1a728c8bc" compoundref="stdp__pl__synapse__hom_8h" startline="115">nest::STDPPLHomCommonProperties::tau_plus_inv_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a23c016c3633085698e96d193aa5d3d4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::check_connection</definition>
        <argsstring>(Node &amp;s, Node &amp;t, rport receptor_type, const CommonPropertiesType &amp;)</argsstring>
        <name>check_connection</name>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1stdp__pl__synapse__hom_1a85885ddeea946c57f3a0707d83d8eb61" kindref="member">CommonPropertiesType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="203" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="203" bodyend="210"/>
        <references refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" compoundref="connection_8h" startline="321" endline="348">nest::Connection&lt; targetidentifierT &gt;::check_connection_</references>
        <references refid="classnest_1_1stdp__pl__synapse__hom_1a859a57c02d19389a8f6a15c626214c9b" compoundref="connection_8h" startline="172" endline="175">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::get_delay</references>
        <references refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35">nest::names::receptor_type</references>
        <references refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" compoundref="node_8cpp" startline="214" endline="217">nest::Node::register_stdp_connection</references>
        <references refid="classnest_1_1stdp__pl__synapse__hom_1a37b2da4f43317c90c6a705498c65f1bc" compoundref="stdp__pl__synapse__hom_8h" startline="235">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::t_lastspike_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1ac11277ed429d4e718367f51d69f82c8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::set_weight</definition>
        <argsstring>(double w)</argsstring>
        <name>set_weight</name>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="213" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="213" bodyend="216"/>
        <references refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690">nest::names::w</references>
        <references refid="classnest_1_1stdp__pl__synapse__hom_1a766f8a6b7d13396408b811ae27b3954e" compoundref="stdp__pl__synapse__hom_8h" startline="233">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a859a57c02d19389a8f6a15c626214c9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::Connection&lt; targetidentifierT &gt;::get_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_delay</name>
        <briefdescription>
<para>Return the delay of the connection in ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="155" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="172" bodyend="175"/>
        <referencedby refid="classnest_1_1stdp__pl__synapse__hom_1a23c016c3633085698e96d193aa5d3d4a" compoundref="stdp__pl__synapse__hom_8h" startline="203" endline="210">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Connection&lt; targetidentifierT &gt;::get_delay_steps</definition>
        <argsstring>() const</argsstring>
        <name>get_delay_steps</name>
        <briefdescription>
<para>Return the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="156" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::Connection&lt; targetidentifierT &gt;::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="157" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1aad7670ccbbf3bcb8dadad67075c15ff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* nest::Connection&lt; targetidentifierT &gt;::get_target</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="158" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="238" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1ac269d49bc4b09afb69ae458b2a42cda3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::facilitate_</definition>
        <argsstring>(double w, double kplus, const STDPPLHomCommonProperties &amp;cp)</argsstring>
        <name>facilitate_</name>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kplus</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1STDPPLHomCommonProperties" kindref="compound">STDPPLHomCommonProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="220" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="220" bodyend="223"/>
        <references refid="classnest_1_1STDPPLHomCommonProperties_1a8a137de17e63b71ffb1696263b51b2bf" compoundref="stdp__pl__synapse__hom_8h" startline="116">nest::STDPPLHomCommonProperties::lambda_</references>
        <references refid="classnest_1_1STDPPLHomCommonProperties_1af197cf7b0cd0b240f5bb7215eac78765" compoundref="stdp__pl__synapse__hom_8h" startline="118">nest::STDPPLHomCommonProperties::mu_</references>
        <references refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690">nest::names::w</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1stdp__pl__synapse__hom_1a8c8f05b9297c451988908f8a0251aa14" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::depress_</definition>
        <argsstring>(double w, double kminus, const STDPPLHomCommonProperties &amp;cp)</argsstring>
        <name>depress_</name>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kminus</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1STDPPLHomCommonProperties" kindref="compound">STDPPLHomCommonProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="226" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="226" bodyend="230"/>
        <references refid="classnest_1_1STDPPLHomCommonProperties_1a17a8e4d4c58ef6bf7fa27cb0c4fda783" compoundref="stdp__pl__synapse__hom_8h" startline="117">nest::STDPPLHomCommonProperties::alpha_</references>
        <references refid="classnest_1_1STDPPLHomCommonProperties_1a8a137de17e63b71ffb1696263b51b2bf" compoundref="stdp__pl__synapse__hom_8h" startline="116">nest::STDPPLHomCommonProperties::lambda_</references>
        <references refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690">nest::names::w</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class representing an STDP connection with homogeneous parameters, i.e. </para>
    </briefdescription>
    <detaileddescription>
<para>parameters are the same for all synapses. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
      </node>
      <node id="1">
        <label>nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1stdp__pl__synapse__hom"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
        <childnode refid="3" relation="usage">
          <edgelabel>#syn_id_delay_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::SynIdDelay</label>
        <link refid="structnest_1_1SynIdDelay"/>
      </node>
      <node id="1">
        <label>nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1stdp__pl__synapse__hom"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" line="127" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/stdp_pl_synapse_hom.h" bodystart="128" bodyend="236"/>
    <listofallmembers>
      <member refid="classnest_1_1Connection_1a98a2af4db1c9a34d011be0c89a731c9b" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>calibrate</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a23c016c3633085698e96d193aa5d3d4a" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>check_connection</name></member>
      <member refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" prot="protected" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>check_connection_</name></member>
      <member refid="classnest_1_1Connection_1ae7698c05fc210ced5bbf31b02dd6e05b" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a85885ddeea946c57f3a0707d83d8eb61" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>CommonPropertiesType</name></member>
      <member refid="classnest_1_1Connection_1acb7166410b78749a3c989e98868d1020" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>Connection</name></member>
      <member refid="classnest_1_1Connection_1a9237d0912e8b9c7fbb5d32d4c7abcb8d" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>Connection</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1afaeb55f380ffd07b49914b587b4cd098" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>ConnectionBase</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a8c8f05b9297c451988908f8a0251aa14" prot="private" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>depress_</name></member>
      <member refid="classnest_1_1Connection_1a811dff4d6dbbca5a8cae4de925aa9faf" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>disable</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1ac269d49bc4b09afb69ae458b2a42cda3" prot="private" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>facilitate_</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_delay</name></member>
      <member refid="classnest_1_1Connection_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::stdp_pl_synapse_hom</scope><name>get_delay</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::stdp_pl_synapse_hom</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a7c32524ac24f7d591bd14a5cc9219618" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_label</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_rport</name></member>
      <member refid="classnest_1_1Connection_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::stdp_pl_synapse_hom</scope><name>get_rport</name></member>
      <member refid="classnest_1_1Connection_1ab94466cbfab610e03bc440e4bb1a6a41" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_secondary_event</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a55d973a5e8b491315279d4c0741b217d" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_status</name></member>
      <member refid="classnest_1_1Connection_1a2aca6e34443f8ef8576e23f097b199df" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_syn_id</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1aad7670ccbbf3bcb8dadad67075c15ff5" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>get_target</name></member>
      <member refid="classnest_1_1Connection_1aad7670ccbbf3bcb8dadad67075c15ff5" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::stdp_pl_synapse_hom</scope><name>get_target</name></member>
      <member refid="classnest_1_1Connection_1af8930ce6e4fee3c867cccac967970bd2" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1aaed35e40e5ca4604a35b305c14b5c094" prot="private" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>Kplus_</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1af3dc4f0010938473a95f38d6cd417500" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>operator=</name></member>
      <member refid="classnest_1_1Connection_1a48fb1882cd92d44887b93fffd606c720" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::stdp_pl_synapse_hom</scope><name>operator=</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a274fc2aa05d85440ae063e82b6eb805f" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>properties</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a5cd4081b3f076e4e7a19f7926908b11b" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>send</name></member>
      <member refid="classnest_1_1Connection_1abebbbd505fa36932bde4860d98eaed2e" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_delay</name></member>
      <member refid="classnest_1_1Connection_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1adce5ef19844ee30d96e7d39b5fe1a7f1" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1ab3b18e97d55b71a3f347b91366347610" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_status</name></member>
      <member refid="classnest_1_1Connection_1a7abf9bd27ab16f395112be31001bae3c" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1ac11277ed429d4e718367f51d69f82c8e" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>set_weight</name></member>
      <member refid="classnest_1_1Connection_1a0007e829af9dc39e624c5f349259a8ca" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>source_has_more_targets</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1aca8e23db88035118ab2f65e08ba0a97e" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>stdp_pl_synapse_hom</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a9dfc8d10d6d7c3a000c43962ac2d96d4" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>stdp_pl_synapse_hom</name></member>
      <member refid="classnest_1_1Connection_1a27f971c956034918da99deb971949a26" prot="protected" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>syn_id_delay_</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a37b2da4f43317c90c6a705498c65f1bc" prot="private" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>t_lastspike_</name></member>
      <member refid="classnest_1_1Connection_1af2b2773f69c67db7330eb1064a199af7" prot="protected" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>target_</name></member>
      <member refid="classnest_1_1Connection_1aa1e3449ea1e2ff5f7dd2338bbf3feafe" prot="public" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1stdp__pl__synapse__hom_1a766f8a6b7d13396408b811ae27b3954e" prot="private" virt="non-virtual"><scope>nest::stdp_pl_synapse_hom</scope><name>weight_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
