<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1ScalarIntegerParameter" kind="class" language="C++" prot="public">
    <compoundname>nest::ScalarIntegerParameter</compoundname>
    <basecompoundref refid="classnest_1_1ConnParameter" prot="public" virt="non-virtual">nest::ConnParameter</basecompoundref>
    <includes refid="conn__parameter_8h" local="no">conn_parameter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ScalarIntegerParameter_1ac0684e6b8f38c531fd3daf0d93179a28" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long nest::ScalarIntegerParameter::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>nest::ScalarIntegerParameter::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="218" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="218" bodyend="-1"/>
        <referencedby refid="classnest_1_1ScalarIntegerParameter_1a71a627f123393a6c417b941bc63e99df" compoundref="conn__parameter_8h" startline="183" endline="186">value_double</referencedby>
        <referencedby refid="classnest_1_1ScalarIntegerParameter_1aee166f46f76683135650d5540db808ea" compoundref="conn__parameter_8h" startline="189" endline="192">value_int</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1aba49417b841d36881284a2f218d041b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::ScalarIntegerParameter::ScalarIntegerParameter</definition>
        <argsstring>(long value, const size_t)</argsstring>
        <name>ScalarIntegerParameter</name>
        <qualifiedname>nest::ScalarIntegerParameter::ScalarIntegerParameter</qualifiedname>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const</type>
          <declname>size_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="177" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1a71a627f123393a6c417b941bc63e99df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double nest::ScalarIntegerParameter::value_double</definition>
        <argsstring>(thread, RngPtr, index, Node *) const override</argsstring>
        <name>value_double</name>
        <qualifiedname>nest::ScalarIntegerParameter::value_double</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a891c9bf68a5c8f8f5416d090c4fc02f9">value_double</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        </param>
        <briefdescription>
<para>Return parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameter value may depend on target threads and random numbers. Both must be supplied, even if a concrete parameter type does not use them.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target_thread</parametername>
</parameternamelist>
<parameterdescription>
<para>will be ignored except for array parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>random number generator pointer will be ignored except for random parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="183" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="183" bodyend="186"/>
        <references refid="classnest_1_1ScalarIntegerParameter_1ac0684e6b8f38c531fd3daf0d93179a28" compoundref="conn__parameter_8h" startline="218">value_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1aee166f46f76683135650d5540db808ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>long</type>
        <definition>long nest::ScalarIntegerParameter::value_int</definition>
        <argsstring>(thread, RngPtr, index, Node *) const override</argsstring>
        <name>value_int</name>
        <qualifiedname>nest::ScalarIntegerParameter::value_int</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a26c4ff5169680f2ba4a7c8a1694110f4">value_int</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="189" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="189" bodyend="192"/>
        <references refid="classnest_1_1ScalarIntegerParameter_1ac0684e6b8f38c531fd3daf0d93179a28" compoundref="conn__parameter_8h" startline="218">value_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1aa6ad85df07541fb1ac532496a93fb408" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ScalarIntegerParameter::is_array</definition>
        <argsstring>() const override</argsstring>
        <name>is_array</name>
        <qualifiedname>nest::ScalarIntegerParameter::is_array</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a574bb23d4cd5514b7bf5d51a440abb55">is_array</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="195" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1a58fe21ceb4948c19454bf40d0e4365f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ScalarIntegerParameter::reset</definition>
        <argsstring>() const override</argsstring>
        <name>reset</name>
        <qualifiedname>nest::ScalarIntegerParameter::reset</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a13d36c79f25051910c1ffe937e31ab1b">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="201" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1ab57fa119f503ee3fe4ca1b9a604d22d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ScalarIntegerParameter::is_scalar</definition>
        <argsstring>() const override</argsstring>
        <name>is_scalar</name>
        <qualifiedname>nest::ScalarIntegerParameter::is_scalar</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a2bd64986d7840e5cb839fbc9b083c0f6">is_scalar</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="206" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ScalarIntegerParameter_1a5076c9ad0454ce5662246ebcb338299f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ScalarIntegerParameter::provides_long</definition>
        <argsstring>() const override</argsstring>
        <name>provides_long</name>
        <qualifiedname>nest::ScalarIntegerParameter::provides_long</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a89cec93b5a09f8b41ec0c48e9fa3434a">provides_long</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="212" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="212" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Single integer value. </para>
    </briefdescription>
    <detaileddescription>
<para>On each request, it returns the same value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
      <node id="1">
        <label>nest::ScalarIntegerParameter</label>
        <link refid="classnest_1_1ScalarIntegerParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
      <node id="1">
        <label>nest::ScalarIntegerParameter</label>
        <link refid="classnest_1_1ScalarIntegerParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="174" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="175" bodyend="219"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnParameter_1aeba222e75a9c6e4021394160c8f0fc9a" prot="public" virt="non-virtual"><scope>nest::ScalarIntegerParameter</scope><name>ConnParameter</name></member>
      <member refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" prot="public" virt="non-virtual"><scope>nest::ScalarIntegerParameter</scope><name>create</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1aa6ad85df07541fb1ac532496a93fb408" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>is_array</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1ab57fa119f503ee3fe4ca1b9a604d22d5" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>is_scalar</name></member>
      <member refid="classnest_1_1ConnParameter_1a5be9d99e7d8036723e673cb1d25a6ee1" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>number_of_values</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1a5076c9ad0454ce5662246ebcb338299f" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>provides_long</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1a58fe21ceb4948c19454bf40d0e4365f0" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>reset</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1aba49417b841d36881284a2f218d041b3" prot="public" virt="non-virtual"><scope>nest::ScalarIntegerParameter</scope><name>ScalarIntegerParameter</name></member>
      <member refid="classnest_1_1ConnParameter_1a07bb81308cbcd25b6766faa704680b50" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>skip</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1ac0684e6b8f38c531fd3daf0d93179a28" prot="private" virt="non-virtual"><scope>nest::ScalarIntegerParameter</scope><name>value_</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1a71a627f123393a6c417b941bc63e99df" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>value_double</name></member>
      <member refid="classnest_1_1ScalarIntegerParameter_1aee166f46f76683135650d5540db808ea" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>value_int</name></member>
      <member refid="classnest_1_1ConnParameter_1ad56f5b8e66ba9cd627f5c0cdd05dfbb4" prot="public" virt="virtual"><scope>nest::ScalarIntegerParameter</scope><name>~ConnParameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
