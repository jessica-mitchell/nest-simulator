<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1SparseNodeArray_1_1NodeEntry" kind="class" language="C++" prot="public">
    <compoundname>nest::SparseNodeArray::NodeEntry</compoundname>
    <includes refid="sparse__node__array_8h" local="no">sparse_node_array.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a6fd1148b9a1dbdd04f5bc4fe6840ab10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SparseNodeArray</definition>
        <argsstring></argsstring>
        <name>SparseNodeArray</name>
        <param>
          <type><ref refid="classnest_1_1SparseNodeArray" kindref="compound">SparseNodeArray</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="97" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a33254f99c813da1ddca028f5543aa0c0" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* nest::SparseNodeArray::NodeEntry::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>pointer to allow zero-entries for <ref refid="classBlockVector" kindref="compound">BlockVector</ref> compatibility </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="121" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1adf3d76ae0ac7d902a77115b6bfc4c20f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::SparseNodeArray::NodeEntry::node_id_</definition>
        <argsstring></argsstring>
        <name>node_id_</name>
        <briefdescription>
<para>store node ID locally for faster searching </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="122" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a00d088e840146255a264b654c07cf648" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::SparseNodeArray::NodeEntry::NodeEntry</definition>
        <argsstring>()</argsstring>
        <name>NodeEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This constructor is only provided to allow <ref refid="classBlockVector" kindref="compound">BlockVector</ref> to initialize new blocks with &quot;zero&quot; values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="105" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a5635a6aba196fc8c7ea6afc349e6344a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::SparseNodeArray::NodeEntry::NodeEntry</definition>
        <argsstring>(Node &amp;, index)</argsstring>
        <name>NodeEntry</name>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <defname>node</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>node_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1Node" kindref="compound">Node</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>to be represented </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Index</parametername>
</parameternamelist>
<parameterdescription>
<para>of node to be represented </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="115" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a5f4a3cf79653f046e9bdf6a80ad3ac91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>nest::Node * nest::SparseNodeArray::NodeEntry::get_node</definition>
        <argsstring>() const</argsstring>
        <name>get_node</name>
        <briefdescription>
<para>return pointer to represented node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="117" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="264" bodyend="268"/>
        <referencedby refid="classnest_1_1NodeManager_1a801fd82238c17423ed9dfda3f512602a" compoundref="node__manager_8cpp" startline="496" endline="564">nest::NodeManager::ensure_valid_thread_local_ids</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SparseNodeArray_1_1NodeEntry_1a086a71207e03f49c876f27939d8f3c1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>nest::index nest::SparseNodeArray::NodeEntry::get_node_id</definition>
        <argsstring>() const</argsstring>
        <name>get_node_id</name>
        <briefdescription>
<para>return ID of represented node </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="118" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="271" bodyend="275"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Entry representing individual node. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para><itemizedlist>
<listitem><para>The <ref refid="classnest_1_1Node" kindref="compound">Node</ref> ID is stored in the entry to ensure cache locality during lookup.</para>
</listitem><listitem><para>Actual entries will always point to valid nodes.</para>
</listitem><listitem><para>Must be public to allow iteration by SparseNodeArray-users. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="1">
        <label>nest::SparseNodeArray::NodeEntry</label>
        <link refid="classnest_1_1SparseNodeArray_1_1NodeEntry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-node_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" line="95" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/sparse_node_array.h" bodystart="96" bodyend="123"/>
    <listofallmembers>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a5f4a3cf79653f046e9bdf6a80ad3ac91" prot="public" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>get_node</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a086a71207e03f49c876f27939d8f3c1f" prot="public" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a33254f99c813da1ddca028f5543aa0c0" prot="private" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>node_</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1adf3d76ae0ac7d902a77115b6bfc4c20f" prot="private" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>node_id_</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a00d088e840146255a264b654c07cf648" prot="public" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>NodeEntry</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a5635a6aba196fc8c7ea6afc349e6344a" prot="public" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>NodeEntry</name></member>
      <member refid="classnest_1_1SparseNodeArray_1_1NodeEntry_1a6fd1148b9a1dbdd04f5bc4fe6840ab10" prot="private" virt="non-virtual"><scope>nest::SparseNodeArray::NodeEntry</scope><name>SparseNodeArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
