<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="block__vector_8h" kind="file" language="C++">
    <compoundname>block_vector.h</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iterator</includes>
    <includes local="no">vector</includes>
    <includes local="yes">sliexceptions.h</includes>
    <includedby refid="sort_8h" local="yes">sort.h</includedby>
    <includedby refid="source__table_8h" local="yes">source_table.h</includedby>
    <includedby refid="source__table__position_8h" local="yes">source_table_position.h</includedby>
    <includedby refid="sparse__node__array_8h" local="yes">sparse_node_array.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="1">
        <label>block_vector.h</label>
        <link refid="block__vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>sliexceptions.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="164">
        <label>tsodyks_synapse_hom.cpp</label>
        <link refid="tsodyks__synapse__hom_8cpp"/>
      </node>
      <node id="117">
        <label>iaf_psc_exp_htum.h</label>
        <link refid="iaf__psc__exp__htum_8h"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>spike_generator.cpp</label>
        <link refid="spike__generator_8cpp"/>
      </node>
      <node id="187">
        <label>kernel_manager.cpp</label>
        <link refid="kernel__manager_8cpp"/>
      </node>
      <node id="218">
        <label>gif_pop_psc_exp.h</label>
        <link refid="gif__pop__psc__exp_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>cm_default.cpp</label>
        <link refid="cm__default_8cpp"/>
      </node>
      <node id="52">
        <label>correlomatrix_detector.cpp</label>
        <link refid="correlomatrix__detector_8cpp"/>
      </node>
      <node id="202">
        <label>sparse_node_array.cpp</label>
        <link refid="sparse__node__array_8cpp"/>
      </node>
      <node id="182">
        <label>delay_checker.cpp</label>
        <link refid="delay__checker_8cpp"/>
      </node>
      <node id="126">
        <label>noise_generator.h</label>
        <link refid="noise__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>quantal_stp_synapse_impl.h</label>
        <link refid="quantal__stp__synapse__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>rate_neuron_opn_impl.h</label>
        <link refid="rate__neuron__opn__impl_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>connection.h</label>
        <link refid="connection_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>archiving_node.cpp</label>
        <link refid="archiving__node_8cpp"/>
      </node>
      <node id="48">
        <label>cm_default.h</label>
        <link refid="cm__default_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>parameter.cpp</label>
        <link refid="parameter_8cpp"/>
      </node>
      <node id="60">
        <label>iaf_chs_2007.cpp</label>
        <link refid="iaf__chs__2007_8cpp"/>
      </node>
      <node id="7">
        <label>connection_manager_impl.h</label>
        <link refid="connection__manager__impl_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>iaf_psc_exp.h</label>
        <link refid="iaf__psc__exp_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>ring_buffer_impl.h</label>
        <link refid="ring__buffer__impl_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>event_delivery_manager.cpp</label>
        <link refid="event__delivery__manager_8cpp"/>
      </node>
      <node id="217">
        <label>cm_compartmentcurrents.cpp</label>
        <link refid="cm__compartmentcurrents_8cpp"/>
      </node>
      <node id="219">
        <label>volume_transmitter.h</label>
        <link refid="volume__transmitter_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>sinusoidal_poisson_generator.cpp</label>
        <link refid="sinusoidal__poisson__generator_8cpp"/>
      </node>
      <node id="192">
        <label>mpi_manager.cpp</label>
        <link refid="mpi__manager_8cpp"/>
      </node>
      <node id="229">
        <label>target_identifier.h</label>
        <link refid="target__identifier_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>threshold_lin_rate.cpp</label>
        <link refid="threshold__lin__rate_8cpp"/>
      </node>
      <node id="171">
        <label>layer.cpp</label>
        <link refid="layer_8cpp"/>
      </node>
      <node id="29">
        <label>poisson_generator_ps.cpp</label>
        <link refid="poisson__generator__ps_8cpp"/>
      </node>
      <node id="144">
        <label>spike_train_injector.h</label>
        <link refid="spike__train__injector_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>multimeter.cpp</label>
        <link refid="multimeter_8cpp"/>
      </node>
      <node id="9">
        <label>event_delivery_manager_impl.h</label>
        <link refid="event__delivery__manager__impl_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>rate_connection_delayed.h</label>
        <link refid="rate__connection__delayed_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>stdp_pl_synapse_hom.h</label>
        <link refid="stdp__pl__synapse__hom_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>clopath_synapse.h</label>
        <link refid="clopath__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>mpi_manager_impl.h</label>
        <link refid="mpi__manager__impl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>correlation_detector.cpp</label>
        <link refid="correlation__detector_8cpp"/>
      </node>
      <node id="6">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>simulation_manager.cpp</label>
        <link refid="simulation__manager_8cpp"/>
      </node>
      <node id="223">
        <label>slice_ring_buffer.cpp</label>
        <link refid="slice__ring__buffer_8cpp"/>
      </node>
      <node id="119">
        <label>iaf_psc_exp_ps.h</label>
        <link refid="iaf__psc__exp__ps_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>stdp_triplet_synapse.h</label>
        <link refid="stdp__triplet__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>nest.cpp</label>
        <link refid="nest_8cpp"/>
      </node>
      <node id="23">
        <label>mip_generator.cpp</label>
        <link refid="mip__generator_8cpp"/>
      </node>
      <node id="56">
        <label>gif_pop_psc_exp.cpp</label>
        <link refid="gif__pop__psc__exp_8cpp"/>
      </node>
      <node id="208">
        <label>node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="73">
        <label>rate_neuron_ipn_impl.h</label>
        <link refid="rate__neuron__ipn__impl_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>source_table.cpp</label>
        <link refid="source__table_8cpp"/>
      </node>
      <node id="142">
        <label>spike_dilutor.h</label>
        <link refid="spike__dilutor_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>quantal_stp_synapse.h</label>
        <link refid="quantal__stp__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>iaf_psc_alpha_ps.cpp</label>
        <link refid="iaf__psc__alpha__ps_8cpp"/>
      </node>
      <node id="50">
        <label>cm_tree.cpp</label>
        <link refid="cm__tree_8cpp"/>
      </node>
      <node id="28">
        <label>poisson_generator.cpp</label>
        <link refid="poisson__generator_8cpp"/>
      </node>
      <node id="53">
        <label>correlospinmatrix_detector.cpp</label>
        <link refid="correlospinmatrix__detector_8cpp"/>
      </node>
      <node id="156">
        <label>stdp_synapse_hom.h</label>
        <link refid="stdp__synapse__hom_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>gap_junction.h</label>
        <link refid="gap__junction_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>static_synapse_hom_w.h</label>
        <link refid="static__synapse__hom__w_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>recording_backend_mpi.cpp</label>
        <link refid="recording__backend__mpi_8cpp"/>
      </node>
      <node id="234">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="233" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>stdp_synapse_facetshw_hom_impl.h</label>
        <link refid="stdp__synapse__facetshw__hom__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>structural_plasticity_node.cpp</label>
        <link refid="structural__plasticity__node_8cpp"/>
      </node>
      <node id="86">
        <label>multimeter.h</label>
        <link refid="multimeter_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>iaf_psc_delta_ps.h</label>
        <link refid="iaf__psc__delta__ps_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>jonke_synapse.h</label>
        <link refid="jonke__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>gamma_sup_generator.h</label>
        <link refid="gamma__sup__generator_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>tsodyks_synapse_hom.h</label>
        <link refid="tsodyks__synapse__hom_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>cm_tree.h</label>
        <link refid="cm__tree_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>glif_psc.h</label>
        <link refid="glif__psc_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>rate_transformer_node.h</label>
        <link refid="rate__transformer__node_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>cont_delay_synapse.h</label>
        <link refid="cont__delay__synapse_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>rate_neuron_opn.h</label>
        <link refid="rate__neuron__opn_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>parrot_neuron.h</label>
        <link refid="parrot__neuron_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>izhikevich.cpp</label>
        <link refid="izhikevich_8cpp"/>
      </node>
      <node id="189">
        <label>model_manager_impl.h</label>
        <link refid="model__manager__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>model_manager.cpp</label>
        <link refid="model__manager_8cpp"/>
      </node>
      <node id="180">
        <label>connector_model_impl.h</label>
        <link refid="connector__model__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>stdp_dopamine_synapse.h</label>
        <link refid="stdp__dopamine__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>dict_util.h</label>
        <link refid="dict__util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>mcculloch_pitts_neuron.cpp</label>
        <link refid="mcculloch__pitts__neuron_8cpp"/>
      </node>
      <node id="82">
        <label>threshold_lin_rate.h</label>
        <link refid="threshold__lin__rate_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>target_table.cpp</label>
        <link refid="target__table_8cpp"/>
      </node>
      <node id="103">
        <label>diffusion_connection.h</label>
        <link refid="diffusion__connection_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>spike_recorder.cpp</label>
        <link refid="spike__recorder_8cpp"/>
      </node>
      <node id="179">
        <label>connector_base_impl.h</label>
        <link refid="connector__base__impl_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>spin_detector.cpp</label>
        <link refid="spin__detector_8cpp"/>
      </node>
      <node id="124">
        <label>mat2_psc_exp.h</label>
        <link refid="mat2__psc__exp_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>free_layer.h</label>
        <link refid="free__layer_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>mcculloch_pitts_neuron.h</label>
        <link refid="mcculloch__pitts__neuron_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>rate_neuron_ipn.h</label>
        <link refid="rate__neuron__ipn_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>glif_psc.cpp</label>
        <link refid="glif__psc_8cpp"/>
      </node>
      <node id="203">
        <label>target_table_devices.cpp</label>
        <link refid="target__table__devices_8cpp"/>
      </node>
      <node id="19">
        <label>dc_generator.cpp</label>
        <link refid="dc__generator_8cpp"/>
      </node>
      <node id="81">
        <label>tanh_rate.cpp</label>
        <link refid="tanh__rate_8cpp"/>
      </node>
      <node id="132">
        <label>ppd_sup_generator.h</label>
        <link refid="ppd__sup__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>node_collection.cpp</label>
        <link refid="node__collection_8cpp"/>
      </node>
      <node id="74">
        <label>lin_rate.h</label>
        <link refid="lin__rate_8h"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>vogels_sprekeler_synapse.h</label>
        <link refid="vogels__sprekeler__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>iaf_psc_exp_multisynapse.h</label>
        <link refid="iaf__psc__exp__multisynapse_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>poisson_generator.h</label>
        <link refid="poisson__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>proxynode.cpp</label>
        <link refid="proxynode_8cpp"/>
      </node>
      <node id="106">
        <label>gif_psc_exp.h</label>
        <link refid="gif__psc__exp_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>neststartup.cpp</label>
        <link refid="neststartup_8cpp"/>
      </node>
      <node id="152">
        <label>stdp_pl_synapse_hom.cpp</label>
        <link refid="stdp__pl__synapse__hom_8cpp"/>
      </node>
      <node id="172">
        <label>layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>connection_creator_impl.h</label>
        <link refid="connection__creator__impl_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>step_rate_generator.h</label>
        <link refid="step__rate__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>io_manager.cpp</label>
        <link refid="io__manager_8cpp"/>
      </node>
      <node id="61">
        <label>iaf_psc_alpha.cpp</label>
        <link refid="iaf__psc__alpha_8cpp"/>
      </node>
      <node id="120">
        <label>iaf_psc_exp_ps_lossless.h</label>
        <link refid="iaf__psc__exp__ps__lossless_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>stdp_nn_symm_synapse.h</label>
        <link refid="stdp__nn__symm__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>lin_rate.cpp</label>
        <link refid="lin__rate_8cpp"/>
      </node>
      <node id="54">
        <label>gauss_rate.h</label>
        <link refid="gauss__rate_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>recording_device.h</label>
        <link refid="recording__device_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>music_manager.cpp</label>
        <link refid="music__manager_8cpp"/>
      </node>
      <node id="76">
        <label>sigmoid_rate.h</label>
        <link refid="sigmoid__rate_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>spike_generator.h</label>
        <link refid="spike__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>layer_impl.h</label>
        <link refid="layer__impl_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>step_rate_generator.cpp</label>
        <link refid="step__rate__generator_8cpp"/>
      </node>
      <node id="30">
        <label>ppd_sup_generator.cpp</label>
        <link refid="ppd__sup__generator_8cpp"/>
      </node>
      <node id="26">
        <label>parrot_neuron.cpp</label>
        <link refid="parrot__neuron_8cpp"/>
      </node>
      <node id="231">
        <label>urbanczik_archiving_node_impl.h</label>
        <link refid="urbanczik__archiving__node__impl_8h"/>
      </node>
      <node id="199">
        <label>recording_backend_ascii.cpp</label>
        <link refid="recording__backend__ascii_8cpp"/>
      </node>
      <node id="46">
        <label>amat2_psc_exp.cpp</label>
        <link refid="amat2__psc__exp_8cpp"/>
      </node>
      <node id="77">
        <label>sigmoid_rate.cpp</label>
        <link refid="sigmoid__rate_8cpp"/>
      </node>
      <node id="113">
        <label>iaf_psc_alpha_ps.h</label>
        <link refid="iaf__psc__alpha__ps_8h"/>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>connection_manager.cpp</label>
        <link refid="connection__manager_8cpp"/>
      </node>
      <node id="110">
        <label>iaf_chs_2007.h</label>
        <link refid="iaf__chs__2007_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>iaf_psc_delta.h</label>
        <link refid="iaf__psc__delta_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>step_current_generator.h</label>
        <link refid="step__current__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>weight_recorder.cpp</label>
        <link refid="weight__recorder_8cpp"/>
      </node>
      <node id="31">
        <label>pulsepacket_generator.cpp</label>
        <link refid="pulsepacket__generator_8cpp"/>
      </node>
      <node id="200">
        <label>recording_backend_memory.cpp</label>
        <link refid="recording__backend__memory_8cpp"/>
      </node>
      <node id="190">
        <label>node_manager.cpp</label>
        <link refid="node__manager_8cpp"/>
      </node>
      <node id="228">
        <label>synaptic_element.cpp</label>
        <link refid="synaptic__element_8cpp"/>
      </node>
      <node id="98">
        <label>amat2_psc_exp.h</label>
        <link refid="amat2__psc__exp_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>noise_generator.cpp</label>
        <link refid="noise__generator_8cpp"/>
      </node>
      <node id="131">
        <label>pp_psc_delta.h</label>
        <link refid="pp__psc__delta_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>iaf_psc_exp.cpp</label>
        <link refid="iaf__psc__exp_8cpp"/>
      </node>
      <node id="36">
        <label>spike_train_injector.cpp</label>
        <link refid="spike__train__injector_8cpp"/>
      </node>
      <node id="10">
        <label>ac_generator.cpp</label>
        <link refid="ac__generator_8cpp"/>
      </node>
      <node id="67">
        <label>iaf_psc_exp_htum.cpp</label>
        <link refid="iaf__psc__exp__htum_8cpp"/>
      </node>
      <node id="222">
        <label>slice_ring_buffer.h</label>
        <link refid="slice__ring__buffer_8h"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>erfc_neuron.h</label>
        <link refid="erfc__neuron_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>spatial.cpp</label>
        <link refid="spatial_8cpp"/>
      </node>
      <node id="177">
        <label>grid_layer.h</label>
        <link refid="grid__layer_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>gif_psc_exp_multisynapse.cpp</label>
        <link refid="gif__psc__exp__multisynapse_8cpp"/>
      </node>
      <node id="64">
        <label>iaf_psc_delta.cpp</label>
        <link refid="iaf__psc__delta_8cpp"/>
      </node>
      <node id="27">
        <label>parrot_neuron_ps.cpp</label>
        <link refid="parrot__neuron__ps_8cpp"/>
      </node>
      <node id="183">
        <label>deprecation_warning.cpp</label>
        <link refid="deprecation__warning_8cpp"/>
      </node>
      <node id="38">
        <label>step_current_generator.cpp</label>
        <link refid="step__current__generator_8cpp"/>
      </node>
      <node id="69">
        <label>iaf_psc_exp_ps.cpp</label>
        <link refid="iaf__psc__exp__ps_8cpp"/>
      </node>
      <node id="225">
        <label>stimulation_backend_mpi.cpp</label>
        <link refid="stimulation__backend__mpi_8cpp"/>
      </node>
      <node id="1">
        <label>block_vector.h</label>
        <link refid="block__vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>ring_buffer.cpp</label>
        <link refid="ring__buffer_8cpp"/>
      </node>
      <node id="191">
        <label>modelrange_manager.cpp</label>
        <link refid="modelrange__manager_8cpp"/>
      </node>
      <node id="44">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>recording_backend_sionlib.cpp</label>
        <link refid="recording__backend__sionlib_8cpp"/>
      </node>
      <node id="162">
        <label>tsodyks_synapse.h</label>
        <link refid="tsodyks__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>ac_generator.h</label>
        <link refid="ac__generator_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>gauss_rate.cpp</label>
        <link refid="gauss__rate_8cpp"/>
      </node>
      <node id="80">
        <label>tanh_rate.h</label>
        <link refid="tanh__rate_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>vp_manager_impl.h</label>
        <link refid="vp__manager__impl_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>stdp_nn_restr_synapse.h</label>
        <link refid="stdp__nn__restr__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>genericmodel_impl.h</label>
        <link refid="genericmodel__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>parrot_neuron_ps.h</label>
        <link refid="parrot__neuron__ps_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>stdp_nn_pre_centered_synapse.h</label>
        <link refid="stdp__nn__pre__centered__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>poisson_generator_ps.h</label>
        <link refid="poisson__generator__ps_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>inhomogeneous_poisson_generator.cpp</label>
        <link refid="inhomogeneous__poisson__generator_8cpp"/>
      </node>
      <node id="165">
        <label>urbanczik_synapse.h</label>
        <link refid="urbanczik__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>stdp_synapse.h</label>
        <link refid="stdp__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>rate_connection_instantaneous.h</label>
        <link refid="rate__connection__instantaneous_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>ht_synapse.h</label>
        <link refid="ht__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>volume_transmitter.cpp</label>
        <link refid="volume__transmitter_8cpp"/>
      </node>
      <node id="78">
        <label>sigmoid_rate_gg_1998.h</label>
        <link refid="sigmoid__rate__gg__1998_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ginzburg_neuron.cpp</label>
        <link refid="ginzburg__neuron_8cpp"/>
      </node>
      <node id="236">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>spin_detector.h</label>
        <link refid="spin__detector_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>modelsmodule.h</label>
        <link refid="modelsmodule_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>stdp_synapse_hom.cpp</label>
        <link refid="stdp__synapse__hom_8cpp"/>
      </node>
      <node id="68">
        <label>iaf_psc_exp_multisynapse.cpp</label>
        <link refid="iaf__psc__exp__multisynapse_8cpp"/>
      </node>
      <node id="84">
        <label>rate_transformer_node_impl.h</label>
        <link refid="rate__transformer__node__impl_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>pulsepacket_generator.h</label>
        <link refid="pulsepacket__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="198">
        <label>random_manager.cpp</label>
        <link refid="random__manager_8cpp"/>
      </node>
      <node id="88">
        <label>stdp_dopamine_synapse.cpp</label>
        <link refid="stdp__dopamine__synapse_8cpp"/>
      </node>
      <node id="33">
        <label>spike_dilutor.cpp</label>
        <link refid="spike__dilutor_8cpp"/>
      </node>
      <node id="226">
        <label>stimulation_device.cpp</label>
        <link refid="stimulation__device_8cpp"/>
      </node>
      <node id="111">
        <label>iaf_psc_alpha.h</label>
        <link refid="iaf__psc__alpha_8h"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>iaf_psc_alpha_multisynapse.cpp</label>
        <link refid="iaf__psc__alpha__multisynapse_8cpp"/>
      </node>
      <node id="89">
        <label>weight_recorder.h</label>
        <link refid="weight__recorder_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
      <node id="65">
        <label>iaf_psc_delta_ps.cpp</label>
        <link refid="iaf__psc__delta__ps_8cpp"/>
      </node>
      <node id="188">
        <label>model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="92">
        <label>clopath_archiving_node.cpp</label>
        <link refid="clopath__archiving__node_8cpp"/>
      </node>
      <node id="184">
        <label>event.cpp</label>
        <link refid="event_8cpp"/>
      </node>
      <node id="235">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>spike_recorder.h</label>
        <link refid="spike__recorder_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>conn_parameter.cpp</label>
        <link refid="conn__parameter_8cpp"/>
      </node>
      <node id="102">
        <label>dc_generator.h</label>
        <link refid="dc__generator_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>ring_buffer.h</label>
        <link refid="ring__buffer_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>binary_neuron.h</label>
        <link refid="binary__neuron_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>sp_manager.cpp</label>
        <link refid="sp__manager_8cpp"/>
      </node>
      <node id="93">
        <label>conn_builder.cpp</label>
        <link refid="conn__builder_8cpp"/>
      </node>
      <node id="154">
        <label>stdp_synapse_facetshw_hom.h</label>
        <link refid="stdp__synapse__facetshw__hom_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>nestmodule.cpp</label>
        <link refid="nestmodule_8cpp"/>
      </node>
      <node id="94">
        <label>conn_builder_impl.h</label>
        <link refid="conn__builder__impl_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>cont_delay_synapse_impl.h</label>
        <link refid="cont__delay__synapse__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>izhikevich.h</label>
        <link refid="izhikevich_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>connection_creator.cpp</label>
        <link refid="connection__creator_8cpp"/>
      </node>
      <node id="107">
        <label>gif_psc_exp_multisynapse.h</label>
        <link refid="gif__psc__exp__multisynapse_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>static_synapse.h</label>
        <link refid="static__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>recording_backend_screen.cpp</label>
        <link refid="recording__backend__screen_8cpp"/>
      </node>
      <node id="174">
        <label>spatial.h</label>
        <link refid="spatial_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>vp_manager.cpp</label>
        <link refid="vp__manager_8cpp"/>
      </node>
      <node id="206">
        <label>nest_impl.h</label>
        <link refid="nest__impl_8h"/>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>connection_creator.h</label>
        <link refid="connection__creator_8h"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>gif_psc_exp.cpp</label>
        <link refid="gif__psc__exp_8cpp"/>
      </node>
      <node id="216">
        <label>cm_compartmentcurrents.h</label>
        <link refid="cm__compartmentcurrents_8h"/>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>recording_device.cpp</label>
        <link refid="recording__device_8cpp"/>
      </node>
      <node id="141">
        <label>sinusoidal_poisson_generator.h</label>
        <link refid="sinusoidal__poisson__generator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>sigmoid_rate_gg_1998.cpp</label>
        <link refid="sigmoid__rate__gg__1998_8cpp"/>
      </node>
      <node id="13">
        <label>erfc_neuron.cpp</label>
        <link refid="erfc__neuron_8cpp"/>
      </node>
      <node id="125">
        <label>mip_generator.h</label>
        <link refid="mip__generator_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>mat2_psc_exp.cpp</label>
        <link refid="mat2__psc__exp_8cpp"/>
      </node>
      <node id="70">
        <label>iaf_psc_exp_ps_lossless.cpp</label>
        <link refid="iaf__psc__exp__ps__lossless_8cpp"/>
      </node>
      <node id="204">
        <label>target_table_devices_impl.h</label>
        <link refid="target__table__devices__impl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ginzburg_neuron.h</label>
        <link refid="ginzburg__neuron_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>iaf_psc_alpha_multisynapse.h</label>
        <link refid="iaf__psc__alpha__multisynapse_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>inhomogeneous_poisson_generator.h</label>
        <link refid="inhomogeneous__poisson__generator_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>gamma_sup_generator.cpp</label>
        <link refid="gamma__sup__generator_8cpp"/>
      </node>
      <node id="85">
        <label>bernoulli_synapse.h</label>
        <link refid="bernoulli__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>tsodyks2_synapse.h</label>
        <link refid="tsodyks2__synapse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sort.h</label>
        <link refid="sort_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>pp_psc_delta.cpp</label>
        <link refid="pp__psc__delta_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classbv__iterator" prot="public">bv_iterator</innerclass>
    <innerclass refid="classBlockVector" prot="public">BlockVector</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int block_size_shift</definition>
        <argsstring></argsstring>
        <name>block_size_shift</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para>max_block_size = 2^block_size_shift </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" line="39" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" bodystart="39" bodyend="-1"/>
        <referencedby refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" compoundref="block__vector_8h" startline="348" endline="355">BlockVector&lt; value_type_ &gt;::operator[]</referencedby>
      </memberdef>
      <memberdef kind="variable" id="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int max_block_size</definition>
        <argsstring></argsstring>
        <name>max_block_size</name>
        <initializer>= 1L &lt;&lt; <ref refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" kindref="member">block_size_shift</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" line="40" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="classBlockVector_1add5396df6738cca94eeb0627ba1bce37" compoundref="block__vector_8h" startline="323" endline="334">BlockVector&lt; value_type_ &gt;::BlockVector</referencedby>
        <referencedby refid="classBlockVector_1a498793455f3c9cc74e8eded345fa857f" compoundref="block__vector_8h" startline="415" endline="425">BlockVector&lt; value_type_ &gt;::clear</referencedby>
        <referencedby refid="classBlockVector_1a96fdf65b807b7fbca9cb0127fb12829c" compoundref="block__vector_8h" startline="446" endline="495">BlockVector&lt; value_type_ &gt;::erase</referencedby>
        <referencedby refid="classBlockVector_1a8454f2d2d53fdcebe5eb0bc0df8f5df8" compoundref="block__vector_8h" startline="523" endline="526">BlockVector&lt; value_type_ &gt;::get_max_block_size</referencedby>
        <referencedby refid="namespacevector__util_1a86a3ccd6047f1233748c2c0bb0ba8e2b" compoundref="vector__util_8h" startline="34" endline="48">vector_util::grow</referencedby>
        <referencedby refid="classbv__iterator_1ac6b4231d0634279ad1989384748f4461" compoundref="block__vector_8h" startline="729" endline="734">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-</referencedby>
        <referencedby refid="classBlockVector_1ad82291b9c6dba6fd739394a0f401dda0" compoundref="block__vector_8h" startline="398" endline="411">BlockVector&lt; value_type_ &gt;::push_back</referencedby>
        <referencedby refid="classBlockVector_1aa333e4bdeefd6bc28577467c5bdede42" compoundref="block__vector_8h" startline="429" endline="442">BlockVector&lt; value_type_ &gt;::size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="block__vector_8h_1a31576f3db9f62003ee544ddcce20e1b7" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int max_block_size_sub_1</definition>
        <argsstring></argsstring>
        <name>max_block_size_sub_1</name>
        <initializer>= <ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref> - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" line="41" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" bodystart="41" bodyend="-1"/>
        <referencedby refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" compoundref="block__vector_8h" startline="348" endline="355">BlockVector&lt; value_type_ &gt;::operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="block__vector_8h_1af3e7379ed2db89ba915b16b900dd1f32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename value_type_</type>
          </param>
          <param>
            <type>typename ref_</type>
          </param>
          <param>
            <type>typename ptr_</type>
          </param>
        </templateparamlist>
        <type><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&lt; value_type_, ref_, ptr_ &gt;</type>
        <definition>bv_iterator&lt; value_type_, ref_, ptr_ &gt; operator+</definition>
        <argsstring>(typename bv_iterator&lt; value_type_, ref_, ptr_ &gt;::difference_type n, bv_iterator&lt; value_type_, ref_, ptr_ &gt; &amp;x)</argsstring>
        <name>operator+</name>
        <param>
          <type>typename <ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&lt; value_type_, ref_, ptr_ &gt;::difference_type</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&lt; value_type_, ref_, ptr_ &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" line="816" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h" bodystart="816" bodyend="820"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>block_vector.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BLOCK_VECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCK_VECTOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sliexceptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBlockVector" kindref="compound">BlockVector</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" kindref="member">block_size_shift</ref><sp/>=<sp/>10;<sp/></highlight></codeline>
<codeline lineno="40" refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>=<sp/>1L<sp/>&lt;&lt;<sp/><ref refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" kindref="member">block_size_shift</ref>;</highlight></codeline>
<codeline lineno="41" refid="block__vector_8h_1a31576f3db9f62003ee544ddcce20e1b7" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="block__vector_8h_1a31576f3db9f62003ee544ddcce20e1b7" kindref="member">max_block_size_sub_1</ref><sp/>=<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="52" refid="classbv__iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBlockVector" kindref="compound">BlockVector</ref>&lt;<sp/>value_type_<sp/>&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Making<sp/>all<sp/>templated<sp/>iterators<sp/>friends<sp/>to<sp/>allow<sp/>converting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator<sp/>to<sp/>const_iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="59" refid="classbv__iterator_1aad43d00bc293ffbd9acf6f34c018d112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cv_value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="63" refid="classbv__iterator_1ade3dece421fd39c2a86f59c9f54b7d62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iter_</ref><sp/>=<sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, cv_value_type_&amp;, cv_value_type_* &gt;</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>*<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>;</highlight></codeline>
<codeline lineno="68" refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;<ref refid="classbv__iterator" kindref="compound">::const_iterator</ref><sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>;</highlight></codeline>
<codeline lineno="70" refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>;</highlight></codeline>
<codeline lineno="72" refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75" refid="classbv__iterator_1adb257f7c2e78a1acb310d861197c31ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classbv__iterator" kindref="compound">iter_&lt; value_type_ &gt;</ref>;</highlight></codeline>
<codeline lineno="76" refid="classbv__iterator_1a84748eefef545f1c095f3b8d40bfdc34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="classbv__iterator" kindref="compound">iter_&lt; const value_type_ &gt;</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classbv__iterator_1a02080e45873e1851d6d7fdad1f6ad7cb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a02080e45873e1851d6d7fdad1f6ad7cb" kindref="member">iterator_category</ref><sp/>=<sp/>std::random_access_iterator_tag;</highlight></codeline>
<codeline lineno="79" refid="classbv__iterator_1a13f026e3e592af583a476e25791b3b25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a13f026e3e592af583a476e25791b3b25" kindref="member">value_type</ref><sp/>=<sp/>value_type_;</highlight></codeline>
<codeline lineno="80" refid="classbv__iterator_1a157938917a1ac41d9f4d0c3ceb408d14" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a157938917a1ac41d9f4d0c3ceb408d14" kindref="member">pointer</ref><sp/>=<sp/>ptr_;</highlight></codeline>
<codeline lineno="81" refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">reference</ref><sp/>=<sp/>ref_;</highlight></codeline>
<codeline lineno="82" refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a20a64bccc5cd6f40926792e754c3c3d8" kindref="member">BlockVector&lt; value_type &gt;::difference_type</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classbv__iterator_1a32fad25cf0001e66e305dea01ec15ecf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a32fad25cf0001e66e305dea01ec15ecf" kindref="member">bv_iterator</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classbv__iterator_1ab248d01627c0719d1606e5f30f8435b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ab248d01627c0719d1606e5f30f8435b2" kindref="member">bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classbv__iterator_1ac5b780ec1410581fcf19e17180cafe16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1ac5b780ec1410581fcf19e17180cafe16" kindref="member">bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classbv__iterator_1ad4c0a05fef4554a8edbaf49b886c14aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1ad4c0a05fef4554a8edbaf49b886c14aa" kindref="member">bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>*,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;::<ref refid="classbv__iterator" kindref="compound">const_iterator</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/><ref refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" kindref="member">operator++</ref>();</highlight></codeline>
<codeline lineno="114" refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/><ref refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" kindref="member">operator--</ref>();</highlight></codeline>
<codeline lineno="115" refid="classbv__iterator_1ae38e248649acc7766d8a71f6d4139e4d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/><ref refid="classbv__iterator_1ae38e248649acc7766d8a71f6d4139e4d" kindref="member">operator+=</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>);</highlight></codeline>
<codeline lineno="116" refid="classbv__iterator_1a34b205461c0df4aaf8d139ebe9045a92" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/><ref refid="classbv__iterator_1a34b205461c0df4aaf8d139ebe9045a92" kindref="member">operator-=</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>);</highlight></codeline>
<codeline lineno="117" refid="classbv__iterator_1ab456d75b355ea4d748dbb15e765c6812" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/><ref refid="classbv__iterator_1ab456d75b355ea4d748dbb15e765c6812" kindref="member">operator+</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118" refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/><ref refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" kindref="member">operator-</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119" refid="classbv__iterator_1a3a7e75de92875778e6a6b868ed1422db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/><ref refid="classbv__iterator_1a3a7e75de92875778e6a6b868ed1422db" kindref="member">operator++</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="120" refid="classbv__iterator_1a008c93283f6ed2e1948ecc793e497d93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/><ref refid="classbv__iterator_1a008c93283f6ed2e1948ecc793e497d93" kindref="member">operator--</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121" refid="classbv__iterator_1a7cb6eab64ae784b7b1efdeae585399a7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">reference</ref><sp/><ref refid="classbv__iterator_1a7cb6eab64ae784b7b1efdeae585399a7" kindref="member">operator*</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122" refid="classbv__iterator_1a90b3b415cdc4e29c049fbc7a0bbd3b78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a157938917a1ac41d9f4d0c3ceb408d14" kindref="member">pointer</ref><sp/><ref refid="classbv__iterator_1a90b3b415cdc4e29c049fbc7a0bbd3b78" kindref="member">operator-&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123" refid="classbv__iterator_1ac6b4231d0634279ad1989384748f4461" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/><ref refid="classbv__iterator_1ac6b4231d0634279ad1989384748f4461" kindref="member">operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124" refid="classbv__iterator_1a7b38769e1e7dfbf862e208a649783e30" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/><ref refid="classbv__iterator_1a7b38769e1e7dfbf862e208a649783e30" kindref="member">operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classbv__iterator_1a5cfaa33336b775a7b55cc1fec066109d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/><ref refid="classbv__iterator_1a5cfaa33336b775a7b55cc1fec066109d" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classbv__iterator_1ab7af0fa45e8ec97a1c6bb6c46604b936" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">reference</ref><sp/><ref refid="classbv__iterator_1ab7af0fa45e8ec97a1c6bb6c46604b936" kindref="member">operator[]</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classbv__iterator_1a2f7db919cab7b26330a0f5cbd8f13839" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a2f7db919cab7b26330a0f5cbd8f13839" kindref="member">operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131" refid="classbv__iterator_1adb48b380cff065ce684738209ef86bce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1adb48b380cff065ce684738209ef86bce" kindref="member">operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132" refid="classbv__iterator_1ac6568a04b0a1d3f14cba888acd35ecac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ac6568a04b0a1d3f14cba888acd35ecac" kindref="member">operator&lt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133" refid="classbv__iterator_1aec8a5df3fcc15c9a7b1670e02abba637" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1aec8a5df3fcc15c9a7b1670e02abba637" kindref="member">operator&gt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134" refid="classbv__iterator_1a03acb2dac679d0a51aa14d453fadc1ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a03acb2dac679d0a51aa14d453fadc1ff" kindref="member">operator&lt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135" refid="classbv__iterator_1aea79c796aa04e131c8cc6587944d2a15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1aea79c796aa04e131c8cc6587944d2a15" kindref="member">operator&gt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141" refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/><ref refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" kindref="member">const_cast_</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="155" refid="classBlockVector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classBlockVector" kindref="compound">BlockVector</ref></highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cv_value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="158" refid="classBlockVector_1aad43d00bc293ffbd9acf6f34c018d112" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161" refid="classBlockVector_1abb9ecb9ec19a6aac6a38d69358a83a7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1abb9ecb9ec19a6aac6a38d69358a83a7f" kindref="member">value_type</ref><sp/>=<sp/>value_type_;</highlight></codeline>
<codeline lineno="162" refid="classBlockVector_1a20a64bccc5cd6f40926792e754c3c3d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a20a64bccc5cd6f40926792e754c3c3d8" kindref="member">difference_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type<sp/>&gt;::difference_type;</highlight></codeline>
<codeline lineno="163" refid="classBlockVector_1a5cd3509fb777a6530de988917a093e16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a5cd3509fb777a6530de988917a093e16" kindref="member">const_reference</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1abb9ecb9ec19a6aac6a38d69358a83a7f" kindref="member">value_type</ref>&amp;;</highlight></codeline>
<codeline lineno="164" refid="classBlockVector_1afed36b9cfecd06939fb7639bb82cca5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1afed36b9cfecd06939fb7639bb82cca5a" kindref="member">const_pointer</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1abb9ecb9ec19a6aac6a38d69358a83a7f" kindref="member">value_type</ref>*;</highlight></codeline>
<codeline lineno="165" refid="classBlockVector_1ae5effb5c804e7e8496720a4c3eaff540" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/>=<sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, value_type_&amp;, value_type_* &gt;</ref>;</highlight></codeline>
<codeline lineno="166" refid="classBlockVector_1a14c04d109c2cc797607609f02ef4fb68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>=<sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, const value_type_&amp;, const value_type_* &gt;</ref>;</highlight></codeline>
<codeline lineno="167" refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">reverse_iterator</ref><sp/>=<sp/>std::reverse_iterator&lt;<sp/>iterator<sp/>&gt;;</highlight></codeline>
<codeline lineno="168" refid="classBlockVector_1aa6690730feb991daa9155ad2b42436b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1aa6690730feb991daa9155ad2b42436b1" kindref="member">const_reverse_iterator</ref><sp/>=<sp/>std::reverse_iterator&lt;<sp/>const_iterator<sp/>&gt;;</highlight></codeline>
<codeline lineno="169" refid="classBlockVector_1a268026b46bbe20a304b8ebd8bf9c321d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a268026b46bbe20a304b8ebd8bf9c321d" kindref="member">size_type</ref><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" kindref="member">BlockVector</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classBlockVector_1add5396df6738cca94eeb0627ba1bce37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1add5396df6738cca94eeb0627ba1bce37" kindref="member">BlockVector</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classBlockVector_1ade81adc99ae5d76598bad804c18e0a19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1ade81adc99ae5d76598bad804c18e0a19" kindref="member">BlockVector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="187" refid="classBlockVector_1aa4b5ed3dccd4c850e9cc029403e81eae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1aa4b5ed3dccd4c850e9cc029403e81eae" kindref="member">~BlockVector</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" refkind="member"><highlight class="normal"><sp/><sp/>value_type_&amp;<sp/><ref refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" kindref="member">operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classBlockVector_1a1d16aa6a8186f0940b57967976153d31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type_&amp;<sp/><ref refid="classBlockVector_1a1d16aa6a8186f0940b57967976153d31" kindref="member">operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/><ref refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classBlockVector_1a15acaff2a7b6c8282b4af791ce026898" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="classBlockVector_1a15acaff2a7b6c8282b4af791ce026898" kindref="member">begin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classBlockVector_1a794af8153625e4c925137afa010b2864" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/><ref refid="classBlockVector_1a794af8153625e4c925137afa010b2864" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classBlockVector_1a7834c4e8d651a748c6b47e0a854300a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/><ref refid="classBlockVector_1a7834c4e8d651a748c6b47e0a854300a3" kindref="member">end</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classBlockVector_1ad82291b9c6dba6fd739394a0f401dda0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1ad82291b9c6dba6fd739394a0f401dda0" kindref="member">push_back</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type_&amp;<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classBlockVector_1a498793455f3c9cc74e8eded345fa857f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a498793455f3c9cc74e8eded345fa857f" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="classBlockVector_1aa333e4bdeefd6bc28577467c5bdede42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1aa333e4bdeefd6bc28577467c5bdede42" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="classBlockVector_1a96fdf65b807b7fbca9cb0127fb12829c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/><ref refid="classBlockVector_1a96fdf65b807b7fbca9cb0127fb12829c" kindref="member">erase</ref>(<sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref>,<sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="classBlockVector_1a6b8e722a3ddbf55b23da71cb663ed9c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a6b8e722a3ddbf55b23da71cb663ed9c1" kindref="member">print_blocks</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classBlockVector_1a8454f2d2d53fdcebe5eb0bc0df8f5df8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a8454f2d2d53fdcebe5eb0bc0df8f5df8" kindref="member">get_max_block_size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classBlockVector_1a64c3724a8edb24850f4361e2ffbab13a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1a268026b46bbe20a304b8ebd8bf9c321d" kindref="member">size_type</ref><sp/><ref refid="classBlockVector_1a64c3724a8edb24850f4361e2ffbab13a" kindref="member">max_size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classBlockVector_1a4854eb48d53f21c063f40fd370964c3f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">reverse_iterator</ref><sp/><ref refid="classBlockVector_1a4854eb48d53f21c063f40fd370964c3f" kindref="member">rbegin</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classBlockVector_1affacf188cbf47c29adb6f01e5428e46e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">reverse_iterator</ref><sp/><ref refid="classBlockVector_1affacf188cbf47c29adb6f01e5428e46e" kindref="member">rbegin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classBlockVector_1a4f96764eee12944de5e3e302a61bc89e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">reverse_iterator</ref><sp/><ref refid="classBlockVector_1a4f96764eee12944de5e3e302a61bc89e" kindref="member">rend</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="classBlockVector_1a19cc4542033c83f04640cac2a8ea61c5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">reverse_iterator</ref><sp/><ref refid="classBlockVector_1a19cc4542033c83f04640cac2a8ea61c5" kindref="member">rend</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307" refid="classBlockVector_1aa6fe4c7e1c51cd19c20519b193fc6afb" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;<sp/><ref refid="classBlockVector_1aa6fe4c7e1c51cd19c20519b193fc6afb" kindref="member">blockmap_</ref>;</highlight></codeline>
<codeline lineno="308" refid="classBlockVector_1a0ac8d780c950c2e755d595d8b5743979" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref><sp/><ref refid="classBlockVector_1a0ac8d780c950c2e755d595d8b5743979" kindref="member">finish_</ref>;<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal">};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockVector<sp/>method<sp/>implementation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="314"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="316" refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" kindref="member">BlockVector&lt; value_type_ &gt;::BlockVector</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>:<sp/>blockmap_(<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;(<sp/>1,<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>value_type_<sp/>&gt;(<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>,<sp/>finish_(<sp/>begin()<sp/>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="323" refid="classBlockVector_1add5396df6738cca94eeb0627ba1bce37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" kindref="member">BlockVector&lt; value_type_ &gt;::BlockVector</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>:<sp/>blockmap_(<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;(<sp/>1,<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>value_type_<sp/>&gt;(<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>,<sp/>finish_(<sp/>begin()<sp/>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_blocks_needed<sp/>=<sp/>std::ceil(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)<sp/>/<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_blocks_needed<sp/>-<sp/>1;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBlockVector_1aa6fe4c7e1c51cd19c20519b193fc6afb" kindref="member">blockmap_</ref>.emplace_back(<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1a0ac8d780c950c2e755d595d8b5743979" kindref="member">finish_</ref><sp/>=<sp/><ref refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" kindref="member">begin</ref>();<sp/></highlight><highlight class="comment">//<sp/>Because<sp/>the<sp/>blockmap<sp/>has<sp/>changed<sp/>we<sp/>need<sp/>to<sp/>recreate<sp/>the<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="classBlockVector_1a0ac8d780c950c2e755d595d8b5743979" kindref="member">finish_</ref><sp/>+=<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="337" refid="classBlockVector_1ade81adc99ae5d76598bad804c18e0a19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1ab6ff9591ac3d1b2a0bb5c214693c806a" kindref="member">BlockVector&lt; value_type_ &gt;::BlockVector</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>:<sp/>blockmap_(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.blockmap_<sp/>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>,<sp/>finish_(<sp/>begin()<sp/>+<sp/>(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.finish_<sp/>-<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.begin()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1aa4b5ed3dccd4c850e9cc029403e81eae" kindref="member">BlockVector&lt; value_type_ &gt;::~BlockVector</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>value_type_&amp;</highlight></codeline>
<codeline lineno="348" refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" kindref="member">BlockVector&lt; value_type_ &gt;::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>bitwise<sp/>operations<sp/>to<sp/>efficiently<sp/>map<sp/>the<sp/>index<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>block<sp/>and<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block_index<sp/>=<sp/>pos<sp/>&gt;&gt;<sp/><ref refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" kindref="member">block_size_shift</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element_index<sp/>=<sp/>pos<sp/>&amp;<sp/><ref refid="block__vector_8h_1a31576f3db9f62003ee544ddcce20e1b7" kindref="member">max_block_size_sub_1</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockmap_[<sp/>block_index<sp/>][<sp/>element_index<sp/>];</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type_&amp;</highlight></codeline>
<codeline lineno="359" refid="classBlockVector_1a1d16aa6a8186f0940b57967976153d31" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1aa493172bf72595c86aeb02fa52b81e20" kindref="member">BlockVector&lt; value_type_ &gt;::operator[]</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="360"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>bitwise<sp/>operations<sp/>to<sp/>efficiently<sp/>map<sp/>the<sp/>index<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>block<sp/>and<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block_index<sp/>=<sp/>pos<sp/>&gt;&gt;<sp/><ref refid="block__vector_8h_1adc5eb846ba1507c9581828f17f49e347" kindref="member">block_size_shift</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element_index<sp/>=<sp/>pos<sp/>&amp;<sp/><ref refid="block__vector_8h_1a31576f3db9f62003ee544ddcce20e1b7" kindref="member">max_block_size_sub_1</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockmap_[<sp/>block_index<sp/>][<sp/>element_index<sp/>];</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">BlockVector&lt; value_type_ &gt;::iterator</ref></highlight></codeline>
<codeline lineno="370" refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" kindref="member">BlockVector&lt; value_type_ &gt;::begin</ref>()</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1adb257f7c2e78a1acb310d861197c31ec" kindref="member">iterator</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">BlockVector&lt; value_type_ &gt;::const_iterator</ref></highlight></codeline>
<codeline lineno="377" refid="classBlockVector_1a15acaff2a7b6c8282b4af791ce026898" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a2f29f4d518506752e5e5ee9940e6365a" kindref="member">BlockVector&lt; value_type_ &gt;::begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="378"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a84748eefef545f1c095f3b8d40bfdc34" kindref="member">const_iterator</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">BlockVector&lt; value_type_ &gt;::iterator</ref></highlight></codeline>
<codeline lineno="384" refid="classBlockVector_1a794af8153625e4c925137afa010b2864" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a794af8153625e4c925137afa010b2864" kindref="member">BlockVector&lt; value_type_ &gt;::end</ref>()</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finish_;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">BlockVector&lt; value_type_ &gt;::const_iterator</ref></highlight></codeline>
<codeline lineno="391" refid="classBlockVector_1a7834c4e8d651a748c6b47e0a854300a3" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a794af8153625e4c925137afa010b2864" kindref="member">BlockVector&lt; value_type_ &gt;::end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="392"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finish_;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classBlockVector_1ad82291b9c6dba6fd739394a0f401dda0" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1ad82291b9c6dba6fd739394a0f401dda0" kindref="member">BlockVector&lt; value_type_ &gt;::push_back</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type_&amp;<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>the<sp/>last<sp/>element<sp/>in<sp/>the<sp/>current<sp/>block,<sp/>add<sp/>another<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>finish_.block_it_<sp/>==<sp/>finish_.current_block_end_<sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>get<sp/>the<sp/>current<sp/>position<sp/>here,<sp/>then<sp/>recreate<sp/>the<sp/>iterator<sp/>after<sp/>we<sp/>extend<sp/>the<sp/>blockmap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>after<sp/>the<sp/>blockmap<sp/>is<sp/>changed<sp/>the<sp/>iterator<sp/>becomes<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current_block<sp/>=<sp/>finish_.block_vector_it_<sp/>-<sp/>finish_.block_vector_-&gt;blockmap_.begin();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>blockmap_.emplace_back(<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>finish_.block_vector_it_<sp/>=<sp/>finish_.block_vector_-&gt;blockmap_.begin()<sp/>+<sp/>current_block;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>*finish_<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>++finish_;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classBlockVector_1a498793455f3c9cc74e8eded345fa857f" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a498793455f3c9cc74e8eded345fa857f" kindref="member">BlockVector&lt; value_type_ &gt;::clear</ref>()</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>blockmap_.begin();<sp/>it<sp/>!=<sp/>blockmap_.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;clear();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>blockmap_.clear();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>first<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>blockmap_.emplace_back(<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>finish_<sp/>=<sp/>begin();</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="classBlockVector_1aa333e4bdeefd6bc28577467c5bdede42" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1aa333e4bdeefd6bc28577467c5bdede42" kindref="member">BlockVector&lt; value_type_ &gt;::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="430"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>element_index;<sp/></highlight><highlight class="comment">//<sp/>Where<sp/>we<sp/>are<sp/>in<sp/>the<sp/>current<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>finish_.block_vector_it_<sp/>&gt;=<sp/>blockmap_.end()<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>block<sp/>is<sp/>completely<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>element_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>element_index<sp/>=<sp/>finish_.block_it_<sp/>-<sp/>finish_.block_vector_it_-&gt;begin();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>finish_.block_vector_it_<sp/>-<sp/>finish_.block_vector_-&gt;blockmap_.begin()<sp/>)<sp/>*<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>+<sp/>element_index;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">BlockVector&lt; value_type_ &gt;::iterator</ref></highlight></codeline>
<codeline lineno="446" refid="classBlockVector_1a96fdf65b807b7fbca9cb0127fb12829c" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a96fdf65b807b7fbca9cb0127fb12829c" kindref="member">BlockVector&lt; value_type_ &gt;::erase</ref>(<sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>first,<sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>last<sp/>)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>assert(<sp/>first.<ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>assert(<sp/>last.<ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref><sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>assert(<sp/>last<sp/>&lt;<sp/>finish_<sp/>or<sp/>last<sp/>==<sp/>finish_<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>==<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1adb257f7c2e78a1acb310d861197c31ec" kindref="member">iterator</ref>(<sp/>first.<ref refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" kindref="member">const_cast_</ref>()<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>==<sp/>begin()<sp/>and<sp/>last<sp/>==<sp/>end()<sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a5a0ca6f3568e7ffc59143a1e1a31d790" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>repl_it<sp/>=<sp/>first.<ref refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" kindref="member">const_cast_</ref>();<sp/></highlight><highlight class="comment">//<sp/>Iterator<sp/>for<sp/>elements<sp/>to<sp/>be<sp/>replaced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element<sp/>=<sp/>last;<sp/>element<sp/>!=<sp/>end();<sp/>++element<sp/>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*repl_it<sp/>=<sp/>std::move(<sp/>*element<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++repl_it;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>that<sp/>repl_it<sp/>ends<sp/>up<sp/>in<sp/>is<sp/>the<sp/>new<sp/>final<sp/>block.<sp/>Using<sp/>iterator<sp/>arithmetics<sp/>to<sp/>avoid<sp/>issues<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>new_final_block<sp/>=<sp/>blockmap_[<sp/>repl_it.block_vector_it_<sp/>-<sp/>blockmap_.begin()<sp/>];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>the<sp/>arithmetic<sp/>says<sp/>that<sp/>we<sp/>first<sp/>subtract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new_final_block.begin(),<sp/>then<sp/>add<sp/>it<sp/>again<sp/>(which<sp/>seems<sp/>unnecessary).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>what<sp/>we<sp/>really<sp/>do<sp/>is<sp/>extracting<sp/>the<sp/>element<sp/>index<sp/>of<sp/>repl_it,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fast-forwarding<sp/>new_final_block.begin()<sp/>to<sp/>that<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>element_index<sp/>=<sp/>repl_it.block_it_<sp/>-<sp/>new_final_block.begin();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>everything<sp/>after<sp/>the<sp/>replaced<sp/>elements<sp/>in<sp/>the<sp/>current<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>new_final_block.erase(<sp/>new_final_block.begin()<sp/>+<sp/>element_index,<sp/>new_final_block.end()<sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refill<sp/>the<sp/>erased<sp/>elements<sp/>in<sp/>the<sp/>final<sp/>block<sp/>with<sp/>default-initialised</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_default_init<sp/>=<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>-<sp/>new_final_block.size();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_default_init;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_final_block.emplace_back();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>new_final_block.size()<sp/>==<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>all<sp/>subsequent<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>blockmap_.erase(<sp/>repl_it.block_vector_it_<sp/>+<sp/>1,<sp/>blockmap_.end()<sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>new<sp/>finish_<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>finish_<sp/>=<sp/>repl_it;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>iterator<sp/>which<sp/>is<sp/>to<sp/>be<sp/>returned<sp/>is<sp/>located<sp/>where<sp/>the<sp/>first<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>the<sp/>last<sp/>deleted<sp/>element<sp/>will<sp/>be<sp/>after<sp/>filling<sp/>the<sp/>erased<sp/>elements,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>the<sp/>position<sp/>of<sp/>the<sp/>first<sp/>deleted<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first.<ref refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" kindref="member">const_cast_</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="classBlockVector_1a6b8e722a3ddbf55b23da71cb663ed9c1" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a6b8e722a3ddbf55b23da71cb663ed9c1" kindref="member">BlockVector&lt; value_type_ &gt;::print_blocks</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="500"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;this:<sp/>\t\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;finish<sp/>block_vector:<sp/>\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>finish_.block_vector_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Blockmap<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>blockmap_.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==============================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>seq_iter<sp/>=<sp/>begin();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block_index<sp/>=<sp/>0;<sp/>block_index<sp/>!=<sp/>blockmap_.size()<sp/>and<sp/>seq_iter<sp/>!=<sp/>end();<sp/>++block_index<sp/>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----------------------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>block<sp/>=<sp/>blockmap_[<sp/>block_index<sp/>];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Block<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>block.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block_it<sp/>=<sp/>block.begin();<sp/>block_it<sp/>!=<sp/>block.end()<sp/>and<sp/>seq_iter<sp/>!=<sp/>end();<sp/>++block_it<sp/>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>*block_it<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++seq_iter;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n----------------------------------------------\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==============================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="classBlockVector_1a8454f2d2d53fdcebe5eb0bc0df8f5df8" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a8454f2d2d53fdcebe5eb0bc0df8f5df8" kindref="member">BlockVector&lt; value_type_ &gt;::get_max_block_size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="524"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1a268026b46bbe20a304b8ebd8bf9c321d" kindref="member">BlockVector&lt; value_type_ &gt;::size_type</ref></highlight></codeline>
<codeline lineno="530" refid="classBlockVector_1a64c3724a8edb24850f4361e2ffbab13a" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a64c3724a8edb24850f4361e2ffbab13a" kindref="member">BlockVector&lt; value_type_ &gt;::max_size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="531"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplemented(<sp/></highlight><highlight class="stringliteral">&quot;BlockVector<sp/>max_size()<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">BlockVector&lt; value_type_ &gt;::reverse_iterator</ref></highlight></codeline>
<codeline lineno="537" refid="classBlockVector_1a4854eb48d53f21c063f40fd370964c3f" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a4854eb48d53f21c063f40fd370964c3f" kindref="member">BlockVector&lt; value_type_ &gt;::rbegin</ref>()</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplemented(<sp/></highlight><highlight class="stringliteral">&quot;BlockVector<sp/>rbegin()<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">BlockVector&lt; value_type_ &gt;::reverse_iterator</ref></highlight></codeline>
<codeline lineno="544" refid="classBlockVector_1affacf188cbf47c29adb6f01e5428e46e" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a4854eb48d53f21c063f40fd370964c3f" kindref="member">BlockVector&lt; value_type_ &gt;::rbegin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="545"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplemented(<sp/></highlight><highlight class="stringliteral">&quot;BlockVector<sp/>rbegin()<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">BlockVector&lt; value_type_ &gt;::reverse_iterator</ref></highlight></codeline>
<codeline lineno="551" refid="classBlockVector_1a4f96764eee12944de5e3e302a61bc89e" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a4f96764eee12944de5e3e302a61bc89e" kindref="member">BlockVector&lt; value_type_ &gt;::rend</ref>()</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplemented(<sp/></highlight><highlight class="stringliteral">&quot;BlockVector<sp/>rend()<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_<sp/>&gt;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classBlockVector_1af5c8462c772a762c22b0823d23c70a60" kindref="member">BlockVector&lt; value_type_ &gt;::reverse_iterator</ref></highlight></codeline>
<codeline lineno="558" refid="classBlockVector_1a19cc4542033c83f04640cac2a8ea61c5" refkind="member"><highlight class="normal"><ref refid="classBlockVector_1a4f96764eee12944de5e3e302a61bc89e" kindref="member">BlockVector&lt; value_type_ &gt;::rend</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="559"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplemented(<sp/></highlight><highlight class="stringliteral">&quot;BlockVector<sp/>rend()<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockVector<sp/>iterator<sp/>method<sp/>implementation<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="566"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="568" refid="classbv__iterator_1ab248d01627c0719d1606e5f30f8435b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1aad43d00bc293ffbd9acf6f34c018d112" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>&amp;<sp/>block_vector<sp/>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>(<sp/>&amp;block_vector<sp/>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>(<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>-&gt;blockmap_.begin()<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;begin()<sp/>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="577" refid="classbv__iterator_1ac5b780ec1410581fcf19e17180cafe16" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1aad43d00bc293ffbd9acf6f34c018d112" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.<ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref><sp/>)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref>(<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.<ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="586" refid="classbv__iterator_1ad4c0a05fef4554a8edbaf49b886c14aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1aad43d00bc293ffbd9acf6f34c018d112" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::bv_iterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBlockVector" kindref="compound">BlockVector&lt; value_type_ &gt;</ref>*<sp/>block_vector,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;<sp/>&gt;::<ref refid="classbv__iterator" kindref="compound">const_iterator</ref><sp/>block_vector_it,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator<sp/>block_it,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>value_type_<sp/>&gt;::const_iterator<sp/>current_block_end<sp/>)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>(<sp/>block_vector<sp/>)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>(<sp/>block_vector_it<sp/>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>(<sp/>block_it<sp/>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref>(<sp/>current_block_end<sp/>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;</highlight></codeline>
<codeline lineno="599" refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator++</ref>()</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>++<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>==<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>at<sp/>end()<sp/>now,<sp/>we<sp/>are<sp/>outside<sp/>of<sp/>the<sp/>blockmap,<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undefined.<sp/>The<sp/>outer<sp/>iterator<sp/>can<sp/>be<sp/>in<sp/>an<sp/>undefined<sp/>position<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>compare<sp/>as<sp/>safely<sp/>larger<sp/>or<sp/>equal<sp/>to<sp/>end(),<sp/>but<sp/>we<sp/>don&apos;t<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>inner<sp/>iterators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>!=<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>-&gt;blockmap_.end()<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>=<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>=<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;end();</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;</highlight></codeline>
<codeline lineno="620" refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator--</ref>()</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>still<sp/>within<sp/>the<sp/>block,<sp/>we<sp/>can<sp/>just<sp/>decrement<sp/>the<sp/>block<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>we<sp/>need<sp/>to<sp/>switch<sp/>to<sp/>the<sp/>previous<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>!=<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;begin()<sp/>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>!=<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>-&gt;blockmap_.begin()<sp/>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>=<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;end();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>=<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>before<sp/>begin(),<sp/>which<sp/>is<sp/>undefined.<sp/>We<sp/>mark<sp/>this<sp/>by<sp/>moving<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outer<sp/>iterator<sp/>to<sp/>an<sp/>undefined<sp/>position<sp/>that<sp/>will<sp/>compare<sp/>as<sp/>safely<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>begin().<sp/>According<sp/>to<sp/>C++17<sp/>Standard,<sp/>§27.2.6,<sp/>decrementing<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator<sp/>that<sp/>is<sp/>equal<sp/>to<sp/>begin()<sp/>yields<sp/>undefined<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;</highlight></codeline>
<codeline lineno="647" refid="classbv__iterator_1ae38e248649acc7766d8a71f6d4139e4d" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1ae38e248649acc7766d8a71f6d4139e4d" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator+=</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>val<sp/>)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a34b205461c0df4aaf8d139ebe9045a92" kindref="member">operator-=</ref>(<sp/>-val<sp/>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>val;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" kindref="member">operator++</ref>();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;</highlight></codeline>
<codeline lineno="662" refid="classbv__iterator_1a34b205461c0df4aaf8d139ebe9045a92" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a34b205461c0df4aaf8d139ebe9045a92" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-=</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>val<sp/>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>val<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ae38e248649acc7766d8a71f6d4139e4d" kindref="member">operator+=</ref>(<sp/>-val<sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>val;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" kindref="member">operator--</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref></highlight></codeline>
<codeline lineno="677" refid="classbv__iterator_1ab456d75b355ea4d748dbb15e765c6812" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1ab456d75b355ea4d748dbb15e765c6812" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator+</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>val<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="678"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/>tmp<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp<sp/>+=<sp/>val;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref></highlight></codeline>
<codeline lineno="685" refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/>val<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="686"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref><sp/>tmp<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp<sp/>-=<sp/>val;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref></highlight></codeline>
<codeline lineno="693" refid="classbv__iterator_1a3a7e75de92875778e6a6b868ed1422db" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1af21523df031ca76d54ec917e7751e8d1" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator++</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref><sp/>old(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>++(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref></highlight></codeline>
<codeline lineno="702" refid="classbv__iterator_1a008c93283f6ed2e1948ecc793e497d93" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1afb56d8a0e4f5f1ce2ebb4a4d8d743296" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator--</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref><sp/>old(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>--(<sp/>*this<sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::reference</ref></highlight></codeline>
<codeline lineno="711" refid="classbv__iterator_1a7cb6eab64ae784b7b1efdeae585399a7" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a7cb6eab64ae784b7b1efdeae585399a7" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="712"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Using<sp/>const_cast<sp/><sp/>to<sp/>remove<sp/>the<sp/>constness<sp/>isn&apos;t<sp/>the<sp/>most<sp/>elegant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>solution.<sp/>There<sp/>is<sp/>probably<sp/>a<sp/>better<sp/>way<sp/>to<sp/>do<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">reference</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*block_it_<sp/>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a157938917a1ac41d9f4d0c3ceb408d14" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::pointer</ref></highlight></codeline>
<codeline lineno="720" refid="classbv__iterator_1a90b3b415cdc4e29c049fbc7a0bbd3b78" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a90b3b415cdc4e29c049fbc7a0bbd3b78" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="721"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Again,<sp/>using<sp/>const_cast<sp/><sp/>to<sp/>remove<sp/>the<sp/>constness<sp/>isn&apos;t<sp/>the<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>elegant<sp/>solution.<sp/>There<sp/>is<sp/>probably<sp/>a<sp/>better<sp/>way<sp/>to<sp/>do<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a157938917a1ac41d9f4d0c3ceb408d14" kindref="member">pointer</ref><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;(<sp/>*block_it_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::difference_type</ref></highlight></codeline>
<codeline lineno="729" refid="classbv__iterator_1ac6b4231d0634279ad1989384748f4461" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="730"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>this_element_index<sp/>=<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>-<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>other_element_index<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_it_<sp/>-<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_it_-&gt;begin();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>-<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_it_<sp/>)<sp/>*<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>+<sp/>(<sp/>this_element_index<sp/>-<sp/>other_element_index<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::difference_type</ref></highlight></codeline>
<codeline lineno="738" refid="classbv__iterator_1a7b38769e1e7dfbf862e208a649783e30" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a75c09d37db3265d355e5a57513be4a55" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">const_iterator</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="739"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>this_element_index<sp/>=<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>-<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>other_element_index<sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_it_<sp/>-<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_it_-&gt;begin();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>-<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_it_<sp/>)<sp/>*<sp/><ref refid="block__vector_8h_1a9bbc9234c5621a8c3f79e3c1289e5c84" kindref="member">max_block_size</ref><sp/>+<sp/>(<sp/>this_element_index<sp/>-<sp/>other_element_index<sp/>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::iterator</ref>&amp;</highlight></codeline>
<codeline lineno="747" refid="classbv__iterator_1a5cfaa33336b775a7b55cc1fec066109d" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a5cfaa33336b775a7b55cc1fec066109d" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">iterator</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref><sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_vector_it_;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.block_it_;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>=<sp/><ref refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d" kindref="member">other</ref>.current_block_end_;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1a46214444a4dcaedea84028d03a31a4da" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::reference</ref></highlight></codeline>
<codeline lineno="758" refid="classbv__iterator_1ab7af0fa45e8ec97a1c6bb6c46604b936" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1ab7af0fa45e8ec97a1c6bb6c46604b936" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator[]</ref>(<sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">difference_type</ref><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="759"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>+<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765" refid="classbv__iterator_1a2f7db919cab7b26330a0f5cbd8f13839" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a2f7db919cab7b26330a0f5cbd8f13839" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="766"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>==<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>and<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>==<sp/>rhs.<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="classbv__iterator_1adb48b380cff065ce684738209ef86bce" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1adb48b380cff065ce684738209ef86bce" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="773"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>!=<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>or<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>!=<sp/>rhs.<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="778" refid="classbv__iterator_1ac6568a04b0a1d3f14cba888acd35ecac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><ref refid="classbv__iterator_1ac6568a04b0a1d3f14cba888acd35ecac" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator&lt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="780"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>&lt;<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>or<sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>==<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>and<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>&lt;<sp/>rhs.<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="classbv__iterator_1aec8a5df3fcc15c9a7b1670e02abba637" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1aec8a5df3fcc15c9a7b1670e02abba637" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator&gt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="788"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>&gt;<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>or<sp/>(<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>==<sp/>rhs.<ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref><sp/>and<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>&gt;<sp/>rhs.<ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="794" refid="classbv__iterator_1a03acb2dac679d0a51aa14d453fadc1ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><ref refid="classbv__iterator_1a03acb2dac679d0a51aa14d453fadc1ff" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator&lt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="796"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceboost_1_1tuples_1a2428ae10f291fedea3ad9d1a425dcefd" kindref="member">operator&lt;</ref>(<sp/>rhs<sp/>)<sp/>or<sp/><ref refid="namespacenest_1ae5bab62b273991f1db0773ebe4356a4d" kindref="member">operator==</ref>(<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802" refid="classbv__iterator_1aea79c796aa04e131c8cc6587944d2a15" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1aea79c796aa04e131c8cc6587944d2a15" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator&gt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator</ref>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="803"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1aa77bb5d603919e4a7f50ce265e62a707" kindref="member">operator&gt;</ref>(<sp/>rhs<sp/>)<sp/>or<sp/><ref refid="namespacenest_1ae5bab62b273991f1db0773ebe4356a4d" kindref="member">operator==</ref>(<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::iterator</ref></highlight></codeline>
<codeline lineno="809" refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" refkind="member"><highlight class="normal"><ref refid="classbv__iterator_1a3e84ee42a74c2a181d13f20d52d819ca" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::const_cast_</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="810"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1adb257f7c2e78a1acb310d861197c31ec" kindref="member">iterator</ref>(<sp/><ref refid="classbv__iterator_1a688e14150d9a79d08ffee6cf8194157b" kindref="member">block_vector_</ref>,<sp/><ref refid="classbv__iterator_1a266da9bc03b88670e12d4d64bdf86c7a" kindref="member">block_vector_it_</ref>,<sp/><ref refid="classbv__iterator_1aecd4dfcd807e6774b7d2b6c9feb610c9" kindref="member">block_it_</ref>,<sp/><ref refid="classbv__iterator_1a4621519eaa624a7b33d6cf7337740703" kindref="member">current_block_end_</ref><sp/>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>value_type_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ref_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ptr_<sp/>&gt;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref></highlight></codeline>
<codeline lineno="816" refid="classbv__iterator_1afaa77c6b81e6a4a79175d28b42458d9f" refkind="member"><highlight class="normal"><ref refid="block__vector_8h_1af3e7379ed2db89ba915b16b900dd1f32" kindref="member">operator+</ref>(<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classbv__iterator_1ab4ef19c47b948b37c5d7e48d4efc6433" kindref="member">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::difference_type</ref><sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><ref refid="classbv__iterator" kindref="compound">bv_iterator&lt; value_type_, ref_, ptr_ &gt;</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a02ff20012561603c598107af2b48b440" kindref="member">x</ref><sp/>)</highlight></codeline>
<codeline lineno="818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a02ff20012561603c598107af2b48b440" kindref="member">x</ref><sp/>+<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BLOCK_VECTOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/block_vector.h"/>
  </compounddef>
</doxygen>
