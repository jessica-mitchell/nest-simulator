<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1MUSICManager" kind="class" language="C++" prot="public">
    <compoundname>nest::MUSICManager</compoundname>
    <basecompoundref refid="classnest_1_1ManagerInterface" prot="public" virt="non-virtual">nest::ManagerInterface</basecompoundref>
    <includes refid="music__manager_8h" local="no">music_manager.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1MUSICManager_1ab513adb3f93bf77539a70250b44c3971" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79">initialize</reimplements>
        <briefdescription>
<para>Prepare manager for operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, the manager should be completely initialized and &quot;ready for action&quot;.</para>
<para><simplesect kind="note"><para>Initialization of any given manager may depend on other managers having been initialized before. <ref refid="classnest_1_1KernelManager_1aa731562f03c98d8fa67f1d530056ede2" kindref="member">KernelManager::initialize()</ref> is responsible for calling the initialization routines on the specific managers in correct order.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1MUSICManager_1a816f54f62cd473b475d58a3835d5e35b" kindref="member">finalize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="55" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="51" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a816f54f62cd473b475d58a3835d5e35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606">finalize</reimplements>
        <briefdescription>
<para>Take down manager after operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, all dynamic data structures created by the manager shall be deallocated and containers emptied. Plain variables need not be reset.</para>
<para><simplesect kind="note"><para>Finalization of any given manager may depend on other managers not having been finalized yet. <ref refid="classnest_1_1KernelManager_1a9e1cccd4670b1da1f68208afb5e6622f" kindref="member">KernelManager::finalize()</ref> is responsible for calling the initialization routines on the specific managers in correct order, i.e., the opposite order of <ref refid="classnest_1_1MUSICManager_1ab513adb3f93bf77539a70250b44c3971" kindref="member">initialize()</ref> calls.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1MUSICManager_1ab513adb3f93bf77539a70250b44c3971" kindref="member">initialize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="56" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1aaf0d60f082c9d26b25234e83e8865b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="57" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a53f405a0962e10cda856cdeb6b14c7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="58" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a2e0f03b9659da03369561ffe82eb463a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::MUSICManager::MUSICManager</definition>
        <argsstring>()</argsstring>
        <name>MUSICManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="60" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1ae67f33184ee382cdb5d7e3203494c248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::init_music</definition>
        <argsstring>(int *argc, char **argv[])</argsstring>
        <name>init_music</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="62" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a9539cdb90b5fbf84ad1c5c03ef7f5e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::enter_runtime</definition>
        <argsstring>(double h_min_delay)</argsstring>
        <name>enter_runtime</name>
        <param>
          <type>double</type>
          <declname>h_min_delay</declname>
        </param>
        <briefdescription>
<para>Enter the runtime mode. </para>
        </briefdescription>
        <detaileddescription>
<para>This must be done before simulating. After having entered runtime mode ports cannot be published anymore. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h_min_delay</parametername>
</parameternamelist>
<parameterdescription>
<para>is the length of a time slice, after which communication should take place. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="70" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="108" bodyend="110"/>
        <referencedby refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" compoundref="simulation__manager_8cpp" startline="446" endline="509">nest::SimulationManager::prepare</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a5f8f58504d9bcf6a395ae67a77615340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::advance_music_time</definition>
        <argsstring>()</argsstring>
        <name>advance_music_time</name>
        <briefdescription>
<para>Advance the time of music by 1 simulation step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="75" column="8"/>
        <referencedby refid="classnest_1_1SimulationManager_1a4ad2ea77edb56fb13176de0932bac835" compoundref="simulation__manager_8cpp" startline="776" endline="1074">nest::SimulationManager::update_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1MUSICManager_1a56f209579bd0d23b294876cff282c422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::MUSICManager::music_finalize</definition>
        <argsstring>()</argsstring>
        <name>music_finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="77" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.cpp" bodystart="115" bodyend="132"/>
        <references refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" compoundref="numerics_8cpp" startline="72">numerics::e</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulate all calls to MUSIC. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::MUSICManager</label>
        <link refid="classnest_1_1MUSICManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::MUSICManager</label>
        <link refid="classnest_1_1MUSICManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" line="52" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/music_manager.h" bodystart="53" bodyend="191"/>
    <listofallmembers>
      <member refid="classnest_1_1MUSICManager_1a5f8f58504d9bcf6a395ae67a77615340" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>advance_music_time</name></member>
      <member refid="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>change_number_of_threads</name></member>
      <member refid="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>cleanup</name></member>
      <member refid="classnest_1_1MUSICManager_1a9539cdb90b5fbf84ad1c5c03ef7f5e18" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>enter_runtime</name></member>
      <member refid="classnest_1_1MUSICManager_1a816f54f62cd473b475d58a3835d5e35b" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>finalize</name></member>
      <member refid="classnest_1_1MUSICManager_1a53f405a0962e10cda856cdeb6b14c7c7" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>get_status</name></member>
      <member refid="classnest_1_1MUSICManager_1ae67f33184ee382cdb5d7e3203494c248" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>init_music</name></member>
      <member refid="classnest_1_1MUSICManager_1ab513adb3f93bf77539a70250b44c3971" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>initialize</name></member>
      <member refid="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1MUSICManager_1a56f209579bd0d23b294876cff282c422" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>music_finalize</name></member>
      <member refid="classnest_1_1MUSICManager_1a2e0f03b9659da03369561ffe82eb463a" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>MUSICManager</name></member>
      <member refid="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" virt="non-virtual"><scope>nest::MUSICManager</scope><name>operator=</name></member>
      <member refid="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>prepare</name></member>
      <member refid="classnest_1_1MUSICManager_1aaf0d60f082c9d26b25234e83e8865b98" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>set_status</name></member>
      <member refid="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" virt="virtual"><scope>nest::MUSICManager</scope><name>~ManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
