<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="tarrayobj_8cc" kind="file" language="C++">
    <compoundname>tarrayobj.cc</compoundname>
    <includes refid="tarrayobj_8h" local="yes">tarrayobj.h</includes>
    <includes refid="datum_8h" local="yes">datum.h</includes>
    <includes refid="token_8h" local="yes">token.h</includes>
    <incdepgraph>
      <node id="11">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="12">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tarrayobj.cc</label>
        <link refid="tarrayobj_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>config.h</label>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="15">
        <label>deque</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="4">
        <label>typeinfo</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tarrayobj_8cc_1ae99e2f466cbb79c932c211360c214dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const TokenArrayObj &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/tarrayobj.cc" line="682" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/tarrayobj.cc" bodystart="683" bodyend="692"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>tarrayobj.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tarrayobj_8h" kindref="compound">tarrayobj.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datum_8h" kindref="compound">datum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="token_8h" kindref="compound">token.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>assert(<sp/>a<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj_1a3db3812aefaa67070e812b8676f3ebcd" kindref="member">TokenArrayObj::allocations</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classTokenArrayObj_1ad7753029ef94a15fc0e5961caaa4a71d" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1af190faf317305ba4fb9016eba03ebbc2" kindref="member">TokenArrayObj::TokenArrayObj</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc<sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>:<sp/>p(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>,<sp/>begin_of_free_storage(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>,<sp/>end_of_free_storage(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>,<sp/>alloc_block_size(<sp/><ref refid="tarrayobj_8h_1a759ba9d420d15fd0fcf6ce2039d9f2f2" kindref="member">ARRAY_ALLOC_SIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>,<sp/>refs_(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>(<sp/>alloc<sp/>==<sp/>0<sp/>)<sp/>?<sp/>s<sp/>:<sp/>alloc;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">resize</ref>(<sp/>s,<sp/>a,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classTokenArrayObj_1a5bdd6929ed88ecc495ed159fbf9f0a16" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1af190faf317305ba4fb9016eba03ebbc2" kindref="member">TokenArrayObj::TokenArrayObj</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/>p(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>,<sp/>begin_of_free_storage(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>,<sp/>end_of_free_storage(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>,<sp/>alloc_block_size(<sp/><ref refid="tarrayobj_8h_1a759ba9d420d15fd0fcf6ce2039d9f2f2" kindref="member">ARRAY_ALLOC_SIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>,<sp/>refs_(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>a.p<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">resize</ref>(<sp/>a.size(),<sp/>a.alloc_block_size,<sp/><ref refid="classToken" kindref="compound">Token</ref>()<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.p;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>to<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*to++<sp/>=<sp/>*from++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classTokenArrayObj_1a2e4afec72115f3a5a3c5ef42ad2d62cb" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a2e4afec72115f3a5a3c5ef42ad2d62cb" kindref="member">TokenArrayObj::~TokenArrayObj</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classTokenArrayObj_1abc5e26e8edeeca0fdcdba1842b0cccb2" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1abc5e26e8edeeca0fdcdba1842b0cccb2" kindref="member">TokenArrayObj::allocate</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_c,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>resize<sp/>function<sp/>is<sp/>private<sp/>and<sp/>does<sp/>an<sp/>unconditional<sp/>resize,<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>supplied<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>=<sp/>new_a;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>old_s<sp/>=<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>assert(<sp/>new_c<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>assert(<sp/>new_a<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>h<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>[<sp/>new_c<sp/>];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>assert(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t<sp/>!=<sp/><ref refid="classToken" kindref="compound">Token</ref>()<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>hi<sp/>=<sp/>h;<sp/>hi<sp/>&lt;<sp/>h<sp/>+<sp/>new_c;<sp/>++hi<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>*hi<sp/>)<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>=<sp/>h<sp/>+<sp/>new_c;<sp/></highlight><highlight class="comment">//<sp/>[,)<sp/>convention</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/>h<sp/>+<sp/>new_s;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_l;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>old_s<sp/>&lt;<sp/>new_s<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_l<sp/>=<sp/>old_s;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_l<sp/>=<sp/>new_s;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>min_l;<sp/>++i<sp/>)<sp/></highlight><highlight class="comment">//<sp/>copy<sp/>old<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h[<sp/>i<sp/>].move(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123" refid="classTokenStack_1a437e62e0eefb7ab76fd7415679cfcff0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>++<ref refid="classTokenArrayObj_1a3db3812aefaa67070e812b8676f3ebcd" kindref="member">allocations</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">TokenArrayObj::resize</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alloc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>=<sp/>(<sp/>alloc<sp/>==<sp/>0<sp/>)<sp/>?<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>:<sp/>alloc;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>s<sp/>!=<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>and<sp/>(<sp/>s<sp/>!=<sp/>0<sp/>)<sp/>)<sp/>or<sp/>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>==<sp/>0<sp/>and<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>!=<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1abc5e26e8edeeca0fdcdba1842b0cccb2" kindref="member">allocate</ref>(<sp/>s,<sp/>s<sp/>+<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref>,<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref>,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classTokenArrayObj_1ad51ea1ad9898400490a466acd708f9ca" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">TokenArrayObj::resize</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">resize</ref>(<sp/>s,<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref>,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;</highlight></codeline>
<codeline lineno="149" refid="classTokenArrayObj_1a568c87d8399ea52e3b14878a84daa2c2" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a568c87d8399ea52e3b14878a84daa2c2" kindref="member">TokenArrayObj::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a547b59a87709fd9b4f86dc40b6d98c1f" kindref="member">capacity</ref>()<sp/>&gt;=<sp/>a.size()<sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>branch<sp/>also<sp/>covers<sp/>the<sp/>case<sp/>where<sp/>a<sp/>is<sp/>the<sp/>null-vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1ae0579e65377ba605818004cd2cc344f2" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.begin();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/>a.end()<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*to++<sp/>=<sp/>*from++;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>to<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref>()<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;clear();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>a.size();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1ac36cbb44b6fb9090015bfee48d882963" kindref="member">resize</ref>(<sp/>a.size(),<sp/>a.alloc_block_size<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1ae0579e65377ba605818004cd2cc344f2" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.begin();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/>a.end()<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*to++<sp/>=<sp/>*from++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>re-allocate,<sp/>if<sp/>the<sp/>actual<sp/>buffer<sp/>is<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>alloc_block_size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>TokenArrayObj::shrink(void)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>static<sp/>const<sp/>size_t<sp/>hyst=1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>size_t<sp/>old_size<sp/>=<sp/>size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>size_t<sp/>n<sp/>=<sp/>old_size/alloc_block_size<sp/>+<sp/>1<sp/>+<sp/>hyst;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>size_t<sp/>new_capacity<sp/>=<sp/>n*alloc_block_size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(<sp/>new_capacity<sp/>&lt;<sp/>capacity())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate(old_size,<sp/>new_capacity,<sp/>alloc_block_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classTokenArrayObj_1aa1a67fc90463084ab507414b259fb4c1" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1aa1a67fc90463084ab507414b259fb4c1" kindref="member">TokenArrayObj::shrink</ref>()</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_capacity<sp/>=<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_capacity<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1a547b59a87709fd9b4f86dc40b6d98c1f" kindref="member">capacity</ref>()<sp/>)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1abc5e26e8edeeca0fdcdba1842b0cccb2" kindref="member">allocate</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>(),<sp/>new_capacity,<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">TokenArrayObj::reserve</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_capacity<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>new_capacity<sp/>&gt;<sp/><ref refid="classTokenArrayObj_1a547b59a87709fd9b4f86dc40b6d98c1f" kindref="member">capacity</ref>()<sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1abc5e26e8edeeca0fdcdba1842b0cccb2" kindref="member">allocate</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>(),<sp/>new_capacity,<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classTokenArrayObj_1a3dddb29836c1f64d87209792951e1417" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a3dddb29836c1f64d87209792951e1417" kindref="member">TokenArrayObj::rotate</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>first,<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>middle,<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>algorithm<sp/>is<sp/>taken<sp/>from<sp/>the<sp/>HP<sp/>STL<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>&lt;<sp/>middle<sp/>and<sp/>middle<sp/>&lt;<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>i<sp/>=<sp/>middle;;<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first-&gt;swap(<sp/>*i<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>==<sp/>middle<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>middle<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>==<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>middle;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classTokenArrayObj_1aa2a3d4b983626addfbd6baeda87b19a6" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a5ee67f5db59d134471ac688367b5b2af" kindref="member">TokenArrayObj::erase</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>first,<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>algorithm<sp/>we<sp/>also<sp/>use<sp/>in<sp/>replace_move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>is<sp/>decreasing.<sp/>we<sp/>move<sp/>elements<sp/>after<sp/>point<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>erasure<sp/>from<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref>;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>ahead<sp/><sp/>as<sp/>conventional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to-&gt;p<sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deleting<sp/>nullptr<sp/>pointer<sp/>is<sp/>safe<sp/>in<sp/>ISO<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;p-&gt;<ref refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" kindref="member">removeReference</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>might<sp/>be<sp/>overwritten<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>last<sp/>&gt;<sp/>to<sp/>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>sequence<sp/>we<sp/>have<sp/>to<sp/>erase<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>longer<sp/>than<sp/>the<sp/>sequence<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>--last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>of<sp/>it,<sp/>we<sp/>explicitly<sp/>delete<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>last-&gt;p<sp/>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements<sp/>which<sp/>are<sp/>still<sp/>intact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last-&gt;p-&gt;<ref refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" kindref="member">removeReference</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>last-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>after<sp/>the<sp/>move<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/>to;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>for<sp/>strings<sp/>erase<sp/>tolerates<sp/>i+n<sp/>&gt;=<sp/><sp/>size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classTokenArrayObj_1a5ee67f5db59d134471ac688367b5b2af" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a5ee67f5db59d134471ac688367b5b2af" kindref="member">TokenArrayObj::erase</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>+<sp/>n<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a5ee67f5db59d134471ac688367b5b2af" kindref="member">erase</ref>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i,<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>+<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a5ee67f5db59d134471ac688367b5b2af" kindref="member">erase</ref>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>(<sp/>i<sp/>),<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classTokenArrayObj_1a869a7392dd8236814e27678536716d48" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a869a7392dd8236814e27678536716d48" kindref="member">TokenArrayObj::clear</ref>()</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reduce()<sp/>could<sp/>be<sp/>further<sp/>optimized<sp/>by<sp/>testing<sp/>wether<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>leads<sp/>to<sp/>a<sp/>resize.<sp/>In<sp/>this<sp/>case,<sp/>one<sp/>could<sp/>simply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>re-construct<sp/>the<sp/>array<sp/>with<sp/>the<sp/>sub-array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classTokenArrayObj_1a2e62c183495a1a5fa06c114e507b9cfe" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a2e62c183495a1a5fa06c114e507b9cfe" kindref="member">TokenArrayObj::reduce</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>first,<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>assert(<sp/>last<sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref>()<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>assert(<sp/>first<sp/>&gt;=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>step:<sp/>shift<sp/>all<sp/>elements<sp/>to<sp/>the<sp/>begin<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>*i<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>,<sp/>*j<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>first<sp/>&gt;<sp/><ref refid="classTokenArrayObj_1ae0579e65377ba605818004cd2cc344f2" kindref="member">begin</ref>()<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>&lt;<sp/>last<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;move(<sp/>*j<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>j<sp/>==<sp/>last<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>assert(<sp/>i<sp/>==<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>(<sp/>last<sp/>-<sp/>first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref>()<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;clear();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>(<sp/>size_t<sp/>)<sp/>(<sp/>last<sp/>-<sp/>first<sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shrink();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>assign<sp/>for<sp/>strings<sp/>reduce<sp/>tolerates<sp/>i+n<sp/>&gt;=<sp/>size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classTokenArrayObj_1add976b7a363c46bad4510fd5b16daa79" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a2e62c183495a1a5fa06c114e507b9cfe" kindref="member">TokenArrayObj::reduce</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>+<sp/>n<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a2e62c183495a1a5fa06c114e507b9cfe" kindref="member">reduce</ref>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i,<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>+<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTokenArrayObj_1a2e62c183495a1a5fa06c114e507b9cfe" kindref="member">reduce</ref>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>(<sp/>i<sp/>),<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="classTokenArrayObj_1a254deb1d61930625815f4f8e5e0ee507" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a254deb1d61930625815f4f8e5e0ee507" kindref="member">TokenArrayObj::insert</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>argument<sp/>pos<sp/>would<sp/>not<sp/>be<sp/>efficient<sp/>because<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>recompute<sp/>pointer<sp/>anyway<sp/>after<sp/>reallocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>+<sp/>n<sp/>);<sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>pos<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>element<sp/>i<sp/>(starting<sp/>with<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>Token<sp/>which<sp/>has<sp/>to<sp/>be<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/>from<sp/>+<sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>location<sp/>of<sp/>first<sp/>Token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&gt;=<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>knowing<sp/>that<sp/>to-&gt;p<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>--from;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>--to;<sp/></highlight><highlight class="comment">//<sp/>nullptr<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i<sp/>)<sp/></highlight><highlight class="comment">//<sp/>insert<sp/>n<sp/>copies<sp/>of<sp/>Token<sp/>t;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>*(<sp/>pos++<sp/>)<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+=<sp/>n;<sp/></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>is<sp/>old<sp/>+<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classTokenArrayObj_1a0ac6c65b8d19b5a8f035978f9566ba0c" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a0ac6c65b8d19b5a8f035978f9566ba0c" kindref="member">TokenArrayObj::insert_move</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>+<sp/>a.size()<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+<sp/>a.size()<sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>pos<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>element<sp/>i<sp/>(starting<sp/>with<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>Token<sp/>which<sp/>has<sp/>to<sp/>be<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/>from<sp/>+<sp/>a.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>location<sp/>of<sp/>first<sp/>Token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&gt;=<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>knowing<sp/>that<sp/>to-&gt;p<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>--from;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>--to;<sp/></highlight><highlight class="comment">//<sp/>nullptr<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>from<sp/>=<sp/>a.p;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/>a.end()<sp/>)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>cannot<sp/>do<sp/>this<sp/>in<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>above<sp/>because<sp/>of<sp/>overlapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+=<sp/>a.size();<sp/></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>is<sp/>old<sp/>+<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>a.begin_of_free_storage<sp/>=<sp/>a.p;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="classTokenArrayObj_1a3c850480835efbc05239eeaf0012a873" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a04590e6d2102f1e67c5517387a941e38" kindref="member">TokenArrayObj::assign_move</ref>(<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.begin()<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/>a.begin()<sp/>+<sp/>i<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="classTokenArrayObj_1a5665d291b27dc4a781de12ec18c1f691" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a5665d291b27dc4a781de12ec18c1f691" kindref="member">TokenArrayObj::assign</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.begin()<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/>a.begin()<sp/>+<sp/>i<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>*to<sp/>=<sp/>*from;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classTokenArrayObj_1a47cd2ac304d041eeb12121e8a433adcf" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a0ac6c65b8d19b5a8f035978f9566ba0c" kindref="member">TokenArrayObj::insert_move</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>+<sp/>1<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+<sp/>1<sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>pos<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>element<sp/>i<sp/>(starting<sp/>with<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>Token<sp/>which<sp/>has<sp/>to<sp/>be<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/>from<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>location<sp/>of<sp/>first<sp/>Token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&gt;=<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>knowing<sp/>that<sp/>to-&gt;p<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>--from;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>--to;<sp/></highlight><highlight class="comment">//<sp/>nullptr<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>)-&gt;<ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>=<sp/>t.<ref refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" kindref="member">p</ref>;<sp/></highlight><highlight class="comment">//<sp/>move<sp/>contens<sp/>of<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>t.<ref refid="classToken_1ac9b605f7eec9f1baabf8ffa701a65aa1" kindref="member">p</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>is<sp/>old<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classTokenArrayObj_1a48de53e5a325c76cef0134b7f709e1d1" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a48de53e5a325c76cef0134b7f709e1d1" kindref="member">TokenArrayObj::replace_move</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>assert(<sp/>i<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>index<sp/>in<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>n<sp/>more<sp/>than<sp/>available<sp/>is<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>-<sp/>i<sp/>&lt;<sp/>n<sp/>)<sp/>?<sp/>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>-<sp/>i<sp/>)<sp/>:<sp/>n;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>a.size()<sp/>-<sp/>n;<sp/></highlight><highlight class="comment">//<sp/>difference<sp/>size<sp/>after<sp/>the<sp/>replacement,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>positive<sp/>for<sp/>increase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>+<sp/>d<sp/>);<sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>d<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>is<sp/>increasing.<sp/>we<sp/>move<sp/>elements<sp/>after<sp/>point<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>from<sp/>left<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>-<sp/>1<sp/>+<sp/>d;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>+<sp/>n<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>ahead<sp/>(before)<sp/><sp/>as<sp/>conventional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&gt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>might<sp/>be<sp/>overwritten<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--from;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--to;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>d<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>is<sp/>decreasing.<sp/>we<sp/>move<sp/>elements<sp/>after<sp/>point<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>from<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>last<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i<sp/>+<sp/>a.size();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref>;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>ahead<sp/><sp/>as<sp/>conventional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to-&gt;p<sp/>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deleting<sp/>nullptr<sp/>pointer<sp/>is<sp/>safe<sp/>in<sp/>ISO<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;p-&gt;<ref refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" kindref="member">removeReference</ref>();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>might<sp/>be<sp/>overwritten<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>last<sp/>&gt;<sp/>to<sp/>)<sp/></highlight><highlight class="comment">//<sp/>if<sp/>sequence<sp/>we<sp/>have<sp/>to<sp/>erase<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>longer<sp/>than<sp/>a<sp/>plus<sp/>the<sp/>sequence<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--last;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>of<sp/>it,<sp/>we<sp/>explicitly<sp/>delete<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>last-&gt;p<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements<sp/>which<sp/>are<sp/>still<sp/>intact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last-&gt;p-&gt;<ref refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" kindref="member">removeReference</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>after<sp/>the<sp/>move<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+=<sp/>d;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>contens<sp/>of<sp/>array<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>=<sp/>a.end();<sp/></highlight><highlight class="comment">//<sp/>1<sp/>ahead<sp/>as<sp/>conventional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.begin();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref><sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to-&gt;p<sp/>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>target<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to-&gt;p-&gt;<ref refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" kindref="member">removeReference</ref>();</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>movement,<sp/>it<sp/>is<sp/>typically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>nullptr<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="classTokenArrayObj_1a2d6c8b2b5902c2e3d4d275dbdd118806" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1a2d6c8b2b5902c2e3d4d275dbdd118806" kindref="member">TokenArrayObj::append_move</ref>(<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a437e62e0eefb7ab76fd7415679cfcff0" kindref="member">reserve</ref>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>+<sp/>a.size()<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reallocate<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+<sp/>a.size()<sp/>&lt;=<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>);<sp/></highlight><highlight class="comment">//<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>from<sp/>=<sp/>a.p;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>to<sp/>=<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>from<sp/>&lt;<sp/>a.end()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>knowing<sp/>that<sp/>to-&gt;p<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>to-&gt;p<sp/>=<sp/>from-&gt;p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nullptr<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>from-&gt;p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>++to;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>+=<sp/>a.size();<sp/></highlight><highlight class="comment">//<sp/>new<sp/>size<sp/>is<sp/>old<sp/>+<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>a.begin_of_free_storage<sp/>=<sp/>a.p;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="classTokenArrayObj_1ac4cbda39be6c2b3127584eec6579255f" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1ac4cbda39be6c2b3127584eec6579255f" kindref="member">TokenArrayObj::operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="619"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>==<sp/>a.p<sp/>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a3ae6e338a2ad89fb15ede793e3f9fab2" kindref="member">size</ref>()<sp/>!=<sp/>a.size()<sp/>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>*i<sp/>=<sp/><ref refid="classTokenArrayObj_1ae0579e65377ba605818004cd2cc344f2" kindref="member">begin</ref>(),<sp/>*j<sp/>=<sp/>a.begin();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&lt;<sp/><ref refid="classTokenArrayObj_1ad3ac5af8d89adcb82c115b05d22a327e" kindref="member">end</ref>()<sp/>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>*i++<sp/>==<sp/>*j++<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="classTokenArrayObj_1ab722a1dca518300f0a7d8920e1861368" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1ab722a1dca518300f0a7d8920e1861368" kindref="member">TokenArrayObj::info</ref>(<sp/>std::ostream&amp;<sp/>out<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TokenArrayObj::info\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;p<sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;bofs<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;eofs<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;abs<sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classTokenArrayObj_1aa2311be67b26807bd805683b8ba35b0e" kindref="member">alloc_block_size</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="classTokenArrayObj_1aba732dcef9cd9ed9c1f899a500414dfc" refkind="member"><highlight class="normal"><ref refid="classTokenArrayObj_1aba732dcef9cd9ed9c1f899a500414dfc" kindref="member">TokenArrayObj::valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="653"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="classTokenArrayObj_1a7734ae6b1928dffa2abab4207a489eb9" kindref="member">p</ref><sp/>)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TokenArrayObj::valid:<sp/>Data<sp/>pointer<sp/>missing!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TokenArrayObj::valid:<sp/>begin<sp/>of<sp/>free<sp/>storage<sp/>pointer<sp/>missing!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TokenArrayObj::valid:<sp/>end<sp/>of<sp/>free<sp/>storage<sp/>pointer<sp/>missing!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classTokenArrayObj_1a987b2ab8759d16d384ba4ed0dbeb0d47" kindref="member">begin_of_free_storage</ref><sp/>&gt;<sp/><ref refid="classTokenArrayObj_1ade8da102bbb31a5411aff3ac61aeee5d" kindref="member">end_of_free_storage</ref><sp/>)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;TokenArrayObj::valid:<sp/>begin_of_free_storage<sp/><sp/>&gt;<sp/>end_of_free_storage<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="tarrayobj_8cc_1ae99e2f466cbb79c932c211360c214dba" refkind="member"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="tarrayobj_8cc_1ae99e2f466cbb79c932c211360c214dba" kindref="member">operator&lt;&lt;</ref>(<sp/>std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>i<sp/>=<sp/>a.begin();<sp/>i<sp/>&lt;<sp/>a.end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*i<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/tarrayobj.cc"/>
  </compounddef>
</doxygen>
