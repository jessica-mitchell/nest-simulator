<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1jonke__synapse" kind="class" language="C++" prot="public">
    <compoundname>nest::jonke_synapse</compoundname>
    <basecompoundref refid="classnest_1_1Connection" prot="public" virt="non-virtual">nest::Connection&lt; targetidentifierT &gt;</basecompoundref>
    <includes refid="jonke__synapse_8h" local="no">jonke_synapse.h</includes>
    <innerclass refid="classnest_1_1jonke__synapse_1_1ConnTestDummyNode" prot="public">nest::jonke_synapse::ConnTestDummyNode</innerclass>
    <templateparamlist>
      <param>
        <type>typename targetidentifierT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1jonke__synapse_1abdd5516589aa34a98140ee37341d80c9" prot="public" static="no">
        <type><ref refid="classnest_1_1JonkeCommonProperties" kindref="compound">JonkeCommonProperties</ref></type>
        <definition>typedef JonkeCommonProperties nest::jonke_synapse&lt; targetidentifierT &gt;::CommonPropertiesType</definition>
        <argsstring></argsstring>
        <name>CommonPropertiesType</name>
        <qualifiedname>nest::jonke_synapse::CommonPropertiesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="205" column="33" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1jonke__synapse_1afd0d90e315b4e0720107591e78572f82" prot="public" static="no">
        <type><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref>&lt; targetidentifierT &gt;</type>
        <definition>typedef Connection&lt; targetidentifierT &gt; nest::jonke_synapse&lt; targetidentifierT &gt;::ConnectionBase</definition>
        <argsstring></argsstring>
        <name>ConnectionBase</name>
        <qualifiedname>nest::jonke_synapse::ConnectionBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="206" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1jonke__synapse_1a627cb3287988ba43f4c3cf0735117f9c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::jonke_synapse&lt; targetidentifierT &gt;::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <qualifiedname>nest::jonke_synapse::weight_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="321" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="321" bodyend="-1"/>
        <referencedby refid="classnest_1_1jonke__synapse_1a13abb6048eb95a69fee27cef3f6ad28b" compoundref="jonke__synapse_8h" startline="280" endline="283">nest::jonke_synapse&lt; targetidentifierT &gt;::set_weight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1jonke__synapse_1a48a1ecefc562e26f0d5774f931f72c70" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::jonke_synapse&lt; targetidentifierT &gt;::Kplus_</definition>
        <argsstring></argsstring>
        <name>Kplus_</name>
        <qualifiedname>nest::jonke_synapse::Kplus_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="322" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1jonke__synapse_1ac76ba3f4a878a4851c88b0964afb4a2d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::jonke_synapse&lt; targetidentifierT &gt;::t_lastspike_</definition>
        <argsstring></argsstring>
        <name>t_lastspike_</name>
        <qualifiedname>nest::jonke_synapse::t_lastspike_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="323" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="323" bodyend="-1"/>
        <referencedby refid="classnest_1_1jonke__synapse_1a5da09d4d1a8570cf1f8ab81875c1eccb" compoundref="jonke__synapse_8h" startline="270" endline="277">nest::jonke_synapse&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a94f6b4fbfd5ec24a535a62f538d80710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::jonke_synapse&lt; targetidentifierT &gt;::jonke_synapse</definition>
        <argsstring>()</argsstring>
        <name>jonke_synapse</name>
        <qualifiedname>nest::jonke_synapse::jonke_synapse</qualifiedname>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets default values for all parameters. Needed by <ref refid="classnest_1_1GenericConnectorModel" kindref="compound">GenericConnectorModel</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="212" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="388" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a0afd59d16e364e7069c7d799559e2084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::jonke_synapse&lt; targetidentifierT &gt;::jonke_synapse</definition>
        <argsstring>(const jonke_synapse &amp;)=default</argsstring>
        <name>jonke_synapse</name>
        <qualifiedname>nest::jonke_synapse::jonke_synapse</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1jonke__synapse" kindref="compound">jonke_synapse</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be defined properly in order for GenericConnector to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="219" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a3ade1656900297f18cfa346434ec61b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1jonke__synapse" kindref="compound">jonke_synapse</ref> &amp;</type>
        <definition>jonke_synapse &amp; nest::jonke_synapse&lt; targetidentifierT &gt;::operator=</definition>
        <argsstring>(const jonke_synapse &amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>nest::jonke_synapse::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1jonke__synapse" kindref="compound">jonke_synapse</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="220" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1ad76747bb7d0896229d37de878d09fec9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::jonke_synapse::get_status</qualifiedname>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get all properties of this connection and put them into a dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="234" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="398" bodyend="403"/>
        <references refid="namespacenest_1_1names_1afb868eddb8599cce2bba3dd5790365b3" compoundref="nest__names_8h" startline="437">nest::names::size_of</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a919962fb8e622c337bc46637a79efbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d, ConnectorModel &amp;cm)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::jonke_synapse::set_status</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Set properties of this connection from the values given in dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="239" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="407" bodyend="411"/>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a82b89fed0b2d4767bc1504bb92f8dbcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::check_synapse_params</definition>
        <argsstring>(const DictionaryDatum &amp;d) const</argsstring>
        <name>check_synapse_params</name>
        <qualifiedname>nest::jonke_synapse::check_synapse_params</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Checks to see if illegal parameters are given in syn_spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The illegal parameters are: &quot;alpha&quot;, &quot;beta&quot;, &quot;lambda&quot;, &quot;mu_plus&quot;, &quot;mu_minus&quot;, &quot;tau_plus&quot;, &quot;Wmax&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="246" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="415" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a019bd7b964ea596a33af25d063948cd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::send</definition>
        <argsstring>(Event &amp;e, thread t, const JonkeCommonProperties &amp;cp)</argsstring>
        <name>send</name>
        <qualifiedname>nest::jonke_synapse::send</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1JonkeCommonProperties" kindref="compound">JonkeCommonProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiver of this connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>common properties of all synapses (empty).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread on which this connection is stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>Common properties object, containing the stdp parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="253" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="335" bodyend="384"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1JonkeCommonProperties_1ad0b430c8da9502a0abd43a07ce3f55f3" compoundref="jonke__synapse_8h" startline="153">nest::JonkeCommonProperties::tau_plus_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a5da09d4d1a8570cf1f8ab81875c1eccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::check_connection</definition>
        <argsstring>(Node &amp;s, Node &amp;t, rport receptor_type, const CommonPropertiesType &amp;)</argsstring>
        <name>check_connection</name>
        <qualifiedname>nest::jonke_synapse::check_connection</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1jonke__synapse_1abdd5516589aa34a98140ee37341d80c9" kindref="member">CommonPropertiesType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="270" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="270" bodyend="277"/>
        <references refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" compoundref="connection_8h" startline="316" endline="343">nest::Connection&lt; targetidentifierT &gt;::check_connection_</references>
        <references refid="classnest_1_1jonke__synapse_1a859a57c02d19389a8f6a15c626214c9b" compoundref="connection_8h" startline="166" endline="169">nest::jonke_synapse&lt; targetidentifierT &gt;::get_delay</references>
        <references refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" compoundref="node_8cpp" startline="214" endline="217">nest::Node::register_stdp_connection</references>
        <references refid="classnest_1_1jonke__synapse_1ac76ba3f4a878a4851c88b0964afb4a2d" compoundref="jonke__synapse_8h" startline="323">nest::jonke_synapse&lt; targetidentifierT &gt;::t_lastspike_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a13abb6048eb95a69fee27cef3f6ad28b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::jonke_synapse&lt; targetidentifierT &gt;::set_weight</definition>
        <argsstring>(double w)</argsstring>
        <name>set_weight</name>
        <qualifiedname>nest::jonke_synapse::set_weight</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="280" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="280" bodyend="283"/>
        <references refid="classnest_1_1jonke__synapse_1a627cb3287988ba43f4c3cf0735117f9c" compoundref="jonke__synapse_8h" startline="321">nest::jonke_synapse&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a859a57c02d19389a8f6a15c626214c9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::Connection&lt; targetidentifierT &gt;::get_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_delay</name>
        <qualifiedname>nest::jonke_synapse::get_delay</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="226" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="166" bodyend="169"/>
        <referencedby refid="classnest_1_1jonke__synapse_1a5da09d4d1a8570cf1f8ab81875c1eccb" compoundref="jonke__synapse_8h" startline="270" endline="277">nest::jonke_synapse&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Connection&lt; targetidentifierT &gt;::get_delay_steps</definition>
        <argsstring>() const</argsstring>
        <name>get_delay_steps</name>
        <qualifiedname>nest::jonke_synapse::get_delay_steps</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="227" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::Connection&lt; targetidentifierT &gt;::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <qualifiedname>nest::jonke_synapse::get_rport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="228" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * nest::Connection&lt; targetidentifierT &gt;::get_target</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target</name>
        <qualifiedname>nest::jonke_synapse::get_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="229" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="232" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1ac88d147d42920e7c24d904f8ff8e2e9e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::jonke_synapse&lt; targetidentifierT &gt;::facilitate_</definition>
        <argsstring>(double w, double kplus, const JonkeCommonProperties &amp;cp)</argsstring>
        <name>facilitate_</name>
        <qualifiedname>nest::jonke_synapse::facilitate_</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kplus</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1JonkeCommonProperties" kindref="compound">JonkeCommonProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="287" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="287" bodyend="301"/>
        <references refid="classnest_1_1JonkeCommonProperties_1ae67ef103b1e091835da3a1dcd27b3cab" compoundref="jonke__synapse_8h" startline="149">nest::JonkeCommonProperties::beta_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1a55533a0f3b6187fedef5b12650ddef46" compoundref="jonke__synapse_8h" startline="150">nest::JonkeCommonProperties::lambda_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1a2fb6f57fef308a222a95d1ce4f4ca223" compoundref="jonke__synapse_8h" startline="151">nest::JonkeCommonProperties::mu_plus_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1ad2eb5a4570639962b5bbce2bb937c7b5" compoundref="jonke__synapse_8h" startline="154">nest::JonkeCommonProperties::Wmax_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1jonke__synapse_1ad76fe239c0f01fa9b52174857b5a0249" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::jonke_synapse&lt; targetidentifierT &gt;::depress_</definition>
        <argsstring>(double w, double kminus, const JonkeCommonProperties &amp;cp)</argsstring>
        <name>depress_</name>
        <qualifiedname>nest::jonke_synapse::depress_</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kminus</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1JonkeCommonProperties" kindref="compound">JonkeCommonProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="304" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="304" bodyend="318"/>
        <references refid="classnest_1_1JonkeCommonProperties_1ad994114ab960b02fc4fa56bf1c2e533e" compoundref="jonke__synapse_8h" startline="148">nest::JonkeCommonProperties::alpha_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1ae67ef103b1e091835da3a1dcd27b3cab" compoundref="jonke__synapse_8h" startline="149">nest::JonkeCommonProperties::beta_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1a55533a0f3b6187fedef5b12650ddef46" compoundref="jonke__synapse_8h" startline="150">nest::JonkeCommonProperties::lambda_</references>
        <references refid="classnest_1_1JonkeCommonProperties_1afb2948a1fb35a36f9c245e63d7164642" compoundref="jonke__synapse_8h" startline="152">nest::JonkeCommonProperties::mu_minus_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
      </node>
      <node id="1">
        <label>nest::jonke_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1jonke__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
        <childnode refid="3" relation="usage">
          <edgelabel>syn_id_delay_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::SynIdDelay</label>
        <link refid="structnest_1_1SynIdDelay"/>
      </node>
      <node id="1">
        <label>nest::jonke_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1jonke__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" line="201" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/jonke_synapse.h" bodystart="202" bodyend="324"/>
    <listofallmembers>
      <member refid="classnest_1_1Connection_1a98a2af4db1c9a34d011be0c89a731c9b" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>calibrate</name></member>
      <member refid="classnest_1_1jonke__synapse_1a5da09d4d1a8570cf1f8ab81875c1eccb" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>check_connection</name></member>
      <member refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" prot="protected" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>check_connection_</name></member>
      <member refid="classnest_1_1jonke__synapse_1a82b89fed0b2d4767bc1504bb92f8dbcc" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1jonke__synapse_1abdd5516589aa34a98140ee37341d80c9" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>CommonPropertiesType</name></member>
      <member refid="classnest_1_1Connection_1acb7166410b78749a3c989e98868d1020" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1Connection_1a9237d0912e8b9c7fbb5d32d4c7abcb8d" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1jonke__synapse_1afd0d90e315b4e0720107591e78572f82" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>ConnectionBase</name></member>
      <member refid="classnest_1_1jonke__synapse_1ad76fe239c0f01fa9b52174857b5a0249" prot="private" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>depress_</name></member>
      <member refid="classnest_1_1Connection_1a811dff4d6dbbca5a8cae4de925aa9faf" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>disable</name></member>
      <member refid="classnest_1_1Connection_1a913d4f9af27b5a6145b4f197660ad9a5" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>EventType</name></member>
      <member refid="classnest_1_1jonke__synapse_1ac88d147d42920e7c24d904f8ff8e2e9e" prot="private" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>facilitate_</name></member>
      <member refid="classnest_1_1jonke__synapse_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_delay</name></member>
      <member refid="classnest_1_1jonke__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a7c32524ac24f7d591bd14a5cc9219618" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_label</name></member>
      <member refid="classnest_1_1jonke__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_rport</name></member>
      <member refid="classnest_1_1jonke__synapse_1ad76747bb7d0896229d37de878d09fec9" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_status</name></member>
      <member refid="classnest_1_1Connection_1a2aca6e34443f8ef8576e23f097b199df" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_syn_id</name></member>
      <member refid="classnest_1_1jonke__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>get_target</name></member>
      <member refid="classnest_1_1Connection_1af8930ce6e4fee3c867cccac967970bd2" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1jonke__synapse_1a94f6b4fbfd5ec24a535a62f538d80710" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>jonke_synapse</name></member>
      <member refid="classnest_1_1jonke__synapse_1a0afd59d16e364e7069c7d799559e2084" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>jonke_synapse</name></member>
      <member refid="classnest_1_1jonke__synapse_1a48a1ecefc562e26f0d5774f931f72c70" prot="private" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>Kplus_</name></member>
      <member refid="classnest_1_1jonke__synapse_1a3ade1656900297f18cfa346434ec61b8" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1Connection_1a111070d4cbb64481c2e72cdd65e372db" prot="public" virt="non-virtual" ambiguityscope="nest::Connection::"><scope>nest::jonke_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1jonke__synapse_1a019bd7b964ea596a33af25d063948cd1" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>send</name></member>
      <member refid="classnest_1_1Connection_1abebbbd505fa36932bde4860d98eaed2e" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_delay</name></member>
      <member refid="classnest_1_1Connection_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1adce5ef19844ee30d96e7d39b5fe1a7f1" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1jonke__synapse_1a919962fb8e622c337bc46637a79efbb3" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_status</name></member>
      <member refid="classnest_1_1Connection_1a7abf9bd27ab16f395112be31001bae3c" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1jonke__synapse_1a13abb6048eb95a69fee27cef3f6ad28b" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>set_weight</name></member>
      <member refid="classnest_1_1Connection_1a0007e829af9dc39e624c5f349259a8ca" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>source_has_more_targets</name></member>
      <member refid="classnest_1_1Connection_1a27f971c956034918da99deb971949a26" prot="protected" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>syn_id_delay_</name></member>
      <member refid="classnest_1_1jonke__synapse_1ac76ba3f4a878a4851c88b0964afb4a2d" prot="private" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>t_lastspike_</name></member>
      <member refid="classnest_1_1Connection_1af2b2773f69c67db7330eb1064a199af7" prot="protected" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>target_</name></member>
      <member refid="classnest_1_1Connection_1aa1e3449ea1e2ff5f7dd2338bbf3feafe" prot="public" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1jonke__synapse_1a627cb3287988ba43f4c3cf0735117f9c" prot="private" virt="non-virtual"><scope>nest::jonke_synapse</scope><name>weight_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
