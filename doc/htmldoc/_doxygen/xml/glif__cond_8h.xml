<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="glif__cond_8h" kind="file" language="C++">
    <compoundname>glif_cond.h</compoundname>
    <includes local="yes">config.h</includes>
    <includedby refid="glif__cond_8cpp" local="yes">glif_cond.cpp</includedby>
    <includedby refid="modelsmodule_8cpp" local="yes">modelsmodule.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>glif_cond.h</label>
        <link refid="glif__cond_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>glif_cond.h</label>
        <link refid="glif__cond_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
      <node id="2">
        <label>glif_cond.cpp</label>
        <link refid="glif__cond_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>glif_cond.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GLIF_COND_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLIF_COND_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_matrix.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_odeiv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="archiving__node_8h" kindref="compound">archiving_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection_8h" kindref="compound">connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__types_8h" kindref="compound">nest_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ring__buffer_8h" kindref="compound">ring_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger_8h" kindref="compound">universal_data_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dictdatum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>integrate-and-fire,<sp/>conductance-based</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">Short<sp/>description</highlight></codeline>
<codeline lineno="48"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">Conductance-based<sp/>generalized<sp/>leaky<sp/>integrate<sp/>and<sp/>fire<sp/>(GLIF)<sp/>model<sp/>(from<sp/>the<sp/>Allen<sp/>Institute)</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="53"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">``glif_cond``<sp/>provides<sp/>five<sp/>generalized<sp/>leaky<sp/>integrate</highlight></codeline>
<codeline lineno="56"><highlight class="comment">and<sp/>fire<sp/>(GLIF)<sp/>models<sp/>[1]_<sp/>with<sp/>conductance-based<sp/>synapses.</highlight></codeline>
<codeline lineno="57"><highlight class="comment">Incoming<sp/>spike<sp/>events<sp/>induce<sp/>a<sp/>postsynaptic<sp/>change<sp/>of<sp/>conductance<sp/>modeled</highlight></codeline>
<codeline lineno="58"><highlight class="comment">by<sp/>an<sp/>alpha<sp/>function<sp/>[2]_.<sp/>The<sp/>alpha<sp/>function<sp/>is<sp/>normalized<sp/>such<sp/>that<sp/>an<sp/>event</highlight></codeline>
<codeline lineno="59"><highlight class="comment">of<sp/>weight<sp/>1.0<sp/>results<sp/>in<sp/>a<sp/>peak<sp/>conductance<sp/>change<sp/>of<sp/>1<sp/>nS<sp/>at<sp/>:math:`t<sp/>=<sp/>tau_syn`.<sp/>On</highlight></codeline>
<codeline lineno="60"><highlight class="comment">the<sp/>postsynaptic<sp/>side,<sp/>there<sp/>can<sp/>be<sp/>arbitrarily<sp/>many<sp/>synaptic<sp/>time<sp/>constants.</highlight></codeline>
<codeline lineno="61"><highlight class="comment">This<sp/>can<sp/>be<sp/>reached<sp/>by<sp/>specifying<sp/>separate<sp/>receptor<sp/>ports,<sp/>each<sp/>for<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="62"><highlight class="comment">time<sp/>constant.<sp/>The<sp/>port<sp/>number<sp/>has<sp/>to<sp/>match<sp/>the<sp/>respective<sp/>``receptor_type``<sp/>in</highlight></codeline>
<codeline lineno="63"><highlight class="comment">the<sp/>connectors.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">The<sp/>five<sp/>GLIF<sp/>models<sp/>are:</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">*<sp/>**GLIF<sp/>Model<sp/>1**<sp/>-<sp/>Traditional<sp/>leaky<sp/>integrate<sp/>and<sp/>fire<sp/>(LIF)</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/>**GLIF<sp/>Model<sp/>2**<sp/>-<sp/>Leaky<sp/>integrate<sp/>and<sp/>fire<sp/>with<sp/>biologically<sp/>defined<sp/>reset<sp/>rules</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/>(LIF_R)</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/>**GLIF<sp/>Model<sp/>3**<sp/>-<sp/>Leaky<sp/>integrate<sp/>and<sp/>fire<sp/>with<sp/>after-spike<sp/>currents<sp/>(LIF_ASC)</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/>**GLIF<sp/>Model<sp/>4**<sp/>-<sp/>Leaky<sp/>integrate<sp/>and<sp/>fire<sp/>with<sp/>biologically<sp/>defined<sp/>reset<sp/>rules</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/>and<sp/>after-spike<sp/>currents<sp/>(LIF_R_ASC)</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/>**GLIF<sp/>Model<sp/>5**<sp/>-<sp/>Leaky<sp/>integrate<sp/>and<sp/>fire<sp/>with<sp/>biologically<sp/>defined<sp/>reset<sp/>rules,</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/>after-spike<sp/>currents<sp/>and<sp/>a<sp/>voltage<sp/>dependent<sp/>threshold<sp/>(LIF_R_ASC_A)</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">GLIF<sp/>model<sp/>mechanism<sp/>setting<sp/>is<sp/>based<sp/>on<sp/>three<sp/>parameters</highlight></codeline>
<codeline lineno="77"><highlight class="comment">(``spike_dependent_threshold``,<sp/>``after_spike_currents``,<sp/>``adapting_threshold``).</highlight></codeline>
<codeline lineno="78"><highlight class="comment">The<sp/>settings<sp/>of<sp/>these<sp/>three<sp/>parameters<sp/>for<sp/>the<sp/>five<sp/>GLIF<sp/>models<sp/>are<sp/>listed</highlight></codeline>
<codeline lineno="79"><highlight class="comment">below.<sp/>Other<sp/>combinations<sp/>of<sp/>these<sp/>parameters<sp/>will<sp/>not<sp/>be<sp/>supported.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">=============<sp/>=======<sp/>=======<sp/>======</highlight></codeline>
<codeline lineno="82"><highlight class="comment">**Parameter<sp/>settings**</highlight></codeline>
<codeline lineno="83"><highlight class="comment">------------------------------------</highlight></codeline>
<codeline lineno="84"><highlight class="comment">GLIF<sp/>Model<sp/>1<sp/><sp/><sp/>False<sp/><sp/><sp/>False<sp/><sp/><sp/>False</highlight></codeline>
<codeline lineno="85"><highlight class="comment">GLIF<sp/>Model<sp/>2<sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>False<sp/><sp/><sp/>False</highlight></codeline>
<codeline lineno="86"><highlight class="comment">GLIF<sp/>Model<sp/>3<sp/><sp/><sp/>False<sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>False</highlight></codeline>
<codeline lineno="87"><highlight class="comment">GLIF<sp/>Model<sp/>4<sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>False</highlight></codeline>
<codeline lineno="88"><highlight class="comment">GLIF<sp/>Model<sp/>5<sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>True<sp/><sp/><sp/><sp/>True</highlight></codeline>
<codeline lineno="89"><highlight class="comment">=============<sp/>=======<sp/>=======<sp/>======</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">Typical<sp/>parameter<sp/>setting<sp/>of<sp/>different<sp/>levels<sp/>of<sp/>GLIF<sp/>models<sp/>for<sp/>different<sp/>cells</highlight></codeline>
<codeline lineno="92"><highlight class="comment">can<sp/>be<sp/>found<sp/>and<sp/>downloaded<sp/>in<sp/>the<sp/>`Allen<sp/>Cell<sp/>Type<sp/>Database</highlight></codeline>
<codeline lineno="93"><highlight class="comment">&lt;https://celltypes.brain-map.org&gt;`_.<sp/>For<sp/>example,<sp/>the<sp/>default<sp/>parameter<sp/>setting<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="94"><highlight class="comment">glif_cond<sp/>neuron<sp/>model<sp/>was<sp/>from<sp/>the<sp/>parameter<sp/>values<sp/>of<sp/>GLIF<sp/>Model<sp/>5<sp/>of<sp/>Cell</highlight></codeline>
<codeline lineno="95"><highlight class="comment">490626718,<sp/>which<sp/>can<sp/>be<sp/>retrieved<sp/>from<sp/>the<sp/>`Allen<sp/>Brain<sp/>Atlas</highlight></codeline>
<codeline lineno="96"><highlight class="comment">&lt;https://celltypes.brain-map.org/mouse/experiment/electrophysiology/</highlight></codeline>
<codeline lineno="97"><highlight class="comment">490626718&gt;`_,<sp/>with<sp/>units<sp/>being<sp/>converted<sp/>from<sp/>SI<sp/>units<sp/>(i.e.,<sp/>V,<sp/>S<sp/>(1/Ohm),</highlight></codeline>
<codeline lineno="98"><highlight class="comment">F,<sp/>s,<sp/>A)<sp/>to<sp/>NEST<sp/>used<sp/>units<sp/>(i.e.,<sp/>mV,<sp/>nS<sp/>(1/GOhm),<sp/>pF,<sp/>ms,<sp/>pA)<sp/>and<sp/>values</highlight></codeline>
<codeline lineno="99"><highlight class="comment">being<sp/>rounded<sp/>to<sp/>appropriate<sp/>digits<sp/>for<sp/>simplification.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">For<sp/>models<sp/>with<sp/>spike<sp/>dependent<sp/>threshold<sp/>(i.e.,<sp/>GLIF<sp/>2,<sp/>GLIF<sp/>4<sp/>and<sp/>GLIF<sp/>5),</highlight></codeline>
<codeline lineno="102"><highlight class="comment">parameter<sp/>setting<sp/>of<sp/>voltage_reset_fraction<sp/>and<sp/>voltage_reset_add<sp/>may<sp/>lead<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="comment">situation<sp/>that<sp/>voltage<sp/>is<sp/>bigger<sp/>than<sp/>threshold<sp/>after<sp/>reset.<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>neuron</highlight></codeline>
<codeline lineno="104"><highlight class="comment">will<sp/>continue<sp/>to<sp/>spike<sp/>until<sp/>the<sp/>end<sp/>of<sp/>the<sp/>simulation<sp/>regardless<sp/>the<sp/>stimulated<sp/>inputs.</highlight></codeline>
<codeline lineno="105"><highlight class="comment">We<sp/>recommend<sp/>the<sp/>setting<sp/>of<sp/>the<sp/>parameters<sp/>of<sp/>these<sp/>three<sp/>models<sp/>to<sp/>follow<sp/>the</highlight></codeline>
<codeline lineno="106"><highlight class="comment">condition<sp/>of<sp/>:math:`(E_L<sp/>+<sp/>voltage_reset_fraction<sp/>*<sp/>(<sp/>V_th<sp/>-<sp/>E_L<sp/>)<sp/>+<sp/>voltage_reset_add)</highlight></codeline>
<codeline lineno="107"><highlight class="comment">&lt;<sp/>(V_th<sp/>+<sp/>th_spike_add)`.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">Parameters</highlight></codeline>
<codeline lineno="110"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">The<sp/>following<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>in<sp/>the<sp/>status<sp/>dictionary.</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">=========<sp/>========<sp/>============================================================</highlight></codeline>
<codeline lineno="115"><highlight class="comment">**Membrane<sp/>parameters**</highlight></codeline>
<codeline lineno="116"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="117"><highlight class="comment">V_m<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Membrane<sp/>potential<sp/>in<sp/>mV<sp/>(absolute<sp/>value)</highlight></codeline>
<codeline lineno="118"><highlight class="comment">V_th<sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Instantaneous<sp/>threshold<sp/>in<sp/>mV</highlight></codeline>
<codeline lineno="119"><highlight class="comment">g<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Membrane<sp/>conductance<sp/>in<sp/>nS</highlight></codeline>
<codeline lineno="120"><highlight class="comment">E_L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Resting<sp/>membrane<sp/>potential<sp/>in<sp/>mV</highlight></codeline>
<codeline lineno="121"><highlight class="comment">C_m<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Capacitance<sp/>of<sp/>the<sp/>membrane<sp/>in<sp/>pF</highlight></codeline>
<codeline lineno="122"><highlight class="comment">t_ref<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Duration<sp/>of<sp/>refractory<sp/>time<sp/>in<sp/>ms</highlight></codeline>
<codeline lineno="123"><highlight class="comment">V_reset<sp/><sp/><sp/><sp/>double<sp/><sp/><sp/>Reset<sp/>potential<sp/>of<sp/>the<sp/>membrane<sp/>in<sp/>mV<sp/>(GLIF<sp/>1<sp/>or<sp/>GLIF<sp/>3)</highlight></codeline>
<codeline lineno="124"><highlight class="comment">=========<sp/>========<sp/>============================================================</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">=========================<sp/>===============<sp/>=====================================</highlight></codeline>
<codeline lineno="127"><highlight class="comment">**Spike<sp/>adaptation<sp/>and<sp/>firing<sp/>intensity<sp/>parameters**</highlight></codeline>
<codeline lineno="128"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="129"><highlight class="comment">th_spike_add<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/>addition<sp/>following<sp/>spike</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>mV<sp/>(delta_theta_s<sp/>in<sp/>Equation<sp/>(6)</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="132"><highlight class="comment">th_spike_decay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spike-induced<sp/>threshold<sp/>time</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant<sp/>in<sp/>1/ms<sp/>(bs<sp/>in<sp/>Equation<sp/>(2)</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="135"><highlight class="comment">voltage_reset_fraction<sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Voltage<sp/>fraction<sp/>coefficient</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>following<sp/>spike<sp/>(fv<sp/>in<sp/>Equation<sp/>(5)</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="138"><highlight class="comment">voltage_reset_add<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Voltage<sp/>addition<sp/>following<sp/>spike<sp/>in</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/>(-delta_V<sp/>(sign<sp/>flipped)<sp/>in</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Equation<sp/>(5)<sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="141"><highlight class="comment">asc_init<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>Initial<sp/>values<sp/>of<sp/>after-spike</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currents<sp/>in<sp/>pA</highlight></codeline>
<codeline lineno="143"><highlight class="comment">asc_decay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>After-spike<sp/>current<sp/>time<sp/>constants</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>1/ms<sp/>(kj<sp/>in<sp/>Equation<sp/>(3)<sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="145"><highlight class="comment">asc_amps<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>After-spike<sp/>current<sp/>amplitudes<sp/>in</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pA<sp/>(deltaIj<sp/>in<sp/>Equation<sp/>(7)<sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="147"><highlight class="comment">asc_r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>Current<sp/>fraction<sp/>following<sp/>spike</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficients<sp/>for<sp/>fj<sp/>in<sp/>Equation<sp/>(7)</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>[1]_</highlight></codeline>
<codeline lineno="150"><highlight class="comment">th_voltage_index<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adaptation<sp/>index<sp/>of<sp/>threshold<sp/>-<sp/>A</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;leak-conductance&apos;<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage-dependent<sp/>component<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold<sp/>in<sp/>1/ms<sp/>(av<sp/>in<sp/>Equation</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4)<sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="155"><highlight class="comment">th_voltage_decay<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Voltage-induced<sp/>threshold<sp/>time</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant<sp/>-<sp/>Inverse<sp/>of<sp/>which<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>constant<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage-dependent<sp/>component<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold<sp/>in<sp/>1/ms<sp/>(bv<sp/>in<sp/>Equation</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4)<sp/>in<sp/>[1]_)</highlight></codeline>
<codeline lineno="161"><highlight class="comment">tau_syn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>Rise<sp/>time<sp/>constants<sp/>of<sp/>the<sp/>synaptic</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>function<sp/>in<sp/>ms</highlight></codeline>
<codeline lineno="163"><highlight class="comment">E_rev<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>vector<sp/><sp/>Reversal<sp/>potential<sp/>in<sp/>mV</highlight></codeline>
<codeline lineno="164"><highlight class="comment">spike_dependent_threshold<sp/><sp/>bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>whether<sp/>the<sp/>neuron<sp/>has</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>biologically<sp/>defined<sp/>reset<sp/>rules</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>a<sp/>spike<sp/>dependent<sp/>threshold</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component</highlight></codeline>
<codeline lineno="168"><highlight class="comment">after_spike_currents<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>whether<sp/>the<sp/>neuron<sp/>has<sp/>after</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spike<sp/>currents</highlight></codeline>
<codeline lineno="170"><highlight class="comment">adapting_threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>whether<sp/>the<sp/>neuron<sp/>has<sp/>a</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voltage<sp/>dependent<sp/>threshold<sp/>component</highlight></codeline>
<codeline lineno="172"><highlight class="comment">=========================<sp/>===============<sp/>=====================================</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment">References</highlight></codeline>
<codeline lineno="175"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment">..<sp/>[1]<sp/>Teeter<sp/>C,<sp/>Iyer<sp/>R,<sp/>Menon<sp/>V,<sp/>Gouwens<sp/>N,<sp/>Feng<sp/>D,<sp/>Berg<sp/>J,<sp/>Szafer<sp/>A,</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cain<sp/>N,<sp/>Zeng<sp/>H,<sp/>Hawrylycz<sp/>M,<sp/>Koch<sp/>C,<sp/>&amp;<sp/>Mihalas<sp/>S<sp/>(2018)</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generalized<sp/>leaky<sp/>integrate-and-fire<sp/>models<sp/>classify<sp/>multiple<sp/>neuron</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types.<sp/>Nature<sp/>Communications<sp/>9:709.</highlight></codeline>
<codeline lineno="181"><highlight class="comment">..<sp/>[2]<sp/>Meffin,<sp/>H.,<sp/>Burkitt,<sp/>A.<sp/>N.,<sp/>&amp;<sp/>Grayden,<sp/>D.<sp/>B.<sp/>(2004).<sp/>An<sp/>analytical</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>for<sp/>the<sp/>large,<sp/>fluctuating<sp/>synaptic<sp/>conductance<sp/>state<sp/>typical<sp/>of</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neocortical<sp/>neurons<sp/>in<sp/>vivo.<sp/>J.<sp/><sp/>Comput.<sp/>Neurosci.,<sp/>16,<sp/>159-175.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment">See<sp/>also</highlight></codeline>
<codeline lineno="186"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="187"><highlight class="comment"></highlight></codeline>
<codeline lineno="188"><highlight class="comment">gif_psc_exp_multisynapse,<sp/>gif_cond_exp,<sp/>gif_cond_exp_multisynapse,<sp/>gif_pop_psc_exp</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glif_cond_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">glif_cond<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1ArchivingNode" kindref="compound">nest::ArchivingNode</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>glif_cond();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>glif_cond(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glif_cond&amp;<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>~glif_cond()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">nest::Node::handle</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">nest::Node::handles_test_event</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>send_test_event(<sp/><ref refid="classnest_1_1Node" kindref="compound">nest::Node</ref>&amp;,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">nest::synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/><ref refid="classnest_1_1SpikeEvent" kindref="compound">nest::SpikeEvent</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/><ref refid="classnest_1_1CurrentEvent" kindref="compound">nest::CurrentEvent</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">nest::DataLoggingRequest</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>handles_test_event(<sp/><ref refid="classnest_1_1SpikeEvent" kindref="compound">nest::SpikeEvent</ref>&amp;,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>handles_test_event(<sp/><ref refid="classnest_1_1CurrentEvent" kindref="compound">nest::CurrentEvent</ref>&amp;,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>handles_test_event(<sp/><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">nest::DataLoggingRequest</ref>&amp;,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_buffers_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pre_run_hook()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<sp/><ref refid="classnest_1_1Time" kindref="compound">nest::Time</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>dynamics<sp/>function<sp/>quasi-member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glif_cond_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>three<sp/>classes<sp/>need<sp/>to<sp/>be<sp/>friends<sp/>to<sp/>access<sp/>the<sp/>State_<sp/>class/member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DynamicRecordablesMap&lt;<sp/>glif_cond<sp/>&gt;;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DynamicUniversalDataLogger&lt;<sp/>glif_cond<sp/>&gt;;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataAccessFunctor&lt;<sp/>glif_cond<sp/>&gt;;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parameters_</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>G_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_L_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th_inf_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>C_m_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_ref_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V_reset_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th_spike_add_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th_spike_decay_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>voltage_reset_fraction_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>voltage_reset_add_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th_voltage_index_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>th_voltage_decay_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_init_;<sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_decay_;<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_amps_;<sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_r_;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>tau_syn_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>E_rev_;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_connections_;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_theta_spike_;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_asc_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_theta_voltage_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_receptors_()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;,<sp/>Node*<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">State_</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_spike_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold_voltage_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>ASCurrents_;<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ASCurrents_sum_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>refractory_steps_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StateVecElems</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_M<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1a9ac45cbfac4fc42c9c65ee78c0d1c00a" kindref="member">I</ref>,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ASC_SUM,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_SPK,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TH_VLT,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DG_SYN,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_SYN,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STATE_VECTOR_MIN_SIZE</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUMBER_OF_FIXED_STATES_ELEMENTS<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>V_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUMBER_OF_RECORDABLES_ELEMENTS<sp/>=<sp/>DG_SYN<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>I,<sp/>ASC,<sp/>TH,<sp/>Th_SPK,<sp/>TH_VLT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUMBER_OF_STATES_ELEMENTS_PER_RECEPTOR<sp/>=<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>DG_SYN,<sp/>G_SYN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>y_;<sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/>DictionaryDatum&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>Node*<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffers_</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/>glif_cond&amp;<sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>glif_cond&amp;<sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>nest::RingBuffer<sp/>&gt;<sp/>spikes_;<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1RingBuffer" kindref="compound">nest::RingBuffer</ref><sp/>currents_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>DynamicUniversalDataLogger&lt;<sp/>glif_cond<sp/>&gt;<sp/>logger_;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GSL<sp/>ODE<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step*<sp/>s_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control*<sp/>c_;<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve*<sp/>e_;<sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_system<sp/>sys_;<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IntegrationStep_<sp/>should<sp/>be<sp/>reset<sp/>with<sp/>the<sp/>neuron<sp/>on<sp/>ResetNetwork,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>remain<sp/>unchanged<sp/>during<sp/>calibration.<sp/>Since<sp/>it<sp/>is<sp/>initialized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step_,<sp/>and<sp/>the<sp/>resolution<sp/>cannot<sp/>change<sp/>after<sp/>nodes<sp/>have<sp/>been<sp/>created,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>place<sp/>both<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IntegrationStep_;<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Variables_</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RefractoryCounts_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_spike_decay_rate_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_spike_refractory_decay_rate_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_voltage_decay_rate_inverse_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>potential_decay_rate_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>abpara_ratio_voltage_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_decay_rates_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_stable_coeff_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>asc_refractory_decay_rates_;<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>CondInitialValues_;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>Parameters_<sp/>P_;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>State_<sp/>S_;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>Variables_<sp/>V_;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>Buffers_<sp/>B_;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mapping<sp/>of<sp/>recordables<sp/>names<sp/>to<sp/>access<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>DynamicRecordablesMap&lt;<sp/>glif_cond<sp/>&gt;<sp/>recordablesMap_;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>Access<sp/>Functor<sp/>getter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>DataAccessFunctor&lt;<sp/>glif_cond<sp/>&gt;<sp/>get_data_access_functor(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elem<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>get_state_element(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elem<sp/>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/>nest::glif_cond::State_::V_M<sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.y_[<sp/>elem<sp/>]<sp/>+<sp/>P_.E_L_;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/><ref refid="namespacenest_1_1names_1a9ac45cbfac4fc42c9c65ee78c0d1c00a" kindref="member">nest::glif_cond::State_::I</ref><sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.I_;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/>nest::glif_cond::State_::ASC_SUM<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.ASCurrents_sum_;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/>nest::glif_cond::State_::TH<sp/>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.threshold_<sp/>+<sp/>P_.E_L_;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/>nest::glif_cond::State_::TH_SPK<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.threshold_spike_;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>elem<sp/>==<sp/>nest::glif_cond::State_::TH_VLT<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.threshold_voltage_;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.y_[<sp/>elem<sp/>-<sp/>nest::glif_cond::State_::NUMBER_OF_RECORDABLES_ELEMENTS<sp/>];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Utility<sp/>function<sp/>that<sp/>inserts<sp/>the<sp/>synaptic<sp/>conductances<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recordables<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>Name<sp/>get_g_receptor_name(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>receptor<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert_conductance_recordables(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">nest::glif_cond::Parameters_::n_receptors_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tau_syn_.size();</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref></highlight></codeline>
<codeline lineno="439"><highlight class="normal">nest::glif_cond::send_test_event(<sp/><ref refid="classnest_1_1Node" kindref="compound">nest::Node</ref>&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">nest::synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1SpikeEvent" kindref="compound">nest::SpikeEvent</ref><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.handles_test_event(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>,<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref></highlight></codeline>
<codeline lineno="447"><highlight class="normal">nest::glif_cond::handles_test_event(<sp/><ref refid="classnest_1_1CurrentEvent" kindref="compound">nest::CurrentEvent</ref>&amp;,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1UnknownReceptorType" kindref="compound">nest::UnknownReceptorType</ref>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref></highlight></codeline>
<codeline lineno="457"><highlight class="normal">nest::glif_cond::handles_test_event(<sp/><ref refid="classnest_1_1DataLoggingRequest" kindref="compound">nest::DataLoggingRequest</ref>&amp;<sp/>dlr,<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">nest::port</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1UnknownReceptorType" kindref="compound">nest::UnknownReceptorType</ref>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.logger_.connect_logging_device(<sp/>dlr,<sp/>recordablesMap_<sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">glif_cond::get_status(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="469"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>our<sp/>own<sp/>parameter<sp/>and<sp/>state<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>P_.get(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>S_.get(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>P_<sp/>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>information<sp/>managed<sp/>by<sp/>parent<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ArchivingNode_1acd46838612262b4a5d4cacdf7d901145" kindref="member">ArchivingNode::get_status</ref>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1af23802d960e3bad87b63c3ec4b563176" kindref="member">nest::names::recordables</ref><sp/>]<sp/>=<sp/>recordablesMap_.get_list();</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">glif_cond::set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>Parameters_<sp/>ptmp<sp/>=<sp/>P_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_EL<sp/>=<sp/>ptmp.set(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>State_<sp/>stmp<sp/>=<sp/>S_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>stmp.set(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>ptmp,<sp/>delta_EL,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ArchivingNode_1ac69d56c97bed5fd58fab9c3c745328c4" kindref="member">ArchivingNode::set_status</ref>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Here<sp/>is<sp/>where<sp/>we<sp/>must<sp/>update<sp/>the<sp/>recordablesMap_<sp/>if<sp/>new<sp/>receptors</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/>*<sp/>are<sp/>added!</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ptmp.n_receptors_()<sp/>&gt;<sp/>P_.n_receptors_()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>receptors<sp/>increased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>receptor<sp/>=<sp/>P_.n_receptors_();<sp/>receptor<sp/>&lt;<sp/>ptmp.n_receptors_();<sp/>++receptor<sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elem<sp/>=<sp/>glif_cond::State_::G_SYN<sp/>+<sp/>receptor<sp/>*<sp/>glif_cond::State_::NUMBER_OF_STATES_ELEMENTS_PER_RECEPTOR;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recordablesMap_.insert(<sp/>get_g_receptor_name(<sp/>receptor<sp/>),<sp/>get_data_access_functor(<sp/>elem<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ptmp.n_receptors_()<sp/>&lt;<sp/>P_.n_receptors_()<sp/>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>receptors<sp/>decreased</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>receptor<sp/>=<sp/>ptmp.n_receptors_();<sp/>receptor<sp/>&lt;<sp/>P_.n_receptors_();<sp/>++receptor<sp/>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recordablesMap_.erase(<sp/>get_g_receptor_name(<sp/>receptor<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>temporaries<sp/>contain<sp/>consistent<sp/>set<sp/>of<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>P_<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>S_<sp/>=<sp/>stmp;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/glif_cond.h"/>
  </compounddef>
</doxygen>
