<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classIAFPropagator" kind="class" language="C++" prot="public">
    <compoundname>IAFPropagator</compoundname>
    <derivedcompoundref refid="classIAFPropagatorAlpha" prot="public" virt="non-virtual">IAFPropagatorAlpha</derivedcompoundref>
    <derivedcompoundref refid="classIAFPropagatorExp" prot="public" virt="non-virtual">IAFPropagatorExp</derivedcompoundref>
    <includes refid="iaf__propagator_8h" local="no">iaf_propagator.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classIAFPropagator_1ac016a85ac35a716b4d6093b11f0330b7" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double IAFPropagator::NUMERICAL_STABILITY_FACTOR_</definition>
        <argsstring></argsstring>
        <name>NUMERICAL_STABILITY_FACTOR_</name>
        <qualifiedname>IAFPropagator::NUMERICAL_STABILITY_FACTOR_</qualifiedname>
        <initializer>= 1e-7</initializer>
        <briefdescription>
<para>Scale factor for singularity test for P31 computation. </para>
        </briefdescription>
        <detaileddescription>
<para>Regular case applies if h &gt; NUMERICAL_STABILITY_FACTOR_ * tau_m^2 / |tau_m - tau_syn|</para>
<para>See IAF_Integration_Singularity for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="66" column="27" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classIAFPropagator_1ae57f3e1858af398ed544bd804c1cac1e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::tau_syn_</definition>
        <argsstring></argsstring>
        <name>tau_syn_</name>
        <qualifiedname>IAFPropagator::tau_syn_</qualifiedname>
        <briefdescription>
<para>Time constant of synaptic current in ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="81" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a87e628baa0a931a252326a2a4cae84fb" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::tau_m_</definition>
        <argsstring></argsstring>
        <name>tau_m_</name>
        <qualifiedname>IAFPropagator::tau_m_</qualifiedname>
        <briefdescription>
<para>Membrane time constant in ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="82" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a3e6e58ca60f33574e73b9f55d313c42d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::c_m_</definition>
        <argsstring></argsstring>
        <name>c_m_</name>
        <qualifiedname>IAFPropagator::c_m_</qualifiedname>
        <briefdescription>
<para>Membrane capacitance in pF. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="83" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a6a20cff8f778b981fac80b0370e0ef06" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::h_min_regular_</definition>
        <argsstring></argsstring>
        <name>h_min_regular_</name>
        <qualifiedname>IAFPropagator::h_min_regular_</qualifiedname>
        <briefdescription>
<para>Smallest h for which regular P31 case applies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="85" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a945890af6732bf0e459fe78f95df116e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <qualifiedname>IAFPropagator::beta_</qualifiedname>
        <briefdescription>
<para>(tau_syn * tau_m) / (tau_m - tau_syn) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="87" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a5d899ceb2ece308b2334dc78a84e3558" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::gamma_</definition>
        <argsstring></argsstring>
        <name>gamma_</name>
        <qualifiedname>IAFPropagator::gamma_</qualifiedname>
        <briefdescription>
<para>beta_ / c_m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="88" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
        <referencedby refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" compoundref="iaf__propagator_8cpp" startline="57" endline="74">evaluate_P32_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1aa4d455c03c09bbade2addd4a7fd3b72d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::inv_tau_syn_</definition>
        <argsstring></argsstring>
        <name>inv_tau_syn_</name>
        <qualifiedname>IAFPropagator::inv_tau_syn_</qualifiedname>
        <briefdescription>
<para>1 / tau_syn </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="90" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" compoundref="iaf__propagator_8cpp" startline="57" endline="74">evaluate_P32_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1aa1926c9dbadaa5f43fe8c69a9fae94bc" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::inv_tau_m_</definition>
        <argsstring></argsstring>
        <name>inv_tau_m_</name>
        <qualifiedname>IAFPropagator::inv_tau_m_</qualifiedname>
        <briefdescription>
<para>1 / tau_m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="91" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
        <referencedby refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" compoundref="iaf__propagator_8cpp" startline="57" endline="74">evaluate_P32_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a7cde3156dd3b1f09960712b0b7d8dfca" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::inv_c_m_</definition>
        <argsstring></argsstring>
        <name>inv_c_m_</name>
        <qualifiedname>IAFPropagator::inv_c_m_</qualifiedname>
        <briefdescription>
<para>1 / c_m </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="92" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
        <referencedby refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" compoundref="iaf__propagator_8cpp" startline="57" endline="74">evaluate_P32_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classIAFPropagator_1a56a3c1df5cbf82e45c73f70b7c3b92be" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double IAFPropagator::inv_beta_</definition>
        <argsstring></argsstring>
        <name>inv_beta_</name>
        <qualifiedname>IAFPropagator::inv_beta_</qualifiedname>
        <briefdescription>
<para>1 / beta </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="93" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" compoundref="iaf__propagator_8cpp" startline="57" endline="74">evaluate_P32_</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIAFPropagator_1a3bb1cd56f070bcf29822d21546317184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IAFPropagator::IAFPropagator</definition>
        <argsstring>()</argsstring>
        <name>IAFPropagator</name>
        <qualifiedname>IAFPropagator::IAFPropagator</qualifiedname>
        <briefdescription>
<para>Empty constructor needed for initialization of buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="49" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.cpp" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classIAFPropagator_1a07c7eb04dcd535598b5b63df51d5999b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IAFPropagator::IAFPropagator</definition>
        <argsstring>(double tau_syn, double tau_m, double c_m)</argsstring>
        <name>IAFPropagator</name>
        <qualifiedname>IAFPropagator::IAFPropagator</qualifiedname>
        <param>
          <type>double</type>
          <declname>tau_syn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau_m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c_m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tau_syn</parametername>
</parameternamelist>
<parameterdescription>
<para>Time constant of synaptic current in ms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tau_m</parametername>
</parameternamelist>
<parameterdescription>
<para>Membrane time constant in ms </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_m</parametername>
</parameternamelist>
<parameterdescription>
<para>Membrane capacitance in pF </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="56" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.cpp" bodystart="42" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; double, double, double, double &gt;</type>
        <definition>std::tuple&lt; double, double, double, double &gt; IAFPropagator::evaluate_P32_</definition>
        <argsstring>(double h) const</argsstring>
        <name>evaluate_P32_</name>
        <qualifiedname>IAFPropagator::evaluate_P32_</qualifiedname>
        <param>
          <type>double</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Compute propagator connecting I_syn to V_m and auxiliary quantities for given time interval. </para>
        </briefdescription>
        <detaileddescription>
<para>This method computes all quantities common to alpha and exponential synaptic dynamics.</para>
<para><simplesect kind="note"><para>Fourth return value is real-valued only in the singular limit and <computeroutput><ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref></computeroutput> otherwise to avoid unnecessary computation of exp().</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>time interval [ms] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple with P_VI, exp( -h / tau_syn_ ), expm1( -h / tau_m_ + h / tau_syn_ ), exp( -h / tau_m_ ) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="79" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.cpp" bodystart="57" bodyend="74"/>
        <references refid="namespacenumerics_1a3cf41aab824fa7688404652067a60565" compoundref="numerics_8h" startline="55" endline="86">numerics::expm1</references>
        <references refid="classIAFPropagator_1a5d899ceb2ece308b2334dc78a84e3558" compoundref="iaf__propagator_8h" startline="88">gamma_</references>
        <references refid="classIAFPropagator_1a56a3c1df5cbf82e45c73f70b7c3b92be" compoundref="iaf__propagator_8h" startline="93">inv_beta_</references>
        <references refid="classIAFPropagator_1a7cde3156dd3b1f09960712b0b7d8dfca" compoundref="iaf__propagator_8h" startline="92">inv_c_m_</references>
        <references refid="classIAFPropagator_1aa1926c9dbadaa5f43fe8c69a9fae94bc" compoundref="iaf__propagator_8h" startline="91">inv_tau_m_</references>
        <references refid="classIAFPropagator_1aa4d455c03c09bbade2addd4a7fd3b72d" compoundref="iaf__propagator_8h" startline="90">inv_tau_syn_</references>
        <references refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" compoundref="numerics_8cpp" startline="88">numerics::nan</references>
        <referencedby refid="classIAFPropagatorExp_1a63fe21d74cea5eab7137960fa756e5a7" compoundref="iaf__propagator_8h" startline="153" endline="159">IAFPropagatorExp::evaluate</referencedby>
        <referencedby refid="classIAFPropagatorAlpha_1a56ea2f52f540342dc1d626ef714875ca" compoundref="iaf__propagator_8cpp" startline="95" endline="117">IAFPropagatorAlpha::evaluate</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exact integration voltage propagator for leaky integrate-and-fire models. </para>
    </briefdescription>
    <detaileddescription>
<para>This base class and its derived classes provide the propagator matrix elements connecting synaptic current to membrane potential. They handle the singularity at <computeroutput>tau_m == tau_syn_*</computeroutput> properly.</para>
<para><simplesect kind="see"><para><computeroutput>&lt;NEST_SOURCE&gt;/doc/userdoc/model_details/IAF_Integration_Singularity.ipynb</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>IAFPropagator</label>
        <link refid="classIAFPropagator"/>
      </node>
      <node id="2">
        <label>IAFPropagatorAlpha</label>
        <link refid="classIAFPropagatorAlpha"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>IAFPropagatorExp</label>
        <link refid="classIAFPropagatorExp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" line="43" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iaf_propagator.h" bodystart="44" bodyend="94"/>
    <listofallmembers>
      <member refid="classIAFPropagator_1a945890af6732bf0e459fe78f95df116e" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>beta_</name></member>
      <member refid="classIAFPropagator_1a3e6e58ca60f33574e73b9f55d313c42d" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>c_m_</name></member>
      <member refid="classIAFPropagator_1a7e3c80385122a58bc5c6972ac5bf5fb1" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>evaluate_P32_</name></member>
      <member refid="classIAFPropagator_1a5d899ceb2ece308b2334dc78a84e3558" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>gamma_</name></member>
      <member refid="classIAFPropagator_1a6a20cff8f778b981fac80b0370e0ef06" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>h_min_regular_</name></member>
      <member refid="classIAFPropagator_1a3bb1cd56f070bcf29822d21546317184" prot="public" virt="non-virtual"><scope>IAFPropagator</scope><name>IAFPropagator</name></member>
      <member refid="classIAFPropagator_1a07c7eb04dcd535598b5b63df51d5999b" prot="public" virt="non-virtual"><scope>IAFPropagator</scope><name>IAFPropagator</name></member>
      <member refid="classIAFPropagator_1a56a3c1df5cbf82e45c73f70b7c3b92be" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>inv_beta_</name></member>
      <member refid="classIAFPropagator_1a7cde3156dd3b1f09960712b0b7d8dfca" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>inv_c_m_</name></member>
      <member refid="classIAFPropagator_1aa1926c9dbadaa5f43fe8c69a9fae94bc" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>inv_tau_m_</name></member>
      <member refid="classIAFPropagator_1aa4d455c03c09bbade2addd4a7fd3b72d" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>inv_tau_syn_</name></member>
      <member refid="classIAFPropagator_1ac016a85ac35a716b4d6093b11f0330b7" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>NUMERICAL_STABILITY_FACTOR_</name></member>
      <member refid="classIAFPropagator_1a87e628baa0a931a252326a2a4cae84fb" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>tau_m_</name></member>
      <member refid="classIAFPropagator_1ae57f3e1858af398ed544bd804c1cac1e" prot="protected" virt="non-virtual"><scope>IAFPropagator</scope><name>tau_syn_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
