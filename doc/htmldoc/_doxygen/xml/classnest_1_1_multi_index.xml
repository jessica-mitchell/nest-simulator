<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_multi_index" kind="class" language="C++" prot="public">
    <compoundname>nest::MultiIndex</compoundname>
    <basecompoundref refid="classnest_1_1_position" prot="public" virt="non-virtual">nest::Position&lt; D, int &gt;</basecompoundref>
    <includes refid="position_8h" local="no">position.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_multi_index_1a42541c7c52a7b7856daf524398410129" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::MultiIndex&lt; D &gt;::lower_left_</definition>
        <argsstring></argsstring>
        <name>lower_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="401" column="12" bodyfile="nestkernel/position.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_multi_index_1a811cefe8d2d3910e54b97a7ed3889c22" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::MultiIndex&lt; D &gt;::upper_right_</definition>
        <argsstring></argsstring>
        <name>upper_right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="402" column="12" bodyfile="nestkernel/position.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_multi_index_1a521dc193a92c64d18ab528423e21a202" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::MultiIndex&lt; D &gt;::MultiIndex</definition>
        <argsstring>()</argsstring>
        <name>MultiIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="336" column="3" bodyfile="nestkernel/position.h" bodystart="336" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1a27cc5a00a1674e53ecddbf5fa441f36b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::MultiIndex&lt; D &gt;::MultiIndex</definition>
        <argsstring>(const Position&lt; D, int &gt; &amp;ur)</argsstring>
        <name>MultiIndex</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt; &amp;</type>
          <declname>ur</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="343" column="12" bodyfile="nestkernel/position.h" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1ad0f71d9d71f3a307730bdc098190637b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::MultiIndex&lt; D &gt;::MultiIndex</definition>
        <argsstring>(const Position&lt; D, int &gt; &amp;lower_left, const Position&lt; D, int &gt; &amp;upper_right)</argsstring>
        <name>MultiIndex</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt; &amp;</type>
          <declname>lower_left</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt; &amp;</type>
          <declname>upper_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="350" column="3" bodyfile="nestkernel/position.h" bodystart="350" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1afecb3754b9bbc86075818a113d8ad8b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_multi_index" kindref="compound">MultiIndex</ref> &amp;</type>
        <definition>MultiIndex&amp; nest::MultiIndex&lt; D &gt;::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="358" column="3" bodyfile="nestkernel/position.h" bodystart="358" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1af4eeaee7ed39fc8fd6adad83d290b9d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_multi_index" kindref="compound">MultiIndex</ref></type>
        <definition>MultiIndex nest::MultiIndex&lt; D &gt;::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="382" column="3" bodyfile="nestkernel/position.h" bodystart="382" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1a4697503cc8282ad0fb621d380a9d0eef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::MultiIndex&lt; D &gt;::get_lower_left</definition>
        <argsstring>() const</argsstring>
        <name>get_lower_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="390" column="3" bodyfile="nestkernel/position.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_multi_index_1abde8de4613b399a04df4489ff3bda005" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::MultiIndex&lt; D &gt;::get_upper_right</definition>
        <argsstring>() const</argsstring>
        <name>get_upper_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/position.h" line="395" column="3" bodyfile="nestkernel/position.h" bodystart="395" bodyend="398"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An index into a multidimensional array. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::MultiIndex&lt; D &gt;</label>
        <link refid="classnest_1_1_multi_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::Position&lt; D, T &gt;</label>
        <link refid="classnest_1_1_position"/>
      </node>
      <node id="2">
        <label>nest::Position&lt; D, int &gt;</label>
        <link refid="classnest_1_1_position"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; D, int &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::MultiIndex&lt; D &gt;</label>
        <link refid="classnest_1_1_multi_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::Position&lt; D, T &gt;</label>
        <link refid="classnest_1_1_position"/>
      </node>
      <node id="2">
        <label>nest::Position&lt; D, int &gt;</label>
        <link refid="classnest_1_1_position"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; D, int &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/position.h" line="333" column="1" bodyfile="nestkernel/position.h" bodystart="334" bodyend="403"/>
    <listofallmembers>
      <member refid="classnest_1_1_multi_index_1a4697503cc8282ad0fb621d380a9d0eef" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>get_lower_left</name></member>
      <member refid="classnest_1_1_multi_index_1abde8de4613b399a04df4489ff3bda005" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>get_upper_right</name></member>
      <member refid="classnest_1_1_position_1a695cc92b6b753a3a6ad0b2f16dc02cf6" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>get_vector</name></member>
      <member refid="classnest_1_1_position_1a16be53adf2c6d497a6699d1d3244147d" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>get_vector</name></member>
      <member refid="classnest_1_1_position_1a11ef1b4583f8d33ecff3a5473844c960" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>getToken</name></member>
      <member refid="classnest_1_1_position_1a5f19f3277241c94e4bc02d83591201ec" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>length</name></member>
      <member refid="classnest_1_1_multi_index_1a42541c7c52a7b7856daf524398410129" prot="private" virt="non-virtual"><scope>nest::MultiIndex</scope><name>lower_left_</name></member>
      <member refid="classnest_1_1_multi_index_1a521dc193a92c64d18ab528423e21a202" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>MultiIndex</name></member>
      <member refid="classnest_1_1_multi_index_1a27cc5a00a1674e53ecddbf5fa441f36b" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>MultiIndex</name></member>
      <member refid="classnest_1_1_multi_index_1ad0f71d9d71f3a307730bdc098190637b" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>MultiIndex</name></member>
      <member refid="classnest_1_1_position_1a9c255158acd892365602ee4ea9ed9e9c" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator std::string</name></member>
      <member refid="classnest_1_1_position_1a7af2a1bef86c5b10080607beed34e520" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator!=</name></member>
      <member refid="classnest_1_1_position_1ad0d4e7e4bc6ed9def43180973c18768d" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*</name></member>
      <member refid="classnest_1_1_position_1aeb0a935965216f6f289571a3e076fb59" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*</name></member>
      <member refid="classnest_1_1_position_1ae7de3308f1fd81276009a3d9e38bb6f8" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*</name></member>
      <member refid="classnest_1_1_position_1a6bf2669b01e66cc660bd4e68cee20daf" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*=</name></member>
      <member refid="classnest_1_1_position_1a3b91647467c8e72d468dd68ca6a9830b" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*=</name></member>
      <member refid="classnest_1_1_position_1a7c2e728c75b492450da0847c62347563" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator*=</name></member>
      <member refid="classnest_1_1_position_1a939c49d7ed7f6037dad726f19b35bc64" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+</name></member>
      <member refid="classnest_1_1_position_1a0a0460386ea216dbdfcdf40302a14548" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+</name></member>
      <member refid="classnest_1_1_position_1a516933cb09c16e0a95d0c44d159a70d2" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+</name></member>
      <member refid="classnest_1_1_multi_index_1afecb3754b9bbc86075818a113d8ad8b8" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator++</name></member>
      <member refid="classnest_1_1_multi_index_1af4eeaee7ed39fc8fd6adad83d290b9d7" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator++</name></member>
      <member refid="classnest_1_1_position_1ad9149dbf94dbe1a46616079b8907eb39" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+=</name></member>
      <member refid="classnest_1_1_position_1ad70043e5ccadba044f5ea76ca92d0fa0" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+=</name></member>
      <member refid="classnest_1_1_position_1ae2aff0edf4d42f380c2a7b15e11bb77b" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator+=</name></member>
      <member refid="classnest_1_1_position_1a9e88b35f4d1d6a3bf6e8c93156367e5b" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-</name></member>
      <member refid="classnest_1_1_position_1a0a0340a424277029707fdf7c041b12f0" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-</name></member>
      <member refid="classnest_1_1_position_1acc97ce197fe46b1de9ca3ba7fa609756" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-</name></member>
      <member refid="classnest_1_1_position_1ae829111640b7fb0187408ac86f7f8e42" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-</name></member>
      <member refid="classnest_1_1_position_1a2eee930a7083922f46a344287ebe52d5" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-=</name></member>
      <member refid="classnest_1_1_position_1ab071037396ed9c47d8ba847a8ff850e9" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-=</name></member>
      <member refid="classnest_1_1_position_1af511d8fe9523040f9bea4d18b80c5536" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator-=</name></member>
      <member refid="classnest_1_1_position_1a7075ecaeac751ba3c549a57f5b0db5a9" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/</name></member>
      <member refid="classnest_1_1_position_1a7ff5277f651acf59ea592eda688f2718" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/</name></member>
      <member refid="classnest_1_1_position_1a1cfc98cd91268a6bbc8a322f840188f1" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/</name></member>
      <member refid="classnest_1_1_position_1a7c44719addfb4873791ed62905479d7f" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/=</name></member>
      <member refid="classnest_1_1_position_1ad662ae7af78c2d59baf3c37199594eb2" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/=</name></member>
      <member refid="classnest_1_1_position_1a91c18f4a24fc054526fdd02ed9834deb" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator/=</name></member>
      <member refid="classnest_1_1_position_1a7309d336c306d1feb95e0415b137f81e" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator&lt;</name></member>
      <member refid="classnest_1_1_position_1a17205b277b82b336e148a86d9489c079" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator&lt;=</name></member>
      <member refid="classnest_1_1_position_1ade1180bde91aec4deaf7952e1edaeab9" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator=</name></member>
      <member refid="classnest_1_1_position_1a2f69744c7720f0345772a10b3c887bc5" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator=</name></member>
      <member refid="classnest_1_1_position_1ab653d8a9cadd121fcca39e04883b0df1" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator=</name></member>
      <member refid="classnest_1_1_position_1af3fb3bc4f848e46d8c5c6b143ab6fcc0" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator==</name></member>
      <member refid="classnest_1_1_position_1ade576f834d11116622829d75b6bca844" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator&gt;</name></member>
      <member refid="classnest_1_1_position_1a8c67c0e5cb6a1261308f001475759e68" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator&gt;=</name></member>
      <member refid="classnest_1_1_position_1a3a46e46a52ce01d10b213b1121dd54bd" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator[]</name></member>
      <member refid="classnest_1_1_position_1aee7b6fb0014b41434888d98610a93d69" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>operator[]</name></member>
      <member refid="classnest_1_1_position_1a2d53c87e77c6be0a5be95a0a2c6b6dbc" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a609dd2d167d59b0ba5f16dd7631304ef" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a4402be48c9293455d077be3bb19dd902" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a374e4070a06415514d53cbec5cabc701" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1ac4562f303d63d579e2a5b316957c6ba0" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a646decae5fc33c027dfac5089a64f4cb" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a8e77e0ea8fcb8d913f0ff56ec2f8af93" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a3b8849803540053391e77f6992771eaf" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>Position</name></member>
      <member refid="classnest_1_1_position_1a04a0c36eec1e69ef8f7a8e28caf69430" prot="public" virt="non-virtual"><scope>nest::MultiIndex</scope><name>print</name></member>
      <member refid="classnest_1_1_multi_index_1a811cefe8d2d3910e54b97a7ed3889c22" prot="private" virt="non-virtual"><scope>nest::MultiIndex</scope><name>upper_right_</name></member>
      <member refid="classnest_1_1_position_1ac27cc3e93376b808ca8c6d6880a0f04d" prot="protected" virt="non-virtual"><scope>nest::MultiIndex</scope><name>x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
