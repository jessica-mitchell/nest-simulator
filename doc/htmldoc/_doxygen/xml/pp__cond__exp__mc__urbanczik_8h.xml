<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="pp__cond__exp__mc__urbanczik_8h" kind="file" language="C++">
    <compoundname>pp_cond_exp_mc_urbanczik.h</compoundname>
    <includes local="yes">config.h</includes>
    <includedby refid="modelsmodule_8cpp" local="yes">modelsmodule.cpp</includedby>
    <includedby refid="pp__cond__exp__mc__urbanczik_8cpp" local="yes">pp_cond_exp_mc_urbanczik.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>pp_cond_exp_mc_urbanczik.h</label>
        <link refid="pp__cond__exp__mc__urbanczik_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
      <node id="3">
        <label>pp_cond_exp_mc_urbanczik.cpp</label>
        <link refid="pp__cond__exp__mc__urbanczik_8cpp"/>
      </node>
      <node id="1">
        <label>pp_cond_exp_mc_urbanczik.h</label>
        <link refid="pp__cond__exp__mc__urbanczik_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>pp_cond_exp_mc_urbanczik.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PP_COND_EXP_MC_URBANCZIK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PP_COND_EXP_MC_URBANCZIK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_matrix.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_odeiv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection_8h" kindref="compound">connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__types_8h" kindref="compound">nest_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random__generators_8h" kindref="compound">random_generators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="recordables__map_8h" kindref="compound">recordables_map.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ring__buffer_8h" kindref="compound">ring_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger_8h" kindref="compound">universal_data_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="urbanczik__archiving__node_8h" kindref="compound">urbanczik_archiving_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="urbanczik__archiving__node__impl_8h" kindref="compound">urbanczik_archiving_node_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictdatum_8h" kindref="compound">dictdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="name_8h" kindref="compound">name.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pp_cond_exp_mc_urbanczik_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">pp_cond_exp_mc_urbanczik_parameters</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">pp_cond_exp_mc_urbanczik;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UrbanczikArchivingNode&lt;<sp/>pp_cond_exp_mc_urbanczik_parameters<sp/>&gt;;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Compartments_</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>SOMA<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>DEND,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>NCOMP</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ac04338e2327c9fa7a7d88e7b65260c1e" kindref="member">phi_max</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a56cca500fe2455bfe5a56ac7c1719886" kindref="member">rate_slope</ref>;<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1adf1fbc4cd86188c4752d22797704cb29" kindref="member">beta</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a77d5b21699250145de1b1b61d398de14" kindref="member">theta</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a28927084c4ac3443d239b5bb2988761e" kindref="member">h</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Urbanczik<sp/>parameters<sp/>need<sp/>to<sp/>be<sp/>public<sp/>within<sp/>this<sp/>class<sp/>as<sp/>they<sp/>are<sp/>passed<sp/>to<sp/>the<sp/>GSL<sp/>solver</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_conn[<sp/>NCOMP<sp/>];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a6a90c30349b856f56b527a2a07521b69" kindref="member">g_L</ref>[<sp/>NCOMP<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a87c37b74ee8ef5b94a8cf290a29adbde" kindref="member">C_m</ref>[<sp/>NCOMP<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8716ae8315df1d512b346b4243e2556d" kindref="member">E_L</ref>[<sp/>NCOMP<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ab5a781c8f1826513a5f819a0117eab12" kindref="member">tau_syn_ex</ref>[<sp/>NCOMP<sp/>];<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aea360b5d2075a57b3a3eb724a991b935" kindref="member">tau_syn_in</ref>[<sp/>NCOMP<sp/>];<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>neuron,<sp/>point<sp/>process,<sp/>conductance-based</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">Short<sp/>description</highlight></codeline>
<codeline lineno="111"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">Two-compartment<sp/>point<sp/>process<sp/>neuron<sp/>with<sp/>conductance-based<sp/>synapses</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="116"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">pp_cond_exp_mc_urbanczik<sp/>is<sp/>an<sp/>implementation<sp/>of<sp/>a<sp/>two-compartment<sp/>spiking</highlight></codeline>
<codeline lineno="119"><highlight class="comment">point<sp/>process<sp/>neuron<sp/>with<sp/>conductance-based<sp/>synapses<sp/>as<sp/>it<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="120"><highlight class="comment">in<sp/>[1]_.<sp/>It<sp/>is<sp/>capable<sp/>of<sp/>connecting<sp/>to<sp/>an<sp/>:doc:`Urbanczik<sp/>synapse</highlight></codeline>
<codeline lineno="121"><highlight class="comment">&lt;urbanczik_synapse&gt;`.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">The<sp/>model<sp/>has<sp/>two<sp/>compartments:<sp/>soma<sp/>and<sp/>dendrite,<sp/>labeled<sp/>as<sp/>s<sp/>and<sp/>p,</highlight></codeline>
<codeline lineno="124"><highlight class="comment">respectively.<sp/>Each<sp/>compartment<sp/>can<sp/>receive<sp/>spike<sp/>events<sp/>and<sp/>current<sp/>input</highlight></codeline>
<codeline lineno="125"><highlight class="comment">from<sp/>a<sp/>current<sp/>generator.<sp/>Additionally,<sp/>an<sp/>external<sp/>(rheobase)<sp/>current<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="126"><highlight class="comment">set<sp/>for<sp/>each<sp/>compartment.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">Synapses,<sp/>including<sp/>those<sp/>for<sp/>injection<sp/>external<sp/>currents,<sp/>are<sp/>addressed<sp/>through</highlight></codeline>
<codeline lineno="129"><highlight class="comment">the<sp/>receptor<sp/>types<sp/>given<sp/>in<sp/>the<sp/>receptor_types<sp/>entry<sp/>of<sp/>the<sp/>state<sp/>dictionary.</highlight></codeline>
<codeline lineno="130"><highlight class="comment">Note<sp/>that<sp/>in<sp/>contrast<sp/>to<sp/>the<sp/>single-compartment<sp/>models,<sp/>all</highlight></codeline>
<codeline lineno="131"><highlight class="comment">synaptic<sp/>weights<sp/>must<sp/>be<sp/>positive<sp/>numbers!<sp/>The<sp/>distinction<sp/>between<sp/>excitatory</highlight></codeline>
<codeline lineno="132"><highlight class="comment">and<sp/>inhibitory<sp/>synapses<sp/>is<sp/>made<sp/>explicitly<sp/>by<sp/>specifying<sp/>the<sp/>receptor<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="133"><highlight class="comment">the<sp/>synapse.<sp/>For<sp/>example,<sp/>receptor_type=dendritic_exc<sp/>results<sp/>in<sp/>an<sp/>excitatory</highlight></codeline>
<codeline lineno="134"><highlight class="comment">input<sp/>and<sp/>receptor_type=dendritic_inh<sp/>results<sp/>in<sp/>an<sp/>inhibitory<sp/>input<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="135"><highlight class="comment">dendritic<sp/>compartment.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">..<sp/>_multicompartment-models:</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment">Multicompartment<sp/>models<sp/>and<sp/>synaptic<sp/>delays</highlight></codeline>
<codeline lineno="140"><highlight class="comment">+++++++++++++++++++++++++++++++++++++++++++</highlight></codeline>
<codeline lineno="141"><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">Note<sp/>that<sp/>in<sp/>case<sp/>of<sp/>multicompartment<sp/>models<sp/>that<sp/>represent<sp/>the<sp/>dendrite</highlight></codeline>
<codeline lineno="143"><highlight class="comment">explicitly,<sp/>the<sp/>interpretation<sp/>of<sp/>the<sp/>synaptic<sp/>delay<sp/>in<sp/>NEST<sp/>requires<sp/>careful</highlight></codeline>
<codeline lineno="144"><highlight class="comment">consideration.<sp/>In<sp/>NEST,<sp/>the<sp/>delay<sp/>is<sp/>at<sp/>least<sp/>one<sp/>simulation<sp/>time<sp/>step<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="145"><highlight class="comment">assumed<sp/>to<sp/>be<sp/>located<sp/>entirely<sp/>at<sp/>the<sp/>postsynaptic<sp/>side.<sp/>For<sp/>point<sp/>neurons,<sp/>it</highlight></codeline>
<codeline lineno="146"><highlight class="comment">represents<sp/>the<sp/>time<sp/>it<sp/>takes<sp/>for<sp/>an<sp/>incoming<sp/>spike<sp/>to<sp/>travel<sp/>along<sp/>the</highlight></codeline>
<codeline lineno="147"><highlight class="comment">postsynaptic<sp/>dendrite<sp/>before<sp/>it<sp/>reaches<sp/>the<sp/>soma,<sp/>see<sp/>:ref:`panel<sp/>a)</highlight></codeline>
<codeline lineno="148"><highlight class="comment">&lt;fig-multicompartment&gt;`.<sp/>Conversely,<sp/>if<sp/>the<sp/>synaptic<sp/>weight<sp/>depends<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="149"><highlight class="comment">state<sp/>of<sp/>the<sp/>postsynaptic<sp/>neuron,<sp/>the<sp/>delay<sp/>also<sp/>represents<sp/>the<sp/>time<sp/>it<sp/>takes</highlight></codeline>
<codeline lineno="150"><highlight class="comment">for<sp/>the<sp/>information<sp/>on<sp/>the<sp/>state<sp/>to<sp/>propagate<sp/>back<sp/>through<sp/>the<sp/>dendrite<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment">synapse.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment">For<sp/>multicompartment<sp/>models<sp/>in<sp/>NEST,<sp/>this<sp/>means<sp/>the<sp/>delay<sp/>is<sp/>positioned<sp/>directly</highlight></codeline>
<codeline lineno="154"><highlight class="comment">behind<sp/>the<sp/>incoming<sp/>synapse,<sp/>that<sp/>is,<sp/>before<sp/>the<sp/>first<sp/>dendritic<sp/>compartment<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="155"><highlight class="comment">postsynaptic<sp/>side,<sp/>see<sp/>:ref:`panel<sp/>b)<sp/>&lt;fig-multicompartment&gt;`.<sp/>Therefore,<sp/>the</highlight></codeline>
<codeline lineno="156"><highlight class="comment">delay<sp/>specified<sp/>in<sp/>the<sp/>synapse<sp/>model<sp/>does<sp/>*not*<sp/>account<sp/>for<sp/>any<sp/>delay<sp/>that<sp/>might</highlight></codeline>
<codeline lineno="157"><highlight class="comment">be<sp/>associated<sp/>with<sp/>information<sp/>traveling<sp/>through<sp/>the<sp/>explicitly<sp/>modeled</highlight></codeline>
<codeline lineno="158"><highlight class="comment">dendritic<sp/>compartments.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">In<sp/>the<sp/>:doc:`Urbanczik<sp/>synapse<sp/>&lt;urbanczik_synapse&gt;`,<sp/>the<sp/>change<sp/>of<sp/>the<sp/>synaptic</highlight></codeline>
<codeline lineno="161"><highlight class="comment">weight<sp/>is<sp/>driven<sp/>by<sp/>an<sp/>error<sp/>signal,<sp/>which<sp/>is<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>firing</highlight></codeline>
<codeline lineno="162"><highlight class="comment">rate<sp/>of<sp/>the<sp/>soma<sp/>(derived<sp/>from<sp/>the<sp/>somatic<sp/>spike<sp/>train<sp/>:math:`S_{post}`)<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="163"><highlight class="comment">dendritic<sp/>prediction<sp/>of<sp/>the<sp/>firing<sp/>rate<sp/>of<sp/>the<sp/>soma<sp/>(derived<sp/>from<sp/>the<sp/>dendritic</highlight></codeline>
<codeline lineno="164"><highlight class="comment">membrane<sp/>potential<sp/>:math:`V`).<sp/>The<sp/>original<sp/>publication<sp/>[1]_<sp/>does<sp/>not<sp/>assume<sp/>any</highlight></codeline>
<codeline lineno="165"><highlight class="comment">delay<sp/>in<sp/>the<sp/>interaction<sp/>between<sp/>the<sp/>soma<sp/>and<sp/>the<sp/>dendritic<sp/>compartment.</highlight></codeline>
<codeline lineno="166"><highlight class="comment">Therefore,<sp/>we<sp/>evaluate<sp/>the<sp/>firing<sp/>rate<sp/>and<sp/>the<sp/>dendritic<sp/>prediction<sp/>at<sp/>equal</highlight></codeline>
<codeline lineno="167"><highlight class="comment">time<sp/>points<sp/>to<sp/>calculate<sp/>the<sp/>error<sp/>signal<sp/>at<sp/>that<sp/>time<sp/>point.<sp/>Due<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="168"><highlight class="comment">synaptic<sp/>delay<sp/>:math:`d`,<sp/>the<sp/>synapse<sp/>combines<sp/>a<sp/>delayed<sp/>version<sp/>of<sp/>the<sp/>error</highlight></codeline>
<codeline lineno="169"><highlight class="comment">signal<sp/>with<sp/>the<sp/>presynaptic<sp/>spike<sp/>train<sp/>(:math:`S_{pre}`),<sp/>see<sp/>:ref:`panel<sp/>c)</highlight></codeline>
<codeline lineno="170"><highlight class="comment">&lt;fig-multicompartment&gt;`.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight></codeline>
<codeline lineno="172"><highlight class="comment">..<sp/>_fig-multicompartment:</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment">..<sp/>figure::<sp/>../static/img/multicompartment.png</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>:width:<sp/>75<sp/>%</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>a)<sp/>Two<sp/>point<sp/>neurons<sp/>(red<sp/>circles<sp/>*pre*<sp/>and<sp/>*post*)<sp/>connected<sp/>via<sp/>a<sp/>synapse.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>In<sp/>NEST,<sp/>the<sp/>delay<sp/>is<sp/>entirely<sp/>on<sp/>the<sp/>postsynaptic<sp/>side,<sp/>and<sp/>in<sp/>the<sp/>case<sp/>of<sp/>point</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>neurons,<sp/>it<sp/>is<sp/>interpreted<sp/>as<sp/>the<sp/>dendritic<sp/>delay.<sp/>b)<sp/>Two<sp/>two-compartment</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>neuron<sp/>models<sp/>composed<sp/>of<sp/>a<sp/>somatic<sp/>(green)<sp/>and<sp/>a<sp/>dendritic<sp/>(blue)</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>compartment.<sp/>The<sp/>soma<sp/>of<sp/>the<sp/>presynaptic<sp/>neuron<sp/>is<sp/>connected<sp/>to<sp/>the<sp/>dendrite</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>of<sp/>the<sp/>postsynaptic<sp/>neuron.<sp/>The<sp/>synaptic<sp/>delay<sp/>is<sp/>located<sp/>behind<sp/>the<sp/>synapse</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>and<sp/>before<sp/>the<sp/>dendrite.<sp/>c)<sp/>Time<sp/>trace<sp/>of<sp/>the<sp/>State<sp/>variables<sp/>that<sp/>enter<sp/>the</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>Urbanczik-Senn<sp/>rule.<sp/>Due<sp/>to<sp/>the<sp/>synaptic<sp/>delay<sp/>:math:`d`,<sp/>the<sp/>presynaptic</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>spike<sp/>train<sp/>(top)<sp/>is<sp/>combined<sp/>with<sp/>a<sp/>delayed<sp/>version<sp/>of<sp/>the<sp/>postsynaptic</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>quantities;<sp/>the<sp/>dendritic<sp/>membrane<sp/>potential<sp/>(middle)<sp/>and<sp/>the<sp/>somatic<sp/>spike</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>train<sp/>(bottom).</highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment">See<sp/>:doc:`../auto_examples/urbanczik_synapse_example`<sp/>to<sp/>learn<sp/>more.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"></highlight></codeline>
<codeline lineno="191"><highlight class="comment">Parameters</highlight></codeline>
<codeline lineno="192"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">The<sp/>following<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>in<sp/>the<sp/>status<sp/>dictionary.<sp/>Parameters</highlight></codeline>
<codeline lineno="195"><highlight class="comment">for<sp/>each<sp/>compartment<sp/>are<sp/>collected<sp/>in<sp/>a<sp/>sub-dictionary;<sp/>these<sp/>sub-dictionaries</highlight></codeline>
<codeline lineno="196"><highlight class="comment">are<sp/>called<sp/>&quot;soma&quot;<sp/>and<sp/>&quot;dendritic&quot;,<sp/>respectively.<sp/>In<sp/>the<sp/>list<sp/>below,</highlight></codeline>
<codeline lineno="197"><highlight class="comment">these<sp/>parameters<sp/>are<sp/>marked<sp/>with<sp/>an<sp/>asterisk.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">============<sp/><sp/><sp/>=====<sp/><sp/><sp/>=====================================================</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>V_m*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Membrane<sp/>potential</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>E_L*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>C_m*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pF<sp/><sp/><sp/><sp/><sp/><sp/>Capacity<sp/>of<sp/>the<sp/>membrane</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>E_ex*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Excitatory<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>E_in*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Inhibitory<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>g_L*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nS<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>conductance</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>tau_syn_ex*<sp/><sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Rise<sp/>time<sp/>of<sp/>the<sp/>excitatory<sp/>synaptic<sp/>alpha<sp/>function</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>tau_syn_in*<sp/><sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Rise<sp/>time<sp/>of<sp/>the<sp/>inhibitory<sp/>synaptic<sp/>alpha<sp/>function</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>I_e*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pA<sp/><sp/><sp/><sp/><sp/><sp/>Constant<sp/>input<sp/>current</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>g_sp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nS<sp/><sp/><sp/><sp/><sp/><sp/>Coupling<sp/>between<sp/>soma<sp/>and<sp/>dendrite</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>g_ps<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nS<sp/><sp/><sp/><sp/><sp/><sp/>Coupling<sp/>between<sp/>dendrite<sp/>and<sp/>soma</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>t_ref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Duration<sp/>of<sp/>refractory<sp/>period</highlight></codeline>
<codeline lineno="212"><highlight class="comment">============<sp/><sp/><sp/>=====<sp/><sp/><sp/>=====================================================</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">..<sp/>note::</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>The<sp/>neuron<sp/>model<sp/>uses<sp/>standard<sp/>units<sp/>of<sp/>NEST<sp/>instead<sp/>of<sp/>the<sp/>unitless<sp/>quantities</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>used<sp/>in<sp/>[1]_.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">..<sp/>note::</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/>All<sp/>parameters<sp/>that<sp/>occur<sp/>for<sp/>both<sp/>compartments<sp/>are<sp/>stored<sp/>as<sp/>C<sp/>arrays,<sp/>with</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/>index<sp/>0<sp/>being<sp/>soma.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">Sends</highlight></codeline>
<codeline lineno="225"><highlight class="comment">+++++</highlight></codeline>
<codeline lineno="226"><highlight class="comment"></highlight></codeline>
<codeline lineno="227"><highlight class="comment">SpikeEvent</highlight></codeline>
<codeline lineno="228"><highlight class="comment"></highlight></codeline>
<codeline lineno="229"><highlight class="comment">Receives</highlight></codeline>
<codeline lineno="230"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="231"><highlight class="comment"></highlight></codeline>
<codeline lineno="232"><highlight class="comment">SpikeEvent,<sp/>CurrentEvent,<sp/>DataLoggingRequest</highlight></codeline>
<codeline lineno="233"><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment">References</highlight></codeline>
<codeline lineno="235"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="236"><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">..<sp/>[1]<sp/>R.<sp/>Urbanczik,<sp/>W.<sp/>Senn<sp/>(2014).<sp/>Learning<sp/>by<sp/>the<sp/>Dendritic<sp/>Prediction<sp/>of</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Somatic<sp/>Spiking.<sp/>Neuron,<sp/>81,<sp/>521<sp/>-<sp/>528.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"></highlight></codeline>
<codeline lineno="240"><highlight class="comment">See<sp/>also</highlight></codeline>
<codeline lineno="241"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">urbanczik_synapse</highlight></codeline>
<codeline lineno="244"><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">pp_cond_exp_mc_urbanczik<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UrbanczikArchivingNode&lt;<sp/>pp_cond_exp_mc_urbanczik_parameters<sp/>&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Boilerplate<sp/>function<sp/>declarations<sp/>--------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>pp_cond_exp_mc_urbanczik();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>pp_cond_exp_mc_urbanczik(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pp_cond_exp_mc_urbanczik&amp;<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>~pp_cond_exp_mc_urbanczik()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Node::handle;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Node::handles_test_event;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>send_test_event(<sp/>Node&amp;,<sp/>rport,<sp/>synindex,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>SpikeEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>CurrentEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>DataLoggingRequest&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>SpikeEvent&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>CurrentEvent&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>DataLoggingRequest&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_buffers_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pre_run_hook()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enumerations<sp/>and<sp/>constants<sp/>specifying<sp/>structure<sp/>and<sp/>properties<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Compartments_</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>SOMA<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>DEND,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>NCOMP</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>MIN_SPIKE_RECEPTOR<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SpikeSynapseTypes</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>SOMA_EXC<sp/>=<sp/>MIN_SPIKE_RECEPTOR,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>SOMA_INH,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>DEND_EXC,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>DEND_INH,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>SUP_SPIKE_RECEPTOR</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_SPIKE_RECEPTORS<sp/>=<sp/>SUP_SPIKE_RECEPTOR<sp/>-<sp/>MIN_SPIKE_RECEPTOR;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>MIN_CURR_RECEPTOR<sp/>=<sp/>SUP_SPIKE_RECEPTOR;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CurrentSynapseTypes</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>I_SOMA<sp/>=<sp/>MIN_CURR_RECEPTOR,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>I_DEND,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>SUP_CURR_RECEPTOR</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NUM_CURR_RECEPTORS<sp/>=<sp/>SUP_CURR_RECEPTOR<sp/>-<sp/>MIN_CURR_RECEPTOR;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Friends<sp/>--------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pp_cond_exp_mc_urbanczik_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RecordablesMap&lt;<sp/>pp_cond_exp_mc_urbanczik<sp/>&gt;;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UniversalDataLogger&lt;<sp/>pp_cond_exp_mc_urbanczik<sp/>&gt;;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parameters_</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1af1fb8d4c65ef19902f7afc8e18e1389e" kindref="member">t_ref</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a856019da6532789ca3007b8637a19f9b" kindref="member">E_ex</ref>[<sp/>NCOMP<sp/>];<sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1acea574c5312a876c705815b1c406bf29" kindref="member">E_in</ref>[<sp/>NCOMP<sp/>];<sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a17aa476db9e655c644567ffca7c7d797" kindref="member">I_e</ref>[<sp/>NCOMP<sp/>];<sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>pp_cond_exp_mc_urbanczik_parameters<sp/>urbanczik_params;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dead_time_;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_&amp;<sp/>operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>State<sp/>variables<sp/><sp/>------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">State_</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StateVecElems_</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_M<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_EXC,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_INH,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I_EXC,<sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>paper<sp/>it<sp/>is<sp/>I_dnd<sp/>which<sp/>accounts<sp/>for<sp/>both<sp/>excitation<sp/>and<sp/>inhibition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>I_INH,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STATE_VEC_COMPS</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>STATE_VEC_SIZE<sp/>=<sp/>STATE_VEC_COMPS<sp/>*<sp/>NCOMP;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_[<sp/>STATE_VEC_SIZE<sp/>];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_;<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>State_&amp;<sp/>operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>idx(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>comp,<sp/>StateVecElems_<sp/>elem<sp/>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>comp<sp/>*<sp/>STATE_VEC_COMPS<sp/>+<sp/>elem<sp/>&lt;<sp/>STATE_VEC_SIZE<sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comp<sp/>*<sp/>STATE_VEC_COMPS<sp/>+<sp/>elem;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>buffers<sp/>--------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffers_</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/>pp_cond_exp_mc_urbanczik&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>pp_cond_exp_mc_urbanczik&amp;<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>UniversalDataLogger&lt;<sp/>pp_cond_exp_mc_urbanczik<sp/>&gt;<sp/>logger_;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>RingBuffer<sp/>&gt;<sp/>spikes_;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>RingBuffer<sp/>&gt;<sp/>currents_;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step*<sp/>s_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control*<sp/>c_;<sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve*<sp/>e_;<sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_system<sp/>sys_;<sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IntegrationStep_<sp/>should<sp/>be<sp/>reset<sp/>with<sp/>the<sp/>neuron<sp/>on<sp/>ResetNetwork,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>remain<sp/>unchanged<sp/>during<sp/>calibration.<sp/>Since<sp/>it<sp/>is<sp/>initialized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>step_,<sp/>and<sp/>the<sp/>resolution<sp/>cannot<sp/>change<sp/>after<sp/>nodes<sp/>have<sp/>been<sp/>created,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>place<sp/>both<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IntegrationStep_;<sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_stim_[<sp/>NCOMP<sp/>];<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>variables<sp/>---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Variables_</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RefractoryCounts_;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>rng_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a029d39a54b072ac3629089166eb790d0" kindref="member">poisson_distribution</ref><sp/>poisson_dist_;<sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>functions<sp/>for<sp/>UniversalDataLogger<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/>State_::StateVecElems_<sp/>elem,<sp/>Compartments_<sp/>comp<sp/>&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>get_y_elem_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="505"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.y_[<sp/>S_.idx(<sp/>comp,<sp/>elem<sp/>)<sp/>];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>get_r_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="512"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Time::get_resolution().get_ms()<sp/>*<sp/>S_.r_;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>members<sp/>----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>Parameters_<sp/>P_;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>State_<sp/>S_;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>Variables_<sp/>V_;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>Buffers_<sp/>B_;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>Name<sp/>&gt;<sp/>comp_names_;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>DictionaryDatum<sp/>receptor_dict_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RecordablesMap&lt;<sp/>pp_cond_exp_mc_urbanczik<sp/>&gt;<sp/>recordablesMap_;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inline<sp/>functions<sp/>of<sp/>pp_cond_exp_mc_urbanczik_parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">pp_cond_exp_mc_urbanczik_parameters::phi(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="537"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1ac04338e2327c9fa7a7d88e7b65260c1e" kindref="member">phi_max</ref><sp/>/<sp/>(<sp/>1.0<sp/>+<sp/><ref refid="namespacenest_1_1names_1a56cca500fe2455bfe5a56ac7c1719886" kindref="member">rate_slope</ref><sp/>*<sp/>exp(<sp/>beta<sp/>*<sp/>(<sp/>theta<sp/>-<sp/>u<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">pp_cond_exp_mc_urbanczik_parameters::h(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="543"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>15.0<sp/>*<sp/><ref refid="namespacenest_1_1names_1adf1fbc4cd86188c4752d22797704cb29" kindref="member">beta</ref><sp/>/<sp/>(<sp/>1.0<sp/>+<sp/>(<sp/>1.0<sp/>/<sp/><ref refid="namespacenest_1_1names_1a56cca500fe2455bfe5a56ac7c1719886" kindref="member">rate_slope</ref><sp/>)<sp/>*<sp/>exp(<sp/>-beta<sp/>*<sp/>(<sp/>theta<sp/>-<sp/>u<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inline<sp/>functions<sp/>of<sp/>pp_cond_exp_mc_urbanczik</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="550"><highlight class="normal">pp_cond_exp_mc_urbanczik::send_test_event(<sp/>Node&amp;<sp/>target,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>SpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a83d2632e91d15673db6f7990fcdfe232" kindref="member">target</ref>.handles_test_event(<sp/>e,<sp/>receptor_type<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="558"><highlight class="normal">pp_cond_exp_mc_urbanczik::handles_test_event(<sp/>SpikeEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>&lt;<sp/>MIN_SPIKE_RECEPTOR<sp/>or<sp/>receptor_type<sp/>&gt;=<sp/>SUP_SPIKE_RECEPTOR<sp/>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>&lt;<sp/>0<sp/>or<sp/>receptor_type<sp/>&gt;=<sp/>SUP_CURR_RECEPTOR<sp/>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IncompatibleReceptorType(<sp/>receptor_type,<sp/>get_name(),<sp/></highlight><highlight class="stringliteral">&quot;SpikeEvent&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a1a3db5f8f8132d9450c58ae90c7fe89a" kindref="member">receptor_type</ref><sp/>-<sp/>MIN_SPIKE_RECEPTOR;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="575"><highlight class="normal">pp_cond_exp_mc_urbanczik::handles_test_event(<sp/>CurrentEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>&lt;<sp/>MIN_CURR_RECEPTOR<sp/>or<sp/>receptor_type<sp/>&gt;=<sp/>SUP_CURR_RECEPTOR<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>&gt;=<sp/>0<sp/>and<sp/>receptor_type<sp/>&lt;<sp/>MIN_CURR_RECEPTOR<sp/>)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IncompatibleReceptorType(<sp/>receptor_type,<sp/>get_name(),<sp/></highlight><highlight class="stringliteral">&quot;CurrentEvent&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a1a3db5f8f8132d9450c58ae90c7fe89a" kindref="member">receptor_type</ref><sp/>-<sp/>MIN_CURR_RECEPTOR;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="592"><highlight class="normal">pp_cond_exp_mc_urbanczik::handles_test_event(<sp/>DataLoggingRequest&amp;<sp/>dlr,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>&lt;<sp/>0<sp/>or<sp/>receptor_type<sp/>&gt;=<sp/>SUP_CURR_RECEPTOR<sp/>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>IncompatibleReceptorType(<sp/>receptor_type,<sp/>get_name(),<sp/></highlight><highlight class="stringliteral">&quot;DataLoggingRequest&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.logger_.connect_logging_device(<sp/>dlr,<sp/>recordablesMap_<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">pp_cond_exp_mc_urbanczik::get_status(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>P_.get(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>S_.get(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1UrbanczikArchivingNode_1a54cac2900fc5fc3d7b66568de52d8fda" kindref="member">UrbanczikArchivingNode&lt; pp_cond_exp_mc_urbanczik_parameters &gt;::get_status</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a62373422f098eca1af4ddd73144c5928" kindref="member">names::recordables</ref><sp/>]<sp/>=<sp/>recordablesMap_.get_list();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>receptor_dict_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDictionary" kindref="compound">Dictionary</ref>();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1adfec845987d8a0528cea0c36679e93aa" kindref="member">names::soma_exc</ref><sp/>]<sp/>=<sp/>SOMA_EXC;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a10239ffdee0035d7cbfbc3d6b32ad24f" kindref="member">names::soma_inh</ref><sp/>]<sp/>=<sp/>SOMA_INH;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a90fb34211fcdf735805a624f73db32c1" kindref="member">names::soma_curr</ref><sp/>]<sp/>=<sp/>I_SOMA;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a03491b3fd0f1f10ccf26156aeee466ba" kindref="member">names::dendritic_exc</ref><sp/>]<sp/>=<sp/>DEND_EXC;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a8049dd0c9cc1178c94c52459cc9ba3cd" kindref="member">names::dendritic_inh</ref><sp/>]<sp/>=<sp/>DEND_INH;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>(<sp/>*receptor_dict_<sp/>)[<sp/><ref refid="namespacenest_1_1names_1ae682b5febe496d503b61a3c354dad7e7" kindref="member">names::dendritic_curr</ref><sp/>]<sp/>=<sp/>I_DEND;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a748c636c806416cafe9423e52f1acdca" kindref="member">names::receptor_types</ref><sp/>]<sp/>=<sp/>receptor_dict_;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal">pp_cond_exp_mc_urbanczik::set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>Parameters_<sp/>ptmp<sp/>=<sp/>P_;<sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>ptmp.set(<sp/>d<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>State_<sp/>stmp<sp/>=<sp/>S_;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>stmp.set(<sp/>d,<sp/>ptmp<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>know<sp/>that<sp/>(ptmp,<sp/>stmp)<sp/>are<sp/>consistent.<sp/>We<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>them<sp/>back<sp/>to<sp/>(P_,<sp/>S_)<sp/>before<sp/>we<sp/>are<sp/>also<sp/>sure<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>properties<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>parent<sp/>class<sp/>are<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>consistent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1UrbanczikArchivingNode_1a1b118e0208155781e44cbb9ccdb91a87" kindref="member">UrbanczikArchivingNode&lt; pp_cond_exp_mc_urbanczik_parameters &gt;::set_status</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>temporaries<sp/>contain<sp/>consistent<sp/>set<sp/>of<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>P_<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>S_<sp/>=<sp/>stmp;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>PP_COND_EXP_MC_URBANCZIK_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/pp_cond_exp_mc_urbanczik.h"/>
  </compounddef>
</doxygen>
