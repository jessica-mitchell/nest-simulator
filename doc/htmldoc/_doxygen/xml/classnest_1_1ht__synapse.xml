<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1ht__synapse" kind="class" language="C++" prot="public">
    <compoundname>nest::ht_synapse</compoundname>
    <basecompoundref refid="classnest_1_1Connection" prot="public" virt="non-virtual">nest::Connection&lt; targetidentifierT &gt;</basecompoundref>
    <includes refid="ht__synapse_8h" local="no">ht_synapse.h</includes>
    <innerclass refid="classnest_1_1ht__synapse_1_1ConnTestDummyNode" prot="public">nest::ht_synapse::ConnTestDummyNode</innerclass>
    <templateparamlist>
      <param>
        <type>typename targetidentifierT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1ht__synapse_1a8fa689b77774c08ca0135145e06f6218" prot="public" static="no">
        <type><ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref></type>
        <definition>typedef CommonSynapseProperties nest::ht_synapse&lt; targetidentifierT &gt;::CommonPropertiesType</definition>
        <argsstring></argsstring>
        <name>CommonPropertiesType</name>
        <qualifiedname>nest::ht_synapse::CommonPropertiesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="99" column="35" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1ht__synapse_1a034eb46f77f606746a14ebdf2acc2c62" prot="public" static="no">
        <type><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref>&lt; targetidentifierT &gt;</type>
        <definition>typedef Connection&lt; targetidentifierT &gt; nest::ht_synapse&lt; targetidentifierT &gt;::ConnectionBase</definition>
        <argsstring></argsstring>
        <name>ConnectionBase</name>
        <qualifiedname>nest::ht_synapse::ConnectionBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="100" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ht__synapse_1a5c02c5382e86f3f0566696339c4caff1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ht_synapse&lt; targetidentifierT &gt;::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <qualifiedname>nest::ht_synapse::weight_</qualifiedname>
        <briefdescription>
<para>Synaptic weight. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="175" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="175" bodyend="-1"/>
        <referencedby refid="classnest_1_1ht__synapse_1a4acfb32edc3564d2c290d142b13fe36f" compoundref="ht__synapse_8h" startline="169" endline="172">nest::ht_synapse&lt; targetidentifierT &gt;::set_weight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ht__synapse_1a7cbb36b0f4bb56728a54f24cda868415" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ht_synapse&lt; targetidentifierT &gt;::tau_P_</definition>
        <argsstring></argsstring>
        <name>tau_P_</name>
        <qualifiedname>nest::ht_synapse::tau_P_</qualifiedname>
        <briefdescription>
<para><ref refid="classnest_1_1Time" kindref="compound">Time</ref> constant for recovery [ms]. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="177" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ht__synapse_1a8bec74bd2bb2696b411e6c4f3a6ec840" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ht_synapse&lt; targetidentifierT &gt;::delta_P_</definition>
        <argsstring></argsstring>
        <name>delta_P_</name>
        <qualifiedname>nest::ht_synapse::delta_P_</qualifiedname>
        <briefdescription>
<para>Fractional decrease in pool size per spike. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="178" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ht__synapse_1a86bf270a974f5946a68cd78bbd4825b8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ht_synapse&lt; targetidentifierT &gt;::p_</definition>
        <argsstring></argsstring>
        <name>p_</name>
        <qualifiedname>nest::ht_synapse::p_</qualifiedname>
        <briefdescription>
<para>Current pool size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="180" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ht__synapse_1a03c0bb5115a3714b13490a2dd0d0bdbc" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ht_synapse&lt; targetidentifierT &gt;::t_lastspike_</definition>
        <argsstring></argsstring>
        <name>t_lastspike_</name>
        <qualifiedname>nest::ht_synapse::t_lastspike_</qualifiedname>
        <briefdescription>
<para><ref refid="classnest_1_1Time" kindref="compound">Time</ref> point of last spike emitted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="182" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a1536c2b9c7149d673df20447ab68bc93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ht_synapse&lt; targetidentifierT &gt;::ht_synapse</definition>
        <argsstring>()</argsstring>
        <name>ht_synapse</name>
        <qualifiedname>nest::ht_synapse::ht_synapse</qualifiedname>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets default values for all parameters. Needed by <ref refid="classnest_1_1GenericConnectorModel" kindref="compound">GenericConnectorModel</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="106" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="214" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a8a92c0ef507036c62d11363bc2258e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ht_synapse&lt; targetidentifierT &gt;::ht_synapse</definition>
        <argsstring>(const ht_synapse &amp;)=default</argsstring>
        <name>ht_synapse</name>
        <qualifiedname>nest::ht_synapse::ht_synapse</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1ht__synapse" kindref="compound">ht_synapse</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be defined properly in order for GenericConnector to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="112" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1ae7f1a8f72bb5774aedc6adbcfa1405c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::ht_synapse&lt; targetidentifierT &gt;::~ht_synapse</definition>
        <argsstring>()</argsstring>
        <name>~ht_synapse</name>
        <qualifiedname>nest::ht_synapse::~ht_synapse</qualifiedname>
        <briefdescription>
<para>Default Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="126" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1ac3efaf57f117ff18e93c0a44fdf07b66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ht_synapse&lt; targetidentifierT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::ht_synapse::get_status</qualifiedname>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get all properties of this connection and put them into a dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="133" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="226" bodyend="234"/>
        <references refid="namespacenest_1_1names_1ac92b7178f8cb9229d954604872554b84" compoundref="nest__names_8h" startline="150">nest::names::delta_P</references>
        <references refid="namespacenest_1_1names_1a4ef04cf7affa0250c3dd5ef1ae1dc59c" compoundref="nest__names_8h" startline="357">nest::names::P</references>
        <references refid="namespacenest_1_1names_1afb868eddb8599cce2bba3dd5790365b3" compoundref="nest__names_8h" startline="437">nest::names::size_of</references>
        <references refid="namespacenest_1_1names_1a90dc624b87ba468a4ec73fec86ba9b8b" compoundref="nest__names_8h" startline="490">nest::names::tau_P</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a6466ec733759e86d3bc9671e533c232d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ht_synapse&lt; targetidentifierT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d, ConnectorModel &amp;cm)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::ht_synapse::set_status</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Set properties of this connection from the values given in dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="138" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="238" bodyend="261"/>
        <references refid="namespacenest_1_1names_1ac92b7178f8cb9229d954604872554b84" compoundref="nest__names_8h" startline="150">nest::names::delta_P</references>
        <references refid="namespacenest_1_1names_1a4ef04cf7affa0250c3dd5ef1ae1dc59c" compoundref="nest__names_8h" startline="357">nest::names::P</references>
        <references refid="namespacenest_1_1names_1a90dc624b87ba468a4ec73fec86ba9b8b" compoundref="nest__names_8h" startline="490">nest::names::tau_P</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a85a9f295cfbf79aaad79a536ec46c585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ht_synapse&lt; targetidentifierT &gt;::send</definition>
        <argsstring>(Event &amp;e, thread t, const CommonSynapseProperties &amp;cp)</argsstring>
        <name>send</name>
        <qualifiedname>nest::ht_synapse::send</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiver of this connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>Common properties to all synapses (empty).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The port under which this connection is stored in the <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="145" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="193" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a0da57835e4543171639788bb419f69f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ht_synapse&lt; targetidentifierT &gt;::check_connection</definition>
        <argsstring>(Node &amp;s, Node &amp;t, rport receptor_type, const CommonPropertiesType &amp;)</argsstring>
        <name>check_connection</name>
        <qualifiedname>nest::ht_synapse::check_connection</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1ht__synapse_1a8fa689b77774c08ca0135145e06f6218" kindref="member">CommonPropertiesType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="161" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="161" bodyend="165"/>
        <references refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" compoundref="connection_8h" startline="316" endline="343">nest::Connection&lt; targetidentifierT &gt;::check_connection_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a4acfb32edc3564d2c290d142b13fe36f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ht_synapse&lt; targetidentifierT &gt;::set_weight</definition>
        <argsstring>(double w)</argsstring>
        <name>set_weight</name>
        <qualifiedname>nest::ht_synapse::set_weight</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>allows efficient initialization from <ref refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75" kindref="member">ConnectorModel::add_connection()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="169" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="169" bodyend="172"/>
        <references refid="classnest_1_1ht__synapse_1a5c02c5382e86f3f0566696339c4caff1" compoundref="ht__synapse_8h" startline="175">nest::ht_synapse&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a859a57c02d19389a8f6a15c626214c9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::Connection&lt; targetidentifierT &gt;::get_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_delay</name>
        <qualifiedname>nest::ht_synapse::get_delay</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in ms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="118" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Connection&lt; targetidentifierT &gt;::get_delay_steps</definition>
        <argsstring>() const</argsstring>
        <name>get_delay_steps</name>
        <qualifiedname>nest::ht_synapse::get_delay_steps</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="119" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::Connection&lt; targetidentifierT &gt;::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <qualifiedname>nest::ht_synapse::get_rport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="120" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ht__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * nest::Connection&lt; targetidentifierT &gt;::get_target</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target</name>
        <qualifiedname>nest::ht_synapse::get_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="121" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="232" bodyend="235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
      </node>
      <node id="1">
        <label>nest::ht_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1ht__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
        <childnode refid="3" relation="usage">
          <edgelabel>syn_id_delay_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::SynIdDelay</label>
        <link refid="structnest_1_1SynIdDelay"/>
      </node>
      <node id="1">
        <label>nest::ht_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1ht__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" line="96" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/ht_synapse.h" bodystart="97" bodyend="183"/>
    <listofallmembers>
      <member refid="classnest_1_1Connection_1a98a2af4db1c9a34d011be0c89a731c9b" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>calibrate</name></member>
      <member refid="classnest_1_1ht__synapse_1a0da57835e4543171639788bb419f69f9" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>check_connection</name></member>
      <member refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" prot="protected" virt="non-virtual"><scope>nest::ht_synapse</scope><name>check_connection_</name></member>
      <member refid="classnest_1_1Connection_1ae7698c05fc210ced5bbf31b02dd6e05b" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1ht__synapse_1a8fa689b77774c08ca0135145e06f6218" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>CommonPropertiesType</name></member>
      <member refid="classnest_1_1Connection_1acb7166410b78749a3c989e98868d1020" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1Connection_1a9237d0912e8b9c7fbb5d32d4c7abcb8d" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1ht__synapse_1a034eb46f77f606746a14ebdf2acc2c62" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>ConnectionBase</name></member>
      <member refid="classnest_1_1ht__synapse_1a8bec74bd2bb2696b411e6c4f3a6ec840" prot="private" virt="non-virtual"><scope>nest::ht_synapse</scope><name>delta_P_</name></member>
      <member refid="classnest_1_1Connection_1a811dff4d6dbbca5a8cae4de925aa9faf" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>disable</name></member>
      <member refid="classnest_1_1Connection_1a913d4f9af27b5a6145b4f197660ad9a5" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>EventType</name></member>
      <member refid="classnest_1_1ht__synapse_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_delay</name></member>
      <member refid="classnest_1_1ht__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a7c32524ac24f7d591bd14a5cc9219618" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_label</name></member>
      <member refid="classnest_1_1ht__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_rport</name></member>
      <member refid="classnest_1_1ht__synapse_1ac3efaf57f117ff18e93c0a44fdf07b66" prot="public" virt="virtual"><scope>nest::ht_synapse</scope><name>get_status</name></member>
      <member refid="classnest_1_1Connection_1a2aca6e34443f8ef8576e23f097b199df" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_syn_id</name></member>
      <member refid="classnest_1_1ht__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>get_target</name></member>
      <member refid="classnest_1_1ht__synapse_1a1536c2b9c7149d673df20447ab68bc93" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>ht_synapse</name></member>
      <member refid="classnest_1_1ht__synapse_1a8a92c0ef507036c62d11363bc2258e94" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>ht_synapse</name></member>
      <member refid="classnest_1_1Connection_1af8930ce6e4fee3c867cccac967970bd2" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1Connection_1a111070d4cbb64481c2e72cdd65e372db" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1ht__synapse_1a86bf270a974f5946a68cd78bbd4825b8" prot="private" virt="non-virtual"><scope>nest::ht_synapse</scope><name>p_</name></member>
      <member refid="classnest_1_1ht__synapse_1a85a9f295cfbf79aaad79a536ec46c585" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>send</name></member>
      <member refid="classnest_1_1Connection_1abebbbd505fa36932bde4860d98eaed2e" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>set_delay</name></member>
      <member refid="classnest_1_1Connection_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1adce5ef19844ee30d96e7d39b5fe1a7f1" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1ht__synapse_1a6466ec733759e86d3bc9671e533c232d" prot="public" virt="virtual"><scope>nest::ht_synapse</scope><name>set_status</name></member>
      <member refid="classnest_1_1Connection_1a7abf9bd27ab16f395112be31001bae3c" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1ht__synapse_1a4acfb32edc3564d2c290d142b13fe36f" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>set_weight</name></member>
      <member refid="classnest_1_1Connection_1a0007e829af9dc39e624c5f349259a8ca" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>source_has_more_targets</name></member>
      <member refid="classnest_1_1Connection_1a27f971c956034918da99deb971949a26" prot="protected" virt="non-virtual"><scope>nest::ht_synapse</scope><name>syn_id_delay_</name></member>
      <member refid="classnest_1_1ht__synapse_1a03c0bb5115a3714b13490a2dd0d0bdbc" prot="private" virt="non-virtual"><scope>nest::ht_synapse</scope><name>t_lastspike_</name></member>
      <member refid="classnest_1_1Connection_1af2b2773f69c67db7330eb1064a199af7" prot="protected" virt="non-virtual"><scope>nest::ht_synapse</scope><name>target_</name></member>
      <member refid="classnest_1_1ht__synapse_1a7cbb36b0f4bb56728a54f24cda868415" prot="private" virt="non-virtual"><scope>nest::ht_synapse</scope><name>tau_P_</name></member>
      <member refid="classnest_1_1Connection_1aa1e3449ea1e2ff5f7dd2338bbf3feafe" prot="public" virt="non-virtual"><scope>nest::ht_synapse</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1ht__synapse_1a5c02c5382e86f3f0566696339c4caff1" prot="private" virt="non-virtual"><scope>nest::ht_synapse</scope><name>weight_</name></member>
      <member refid="classnest_1_1ht__synapse_1ae7f1a8f72bb5774aedc6adbcfa1405c5" prot="public" virt="virtual"><scope>nest::ht_synapse</scope><name>~ht_synapse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
