<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1RecordingDevice" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::RecordingDevice</compoundname>
    <basecompoundref refid="classnest_1_1DeviceNode" prot="public" virt="non-virtual">nest::DeviceNode</basecompoundref>
    <basecompoundref refid="classnest_1_1Device" prot="public" virt="non-virtual">nest::Device</basecompoundref>
    <derivedcompoundref refid="classnest_1_1multimeter" prot="public" virt="non-virtual">nest::multimeter</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1spike__recorder" prot="public" virt="non-virtual">nest::spike_recorder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1spin__detector" prot="public" virt="non-virtual">nest::spin_detector</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1weight__recorder" prot="public" virt="non-virtual">nest::weight_recorder</derivedcompoundref>
    <includes refid="recording__device_8h" local="no">recording_device.h</includes>
    <innerclass refid="structnest_1_1RecordingDevice_1_1Parameters__" prot="private">nest::RecordingDevice::Parameters_</innerclass>
    <innerclass refid="structnest_1_1RecordingDevice_1_1State__" prot="private">nest::RecordingDevice::State_</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <enumvalue id="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a4f56e4007d9f3ea3fe582738727ec24c" prot="public">
          <name>MULTIMETER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a778e708f1fcba2df5abe761ce5d5a0a7" prot="public">
          <name>SPIKE_RECORDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a7c9a979265a7db7007976fe57b6f2e42" prot="public">
          <name>SPIN_DETECTOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33af51c666ce117b58b1c233f5cbbd1afe8" prot="public">
          <name>WEIGHT_RECORDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="141" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" bodystart="142" bodyend="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1RecordingDevice_1aa5b9b08f6ee49f4f127761b4ec1eb4a9" prot="private" static="no" mutable="no">
        <type>struct <ref refid="structnest_1_1RecordingDevice_1_1Parameters__" kindref="compound">nest::RecordingDevice::Parameters_</ref></type>
        <definition>struct nest::RecordingDevice::Parameters_ nest::RecordingDevice::P_</definition>
        <argsstring></argsstring>
        <name>P_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="171" column="6"/>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">get_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">set_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a79b4d2540dc042282d81d1e7d41fdf81" compoundref="recording__device_8cpp" startline="212" endline="218">write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1RecordingDevice_1ad59ad8688c8df49b3665044ed0fc8b96" prot="private" static="no" mutable="no">
        <type>struct <ref refid="structnest_1_1RecordingDevice_1_1State__" kindref="compound">nest::RecordingDevice::State_</ref></type>
        <definition>struct nest::RecordingDevice::State_ nest::RecordingDevice::S_</definition>
        <argsstring></argsstring>
        <name>S_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="180" column="6"/>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">get_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">set_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a79b4d2540dc042282d81d1e7d41fdf81" compoundref="recording__device_8cpp" startline="212" endline="218">write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1RecordingDevice_1a25fccd5c6a3eee4937e3250ff5e0eec3" prot="private" static="no" mutable="no">
        <type>DictionaryDatum</type>
        <definition>DictionaryDatum nest::RecordingDevice::backend_params_</definition>
        <argsstring></argsstring>
        <name>backend_params_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="182" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" bodystart="182" bodyend="-1"/>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">get_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">set_status</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1ad53e191fdc3d060ffba1345ffc077df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::RecordingDevice::RecordingDevice</definition>
        <argsstring>()</argsstring>
        <name>RecordingDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="132" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a18449921045976fc3bb3c63677515ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::RecordingDevice::RecordingDevice</definition>
        <argsstring>(const RecordingDevice &amp;)</argsstring>
        <name>RecordingDevice</name>
        <param>
          <type>const <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> &amp;</type>
          <defname>rd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="133" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a2d1416e38bec46975b4b79ba2e042fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RecordingDevice::pre_run_hook</definition>
        <argsstring>(const std::vector&lt; Name &gt; &amp;, const std::vector&lt; Name &gt; &amp;)</argsstring>
        <name>pre_run_hook</name>
        <param>
          <type>const std::vector&lt; Name &gt; &amp;</type>
          <defname>double_value_names</defname>
        </param>
        <param>
          <type>const std::vector&lt; Name &gt; &amp;</type>
          <defname>long_value_names</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="137" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="52" bodyend="57"/>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="255">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834" compoundref="device_8cpp" startline="144" endline="153">nest::Device::pre_run_hook</references>
        <references refid="classnest_1_1IOManager_1a4269c5a95da4d9c690469ac18c1076d9" compoundref="io__manager_8cpp" startline="369" endline="375">nest::IOManager::set_recording_value_names</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1afbc0cc70ae3ba2eff8a0d765aa59adb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::RecordingDevice::is_active</definition>
        <argsstring>(Time const &amp;T) const override</argsstring>
        <name>is_active</name>
        <reimplements refid="classnest_1_1Device_1a70ac0c03cf931db59d611a974f51cf3b">is_active</reimplements>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Returns true if the device is active at the given time stamp. </para>
        </briefdescription>
        <detaileddescription>
<para>Semantics are implemented by subclasses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="139" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="204" bodyend="209"/>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" compoundref="device_8h" startline="221" endline="224">nest::Device::get_t_max_</references>
        <references refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" compoundref="device_8h" startline="215" endline="218">nest::Device::get_t_min_</references>
        <referencedby refid="classnest_1_1multimeter_1a69851b4da90acd9a090bf2cde9c1f2d3" compoundref="multimeter_8cpp" startline="203" endline="225">nest::multimeter::handle</referencedby>
        <referencedby refid="classnest_1_1weight__recorder_1aa96e9631d164dd8750501fac70ba4132" compoundref="weight__recorder_8cpp" startline="186" endline="205">nest::weight_recorder::handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a6e4f1c6055f5aeda01bd5b51579703e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33" kindref="member">Type</ref></type>
        <definition>virtual Type nest::RecordingDevice::get_type</definition>
        <argsstring>() const =0</argsstring>
        <name>get_type</name>
        <reimplementedby refid="classnest_1_1multimeter_1a68bf27e4090c368d81e493050ef08738">get_type</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a1ee144335a7b018215296dab6158a610">get_type</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a46a470ae210fd2375d669d70001dad19">get_type</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1ab29fa9b3807518098447ba6e6f120bab">get_type</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="149" column="16"/>
        <referencedby refid="classnest_1_1RecordingBackendMPI_1aca238fd90a38083e517640f7b36d23cf" compoundref="recording__backend__mpi_8cpp" startline="72" endline="93">nest::RecordingBackendMPI::enroll</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1ad38c6a48bf611386f204865b613c0794" compoundref="recording__backend__sionlib_8cpp" startline="74" endline="98">nest::RecordingBackendSIONlib::enroll</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a4bb1a250312df89c7b5c96907043493b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; nest::RecordingDevice::get_label</definition>
        <argsstring>() const</argsstring>
        <name>get_label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="151" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="60" bodyend="63"/>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1ad38c6a48bf611386f204865b613c0794" compoundref="recording__backend__sionlib_8cpp" startline="74" endline="98">nest::RecordingBackendSIONlib::enroll</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendMPI_1a1b4167e8f8555d8cf06b59429d72425d" compoundref="recording__backend__mpi_8cpp" startline="358" endline="361">nest::RecordingBackendMPI::get_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::RecordingDevice::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="153" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="125" bodyend="174"/>
        <references refid="classnest_1_1RecordingDevice_1a25fccd5c6a3eee4937e3250ff5e0eec3" compoundref="recording__device_8h" startline="182">backend_params_</references>
        <references refid="classnest_1_1IOManager_1aaae0477886a9585abf7a49cf52db07c5" compoundref="io__manager_8cpp" startline="378" endline="381">nest::IOManager::check_recording_backend_device_status</references>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1IOManager_1a12a0b4ed29422e77d365e8ec0567029c" compoundref="io__manager_8cpp" startline="322" endline="335">nest::IOManager::enroll_recorder</references>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="975" endline="978">nest::Node::get_node_id</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="255">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1RecordingDevice_1aa5b9b08f6ee49f4f127761b4ec1eb4a9">P_</references>
        <references refid="structnest_1_1RecordingDevice_1_1Parameters___1aae1b848724e139b5a5b27e1871c70e59" compoundref="recording__device_8h" startline="164">nest::RecordingDevice::Parameters_::record_to_</references>
        <references refid="classnest_1_1RecordingDevice_1ad59ad8688c8df49b3665044ed0fc8b96">S_</references>
        <references refid="structnest_1_1RecordingDevice_1_1Parameters___1ab47027ad5cfc29a7fb077edcfbb3b048" compoundref="recording__device_8cpp" startline="79" endline="94">nest::RecordingDevice::Parameters_::set</references>
        <references refid="structnest_1_1RecordingDevice_1_1State___1acae60211f8e8d67030470b18cdae2992" compoundref="recording__device_8cpp" startline="110" endline="122">nest::RecordingDevice::State_::set</references>
        <references refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990" compoundref="device_8h" startline="187" endline="194">nest::Device::set_status</references>
        <referencedby refid="classnest_1_1multimeter_1a25c0c41b427eaa597f1efc7eb81c9cac" compoundref="multimeter_8h" startline="251" endline="265">nest::multimeter::set_status</referencedby>
        <referencedby refid="classnest_1_1spike__recorder_1a623e5533311745a9bf08f8010ecdfbe1" compoundref="spike__recorder_8cpp" startline="88" endline="91">nest::spike_recorder::set_status</referencedby>
        <referencedby refid="classnest_1_1spin__detector_1acf81fb512b99425a8e6d6b82aecbc38a" compoundref="spin__detector_8cpp" startline="102" endline="105">nest::spin_detector::set_status</referencedby>
        <referencedby refid="classnest_1_1weight__recorder_1a57830961d6384fdac5d3b9bffc0e5534" compoundref="weight__recorder_8cpp" startline="175" endline="182">nest::weight_recorder::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::RecordingDevice::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="154" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="177" bodyend="201"/>
        <references refid="classnest_1_1RecordingDevice_1a25fccd5c6a3eee4937e3250ff5e0eec3" compoundref="recording__device_8h" startline="182">backend_params_</references>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1a0e17bef4e86ea2fddd9a034ad2cf9a47">nest::names::element_type</references>
        <references refid="structnest_1_1RecordingDevice_1_1Parameters___1a756f249eb146a9c66fb52bbaab2b83ea" compoundref="recording__device_8cpp" startline="72" endline="76">nest::RecordingDevice::Parameters_::get</references>
        <references refid="structnest_1_1RecordingDevice_1_1State___1a3f90f0ec2d3a85a990e72563364c550b" compoundref="recording__device_8cpp" startline="102" endline="107">nest::RecordingDevice::State_::get</references>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="975" endline="978">nest::Node::get_node_id</references>
        <references refid="classnest_1_1IOManager_1ab2be071ad5a2edc77cab1a591bd61b75" compoundref="io__manager_8cpp" startline="384" endline="387">nest::IOManager::get_recording_backend_device_defaults</references>
        <references refid="classnest_1_1IOManager_1aa42bc681499dc01a2434cad08a741caf" compoundref="io__manager_8cpp" startline="390" endline="395">nest::IOManager::get_recording_backend_device_status</references>
        <references refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e" compoundref="device_8h" startline="181" endline="184">nest::Device::get_status</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="255">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1RecordingDevice_1aa5b9b08f6ee49f4f127761b4ec1eb4a9">P_</references>
        <references refid="structnest_1_1RecordingDevice_1_1Parameters___1aae1b848724e139b5a5b27e1871c70e59" compoundref="recording__device_8h" startline="164">nest::RecordingDevice::Parameters_::record_to_</references>
        <references refid="namespacenest_1_1names_1aa3e17cd04c350b745b64ca6ed7f2a699">nest::names::recorder</references>
        <references refid="classnest_1_1RecordingDevice_1ad59ad8688c8df49b3665044ed0fc8b96">S_</references>
        <referencedby refid="classnest_1_1multimeter_1adcf15205a1624343eae90243e692c9e8" compoundref="multimeter_8h" startline="227" endline="248">nest::multimeter::get_status</referencedby>
        <referencedby refid="classnest_1_1spike__recorder_1ab186a323af2338b25eff0aae6cae94e7" compoundref="spike__recorder_8cpp" startline="66" endline="85">nest::spike_recorder::get_status</referencedby>
        <referencedby refid="classnest_1_1spin__detector_1ac6c7cf6c7b0c28505fd96695f575a72b" compoundref="spin__detector_8cpp" startline="78" endline="99">nest::spin_detector::get_status</referencedby>
        <referencedby refid="classnest_1_1weight__recorder_1ac9dfea06dc5c9d7f8e02b4ba0077d131" compoundref="weight__recorder_8cpp" startline="149" endline="172">nest::weight_recorder::get_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a56f87d667d7b32a2cd3f95459e424834" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Device::pre_run_hook</definition>
        <argsstring>()</argsstring>
        <name>pre_run_hook</name>
        <reimplements refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplements>
        <briefdescription>
<para>Set internal variables before calls to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="135" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/device.cpp" bodystart="144" bodyend="153"/>
        <referencedby refid="classnest_1_1multimeter_1a352fc50e020b737e61c56561194db8a6" compoundref="multimeter_8cpp" startline="173" endline="176">nest::multimeter::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1spike__recorder_1a16b90b25a38e5030a84ea62ba1bcbb71" compoundref="spike__recorder_8cpp" startline="48" endline="51">nest::spike_recorder::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1spin__detector_1aed2f1e3e033a7c87f00838beb0919bea" compoundref="spin__detector_8cpp" startline="56" endline="59">nest::spin_detector::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1weight__recorder_1a6544b6f863ff396eb0c7a2a6de531d2f" compoundref="weight__recorder_8cpp" startline="131" endline="135">nest::weight_recorder::pre_run_hook</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1ad51550af656588536bcdf5afecdbf788" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::Node::pre_run_hook</definition>
        <argsstring>()=0</argsstring>
        <name>pre_run_hook</name>
        <reimplements refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplements>
        <briefdescription>
<para>Re-calculate dependent parameters of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called each time a simulation is begun/resumed. It must re-calculate all internal Variables of the node required for spike handling or updating the node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="136" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1a79b4d2540dc042282d81d1e7d41fdf81" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RecordingDevice::write</definition>
        <argsstring>(const Event &amp;, const std::vector&lt; double &gt; &amp;, const std::vector&lt; long &gt; &amp;)</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <defname>event</defname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <defname>double_values</defname>
        </param>
        <param>
          <type>const std::vector&lt; long &gt; &amp;</type>
          <defname>long_values</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="157" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="212" bodyend="218"/>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="255">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="structnest_1_1RecordingDevice_1_1State___1af9b17de210460d2d5688cdee8e518f12" compoundref="recording__device_8h" startline="175">nest::RecordingDevice::State_::n_events_</references>
        <references refid="classnest_1_1RecordingDevice_1aa5b9b08f6ee49f4f127761b4ec1eb4a9">P_</references>
        <references refid="structnest_1_1RecordingDevice_1_1Parameters___1aae1b848724e139b5a5b27e1871c70e59" compoundref="recording__device_8h" startline="164">nest::RecordingDevice::Parameters_::record_to_</references>
        <references refid="classnest_1_1RecordingDevice_1ad59ad8688c8df49b3665044ed0fc8b96">S_</references>
        <references refid="classnest_1_1IOManager_1a76f3feb9f444abdc61b1ccd0c0055dcc" compoundref="io__manager_8cpp" startline="312" endline="319">nest::IOManager::write</references>
        <referencedby refid="classnest_1_1multimeter_1a69851b4da90acd9a090bf2cde9c1f2d3" compoundref="multimeter_8cpp" startline="203" endline="225">nest::multimeter::handle</referencedby>
        <referencedby refid="classnest_1_1weight__recorder_1aa96e9631d164dd8750501fac70ba4132" compoundref="weight__recorder_8cpp" startline="186" endline="205">nest::weight_recorder::handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RecordingDevice_1ab77a88eadcacbb992e706e55aa88627a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::RecordingDevice::set_initialized_</definition>
        <argsstring>() override</argsstring>
        <name>set_initialized_</name>
        <reimplements refid="classnest_1_1Node_1af1edec8d44fc63df732b8ff58f0788bf">set_initialized_</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="158" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.cpp" bodystart="46" bodyend="49"/>
        <references refid="classnest_1_1IOManager_1a12a0b4ed29422e77d365e8ec0567029c" compoundref="io__manager_8cpp" startline="322" endline="335">nest::IOManager::enroll_recorder</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="255">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all recording devices. </para>
    </briefdescription>
    <detaileddescription>
<para>Recording devices collect or sample data and output it to one or more recording backends selected by setting the device property <computeroutput>record_to</computeroutput> to the name of the backend.</para>
<para>Class <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> is merely a shallow interface class from which concrete recording devices can inherit in order to use the recording backend infrastructure more easily and provide a consistent handling of activity windows by means of start/stop and origin.</para>
<para>If the device is configured to record from start to stop, this is interpreted as (start, stop], i.e., the earliest recorded event will have time stamp start+1, as it was generated during the update step (start, start+1].</para>
<para>If the device node is not an actual instance used by the user, but rather a prototype node in a <ref refid="classnest_1_1Model" kindref="compound">Model</ref> class, it will cache device-specific properties of the recording backend and use them for enrollment of the device with the backend as the last step during the creation of instances. This mechanism is implemented in <ref refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" kindref="member">set_status()</ref> and <ref refid="classnest_1_1RecordingDevice_1ab77a88eadcacbb992e706e55aa88627a" kindref="member">set_initialized_()</ref>.</para>
<para><simplesect kind="author"><para>HEP 2002-07-22, 2008-03-21, 2011-02-11 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>nest::voltmeter</label>
        <link refid="classnest_1_1voltmeter"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::spin_detector</label>
        <link refid="classnest_1_1spin__detector"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::RecordingDevice</label>
        <link refid="classnest_1_1RecordingDevice"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>nest::weight_recorder</label>
        <link refid="classnest_1_1weight__recorder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::multimeter</label>
        <link refid="classnest_1_1multimeter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::spike_recorder</label>
        <link refid="classnest_1_1spike__recorder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
      </node>
      <node id="3">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>nest::Device::Variables_</label>
        <link refid="structnest_1_1Device_1_1Variables__"/>
      </node>
      <node id="4">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="9">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="8">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="1">
        <label>nest::RecordingDevice</label>
        <link refid="classnest_1_1RecordingDevice"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-S_</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>nest::Device::Parameters_</label>
        <link refid="structnest_1_1Device_1_1Parameters__"/>
        <childnode refid="7" relation="usage">
          <edgelabel>+origin_</edgelabel>
          <edgelabel>+start_</edgelabel>
          <edgelabel>+stop_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="8" relation="usage">
          <edgelabel>#LIM_NEG_INF</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#LIM_MAX</edgelabel>
          <edgelabel>#LIM_MIN</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
        <childnode refid="6" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-V_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="3">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>nest::RecordingDevice::Parameters_</label>
        <link refid="structnest_1_1RecordingDevice_1_1Parameters__"/>
      </node>
      <node id="12">
        <label>nest::RecordingDevice::State_</label>
        <link refid="structnest_1_1RecordingDevice_1_1State__"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" line="129" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_device.h" bodystart="130" bodyend="183"/>
    <listofallmembers>
      <member refid="classnest_1_1RecordingDevice_1a25fccd5c6a3eee4937e3250ff5e0eec3" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>backend_params_</name></member>
      <member refid="classnest_1_1Node_1a93e4da4ded11807b07c5f2428401bbc7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Node_1ad88edfd6f881579328b545d88372807d" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>clone</name></member>
      <member refid="group__SP__functions_1gaa5b5f01608036752d816d1980c39cb87" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>connect_synaptic_element</name></member>
      <member refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>Device</name></member>
      <member refid="classnest_1_1DeviceNode_1a528097bccee9d8364ba626c9ac573221" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1DeviceNode_1acb8cad4e7bc743f7469fe145cbf318f0" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1Node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>downcast</name></member>
      <member refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>finalize</name></member>
      <member refid="classnest_1_1Node_1a7c48b06a535a6e036c88ea2dcbaf8283" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>frozen_</name></member>
      <member refid="classnest_1_1Node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_C_m</name></member>
      <member refid="group__SP__functions_1gae46decb34ba3dc7f912fa6a691bb0de2" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1Node_1a59915001de69fc05d8a155da42a89e56" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1Node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1Node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_history</name></member>
      <member refid="classnest_1_1Node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1Node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1RecordingDevice_1a4bb1a250312df89c7b5c96907043493b" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_label</name></member>
      <member refid="classnest_1_1DeviceNode_1a170639eec44df6f43d5f9a5403959ba4" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1Node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1Node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_model_</name></member>
      <member refid="classnest_1_1Node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_name</name></member>
      <member refid="classnest_1_1Node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_nc</name></member>
      <member refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_origin</name></member>
      <member refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_start</name></member>
      <member refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_status</name></member>
      <member refid="classnest_1_1Node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1Node_1a54f0c50b08165643cee588bc89b464b8" prot="private" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_status_dict_</name></member>
      <member refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_stop</name></member>
      <member refid="group__SP__functions_1ga9ba39ec217579e3ef23db9ae20479955" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1ga7a47b88c558984889d90d5ce027787cf" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1Node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1Node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1Node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1Node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_thread</name></member>
      <member refid="classnest_1_1Node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1RecordingDevice_1a6e4f1c6055f5aeda01bd5b51579703e5" prot="public" virt="pure-virtual"><scope>nest::RecordingDevice</scope><name>get_type</name></member>
      <member refid="classnest_1_1Node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1Node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>get_vp</name></member>
      <member refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3cadfe2698c39c5fd327f5d70d0b8adf" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1Node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>init</name></member>
      <member refid="classnest_1_1Device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1Node_1a5881b951d112d2c408865d080287f453" prot="protected" virt="virtual"><scope>nest::RecordingDevice</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1Device_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>init_state</name></member>
      <member refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef" prot="protected" virt="virtual"><scope>nest::RecordingDevice</scope><name>init_state_</name></member>
      <member refid="classnest_1_1Node_1a95389430ba10f2da19aacded71503f74" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>initialized_</name></member>
      <member refid="classnest_1_1RecordingDevice_1afbc0cc70ae3ba2eff8a0d765aa59adb5" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>is_active</name></member>
      <member refid="classnest_1_1Node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1Node_1acaf132bbee717313ffbc86fd291667c9" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1DeviceNode_1aa345406ceab967b0dd50907ac380747c" prot="protected" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>local_device_id_</name></member>
      <member refid="classnest_1_1Node_1ac6e5bca87246812225ab04af4fd40df2" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1Node_1ae306f4602e575047801c45c9fec2a4d4" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>model_id_</name></member>
      <member refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a4f56e4007d9f3ea3fe582738727ec24c" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>MULTIMETER</name></member>
      <member refid="classnest_1_1Node_1a3ec5fd1ce0e6f3f0bccabd314c6845c3" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>nc_ptr_</name></member>
      <member refid="classnest_1_1Node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a9d697a1550c18613e0d2a0e57c67e836" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1Node_1a9f929d2c40ddaafd4a0822ea294f1ef9" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>node_uses_wfr_</name></member>
      <member refid="classnest_1_1Node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1Node_1a9c99a8caa89a3eb73e975f25678d5d58" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>operator=</name></member>
      <member refid="classnest_1_1RecordingDevice_1aa5b9b08f6ee49f4f127761b4ec1eb4a9" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>P_</name></member>
      <member refid="classnest_1_1Node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1RecordingDevice_1a2d1416e38bec46975b4b79ba2e042fed" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1RecordingDevice_1a56f87d667d7b32a2cd3f95459e424834" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1RecordingDevice_1ad51550af656588536bcdf5afecdbf788" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>print_network</name></member>
      <member refid="classnest_1_1Node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1RecordingDevice_1ad53e191fdc3d060ffba1345ffc077df1" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>RecordingDevice</name></member>
      <member refid="classnest_1_1RecordingDevice_1a18449921045976fc3bb3c63677515ad8" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>RecordingDevice</name></member>
      <member refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1RecordingDevice_1ad59ad8688c8df49b3665044ed0fc8b96" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>S_</name></member>
      <member refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1Node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1Node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1RecordingDevice_1ab77a88eadcacbb992e706e55aa88627a" prot="protected" virt="virtual"><scope>nest::RecordingDevice</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1DeviceNode_1a8c8b80f5be38584cb4b36a18a2977772" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_nc_</name></member>
      <member refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_node_id_</name></member>
      <member refid="classnest_1_1Node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>set_status</name></member>
      <member refid="classnest_1_1Node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_thread</name></member>
      <member refid="classnest_1_1Node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>set_vp</name></member>
      <member refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a778e708f1fcba2df5abe761ce5d5a0a7" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>SPIKE_RECORDER</name></member>
      <member refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33a7c9a979265a7db7007976fe57b6f2e42" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>SPIN_DETECTOR</name></member>
      <member refid="classnest_1_1Node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1Node_1a9ec98b82cf08796b726ca26666e5739d" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>thread_</name></member>
      <member refid="classnest_1_1Node_1a4316e73a0c494ccb37e6a19b00664223" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>thread_lid_</name></member>
      <member refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>Type</name></member>
      <member refid="classnest_1_1Node_1a69f3767afe7e7d1bc5b141e777778fd5" prot="public" virt="pure-virtual"><scope>nest::RecordingDevice</scope><name>update</name></member>
      <member refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1Device_1aba9db825c8f7e3631f8baf67f69a3beb" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>V_</name></member>
      <member refid="classnest_1_1Node_1ad40bb2d1d3c32dd953374bbe6a76e5a6" prot="private" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>vp_</name></member>
      <member refid="classnest_1_1RecordingDevice_1af47db1b7d4b4301d53bffb71bd26ea33af51c666ce117b58b1c233f5cbbd1afe8" prot="public" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>WEIGHT_RECORDER</name></member>
      <member refid="classnest_1_1Node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1RecordingDevice_1a79b4d2540dc042282d81d1e7d41fdf81" prot="protected" virt="non-virtual"><scope>nest::RecordingDevice</scope><name>write</name></member>
      <member refid="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>~Device</name></member>
      <member refid="classnest_1_1Node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::RecordingDevice</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
