<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1DynamicRecordablesMap" kind="class" language="C++" prot="public">
    <compoundname>nest::DynamicRecordablesMap</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::map&lt; Name, const DataAccessFunctor&lt; HostNode &gt; &gt;</basecompoundref>
    <includes refid="recordables__map_8h" local="no">recordables_map.h</includes>
    <templateparamlist>
      <param>
        <type>typename HostNode</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classnest_1_1DynamicRecordablesMap_1ada1351b7529f8368cb14eb77f67f0c18" prot="private" static="no">
        <type>std::map&lt; Name, const <ref refid="classnest_1_1DataAccessFunctor" kindref="compound">DataAccessFunctor</ref>&lt; HostNode &gt; &gt;</type>
        <definition>typedef std::map&lt; Name, const DataAccessFunctor&lt; HostNode &gt; &gt; nest::DynamicRecordablesMap&lt; HostNode &gt;::Base_</definition>
        <argsstring></argsstring>
        <name>Base_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="172" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1DynamicRecordablesMap_1abfefa7a780b60652198164e3a6e18ac7" prot="public" static="no">
        <type><ref refid="classnest_1_1DataAccessFunctor" kindref="compound">DataAccessFunctor</ref>&lt; HostNode &gt;</type>
        <definition>typedef DataAccessFunctor&lt; HostNode &gt; nest::DynamicRecordablesMap&lt; HostNode &gt;::DataAccessFct</definition>
        <argsstring></argsstring>
        <name>DataAccessFct</name>
        <briefdescription>
<para>Datatype for access callable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="180" column="29" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1a656dd1cc4c586da4c743a79cf8dcf99c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::DynamicRecordablesMap&lt; HostNode &gt;::~DynamicRecordablesMap</definition>
        <argsstring>()</argsstring>
        <name>~DynamicRecordablesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="175" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1a80653a37ed5c4f8ed7fe75af9a460157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; HostNode &gt;::create</definition>
        <argsstring>(HostNode &amp;n)</argsstring>
        <name>create</name>
        <param>
          <type>HostNode &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Create the map. </para>
        </briefdescription>
        <detaileddescription>
<para>This function must be specialized for each class instance owning a Recordables map and must fill the map. This should happen as part of the original constructor for the <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="188" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1a705c3c0b2fdc5177b85433159bf091e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ArrayDatum</type>
        <definition>ArrayDatum nest::DynamicRecordablesMap&lt; HostNode &gt;::get_list</definition>
        <argsstring>() const</argsstring>
        <name>get_list</name>
        <briefdescription>
<para>Obtain SLI list of all recordables, for use by get_status(). </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>This fct should return the recordables_ entry, but since filling recordables_ leads to seg fault on exit, we just build the list every time, even though that beats the goal of being more efficient ... </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="198" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="198" bodyend="206"/>
        <references refid="namespacenest_1_1names_1af23802d960e3bad87b63c3ec4b563176">nest::names::recordables</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1af95f8e0fbea652c5b3fc99d35f0d5bbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; HostNode &gt;::insert</definition>
        <argsstring>(const Name &amp;n, const DataAccessFct &amp;f)</argsstring>
        <name>insert</name>
        <param>
          <type>const Name &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1DynamicRecordablesMap_1abfefa7a780b60652198164e3a6e18ac7" kindref="member">DataAccessFct</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Insertion functions to be used in <ref refid="classnest_1_1DynamicRecordablesMap_1a80653a37ed5c4f8ed7fe75af9a460157" kindref="member">create()</ref>, adds entry to map and list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="210" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="210" bodyend="213"/>
        <references refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319">nest::names::n</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1ae212be9a790e1806091ee539a2e51af7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; HostNode &gt;::erase</definition>
        <argsstring>(const Name &amp;n)</argsstring>
        <name>erase</name>
        <param>
          <type>const Name &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Erase functions to be used when setting state, removes entry from map and list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="218" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="218" bodyend="229"/>
        <references refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319">nest::names::n</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1ab89eb35443f3922272b4da53dc06afa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; cm_default &gt;::create</definition>
        <argsstring>(cm_default &amp;host)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classnest_1_1cm__default" kindref="compound">cm_default</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cm_default.cpp" line="35" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cm_default.cpp" bodystart="35" bodyend="38"/>
        <references refid="classnest_1_1cm__default_1ac5a54139fd6bcdb64dfe94eb895cc708" compoundref="cm__default_8cpp" startline="254" endline="284">nest::cm_default::init_recordables_pointers_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1a5be1c588aae44bf2e42c556891de09c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; iaf_psc_alpha_multisynapse &gt;::create</definition>
        <argsstring>(iaf_psc_alpha_multisynapse &amp;host)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classnest_1_1iaf__psc__alpha__multisynapse" kindref="compound">iaf_psc_alpha_multisynapse</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/iaf_psc_alpha_multisynapse.cpp" line="50" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/iaf_psc_alpha_multisynapse.cpp" bodystart="50" bodyend="58"/>
        <references refid="classnest_1_1iaf__psc__alpha__multisynapse_1a5c1e7010558019dd22de659860417f8e" compoundref="iaf__psc__alpha__multisynapse_8cpp" startline="80" endline="83">nest::iaf_psc_alpha_multisynapse::get_data_access_functor</references>
        <references refid="structnest_1_1iaf__psc__alpha__multisynapse_1_1State___1a96112767e048cd5daaa079514297fc4ca0327e5894e21209e659641187de8f7a5" compoundref="iaf__psc__alpha__multisynapse_8h" startline="198">nest::iaf_psc_alpha_multisynapse::State_::I</references>
        <references refid="namespacenest_1_1names_1a163b8960009e84b26e7dd1547d94cbb5">nest::names::I_syn</references>
        <references refid="classnest_1_1iaf__psc__alpha__multisynapse_1ae77caaced02a21dd5e867f55981efcb9" compoundref="iaf__psc__alpha__multisynapse_8cpp" startline="69" endline="77">nest::iaf_psc_alpha_multisynapse::insert_current_recordables</references>
        <references refid="structnest_1_1iaf__psc__alpha__multisynapse_1_1State___1a96112767e048cd5daaa079514297fc4ca9414b26d10ca25d0f1444d3ee0c9cdbd" compoundref="iaf__psc__alpha__multisynapse_8h" startline="197">nest::iaf_psc_alpha_multisynapse::State_::V_M</references>
        <references refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc">nest::names::V_m</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DynamicRecordablesMap_1a00ac0a6ae2d7664034c833bf154aa7a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::DynamicRecordablesMap&lt; iaf_psc_exp_multisynapse &gt;::create</definition>
        <argsstring>(iaf_psc_exp_multisynapse &amp;host)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classnest_1_1iaf__psc__exp__multisynapse" kindref="compound">iaf_psc_exp_multisynapse</ref> &amp;</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/iaf_psc_exp_multisynapse.cpp" line="48" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/iaf_psc_exp_multisynapse.cpp" bodystart="48" bodyend="56"/>
        <references refid="classnest_1_1iaf__psc__exp__multisynapse_1a287d15fc7b7f4dc4217312a5df8e338c" compoundref="iaf__psc__exp__multisynapse_8cpp" startline="78" endline="81">nest::iaf_psc_exp_multisynapse::get_data_access_functor</references>
        <references refid="structnest_1_1iaf__psc__exp__multisynapse_1_1State___1a910ee15d04f3cf455985a133f14674e6a0a62269e478cf8a32835ab69a00ccc51" compoundref="iaf__psc__exp__multisynapse_8h" startline="198">nest::iaf_psc_exp_multisynapse::State_::I</references>
        <references refid="namespacenest_1_1names_1a163b8960009e84b26e7dd1547d94cbb5">nest::names::I_syn</references>
        <references refid="classnest_1_1iaf__psc__exp__multisynapse_1af5e166f6afc21ae2bca0a218448ca7b7" compoundref="iaf__psc__exp__multisynapse_8cpp" startline="67" endline="75">nest::iaf_psc_exp_multisynapse::insert_current_recordables</references>
        <references refid="structnest_1_1iaf__psc__exp__multisynapse_1_1State___1a910ee15d04f3cf455985a133f14674e6a03235fabcc80af8dd15d0c8af485e4b6" compoundref="iaf__psc__exp__multisynapse_8h" startline="197">nest::iaf_psc_exp_multisynapse::State_::V_M</references>
        <references refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc">nest::names::V_m</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Map names of recordables to DataAccessFunctors. </para>
    </briefdescription>
    <detaileddescription>
<para>This map identifies the DataAccessFunctors for recordable state variables in multisynapse model neurons. As the number of synapse receptors can be modified at runtime, each neuron shall have its own instance of <ref refid="classnest_1_1DynamicRecordablesMap" kindref="compound">DynamicRecordablesMap</ref>. Furthermore, the neurons are able to insert and erase elements from the map at runtime.</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1multimeter" kindref="compound">multimeter</ref>, UniversalDataLogger </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>std::map&lt; Name, const DataAccessFunctor&lt; HostNode &gt; &gt;</label>
      </node>
      <node id="3">
        <label>nest::DynamicRecordablesMap&lt; nest::iaf_psc_alpha_multisynapse &gt;</label>
        <link refid="classnest_1_1DynamicRecordablesMap"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; nest::iaf_psc_alpha_multisynapse &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>nest::DynamicRecordablesMap&lt; nest::iaf_psc_exp_multisynapse &gt;</label>
        <link refid="classnest_1_1DynamicRecordablesMap"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; nest::iaf_psc_exp_multisynapse &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nest::DynamicRecordablesMap&lt; nest::cm_default &gt;</label>
        <link refid="classnest_1_1DynamicRecordablesMap"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; nest::cm_default &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::DynamicRecordablesMap&lt; HostNode &gt;</label>
        <link refid="classnest_1_1DynamicRecordablesMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::map&lt; Name, const DataAccessFunctor&lt; HostNode &gt; &gt;</label>
      </node>
      <node id="1">
        <label>nest::DynamicRecordablesMap&lt; HostNode &gt;</label>
        <link refid="classnest_1_1DynamicRecordablesMap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" line="170" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/recordables_map.h" bodystart="171" bodyend="230"/>
    <listofallmembers>
      <member refid="classnest_1_1DynamicRecordablesMap_1ada1351b7529f8368cb14eb77f67f0c18" prot="private" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>Base_</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1a80653a37ed5c4f8ed7fe75af9a460157" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>create</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1ab89eb35443f3922272b4da53dc06afa7" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>create</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1a5be1c588aae44bf2e42c556891de09c0" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>create</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1a00ac0a6ae2d7664034c833bf154aa7a7" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>create</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1abfefa7a780b60652198164e3a6e18ac7" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>DataAccessFct</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1ae212be9a790e1806091ee539a2e51af7" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>erase</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1a705c3c0b2fdc5177b85433159bf091e2" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>get_list</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1af95f8e0fbea652c5b3fc99d35f0d5bbd" prot="public" virt="non-virtual"><scope>nest::DynamicRecordablesMap</scope><name>insert</name></member>
      <member refid="classnest_1_1DynamicRecordablesMap_1a656dd1cc4c586da4c743a79cf8dcf99c" prot="public" virt="virtual"><scope>nest::DynamicRecordablesMap</scope><name>~DynamicRecordablesMap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
