<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1ConnectionCreator_1_1PoolWrapper__" kind="class" language="C++" prot="private">
    <compoundname>nest::ConnectionCreator::PoolWrapper_</compoundname>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a4c027293cf3a8e0c55ae1c1f89a7f7ad" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1MaskedLayer" kindref="compound">MaskedLayer</ref>&lt; D &gt; *</type>
        <definition>MaskedLayer&lt; D &gt;* nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::masked_layer_</definition>
        <argsstring></argsstring>
        <name>masked_layer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="129" column="17" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1afcdb034cfda093f89896e4487d477e46" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt; *</type>
        <definition>std::vector&lt; std::pair&lt; Position&lt; D &gt;, index &gt; &gt;* nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::positions_</definition>
        <argsstring></argsstring>
        <name>positions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="130" column="17" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1aa4be1d34628a18879772c15999bb6daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::PoolWrapper_</definition>
        <argsstring>()</argsstring>
        <name>PoolWrapper_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="117" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a4a096b3d8770427fdf6bed8cc3903287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::~PoolWrapper_</definition>
        <argsstring>()</argsstring>
        <name>~PoolWrapper_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="118" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a0036e6ba8d0bcd80f8adff93b08a2ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::define</definition>
        <argsstring>(MaskedLayer&lt; D &gt; *)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="classnest_1_1MaskedLayer" kindref="compound">MaskedLayer</ref>&lt; D &gt; *</type>
          <defname>ml</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="119" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="131" bodyend="137"/>
        <referencedby refid="classnest_1_1ConnectionCreator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" compoundref="connection__creator__impl_8h" startline="180" endline="250">nest::ConnectionCreator::pairwise_bernoulli_on_source_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1ac2924f703d2138beea75f9bdf5783efb" compoundref="connection__creator__impl_8h" startline="255" endline="338">nest::ConnectionCreator::pairwise_bernoulli_on_target_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a72e567a51069d675570e792e30f9a427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::define</definition>
        <argsstring>(std::vector&lt; std::pair&lt; Position&lt; D &gt;, index &gt; &gt; *)</argsstring>
        <name>define</name>
        <param>
          <type>std::vector&lt; std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt; *</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="120" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="141" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a2d723a3a23a6ec9a9b4370b2b2876c3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>&lt; D, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt;::masked_iterator</type>
        <definition>Ntree&lt; D, index &gt;::masked_iterator nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::masked_begin</definition>
        <argsstring>(const Position&lt; D &gt; &amp;pos) const</argsstring>
        <name>masked_begin</name>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="122" column="38" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="151" bodyend="154"/>
        <referencedby refid="classnest_1_1ConnectionCreator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" compoundref="connection__creator__impl_8h" startline="180" endline="250">nest::ConnectionCreator::pairwise_bernoulli_on_source_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1ac2924f703d2138beea75f9bdf5783efb" compoundref="connection__creator__impl_8h" startline="255" endline="338">nest::ConnectionCreator::pairwise_bernoulli_on_target_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a713ea62ca8c1883e5dfed2c5441c5530" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>&lt; D, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt;::masked_iterator</type>
        <definition>Ntree&lt; D, index &gt;::masked_iterator nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::masked_end</definition>
        <argsstring>() const</argsstring>
        <name>masked_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="123" column="38" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="158" bodyend="161"/>
        <referencedby refid="classnest_1_1ConnectionCreator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" compoundref="connection__creator__impl_8h" startline="180" endline="250">nest::ConnectionCreator::pairwise_bernoulli_on_source_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1ac2924f703d2138beea75f9bdf5783efb" compoundref="connection__creator__impl_8h" startline="255" endline="338">nest::ConnectionCreator::pairwise_bernoulli_on_target_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a7467904ab7c2e07d10665a0d9f303623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt;::iterator</type>
        <definition>std::vector&lt; std::pair&lt; Position&lt; D &gt;, index &gt; &gt;::iterator nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="125" column="37" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="165" bodyend="168"/>
        <referencedby refid="classnest_1_1ConnectionCreator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" compoundref="connection__creator__impl_8h" startline="180" endline="250">nest::ConnectionCreator::pairwise_bernoulli_on_source_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1ac2924f703d2138beea75f9bdf5783efb" compoundref="connection__creator__impl_8h" startline="255" endline="338">nest::ConnectionCreator::pairwise_bernoulli_on_target_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a98f3ed3fda83fcfb922bb5542b835ffd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt;::iterator</type>
        <definition>std::vector&lt; std::pair&lt; Position&lt; D &gt;, index &gt; &gt;::iterator nest::ConnectionCreator::PoolWrapper_&lt; D &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="126" column="37" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator_impl.h" bodystart="172" bodyend="175"/>
        <referencedby refid="classnest_1_1ConnectionCreator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" compoundref="connection__creator__impl_8h" startline="180" endline="250">nest::ConnectionCreator::pairwise_bernoulli_on_source_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1ac2924f703d2138beea75f9bdf5783efb" compoundref="connection__creator__impl_8h" startline="255" endline="338">nest::ConnectionCreator::pairwise_bernoulli_on_target_</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper for masked and unmasked pools. </para>
    </briefdescription>
    <detaileddescription>
<para>The purpose is to avoid code doubling for cases with and without masks. Essentially, the class works as a fancy union. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::ConnectionCreator::PoolWrapper_&lt; D &gt;</label>
        <link refid="classnest_1_1ConnectionCreator_1_1PoolWrapper__"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" line="114" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_creator.h" bodystart="115" bodyend="131"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a7467904ab7c2e07d10665a0d9f303623" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>begin</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a0036e6ba8d0bcd80f8adff93b08a2ee6" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>define</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a72e567a51069d675570e792e30f9a427" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>define</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a98f3ed3fda83fcfb922bb5542b835ffd" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>end</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a2d723a3a23a6ec9a9b4370b2b2876c3d" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>masked_begin</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a713ea62ca8c1883e5dfed2c5441c5530" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>masked_end</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a4c027293cf3a8e0c55ae1c1f89a7f7ad" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>masked_layer_</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1aa4be1d34628a18879772c15999bb6daf" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>PoolWrapper_</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1afcdb034cfda093f89896e4487d477e46" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>positions_</name></member>
      <member refid="classnest_1_1ConnectionCreator_1_1PoolWrapper___1a4a096b3d8770427fdf6bed8cc3903287" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator::PoolWrapper_</scope><name>~PoolWrapper_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
