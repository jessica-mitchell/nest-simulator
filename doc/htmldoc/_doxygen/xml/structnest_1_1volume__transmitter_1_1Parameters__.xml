<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structnest_1_1volume__transmitter_1_1Parameters__" kind="struct" language="C++" prot="private">
    <compoundname>nest::volume_transmitter::Parameters_</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnest_1_1volume__transmitter_1_1Parameters___1a09c66bb226f075c02b2c7203c0326ad1" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long nest::volume_transmitter::Parameters_::deliver_interval_</definition>
        <argsstring></argsstring>
        <name>deliver_interval_</name>
        <briefdescription>
<para>update interval in d_min time steps </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" line="172" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnest_1_1volume__transmitter_1_1Parameters___1aee6bd00ac8e35da8978173c267dca22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::volume_transmitter::Parameters_::Parameters_</definition>
        <argsstring>()</argsstring>
        <name>Parameters_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" line="169" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structnest_1_1volume__transmitter_1_1Parameters___1a590c189e262a24ae60bb0d1b48a648ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::volume_transmitter::Parameters_::get</definition>
        <argsstring>(DictionaryDatum &amp;) const</argsstring>
        <name>get</name>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" line="170" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.cpp" bodystart="52" bodyend="55"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1aa09c016ff5b19be86139c0e40c3a553d">nest::names::deliver_interval</references>
        <referencedby refid="classnest_1_1volume__transmitter_1ac089e417f3f97d283547aa9df32ffa6c" compoundref="volume__transmitter_8h" startline="201" endline="204">nest::volume_transmitter::get_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="structnest_1_1volume__transmitter_1_1Parameters___1ac5846a318f9034dafb16cc11d0e1aac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::volume_transmitter::Parameters_::set</definition>
        <argsstring>(const DictionaryDatum &amp;, Node *node)</argsstring>
        <name>set</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" line="171" column="10"/>
        <referencedby refid="classnest_1_1volume__transmitter_1a7f8e84819f80de3650c5259f61ea498f" compoundref="volume__transmitter_8h" startline="207" endline="214">nest::volume_transmitter::set_status</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Independent parameters of the model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::volume_transmitter::Parameters_</label>
        <link refid="structnest_1_1volume__transmitter_1_1Parameters__"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" line="167" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/volume_transmitter.h" bodystart="168" bodyend="173"/>
    <listofallmembers>
      <member refid="structnest_1_1volume__transmitter_1_1Parameters___1a09c66bb226f075c02b2c7203c0326ad1" prot="public" virt="non-virtual"><scope>nest::volume_transmitter::Parameters_</scope><name>deliver_interval_</name></member>
      <member refid="structnest_1_1volume__transmitter_1_1Parameters___1a590c189e262a24ae60bb0d1b48a648ec" prot="public" virt="non-virtual"><scope>nest::volume_transmitter::Parameters_</scope><name>get</name></member>
      <member refid="structnest_1_1volume__transmitter_1_1Parameters___1aee6bd00ac8e35da8978173c267dca22a" prot="public" virt="non-virtual"><scope>nest::volume_transmitter::Parameters_</scope><name>Parameters_</name></member>
      <member refid="structnest_1_1volume__transmitter_1_1Parameters___1ac5846a318f9034dafb16cc11d0e1aac0" prot="public" virt="non-virtual"><scope>nest::volume_transmitter::Parameters_</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
