<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="gif__cond__exp_8h" kind="file" language="C++">
    <compoundname>gif_cond_exp.h</compoundname>
    <includes local="yes">config.h</includes>
    <includedby refid="gif__cond__exp_8cpp" local="yes">gif_cond_exp.cpp</includedby>
    <includedby refid="modelsmodule_8cpp" local="yes">modelsmodule.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>gif_cond_exp.h</label>
        <link refid="gif__cond__exp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>gif_cond_exp.cpp</label>
        <link refid="gif__cond__exp_8cpp"/>
      </node>
      <node id="1">
        <label>gif_cond_exp.h</label>
        <link refid="gif__cond__exp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>gif_cond_exp.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GIF_COND_EXP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GIF_COND_EXP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>gnu<sp/>gsl:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_matrix.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gsl/gsl_odeiv.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="archiving__node_8h" kindref="compound">archiving_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection_8h" kindref="compound">connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ring__buffer_8h" kindref="compound">ring_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger_8h" kindref="compound">universal_data_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest_8h" kindref="compound">nest.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gif_cond_exp_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>neuron,<sp/>integrate-and-fire,<sp/>conductance-based</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">Short<sp/>description</highlight></codeline>
<codeline lineno="54"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">Conductance-based<sp/>generalized<sp/>integrate-and-fire<sp/>neuron<sp/>(GIF)<sp/>model<sp/>(from<sp/>the<sp/>Gerstner<sp/>lab)</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="59"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">``gif_psc_exp``<sp/>is<sp/>the<sp/>generalized<sp/>integrate-and-fire<sp/>neuron<sp/>according<sp/>to</highlight></codeline>
<codeline lineno="62"><highlight class="comment">Mensi<sp/>et<sp/>al.<sp/>(2012)<sp/>[1]_<sp/>and<sp/>Pozzorini<sp/>et<sp/>al.<sp/>(2015)<sp/>[2]_,<sp/>with<sp/>postsynaptic</highlight></codeline>
<codeline lineno="63"><highlight class="comment">conductances<sp/>in<sp/>the<sp/>form<sp/>of<sp/>truncated<sp/>exponentials.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">This<sp/>model<sp/>features<sp/>both<sp/>an<sp/>adaptation<sp/>current<sp/>and<sp/>a<sp/>dynamic<sp/>threshold<sp/>for</highlight></codeline>
<codeline lineno="66"><highlight class="comment">spike-frequency<sp/>adaptation.<sp/>The<sp/>membrane<sp/>potential<sp/>(V)<sp/>is<sp/>described<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="67"><highlight class="comment">differential<sp/>equation:</highlight></codeline>
<codeline lineno="68"><highlight class="comment"></highlight></codeline>
<codeline lineno="69"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>C*dV(t)/dt<sp/>=<sp/>-g_L\cdot(V(t)-E_L)<sp/>-<sp/>\eta_1(t)<sp/>-<sp/>\eta_2(t)<sp/>-<sp/>\ldots</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>-<sp/>\eta_n(t)<sp/>+<sp/>I(t)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">where<sp/>each<sp/>:math:`\eta_i`<sp/>is<sp/>a<sp/>spike-triggered<sp/>current<sp/>(stc),<sp/>and<sp/>the<sp/>neuron</highlight></codeline>
<codeline lineno="75"><highlight class="comment">model<sp/>can<sp/>have<sp/>arbitrary<sp/>number<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="76"><highlight class="comment">Dynamic<sp/>of<sp/>each<sp/>:math:`\eta_i`<sp/>is<sp/>described<sp/>by:</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>\tau_\eta{_i}\cdot<sp/>d{\eta_i}/dt<sp/>=<sp/>-\eta_i</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">and<sp/>in<sp/>case<sp/>of<sp/>spike<sp/>emission,<sp/>its<sp/>value<sp/>increased<sp/>by<sp/>a<sp/>constant<sp/>(which<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="83"><highlight class="comment">positive<sp/>or<sp/>negative):</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>\eta_i<sp/>=<sp/>\eta_i<sp/>+<sp/>q_{\eta_i}<sp/>\text{<sp/>(in<sp/>case<sp/>of<sp/>spike<sp/>emission).}</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">Neuron<sp/>produces<sp/>spikes<sp/>stochastically<sp/>according<sp/>to<sp/>a<sp/>point<sp/>process<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="90"><highlight class="comment">firing<sp/>intensity:</highlight></codeline>
<codeline lineno="91"><highlight class="comment"></highlight></codeline>
<codeline lineno="92"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>\lambda(t)<sp/>=<sp/>\lambda_0<sp/>\cdot<sp/>\exp<sp/>(V(t)-V_T(t))<sp/>/<sp/>\Delta_V</highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">where<sp/>:math:`V_T(t)`<sp/>is<sp/>a<sp/>time-dependent<sp/>firing<sp/>threshold:</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/>V_T(t)<sp/>=<sp/>V_{T_{star}}<sp/>+<sp/>\gamma_1(t)<sp/>+<sp/>\gamma_2(t)<sp/>+<sp/>\ldots<sp/>+<sp/>\gamma_m(t)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">where<sp/>:math:`\gamma_i`<sp/>is<sp/>a<sp/>kernel<sp/>of<sp/>spike-frequency<sp/>adaptation<sp/>(sfa),<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="comment">neuron<sp/>model<sp/>can<sp/>have<sp/>arbitrary<sp/>number<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="104"><highlight class="comment">Dynamic<sp/>of<sp/>each<sp/>:math:`\gamma_i`<sp/>is<sp/>described<sp/>by:</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>\tau_{\gamma_i}<sp/>\cdot<sp/>d\gamma_i/dt<sp/>=<sp/>-\gamma_i</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">and<sp/>in<sp/>case<sp/>of<sp/>spike<sp/>emission,<sp/>its<sp/>value<sp/>increased<sp/>by<sp/>a<sp/>constant<sp/>(which<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="111"><highlight class="comment">positive<sp/>or<sp/>negative):</highlight></codeline>
<codeline lineno="112"><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>\gamma_i<sp/>=<sp/>\gamma_i<sp/>+<sp/>q_{\gamma_i}<sp/><sp/>\text{<sp/>(in<sp/>case<sp/>of<sp/>spike<sp/>emission).}</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">Note:</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">In<sp/>the<sp/>current<sp/>implementation<sp/>of<sp/>the<sp/>model,<sp/>the<sp/>values<sp/>of</highlight></codeline>
<codeline lineno="121"><highlight class="comment">:math:`\eta_i`<sp/>and<sp/>:math:`\gamma_i`<sp/>are<sp/>affected</highlight></codeline>
<codeline lineno="122"><highlight class="comment">immediately<sp/>after<sp/>spike<sp/>emission.<sp/>However,<sp/>`GIF<sp/>toolbox<sp/>&lt;http://wiki.epfl.ch/giftoolbox&gt;`_,</highlight></codeline>
<codeline lineno="123"><highlight class="comment">which<sp/>fits<sp/>the<sp/>model<sp/>using<sp/>experimental<sp/>data,<sp/>requires<sp/>a<sp/>different<sp/>set<sp/>of</highlight></codeline>
<codeline lineno="124"><highlight class="comment">:math:`\eta_i`<sp/>and<sp/>:math:`\gamma_i`.<sp/>It<sp/>applies<sp/>the<sp/>jump<sp/>of</highlight></codeline>
<codeline lineno="125"><highlight class="comment">:math:`\eta_i`<sp/>and<sp/>:math:`\gamma_i`<sp/>after<sp/>the<sp/>refractory<sp/>period.<sp/>One<sp/>can</highlight></codeline>
<codeline lineno="126"><highlight class="comment">easily<sp/>convert<sp/>between<sp/>:math:`q_\eta/\gamma`<sp/>of<sp/>these<sp/>two<sp/>approaches:</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/>q{_\eta}_{giftoolbox}<sp/>=<sp/>q_{\eta_{NEST}}<sp/>\cdot<sp/>(1<sp/>-<sp/>\exp(<sp/>-\tau_{ref}<sp/>/</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>\tau_\eta<sp/>))</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment">The<sp/>same<sp/>formula<sp/>applies<sp/>for<sp/>:math:`q_{\gamma}`.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">The<sp/>shape<sp/>of<sp/>synaptic<sp/>conductance<sp/>is<sp/>exponential.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">Parameters</highlight></codeline>
<codeline lineno="138"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">The<sp/>following<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>in<sp/>the<sp/>status<sp/>dictionary.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="144"><highlight class="comment">**Membrane<sp/>Parameters**</highlight></codeline>
<codeline lineno="145"><highlight class="comment">--------------------------------------------------------</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>C_m<sp/><sp/><sp/><sp/><sp/>pF<sp/><sp/><sp/><sp/><sp/><sp/>Capacity<sp/>of<sp/>the<sp/>membrane</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>t_ref<sp/><sp/><sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Duration<sp/>of<sp/>refractory<sp/>period</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>V_reset<sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Reset<sp/>value<sp/>for<sp/>V_m<sp/>after<sp/>a<sp/>spike</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>E_L<sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>g_L<sp/><sp/><sp/><sp/><sp/>nS<sp/><sp/><sp/><sp/><sp/><sp/>Leak<sp/>conductance</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>I_e<sp/><sp/><sp/><sp/><sp/>pA<sp/><sp/><sp/><sp/><sp/><sp/>Constant<sp/>external<sp/>input<sp/>current</highlight></codeline>
<codeline lineno="152"><highlight class="comment">========<sp/>=======<sp/>=======================================</highlight></codeline>
<codeline lineno="153"><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment">=========<sp/><sp/>=================<sp/><sp/>===============================================</highlight></codeline>
<codeline lineno="155"><highlight class="comment">**Spike<sp/>adaptation<sp/>and<sp/>firing<sp/>intensity<sp/>parameters**</highlight></codeline>
<codeline lineno="156"><highlight class="comment">-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>q_stc<sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>of<sp/>nA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Values<sp/>added<sp/>to<sp/>spike-triggered<sp/>currents<sp/>(stc)</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>each<sp/>spike<sp/>emission</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>tau_stc<sp/><sp/><sp/><sp/>list<sp/>of<sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/>constants<sp/>of<sp/>stc<sp/>variables</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>q_sfa<sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>of<sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Values<sp/>added<sp/>to<sp/>spike-frequency<sp/>adaptation</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sfa)<sp/>after<sp/>each<sp/>spike<sp/>emission</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>tau_sfa<sp/><sp/><sp/><sp/>list<sp/>of<sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Time<sp/>constants<sp/>of<sp/>sfa<sp/>variables</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>Delta_V<sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stochasticity<sp/>level</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>lambda_0<sp/><sp/><sp/>real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Stochastic<sp/>intensity<sp/>at<sp/>firing<sp/>threshold<sp/>V_T<sp/>i</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>1/s.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>V_T_star<sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Base<sp/>threshold</highlight></codeline>
<codeline lineno="167"><highlight class="comment">=========<sp/><sp/>=================<sp/><sp/>===============================================</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment">===========<sp/>=======<sp/>===========================================================</highlight></codeline>
<codeline lineno="170"><highlight class="comment">**Synaptic<sp/>parameters**</highlight></codeline>
<codeline lineno="171"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>E_ex<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Excitatory<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>tau_syn_ex<sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Decay<sp/>time<sp/>of<sp/>excitatory<sp/>synaptic<sp/>conductance</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>E_in<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mV<sp/><sp/><sp/><sp/><sp/><sp/>Inhibitory<sp/>reversal<sp/>potential</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>tau_syn_in<sp/>ms<sp/><sp/><sp/><sp/><sp/><sp/>Decay<sp/>time<sp/>of<sp/>the<sp/>inhibitory<sp/>synaptic<sp/>conductance</highlight></codeline>
<codeline lineno="176"><highlight class="comment">===========<sp/>=======<sp/>===========================================================</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment">=============<sp/>=======<sp/>=========================================================</highlight></codeline>
<codeline lineno="179"><highlight class="comment">**Integration<sp/>parameters**</highlight></codeline>
<codeline lineno="180"><highlight class="comment">-------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="181"><highlight class="comment">gsl_error_tol<sp/>real<sp/><sp/><sp/><sp/>This<sp/>parameter<sp/>controls<sp/>the<sp/>admissible<sp/>error<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GSL<sp/>integrator.<sp/>Reduce<sp/>it<sp/>if<sp/>NEST<sp/>complains<sp/>about</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical<sp/>instabilities.</highlight></codeline>
<codeline lineno="184"><highlight class="comment">=============<sp/>=======<sp/>=========================================================</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">References</highlight></codeline>
<codeline lineno="188"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">..<sp/>[1]<sp/>Mensi<sp/>S,<sp/>Naud<sp/>R,<sp/>Pozzorini<sp/>C,<sp/>Avermann<sp/>M,<sp/>Petersen<sp/>CC,<sp/>Gerstner<sp/>W<sp/>(2012)</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameter<sp/>extraction<sp/>and<sp/>classification<sp/>of<sp/>three<sp/>cortical<sp/>neuron<sp/>types</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reveals<sp/>two<sp/>distinct<sp/>adaptation<sp/>mechanisms.<sp/>Journal<sp/>of</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neurophysiology,<sp/>107(6):1756-1775.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOI:<sp/>https://doi.org/10.1152/jn.00408.2011</highlight></codeline>
<codeline lineno="195"><highlight class="comment">..<sp/>[2]<sp/>Pozzorini<sp/>C,<sp/>Mensi<sp/>S,<sp/>Hagens<sp/>O,<sp/>Naud<sp/>R,<sp/>Koch<sp/>C,<sp/>Gerstner<sp/>W<sp/>(2015).</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Automated<sp/>high-throughput<sp/>characterization<sp/>of<sp/>single<sp/>neurons<sp/>by<sp/>means<sp/>of</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simplified<sp/>spiking<sp/>models.<sp/>PLoS<sp/>Computational<sp/>Biology,<sp/>11(6),<sp/>e1004275.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOI:<sp/>https://doi.org/10.1371/journal.pcbi.1004275</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">Sends</highlight></codeline>
<codeline lineno="202"><highlight class="comment">+++++</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment">SpikeEvent</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment">Receives</highlight></codeline>
<codeline lineno="207"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment">SpikeEvent,<sp/>CurrentEvent,<sp/>DataLoggingRequest</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">See<sp/>also</highlight></codeline>
<codeline lineno="212"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="213"><highlight class="comment"></highlight></codeline>
<codeline lineno="214"><highlight class="comment">pp_psc_delta,<sp/>gif_cond_exp_multisynapse,<sp/>gif_psc_exp,<sp/>gif_psc_exp_multisynapse</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment">EndUserDocs<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">gif_cond_exp<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ArchivingNode</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>gif_cond_exp();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>gif_cond_exp(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gif_cond_exp&amp;<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>~gif_cond_exp()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Node::handle;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Node::handles_test_event;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>send_test_event(<sp/>Node&amp;,<sp/>rport,<sp/>synindex,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>SpikeEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>CurrentEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>DataLoggingRequest&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>SpikeEvent&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>CurrentEvent&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>DataLoggingRequest&amp;,<sp/>rport<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_buffers_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pre_run_hook()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>dynamics<sp/>function<sp/>quasi-member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gif_cond_exp_dynamics(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>two<sp/>classes<sp/>need<sp/>to<sp/>be<sp/>friends<sp/>to<sp/>access<sp/>the<sp/>State_<sp/>class/member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RecordablesMap&lt;<sp/>gif_cond_exp<sp/>&gt;;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UniversalDataLogger&lt;<sp/>gif_cond_exp<sp/>&gt;;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parameters_</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_L_;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_L_;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V_reset_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Delta_V_;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>V_T_star_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda_0_;<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_ex_;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>E_in_;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau_synE_;<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau_synI_;<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_ref_;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c_m_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>tau_stc_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>q_stc_;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>tau_sfa_;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>q_sfa_;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_e_;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8c28540996946a9840dc118eafc94908" kindref="member">gsl_error_tol</ref>;<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_();<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;,<sp/>Node*<sp/>node<sp/>);<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">State_</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>StateVecElems</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_M<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_EXC,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G_INH,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>STATE_VEC_SIZE</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>neuron_state_[<sp/>STATE_VEC_SIZE<sp/>];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>I_stim_;<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sfa_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stc_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>sfa_elems_;<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>stc_elems_;<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_ref_;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>State_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>State_&amp;<sp/>operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>State_&amp;<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;,<sp/>Node*<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffers_</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/>gif_cond_exp&amp;<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>gif_cond_exp&amp;<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>RingBuffer<sp/>spike_exc_;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>RingBuffer<sp/>spike_inh_;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>RingBuffer<sp/>currents_;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>UniversalDataLogger&lt;<sp/>gif_cond_exp<sp/>&gt;<sp/>logger_;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_step*<sp/>s_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_control*<sp/>c_;<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_evolve*<sp/>e_;<sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>gsl_odeiv_system<sp/>sys_;<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>IntegrationStep_<sp/>is<sp/>initialized<sp/>with<sp/>step_,<sp/>and<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>change<sp/>after<sp/>nodes<sp/>have<sp/>been<sp/>created,<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>place<sp/>both</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>IntegrationStep_;<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Variables_</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>P_sfa_;<sp/></highlight><highlight class="comment">//<sp/>decay<sp/>terms<sp/>of<sp/>spike-triggered<sp/>current<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>P_stc_;<sp/></highlight><highlight class="comment">//<sp/>decay<sp/>terms<sp/>of<sp/>adaptive<sp/>threshold<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>rng_;<sp/></highlight><highlight class="comment">//<sp/>random<sp/>number<sp/>generator<sp/>of<sp/>my<sp/>own<sp/>thread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RefractoryCounts_;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>functions<sp/>for<sp/>UniversalDataLogger<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/>State_::StateVecElems<sp/>elem<sp/>&gt;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>get_y_elem_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="402"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.neuron_state_[<sp/>elem<sp/>];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>get_E_sfa_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="409"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.sfa_;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>get_I_stc_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="416"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>S_.stc_;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>Parameters_<sp/>P_;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>State_<sp/>S_;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>Variables_<sp/>V_;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>Buffers_<sp/>B_;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RecordablesMap&lt;<sp/>gif_cond_exp<sp/>&gt;<sp/>recordablesMap_;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="439"><highlight class="normal">gif_cond_exp::send_test_event(<sp/>Node&amp;<sp/>target,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>SpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a83d2632e91d15673db6f7990fcdfe232" kindref="member">target</ref>.handles_test_event(<sp/>e,<sp/>receptor_type<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="449"><highlight class="normal">gif_cond_exp::handles_test_event(<sp/>SpikeEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="459"><highlight class="normal">gif_cond_exp::handles_test_event(<sp/>CurrentEvent&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="469"><highlight class="normal">gif_cond_exp::handles_test_event(<sp/>DataLoggingRequest&amp;<sp/>dlr,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>receptor_type<sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>receptor_type<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/>receptor_type,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.logger_.connect_logging_device(<sp/>dlr,<sp/>recordablesMap_<sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">gif_cond_exp::get_status(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>P_.get(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>S_.get(<sp/>d,<sp/>P_<sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ArchivingNode_1acd46838612262b4a5d4cacdf7d901145" kindref="member">ArchivingNode::get_status</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1a62373422f098eca1af4ddd73144c5928" kindref="member">names::recordables</ref><sp/>]<sp/>=<sp/>recordablesMap_.get_list();</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">gif_cond_exp::set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>Parameters_<sp/>ptmp<sp/>=<sp/>P_;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>ptmp.set(<sp/>d,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>State_<sp/>stmp<sp/>=<sp/>S_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>stmp.set(<sp/>d,<sp/>ptmp,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>know<sp/>that<sp/>(ptmp,<sp/>stmp)<sp/>are<sp/>consistent.<sp/>We<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>them<sp/>back<sp/>to<sp/>(P_,<sp/>S_)<sp/>before<sp/>we<sp/>are<sp/>also<sp/>sure<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>properties<sp/>to<sp/>be<sp/>set<sp/>in<sp/>the<sp/>parent<sp/>class<sp/>are<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>consistent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1ArchivingNode_1ac69d56c97bed5fd58fab9c3c745328c4" kindref="member">ArchivingNode::set_status</ref>(<sp/>d<sp/>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>temporaries<sp/>contain<sp/>consistent<sp/>set<sp/>of<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>P_<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>S_<sp/>=<sp/>stmp;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>GIF_COND_EXP_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/gif_cond_exp.h"/>
  </compounddef>
</doxygen>
