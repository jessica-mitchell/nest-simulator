<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_connection_creator" kind="class" language="C++" prot="public">
    <compoundname>nest::ConnectionCreator</compoundname>
    <includes refid="connection__creator_8h" local="no">connection_creator.h</includes>
    <innerclass refid="classnest_1_1_connection_creator_1_1_pool_wrapper__" prot="private">nest::ConnectionCreator::PoolWrapper_</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562b" prot="public" static="no" strong="no">
        <type></type>
        <name>ConnectionType</name>
        <enumvalue id="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba043df91a89de8c001a28296bedf56db9" prot="public">
          <name>Pairwise_bernoulli_on_source</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba5372f69f45b563184e73d5bcdd71e8b7" prot="public">
          <name>Pairwise_bernoulli_on_target</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562baa422971588b17619cfd3b758137113ac" prot="public">
          <name>Fixed_indegree</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba705b20a9b68f0bfb285897bf0a491617" prot="public">
          <name>Fixed_outdegree</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="66" column="3" bodyfile="nestkernel/connection_creator.h" bodystart="67" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1ae5be1aa5af32e39b72400f812892d898" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562b" kindref="member">ConnectionType</ref></type>
        <definition>ConnectionType nest::ConnectionCreator::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="163" column="18" bodyfile="nestkernel/connection_creator.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1ab61e8102c8d7c6bdb140acb87900e368" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionCreator::allow_autapses_</definition>
        <argsstring></argsstring>
        <name>allow_autapses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="164" column="8" bodyfile="nestkernel/connection_creator.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1afa3e785d772ba0536dc4fba1ec4aa6e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionCreator::allow_multapses_</definition>
        <argsstring></argsstring>
        <name>allow_multapses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="165" column="8" bodyfile="nestkernel/connection_creator.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1ac388b9bf8e8a94cd5e933ad8875fe37c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionCreator::allow_oversized_</definition>
        <argsstring></argsstring>
        <name>allow_oversized_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="166" column="8" bodyfile="nestkernel/connection_creator.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1a2ffe23ceffe3a5059c0bc40c3b3ae450" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classnest_1_1_parameter" kindref="compound">Parameter</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Parameter &gt; nest::ConnectionCreator::number_of_connections_</definition>
        <argsstring></argsstring>
        <name>number_of_connections_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="167" column="19" bodyfile="nestkernel/connection_creator.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1a9761a394bb424c42a639ab826f8a0bef" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractMask &gt; nest::ConnectionCreator::mask_</definition>
        <argsstring></argsstring>
        <name>mask_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="168" column="19" bodyfile="nestkernel/connection_creator.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1a662abda591dcda871942329880ff13bf" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classnest_1_1_parameter" kindref="compound">Parameter</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Parameter &gt; nest::ConnectionCreator::kernel_</definition>
        <argsstring></argsstring>
        <name>kernel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="169" column="19" bodyfile="nestkernel/connection_creator.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1abd289de4e2fc6be36e8ce5269558ccc6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt;</type>
        <definition>std::vector&lt; index &gt; nest::ConnectionCreator::synapse_model_</definition>
        <argsstring></argsstring>
        <name>synapse_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="170" column="15" bodyfile="nestkernel/connection_creator.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1aeed700893d1d5f301b60cc95854a758b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; DictionaryDatum &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; DictionaryDatum &gt; &gt; nest::ConnectionCreator::param_dicts_</definition>
        <argsstring></argsstring>
        <name>param_dicts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="171" column="15" bodyfile="nestkernel/connection_creator.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1a8d21d03c219c81a10488aa2593010f76" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classnest_1_1_parameter" kindref="compound">Parameter</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Parameter &gt; &gt; nest::ConnectionCreator::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="172" column="15" bodyfile="nestkernel/connection_creator.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_connection_creator_1a7641f895097a16e0a800a18b44c66b27" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classnest_1_1_parameter" kindref="compound">Parameter</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; Parameter &gt; &gt; nest::ConnectionCreator::delay_</definition>
        <argsstring></argsstring>
        <name>delay_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="173" column="15" bodyfile="nestkernel/connection_creator.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_connection_creator_1aba3b91642fb738809e096bb60678fb1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectionCreator::ConnectionCreator</definition>
        <argsstring>(DictionaryDatum dict)</argsstring>
        <name>ConnectionCreator</name>
        <param>
          <type>DictionaryDatum</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <ref refid="classnest_1_1_connection_creator" kindref="compound">ConnectionCreator</ref> with the properties defined in the given dictionary. Parameters for a <ref refid="classnest_1_1_connection_creator" kindref="compound">ConnectionCreator</ref> are:<itemizedlist>
<listitem><para>&quot;connection_type&quot;: Either &quot;convergent&quot; or &quot;divergent&quot;.</para>
</listitem><listitem><para>&quot;allow_autapses&quot;: Boolean, true if autapses are allowed.</para>
</listitem><listitem><para>&quot;allow_multapses&quot;: Boolean, true if multapses are allowed.</para>
</listitem><listitem><para>&quot;allow_oversized&quot;: Boolean, true if oversized masks are allowed.</para>
</listitem><listitem><para>&quot;number_of_connections&quot;: Integer, number of connections to make for each source or target.</para>
</listitem><listitem><para>&quot;mask&quot;: <ref refid="classnest_1_1_mask" kindref="compound">Mask</ref> definition (dictionary or masktype).</para>
</listitem><listitem><para>&quot;kernel&quot;: Kernel definition (dictionary, parametertype, or double).</para>
</listitem><listitem><para>&quot;synapse_model&quot;: The synapse model to use.</para>
</listitem><listitem><para>&quot;targets&quot;: Which targets (model or lid) to select (dictionary).</para>
</listitem><listitem><para>&quot;sources&quot;: Which targets (model or lid) to select (dictionary).</para>
</listitem><listitem><para>&quot;weight&quot;: Synaptic weight (dictionary, parametertype, or double).</para>
</listitem><listitem><para>&quot;delay&quot;: Synaptic delays (dictionary, parametertype, or double).</para>
</listitem><listitem><para>other parameters are interpreted as synapse parameters, and may be defined by a dictionary, parametertype, or double. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dict</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary containing properties for the connections. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="94" column="3" bodyfile="nestkernel/connection_creator.cpp" bodystart="29" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1ac829926e5b6ffd222a10d5bc5d2a1f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::connect</definition>
        <argsstring>(Layer&lt; D &gt; &amp;source, NodeCollectionPTR source_nc, Layer&lt; D &gt; &amp;target, NodeCollectionPTR target_nc)</argsstring>
        <name>connect</name>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source_nc</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target_nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect two layers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>source layer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> of the source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>target layer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> of the target. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="104" column="8" bodyfile="nestkernel/connection_creator_impl.h" bodystart="39" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1_connection_creator_1a4339600d1ec56c9e21506276f03f1764" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionCreator::extract_params_</definition>
        <argsstring>(const DictionaryDatum &amp;, std::vector&lt; DictionaryDatum &gt; &amp;)</argsstring>
        <name>extract_params_</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>dict_datum</defname>
        </param>
        <param>
          <type>std::vector&lt; DictionaryDatum &gt; &amp;</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="133" column="8" bodyfile="nestkernel/connection_creator.cpp" bodystart="157" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1a9406f2b55a5fdbb556a8c5642e150967" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::connect_to_target_</definition>
        <argsstring>(Iterator from, Iterator to, Node *tgt_ptr, const Position&lt; D &gt; &amp;tgt_pos, thread tgt_thread, const Layer&lt; D &gt; &amp;source)</argsstring>
        <name>connect_to_target_</name>
        <param>
          <type>Iterator</type>
          <declname>from</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>to</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>tgt_ptr</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>tgt_pos</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tgt_thread</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="136" column="8" bodyfile="nestkernel/connection_creator_impl.h" bodystart="73" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::pairwise_bernoulli_on_source_</definition>
        <argsstring>(Layer&lt; D &gt; &amp;source, NodeCollectionPTR source_nc, Layer&lt; D &gt; &amp;target, NodeCollectionPTR target_nc)</argsstring>
        <name>pairwise_bernoulli_on_source_</name>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source_nc</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target_nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="144" column="8" bodyfile="nestkernel/connection_creator_impl.h" bodystart="180" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1ac2924f703d2138beea75f9bdf5783efb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::pairwise_bernoulli_on_target_</definition>
        <argsstring>(Layer&lt; D &gt; &amp;source, NodeCollectionPTR source_nc, Layer&lt; D &gt; &amp;target, NodeCollectionPTR target_nc)</argsstring>
        <name>pairwise_bernoulli_on_target_</name>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source_nc</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target_nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="150" column="8" bodyfile="nestkernel/connection_creator_impl.h" bodystart="255" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1aa17ea21863e869441d8eb30ec68115f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::fixed_indegree_</definition>
        <argsstring>(Layer&lt; D &gt; &amp;source, NodeCollectionPTR source_nc, Layer&lt; D &gt; &amp;target, NodeCollectionPTR target_nc)</argsstring>
        <name>fixed_indegree_</name>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source_nc</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target_nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="157" column="3" bodyfile="nestkernel/connection_creator_impl.h" bodystart="342" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_connection_creator_1aed574cbd0e3449ff398d4679033fb0f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionCreator::fixed_outdegree_</definition>
        <argsstring>(Layer&lt; D &gt; &amp;source, NodeCollectionPTR source_nc, Layer&lt; D &gt; &amp;target, NodeCollectionPTR target_nc)</argsstring>
        <name>fixed_outdegree_</name>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source_nc</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_layer" kindref="compound">Layer</ref>&lt; D &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target_nc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connection_creator.h" line="161" column="3" bodyfile="nestkernel/connection_creator_impl.h" bodystart="637" bodyend="784"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a representation of the dictionary of connection properties given as an argument to the ConnectLayers function. The connect method is responsible for generating the connection according to the given parameters. This method is templated with the dimension of the layers, and is called via the <ref refid="classnest_1_1_layer" kindref="compound">Layer</ref> connect call using a visitor pattern. The connect method relays to another method (e.g., fixed_indegree_) implementing the concrete connection algorithm. It would be more elegant if this was a base class for classes representing different connection algorithms with a virtual connect method, but it is not possible to have a virtual template method.</para>
<para>The difference between the Pairwise_bernoulli_on_source and Pairwise_bernoulli_on_target connection types is which layer coordinates the mask and parameters are defined in. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::ConnectionCreator</label>
        <link refid="classnest_1_1_connection_creator"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/connection_creator.h" line="63" column="1" bodyfile="nestkernel/connection_creator.h" bodystart="64" bodyend="174"/>
    <listofallmembers>
      <member refid="classnest_1_1_connection_creator_1ab61e8102c8d7c6bdb140acb87900e368" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>allow_autapses_</name></member>
      <member refid="classnest_1_1_connection_creator_1afa3e785d772ba0536dc4fba1ec4aa6e8" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>allow_multapses_</name></member>
      <member refid="classnest_1_1_connection_creator_1ac388b9bf8e8a94cd5e933ad8875fe37c" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>allow_oversized_</name></member>
      <member refid="classnest_1_1_connection_creator_1ac829926e5b6ffd222a10d5bc5d2a1f34" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>connect</name></member>
      <member refid="classnest_1_1_connection_creator_1a9406f2b55a5fdbb556a8c5642e150967" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>connect_to_target_</name></member>
      <member refid="classnest_1_1_connection_creator_1aba3b91642fb738809e096bb60678fb1f" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>ConnectionCreator</name></member>
      <member refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562b" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>ConnectionType</name></member>
      <member refid="classnest_1_1_connection_creator_1a7641f895097a16e0a800a18b44c66b27" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>delay_</name></member>
      <member refid="classnest_1_1_connection_creator_1a4339600d1ec56c9e21506276f03f1764" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>extract_params_</name></member>
      <member refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562baa422971588b17619cfd3b758137113ac" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>Fixed_indegree</name></member>
      <member refid="classnest_1_1_connection_creator_1aa17ea21863e869441d8eb30ec68115f1" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>fixed_indegree_</name></member>
      <member refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba705b20a9b68f0bfb285897bf0a491617" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>Fixed_outdegree</name></member>
      <member refid="classnest_1_1_connection_creator_1aed574cbd0e3449ff398d4679033fb0f5" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>fixed_outdegree_</name></member>
      <member refid="classnest_1_1_connection_creator_1a662abda591dcda871942329880ff13bf" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>kernel_</name></member>
      <member refid="classnest_1_1_connection_creator_1a9761a394bb424c42a639ab826f8a0bef" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>mask_</name></member>
      <member refid="classnest_1_1_connection_creator_1a2ffe23ceffe3a5059c0bc40c3b3ae450" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>number_of_connections_</name></member>
      <member refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba043df91a89de8c001a28296bedf56db9" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>Pairwise_bernoulli_on_source</name></member>
      <member refid="classnest_1_1_connection_creator_1a0c2f6361c8cd9f8667f4e033f51d0ba5" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>pairwise_bernoulli_on_source_</name></member>
      <member refid="classnest_1_1_connection_creator_1a42a6a6e629fe27f72e85666caed5562ba5372f69f45b563184e73d5bcdd71e8b7" prot="public" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>Pairwise_bernoulli_on_target</name></member>
      <member refid="classnest_1_1_connection_creator_1ac2924f703d2138beea75f9bdf5783efb" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>pairwise_bernoulli_on_target_</name></member>
      <member refid="classnest_1_1_connection_creator_1aeed700893d1d5f301b60cc95854a758b" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>param_dicts_</name></member>
      <member refid="classnest_1_1_connection_creator_1abd289de4e2fc6be36e8ce5269558ccc6" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>synapse_model_</name></member>
      <member refid="classnest_1_1_connection_creator_1ae5be1aa5af32e39b72400f812892d898" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>type_</name></member>
      <member refid="classnest_1_1_connection_creator_1a8d21d03c219c81a10488aa2593010f76" prot="private" virt="non-virtual"><scope>nest::ConnectionCreator</scope><name>weight_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
