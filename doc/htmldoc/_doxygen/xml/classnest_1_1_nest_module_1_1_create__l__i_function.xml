<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_nest_module_1_1_create__l__i_function" kind="class" language="C++" prot="public">
    <compoundname>nest::NestModule::Create_l_iFunction</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="nestmodule_8h" local="no">nestmodule.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_nest_module_1_1_create__l__i_function_1a8bd0a17b5924c6494aa4c7305df8f4ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::NestModule::Create_l_iFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <param>
          <type>SLIInterpreter *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>@BeginDocumentation Name: Create - create nodes</para>
<para>Synopsis: /model Create -&gt; <ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> /model n Create -&gt; <ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> /model params Create -&gt; <ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> /model n params Create -&gt; <ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref></para>
<para>Parameters: /model - literal naming the modeltype n - the desired number of nodes params - parameters for the newly created node(s)</para>
<para>Returns: node_ids - <ref refid="classnest_1_1_node_collection" kindref="compound">NodeCollection</ref> representing nodes created</para>
<para>Description: Create generates n new network objects of the supplied model type. If n is not given, a single node is created. params is a dictionary with parameters for the new nodes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/nestmodule.h" line="317" column="10" bodyfile="nestkernel/nestmodule.cpp" bodystart="823" bodyend="842"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::NestModule::Create_l_iFunction</label>
        <link refid="classnest_1_1_nest_module_1_1_create__l__i_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::NestModule::Create_l_iFunction</label>
        <link refid="classnest_1_1_nest_module_1_1_create__l__i_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
      </node>
    </collaborationgraph>
    <location file="nestkernel/nestmodule.h" line="314" column="3" bodyfile="nestkernel/nestmodule.h" bodystart="315" bodyend="318"/>
    <listofallmembers>
      <member refid="classnest_1_1_nest_module_1_1_create__l__i_function_1a8bd0a17b5924c6494aa4c7305df8f4ca" prot="public" virt="non-virtual"><scope>nest::NestModule::Create_l_iFunction</scope><name>execute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
