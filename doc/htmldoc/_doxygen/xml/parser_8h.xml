<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="parser_8h" kind="file" language="C++">
    <compoundname>parser.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">typeinfo</includes>
    <includes refid="scanner_8h" local="yes">scanner.h</includes>
    <includes refid="token_8h" local="yes">token.h</includes>
    <includes refid="tokenstack_8h" local="yes">tokenstack.h</includes>
    <includedby refid="interpret_8cc" local="yes">interpret.cc</includedby>
    <includedby refid="parser_8cc" local="yes">parser.cc</includedby>
    <includedby refid="parserdatum_8h" local="yes">parserdatum.h</includedby>
    <includedby refid="slicontrol_8cc" local="yes">slicontrol.cc</includedby>
    <incdepgraph>
      <node id="11">
        <label>aggregatedatum.h</label>
        <link refid="aggregatedatum_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>charcode.h</label>
        <link refid="charcode_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>scanner.h</label>
        <link refid="scanner_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="25">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>symboldatum.h</label>
        <link refid="symboldatum_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>algorithm</label>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>config.h</label>
      </node>
      <node id="8">
        <label>cstddef</label>
      </node>
      <node id="14">
        <label>cstdlib</label>
      </node>
      <node id="18">
        <label>deque</label>
      </node>
      <node id="27">
        <label>iomanip</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="22">
        <label>list</label>
      </node>
      <node id="19">
        <label>map</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="3">
        <label>typeinfo</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>interpret.cc</label>
        <link refid="interpret_8cc"/>
      </node>
      <node id="3">
        <label>parser.cc</label>
        <link refid="parser_8cc"/>
      </node>
      <node id="1">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>parserdatum.h</label>
        <link refid="parserdatum_8h"/>
      </node>
      <node id="5">
        <label>slicontrol.cc</label>
        <link refid="slicontrol_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classParser" prot="public">Parser</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="parser_8h_1ae2e7fa738fee47f482d94bcc70a3ad15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Parser const &amp;, Parser const &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classParser" kindref="compound">Parser</ref> const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classParser" kindref="compound">Parser</ref> const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/parser.h" line="96" column="6" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/parser.cc" bodystart="211" bodyend="214" declfile="/home/mitchell/Work/repo/nest-simulator/sli/parser.h" declline="96" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="parser_8h_1a7bbdd42e28cba04da09432363f7bc443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Parser &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classParser" kindref="compound">Parser</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/parser.h" line="98" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/parser.cc" bodystart="217" bodyend="221" declfile="/home/mitchell/Work/repo/nest-simulator/sli/parser.h" declline="98" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>parser.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>SLI&apos;s<sp/>parser.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanner_8h" kindref="compound">scanner.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="token_8h" kindref="compound">token.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tokenstack_8h" kindref="compound">tokenstack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classParser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classParser" kindref="compound">Parser</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classScanner" kindref="compound">Scanner</ref>*<sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classParser_1a6fbe5f0d14fcd33b0e3932f7ea05e420" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/><ref refid="classParser_1a6fbe5f0d14fcd33b0e3932f7ea05e420" kindref="member">arraytoken</ref>;</highlight></codeline>
<codeline lineno="44" refid="classParser_1a10c53607ba84ee6cd8f7ed42bc9bc319" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/><ref refid="classParser_1a10c53607ba84ee6cd8f7ed42bc9bc319" kindref="member">proctoken</ref>;</highlight></codeline>
<codeline lineno="45" refid="classParser_1a520ab8372b100c783f9618ca3ca83561" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classTokenStack" kindref="compound">TokenStack</ref><sp/><ref refid="classParser_1a520ab8372b100c783f9618ca3ca83561" kindref="member">ParseStack</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classParser_1ad967e262532308ee8020781c2ab24960" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960" kindref="member">ParseResult</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49" refid="classParser_1ad967e262532308ee8020781c2ab24960abcda00345c4a9d8a0a78806f2dfcef8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960abcda00345c4a9d8a0a78806f2dfcef8b" kindref="member">tokencontinue</ref>,</highlight></codeline>
<codeline lineno="50" refid="classParser_1ad967e262532308ee8020781c2ab24960a6f07f16b75d78b22df0764aafd564d60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960a6f07f16b75d78b22df0764aafd564d60" kindref="member">scancontinue</ref>,</highlight></codeline>
<codeline lineno="51" refid="classParser_1ad967e262532308ee8020781c2ab24960a26f9d34df9e347a2e32e2ae9d1604c6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960a26f9d34df9e347a2e32e2ae9d1604c6c" kindref="member">tokencompleted</ref>,</highlight></codeline>
<codeline lineno="52" refid="classParser_1ad967e262532308ee8020781c2ab24960ac892b34b044563a217c2c4fc7e00bdd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960ac892b34b044563a217c2c4fc7e00bdd1" kindref="member">noopenproc</ref>,</highlight></codeline>
<codeline lineno="53" refid="classParser_1ad967e262532308ee8020781c2ab24960aab2604663f5bace62d8e365d41dfd638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960aab2604663f5bace62d8e365d41dfd638" kindref="member">endprocexpected</ref>,</highlight></codeline>
<codeline lineno="54" refid="classParser_1ad967e262532308ee8020781c2ab24960ab4606b530c9c29a4c5b944ddea793044" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960ab4606b530c9c29a4c5b944ddea793044" kindref="member">noopenarray</ref>,</highlight></codeline>
<codeline lineno="55" refid="classParser_1ad967e262532308ee8020781c2ab24960a3fcbdd7a708583f0d5f29dcce066388a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960a3fcbdd7a708583f0d5f29dcce066388a" kindref="member">endarrayexpected</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ad967e262532308ee8020781c2ab24960a1fc2f4e90a8e3337bc9b9a984b414fbe" kindref="member">unexpectedeof</ref></highlight></codeline>
<codeline lineno="57" refid="classParser_1ad967e262532308ee8020781c2ab24960a1fc2f4e90a8e3337bc9b9a984b414fbe" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classParser_1ad1d911bd49fec4c280d24bcfc31720f1" kindref="member">init</ref>(<sp/>std::istream&amp;<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a12234f6cd36b61af4b50c94a179422c1" kindref="member">Parser</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a12234f6cd36b61af4b50c94a179422c1" kindref="member">Parser</ref>(<sp/>std::istream&amp;<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classParser_1a1477eb52ba5b4021f7cc7290ac7d3ab7" kindref="member">operator()</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classParser_1a6c2821ae06e5f3f9b1c20eb0876e06de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a6c2821ae06e5f3f9b1c20eb0876e06de" kindref="member">readToken</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>-&gt;<ref refid="classScanner_1a3b260463bbfbba748cf72caf16578a77" kindref="member">source</ref>(<sp/>&amp;is<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classParser_1a1477eb52ba5b4021f7cc7290ac7d3ab7" kindref="member">operator()</ref>(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classParser_1a9374eb05a1fcab6b37c7c38ea7f02ff4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a9374eb05a1fcab6b37c7c38ea7f02ff4" kindref="member">readSymbol</ref>(<sp/>std::istream&amp;<sp/>is,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>-&gt;<ref refid="classScanner_1a3b260463bbfbba748cf72caf16578a77" kindref="member">source</ref>(<sp/>&amp;is<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>-&gt;operator()(<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="classScanner" kindref="compound">Scanner</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="81" refid="classParser_1a97d31d634bf7780761dd62c1f26dce9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a97d31d634bf7780761dd62c1f26dce9a" kindref="member">scan</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classParser_1a42e12df78b7b635c65937a71af247e74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classParser_1a42e12df78b7b635c65937a71af247e74" kindref="member">clear_context</ref>()</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classParser_1ab2ef99ea9e732f5fd176b3949a6c32af" kindref="member">s</ref>-&gt;<ref refid="classScanner_1a4195e1a3f30ec5ac747e2b1159ccd3d4" kindref="member">clear_context</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="parser_8h_1ae2e7fa738fee47f482d94bcc70a3ad15" kindref="member">operator==</ref>(<sp/><ref refid="classParser" kindref="compound">Parser</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/><ref refid="classParser" kindref="compound">Parser</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">std::ostream&amp;<sp/><ref refid="parser_8h_1a7bbdd42e28cba04da09432363f7bc443" kindref="member">operator&lt;&lt;</ref>(<sp/>std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classParser" kindref="compound">Parser</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/parser.h"/>
  </compounddef>
</doxygen>
