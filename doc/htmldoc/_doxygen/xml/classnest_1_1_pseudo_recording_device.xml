<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_pseudo_recording_device" kind="class" language="C++" prot="public">
    <compoundname>nest::PseudoRecordingDevice</compoundname>
    <basecompoundref refid="classnest_1_1_device" prot="public" virt="non-virtual">nest::Device</basecompoundref>
    <includes refid="pseudo__recording__device_8h" local="no">pseudo_recording_device.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_pseudo_recording_device_1ae448589c23fd103bb057ee716877b8af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::PseudoRecordingDevice::PseudoRecordingDevice</definition>
        <argsstring>()</argsstring>
        <name>PseudoRecordingDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/pseudo_recording_device.h" line="82" column="3" bodyfile="nestkernel/pseudo_recording_device.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_pseudo_recording_device_1a42c83c0336aac1c62b77c07fd8fb0010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::PseudoRecordingDevice::PseudoRecordingDevice</definition>
        <argsstring>(const PseudoRecordingDevice &amp;)</argsstring>
        <name>PseudoRecordingDevice</name>
        <param>
          <type>const <ref refid="classnest_1_1_pseudo_recording_device" kindref="compound">PseudoRecordingDevice</ref> &amp;</type>
          <defname>prd</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/pseudo_recording_device.h" line="83" column="3" bodyfile="nestkernel/pseudo_recording_device.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_pseudo_recording_device_1a1b00678357a6ae9168a05a047453b288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::PseudoRecordingDevice::~PseudoRecordingDevice</definition>
        <argsstring>() override</argsstring>
        <name>~PseudoRecordingDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/pseudo_recording_device.h" line="84" column="3" bodyfile="nestkernel/pseudo_recording_device.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_pseudo_recording_device_1ab3d8f1b91428aec4ef45b35f21ed0d99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::PseudoRecordingDevice::is_active</definition>
        <argsstring>(Time const &amp;T) const override</argsstring>
        <name>is_active</name>
        <reimplements refid="classnest_1_1_device_1a70ac0c03cf931db59d611a974f51cf3b">is_active</reimplements>
        <param>
          <type><ref refid="classnest_1_1_time" kindref="compound">Time</ref> const &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate if recording device is active. The argument is the time stamp of the event, and the device is active if start_ &lt; T &lt;= stop_. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/pseudo_recording_device.h" line="92" column="8" bodyfile="nestkernel/pseudo_recording_device.h" bodystart="106" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>@BeginDocumentation Name: <ref refid="classnest_1_1_pseudo_recording_device" kindref="compound">PseudoRecordingDevice</ref> - Common properties of all pseudo-recording devices. Description:</para>
<para>Pseudo recording devices are used to measure properties of or signals emitted by network nodes. In contrast to fully flegded recording devices, they only register data in memory, but do not write data to file or screen.</para>
<para>Parameters: The following parameters are shared with all devices: /start - Actication time, relative to origin. /stop - Inactivation time, relative to origin. /origin - Reference time for start and stop.</para>
<para>SeeAlso: <ref refid="classnest_1_1_device" kindref="compound">Device</ref>, <ref refid="classnest_1_1_stimulation_device" kindref="compound">StimulationDevice</ref>, <ref refid="classnest_1_1_recording_device" kindref="compound">RecordingDevice</ref> Base class for all pseudo recording devices.</para>
<para>Pseudo-recording devices collect data. The data is only collected in memory an only available through GetStatus.</para>
<para>If the device is configured to record from start to stop, this is interpreted as (start, stop], i.e., the earliest recorded event will have time stamp start+1, as it was generated during the update step (start, start+1].</para>
<para><simplesect kind="note"><para>The sole purpose of this class is to provide an implementation of <ref refid="classnest_1_1_pseudo_recording_device_1ab3d8f1b91428aec4ef45b35f21ed0d99" kindref="member">is_active()</ref>.</para>
</simplesect>
<simplesect kind="author"><para>HEP 2002-07-22, 2008-03-21, 2008-07-01 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Device</label>
        <link refid="classnest_1_1_device"/>
      </node>
      <node id="1">
        <label>nest::PseudoRecordingDevice</label>
        <link refid="classnest_1_1_pseudo_recording_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Device</label>
        <link refid="classnest_1_1_device"/>
      </node>
      <node id="1">
        <label>nest::PseudoRecordingDevice</label>
        <link refid="classnest_1_1_pseudo_recording_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/pseudo_recording_device.h" line="78" column="1" bodyfile="nestkernel/pseudo_recording_device.h" bodystart="79" bodyend="93"/>
    <listofallmembers>
      <member refid="classnest_1_1_device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>Device</name></member>
      <member refid="classnest_1_1_device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>Device</name></member>
      <member refid="classnest_1_1_device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_origin</name></member>
      <member refid="classnest_1_1_device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_start</name></member>
      <member refid="classnest_1_1_device_1ad04b50c499901228d9c672f8a677962e" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_status</name></member>
      <member refid="classnest_1_1_device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_stop</name></member>
      <member refid="classnest_1_1_device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1_device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1_device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1_device_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>init_state</name></member>
      <member refid="classnest_1_1_pseudo_recording_device_1ab3d8f1b91428aec4ef45b35f21ed0d99" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>is_active</name></member>
      <member refid="classnest_1_1_device_1a56f87d667d7b32a2cd3f95459e424834" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1_pseudo_recording_device_1ae448589c23fd103bb057ee716877b8af" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>PseudoRecordingDevice</name></member>
      <member refid="classnest_1_1_pseudo_recording_device_1a42c83c0336aac1c62b77c07fd8fb0010" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>PseudoRecordingDevice</name></member>
      <member refid="classnest_1_1_device_1a7e7f029d1c677e8d5727fc80b103e990" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>set_status</name></member>
      <member refid="classnest_1_1_device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::PseudoRecordingDevice</scope><name>~Device</name></member>
      <member refid="classnest_1_1_pseudo_recording_device_1a1b00678357a6ae9168a05a047453b288" prot="public" virt="non-virtual"><scope>nest::PseudoRecordingDevice</scope><name>~PseudoRecordingDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
