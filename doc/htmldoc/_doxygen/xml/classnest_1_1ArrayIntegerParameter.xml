<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1ArrayIntegerParameter" kind="class" language="C++" prot="public">
    <compoundname>nest::ArrayIntegerParameter</compoundname>
    <basecompoundref refid="classnest_1_1ConnParameter" prot="public" virt="non-virtual">nest::ConnParameter</basecompoundref>
    <includes refid="conn__parameter_8h" local="no">conn_parameter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; long &gt; *</type>
        <definition>const std::vector&lt; long &gt;* nest::ArrayIntegerParameter::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>nest::ArrayIntegerParameter::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="395" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="395" bodyend="-1"/>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a8a0a7c1f9677cccd263ab8498db7094a" compoundref="conn__parameter_8h" startline="342" endline="345">number_of_values</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a647fca247b3f8d1e92699ed7f6540ced" compoundref="conn__parameter_8h" startline="386" endline="392">reset</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a3d8720fea4d5642c2823d528bcf4dde0" compoundref="conn__parameter_8h" startline="329" endline="339">skip</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a97a022b4710f23228e16f393c84bc607" compoundref="conn__parameter_8h" startline="361" endline="371">value_double</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a1dec353ec12e206bc2187aa1e3723821" compoundref="conn__parameter_8h" startline="348" endline="358">value_int</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::vector&lt; long &gt;::const_iterator &gt;</type>
        <definition>std::vector&lt; std::vector&lt; long &gt;::const_iterator &gt; nest::ArrayIntegerParameter::next_</definition>
        <argsstring></argsstring>
        <name>next_</name>
        <qualifiedname>nest::ArrayIntegerParameter::next_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="396" column="24" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="396" bodyend="-1"/>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a647fca247b3f8d1e92699ed7f6540ced" compoundref="conn__parameter_8h" startline="386" endline="392">reset</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a3d8720fea4d5642c2823d528bcf4dde0" compoundref="conn__parameter_8h" startline="329" endline="339">skip</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a97a022b4710f23228e16f393c84bc607" compoundref="conn__parameter_8h" startline="361" endline="371">value_double</referencedby>
        <referencedby refid="classnest_1_1ArrayIntegerParameter_1a1dec353ec12e206bc2187aa1e3723821" compoundref="conn__parameter_8h" startline="348" endline="358">value_int</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a7626f6c7281c46c2e13a9e457c2591e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::ArrayIntegerParameter::ArrayIntegerParameter</definition>
        <argsstring>(const std::vector&lt; long &gt; &amp;values, const size_t nthreads)</argsstring>
        <name>ArrayIntegerParameter</name>
        <qualifiedname>nest::ArrayIntegerParameter::ArrayIntegerParameter</qualifiedname>
        <param>
          <type>const std::vector&lt; long &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>nthreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="322" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a3d8720fea4d5642c2823d528bcf4dde0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ArrayIntegerParameter::skip</definition>
        <argsstring>(thread tid, size_t n_skip) const override</argsstring>
        <name>skip</name>
        <qualifiedname>nest::ArrayIntegerParameter::skip</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a07bb81308cbcd25b6766faa704680b50">skip</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_skip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="329" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="329" bodyend="339"/>
        <references refid="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" compoundref="conn__parameter_8h" startline="396">next_</references>
        <references refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" compoundref="conn__parameter_8h" startline="395">values_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a8a0a7c1f9677cccd263ab8498db7094a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t nest::ArrayIntegerParameter::number_of_values</definition>
        <argsstring>() const override</argsstring>
        <name>number_of_values</name>
        <qualifiedname>nest::ArrayIntegerParameter::number_of_values</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a5be9d99e7d8036723e673cb1d25a6ee1">number_of_values</reimplements>
        <briefdescription>
<para>Returns number of values available. </para>
        </briefdescription>
        <detaileddescription>
<para>0 indicates scalar/unlimited supply. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="342" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="342" bodyend="345"/>
        <references refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" compoundref="conn__parameter_8h" startline="395">values_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a1dec353ec12e206bc2187aa1e3723821" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>long</type>
        <definition>long nest::ArrayIntegerParameter::value_int</definition>
        <argsstring>(thread tid, RngPtr, index, Node *) const override</argsstring>
        <name>value_int</name>
        <qualifiedname>nest::ArrayIntegerParameter::value_int</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a26c4ff5169680f2ba4a7c8a1694110f4">value_int</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="348" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="348" bodyend="358"/>
        <references refid="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" compoundref="conn__parameter_8h" startline="396">next_</references>
        <references refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" compoundref="conn__parameter_8h" startline="395">values_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a97a022b4710f23228e16f393c84bc607" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double nest::ArrayIntegerParameter::value_double</definition>
        <argsstring>(thread tid, RngPtr, index, Node *) const override</argsstring>
        <name>value_double</name>
        <qualifiedname>nest::ArrayIntegerParameter::value_double</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a891c9bf68a5c8f8f5416d090c4fc02f9">value_double</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        </param>
        <briefdescription>
<para>Return parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameter value may depend on target threads and random numbers. Both must be supplied, even if a concrete parameter type does not use them.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target_thread</parametername>
</parameternamelist>
<parameterdescription>
<para>will be ignored except for array parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>random number generator pointer will be ignored except for random parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="361" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="361" bodyend="371"/>
        <references refid="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" compoundref="conn__parameter_8h" startline="396">next_</references>
        <references refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" compoundref="conn__parameter_8h" startline="395">values_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1af5efd06a07e8c2d7a16da3ab7da5a27a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ArrayIntegerParameter::is_array</definition>
        <argsstring>() const override</argsstring>
        <name>is_array</name>
        <qualifiedname>nest::ArrayIntegerParameter::is_array</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a574bb23d4cd5514b7bf5d51a440abb55">is_array</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="374" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a0b2718f5a85398d1aeb42c8a5e234053" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ArrayIntegerParameter::provides_long</definition>
        <argsstring>() const override</argsstring>
        <name>provides_long</name>
        <qualifiedname>nest::ArrayIntegerParameter::provides_long</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a89cec93b5a09f8b41ec0c48e9fa3434a">provides_long</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="380" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ArrayIntegerParameter_1a647fca247b3f8d1e92699ed7f6540ced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ArrayIntegerParameter::reset</definition>
        <argsstring>() const override</argsstring>
        <name>reset</name>
        <qualifiedname>nest::ArrayIntegerParameter::reset</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a13d36c79f25051910c1ffe937e31ab1b">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="386" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="386" bodyend="392"/>
        <references refid="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" compoundref="conn__parameter_8h" startline="396">next_</references>
        <references refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" compoundref="conn__parameter_8h" startline="395">values_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Array parameter classes, returning integer values in order. </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>The array of values must not be empty (so return 0 for number_of_values can signal non-array parameter)</para>
</listitem><listitem><para>Throws exception if more values requested than available.</para>
</listitem><listitem><para>The class contains nthread number of pointers (one for each thread) to an iterator, which runs over the parameters initialised in an array. Each pointer is moved along the parameter array by the function <ref refid="classnest_1_1ArrayIntegerParameter_1a1dec353ec12e206bc2187aa1e3723821" kindref="member">value_int()</ref>, which returns the current parameter value and moves the pointer to the subsequent position.</para>
</listitem><listitem><para>All parameters are integer, thus calling the function <ref refid="classnest_1_1ArrayIntegerParameter_1a97a022b4710f23228e16f393c84bc607" kindref="member">value_double()</ref> throws an error. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::ArrayIntegerParameter</label>
        <link refid="classnest_1_1ArrayIntegerParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::ArrayIntegerParameter</label>
        <link refid="classnest_1_1ArrayIntegerParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="319" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="320" bodyend="397"/>
    <listofallmembers>
      <member refid="classnest_1_1ArrayIntegerParameter_1a7626f6c7281c46c2e13a9e457c2591e2" prot="public" virt="non-virtual"><scope>nest::ArrayIntegerParameter</scope><name>ArrayIntegerParameter</name></member>
      <member refid="classnest_1_1ConnParameter_1aeba222e75a9c6e4021394160c8f0fc9a" prot="public" virt="non-virtual"><scope>nest::ArrayIntegerParameter</scope><name>ConnParameter</name></member>
      <member refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" prot="public" virt="non-virtual"><scope>nest::ArrayIntegerParameter</scope><name>create</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1af5efd06a07e8c2d7a16da3ab7da5a27a" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>is_array</name></member>
      <member refid="classnest_1_1ConnParameter_1a2bd64986d7840e5cb839fbc9b083c0f6" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>is_scalar</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a013d4f578f20c34b478849447108a983" prot="private" virt="non-virtual"><scope>nest::ArrayIntegerParameter</scope><name>next_</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a8a0a7c1f9677cccd263ab8498db7094a" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>number_of_values</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a0b2718f5a85398d1aeb42c8a5e234053" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>provides_long</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a647fca247b3f8d1e92699ed7f6540ced" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>reset</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a3d8720fea4d5642c2823d528bcf4dde0" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>skip</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a97a022b4710f23228e16f393c84bc607" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>value_double</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a1dec353ec12e206bc2187aa1e3723821" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>value_int</name></member>
      <member refid="classnest_1_1ArrayIntegerParameter_1a9a7285a24cdaa1454cc4850045075137" prot="private" virt="non-virtual"><scope>nest::ArrayIntegerParameter</scope><name>values_</name></member>
      <member refid="classnest_1_1ConnParameter_1ad56f5b8e66ba9cd627f5c0cdd05dfbb4" prot="public" virt="virtual"><scope>nest::ArrayIntegerParameter</scope><name>~ConnParameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
