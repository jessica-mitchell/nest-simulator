<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1ManagerInterface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::ManagerInterface</compoundname>
    <derivedcompoundref refid="classnest_1_1ConnectionManager" prot="public" virt="non-virtual">nest::ConnectionManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1EventDeliveryManager" prot="public" virt="non-virtual">nest::EventDeliveryManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1IOManager" prot="public" virt="non-virtual">nest::IOManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1LoggingManager" prot="public" virt="non-virtual">nest::LoggingManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1MPIManager" prot="public" virt="non-virtual">nest::MPIManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1MUSICManager" prot="public" virt="non-virtual">nest::MUSICManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1ModelManager" prot="public" virt="non-virtual">nest::ModelManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1ModelRangeManager" prot="public" virt="non-virtual">nest::ModelRangeManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1NodeManager" prot="public" virt="non-virtual">nest::NodeManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1RandomManager" prot="public" virt="non-virtual">nest::RandomManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1SPManager" prot="public" virt="non-virtual">nest::SPManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1SimulationManager" prot="public" virt="non-virtual">nest::SimulationManager</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1VPManager" prot="public" virt="non-virtual">nest::VPManager</derivedcompoundref>
    <includes refid="manager__interface_8h" local="no">manager_interface.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ManagerInterface::ManagerInterface</definition>
        <argsstring>(ManagerInterface const &amp;)=delete</argsstring>
        <name>ManagerInterface</name>
        <param>
          <type><ref refid="classnest_1_1ManagerInterface" kindref="compound">ManagerInterface</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="49" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ManagerInterface::operator=</definition>
        <argsstring>(ManagerInterface const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classnest_1_1ManagerInterface" kindref="compound">ManagerInterface</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="50" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::ManagerInterface::ManagerInterface</definition>
        <argsstring>()</argsstring>
        <name>ManagerInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="53" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::ManagerInterface::~ManagerInterface</definition>
        <argsstring>()</argsstring>
        <name>~ManagerInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="57" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::initialize</definition>
        <argsstring>()=0</argsstring>
        <name>initialize</name>
        <reimplementedby refid="classnest_1_1ConnectionManager_1a95e1aed37d7c704e322fea89ac9dc705">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1EventDeliveryManager_1a4f1f5d8833960c364461389d78c63bd1">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1LoggingManager_1a8afea8dce0717068a0998314269e3243">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelManager_1ae14b26efd9515b1596ecfeaf25b04e64">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelRangeManager_1acd0eae7011bd5bddeb43ba9b6d01bbc6">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1MPIManager_1a255066ece2aedc9d6faef73e63286664">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1MUSICManager_1ab513adb3f93bf77539a70250b44c3971">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1NodeManager_1a1add23cb71fcdd7bba78421494f3dca1">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1RandomManager_1a30c6a775cc6f820d925c442e397ace89">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1a00834a4b46f5c2c47591efb7b6dda17c">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1SPManager_1a81bd08bb0734b0910c216220fce57e5c">initialize</reimplementedby>
        <reimplementedby refid="classnest_1_1VPManager_1a8364a5cc732ac45e292210c09070d5fe">initialize</reimplementedby>
        <briefdescription>
<para>Prepare manager for operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, the manager should be completely initialized and &quot;ready for action&quot;.</para>
<para><simplesect kind="note"><para>Initialization of any given manager may depend on other managers having been initialized before. <ref refid="classnest_1_1KernelManager_1aa731562f03c98d8fa67f1d530056ede2" kindref="member">KernelManager::initialize()</ref> is responsible for calling the initialization routines on the specific managers in correct order.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606" kindref="member">finalize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="74" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::finalize</definition>
        <argsstring>()=0</argsstring>
        <name>finalize</name>
        <reimplementedby refid="classnest_1_1ConnectionManager_1a6a6d1b63381ca974f610f04e042b0ff2">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1EventDeliveryManager_1a25b13da9ade9fe32eb374dcdb6e7d997">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1LoggingManager_1a7df2114c58aaa551765073ddd3f48b1c">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelManager_1a02895f199ad38d7bd3ac24f4ea799f44">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelRangeManager_1a01a81eacb4ddfd29ee728ab9848f185c">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1MPIManager_1a09a36899c01cb8ca1acebddcd55cb380">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1MUSICManager_1a816f54f62cd473b475d58a3835d5e35b">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1NodeManager_1ac08841a5dbcf756fb1796d690bcc73dc">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1RandomManager_1a1e7b649b91b7f28713bd43327993e4b5">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1ab8922b68742b365abda59437dbfa8ae8">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1SPManager_1a929ad597fdb40a6b0080991eb4b36aa3">finalize</reimplementedby>
        <reimplementedby refid="classnest_1_1VPManager_1a35393250b59cc345611b967cde1e38cb">finalize</reimplementedby>
        <briefdescription>
<para>Take down manager after operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, all dynamic data structures created by the manager shall be deallocated and containers emptied. Plain variables need not be reset.</para>
<para><simplesect kind="note"><para>Finalization of any given manager may depend on other managers not having been finalized yet. <ref refid="classnest_1_1KernelManager_1a9e1cccd4670b1da1f68208afb5e6622f" kindref="member">KernelManager::finalize()</ref> is responsible for calling the initialization routines on the specific managers in correct order, i.e., the opposite order of <ref refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79" kindref="member">initialize()</ref> calls.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79" kindref="member">initialize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="91" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::change_number_of_threads</definition>
        <argsstring>()</argsstring>
        <name>change_number_of_threads</name>
        <reimplementedby refid="classnest_1_1ConnectionManager_1a5ff7c49e14b799dfc160e679ae8e4d54">change_number_of_threads</reimplementedby>
        <reimplementedby refid="classnest_1_1EventDeliveryManager_1a7f1f77dcc6bd0f8c98c12ebf58ee376c">change_number_of_threads</reimplementedby>
        <reimplementedby refid="classnest_1_1IOManager_1a19ecf96537dddb09b4041429ed2d3463">change_number_of_threads</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelManager_1af5afbb0c126b604d32806bcec62ab559">change_number_of_threads</reimplementedby>
        <reimplementedby refid="classnest_1_1NodeManager_1a9700eb7f8939c4db871d9483b7c8d188">change_number_of_threads</reimplementedby>
        <reimplementedby refid="classnest_1_1RandomManager_1ac7cb1fb557a3850554dce9c57c4a9946">change_number_of_threads</reimplementedby>
        <briefdescription>
<para>Change the number of threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Many data structures within the different managers depend on the number of threads. This function is called on each manager upon a change of that number and allows the manager to re-allocate data structures accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="101" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;)=0</argsstring>
        <name>set_status</name>
        <reimplementedby refid="classnest_1_1ConnectionManager_1a38567f7aefd520dae214065ed1816f98">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1EventDeliveryManager_1a9fd97dd2b3f5bf3bc6556c3db2dd08c6">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1IOManager_1a33572c6b6c01fb2e171a7087689899fd">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1LoggingManager_1aa4406c42ee02a34b60d7eef8204f5562">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelManager_1a6d009316ac3aebeb02cf9813584ff101">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelRangeManager_1a8a52dcc9dd106f329341f7ed90dd7c17">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1MPIManager_1a97c0ce2af5728bb4b425edd45b010daf">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1MUSICManager_1aaf0d60f082c9d26b25234e83e8865b98">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1NodeManager_1a88ff132a048d366a6a24dada6add71f4">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1RandomManager_1ad66d615ef0519f6198796bb30a72cbb0">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1a8e68ef9b61dd3e17a09829333503b6ac">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1SPManager_1a826cbcc83e2da5a24acf3345917e7921">set_status</reimplementedby>
        <reimplementedby refid="classnest_1_1VPManager_1a62cacb654bd036d5110926a0d0c9f9f9">set_status</reimplementedby>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="103" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::get_status</definition>
        <argsstring>(DictionaryDatum &amp;)=0</argsstring>
        <name>get_status</name>
        <reimplementedby refid="classnest_1_1ConnectionManager_1aede87b403fb22979e3f81b4fe546a3ad">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1EventDeliveryManager_1aac3689e8ed6047a1d5250e1bdb60725a">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1LoggingManager_1ab7eceba0737ec4f47edd7c57095a34ef">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelManager_1a49632b3af5b4a82098707a82c6107a49">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1ModelRangeManager_1a1e880bc0eeb8288dd8609f98f6fa21d0">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1MPIManager_1aaa37ecf1d94ec3d8bb0b5f45033d8a6b">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1MUSICManager_1a53f405a0962e10cda856cdeb6b14c7c7">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1NodeManager_1a4c9026ded8f30c78fc99cc9ca690f601">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1RandomManager_1aac1a658b1441fe898d2359776309febb">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1af0b47533eada795a85ee39598f35d158">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1SPManager_1ad53307b4caba0acaa2b074ed31ca146c">get_status</reimplementedby>
        <reimplementedby refid="classnest_1_1VPManager_1a7a731dfafff4a74cfb48e2d58b870b4a">get_status</reimplementedby>
        <param>
          <type>DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="104" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::prepare</definition>
        <argsstring>()</argsstring>
        <name>prepare</name>
        <reimplementedby refid="classnest_1_1IOManager_1ac227a02839b2cf4a54ba8887bff313d8">prepare</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620">prepare</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="106" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ManagerInterface::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplementedby refid="classnest_1_1IOManager_1a391dcdfc0fb7aa519ea04e5d9fdc16db">cleanup</reimplementedby>
        <reimplementedby refid="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce">cleanup</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="107" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="107" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for kernel manager classes. </para>
    </briefdescription>
    <detaileddescription>
<para>This class defines the common interface for all manager classes in the NEST kernel.</para>
<para><simplesect kind="note"><para>Each manager shall be instantiated only once. Therefore, copy constructor and assignment operator are declared private and not implemented. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>nest::NodeManager</label>
        <link refid="classnest_1_1NodeManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>nest::SPManager</label>
        <link refid="classnest_1_1SPManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>nest::ModelRangeManager</label>
        <link refid="classnest_1_1ModelRangeManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::LoggingManager</label>
        <link refid="classnest_1_1LoggingManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="13">
        <label>nest::SimulationManager</label>
        <link refid="classnest_1_1SimulationManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>nest::RandomManager</label>
        <link refid="classnest_1_1RandomManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>nest::VPManager</label>
        <link refid="classnest_1_1VPManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::MPIManager</label>
        <link refid="classnest_1_1MPIManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::IOManager</label>
        <link refid="classnest_1_1IOManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::ModelManager</label>
        <link refid="classnest_1_1ModelManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::EventDeliveryManager</label>
        <link refid="classnest_1_1EventDeliveryManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ConnectionManager</label>
        <link refid="classnest_1_1ConnectionManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::MUSICManager</label>
        <link refid="classnest_1_1MUSICManager"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" line="46" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/manager_interface.h" bodystart="47" bodyend="108"/>
    <listofallmembers>
      <member refid="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0" prot="public" virt="virtual"><scope>nest::ManagerInterface</scope><name>change_number_of_threads</name></member>
      <member refid="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147" prot="public" virt="virtual"><scope>nest::ManagerInterface</scope><name>cleanup</name></member>
      <member refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606" prot="public" virt="pure-virtual"><scope>nest::ManagerInterface</scope><name>finalize</name></member>
      <member refid="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80" prot="public" virt="pure-virtual"><scope>nest::ManagerInterface</scope><name>get_status</name></member>
      <member refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79" prot="public" virt="pure-virtual"><scope>nest::ManagerInterface</scope><name>initialize</name></member>
      <member refid="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" virt="non-virtual"><scope>nest::ManagerInterface</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" virt="non-virtual"><scope>nest::ManagerInterface</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" virt="non-virtual"><scope>nest::ManagerInterface</scope><name>operator=</name></member>
      <member refid="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745" prot="public" virt="virtual"><scope>nest::ManagerInterface</scope><name>prepare</name></member>
      <member refid="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193" prot="public" virt="pure-virtual"><scope>nest::ManagerInterface</scope><name>set_status</name></member>
      <member refid="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" virt="virtual"><scope>nest::ManagerInterface</scope><name>~ManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
