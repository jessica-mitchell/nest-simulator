<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classRaiseerrorFunction" kind="class" language="C++" prot="public">
    <compoundname>RaiseerrorFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="slicontrol_8h" local="no">slicontrol.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRaiseerrorFunction_1a6d6a50731584762cb0dca5b4b9983ea8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RaiseerrorFunction::RaiseerrorFunction</definition>
        <argsstring>()</argsstring>
        <name>RaiseerrorFunction</name>
        <qualifiedname>RaiseerrorFunction::RaiseerrorFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="286" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="286" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classRaiseerrorFunction_1a8acdd8bd27d26de1e7a83ea2bc69a856" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaiseerrorFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>RaiseerrorFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: raiseerror - raise an error to the system </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: /command /error raiserror -&gt; /command (side-effects see below!)</para>
<para>Description: raiseerror is a SLI interface to the interpreter&apos;s error handling mechanism (see The Red Book for details). If an error is raised, the following actions are performed: the value of errordict /newerror is set to true the value of errordict /commandname is set to the name of the command which raised the error the name of the command which raised the error is pushed on the operand stack. If the value of errordict /recorstack is true, the state of the interpreter is saved:<itemizedlist>
<listitem><para>the operand stack is copied to errordict /ostack</para>
</listitem><listitem><para>the execution stack is copied to errordict /estack</para>
</listitem><listitem><para>the dictionary stack is copied to errordict /dstack stop is called. Stop then tries to find an enclosing stopped context and calls the associated function.</para>
</listitem></itemizedlist>
</para>
<para>This mechanism is explained in detail in The PostScript Reference Manual.</para>
<para>Please note that when raiserror is called, the state of the stacks should be restored to its initial state.</para>
<para>Examples: /save_sqrt { 0 gt % is the argument positive ? { sqrt } { % else, issue an error /save_sqrt /PositiveValueExpected raiseerror } ifelse } def</para>
<para>Author: Gewaltig</para>
<para>Remarks: not part of PostScript, but conform to the mechanism</para>
<para>References: See the Red Book for PostScript&apos;s error handling facilities</para>
<para>SeeAlso: raiseagain, stop, stopped, errordict </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="289" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.cc" bodystart="1157" bodyend="1179"/>
        <references refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">Token::datum</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" compoundref="interpret_8h" startline="181">SLIInterpreter::M_ERROR</references>
        <references refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" compoundref="interpret_8cc" startline="774" endline="824">SLIInterpreter::message</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a95e2901fa3dd87a0edb31c81bb6eeb9b" compoundref="tokenstack_8h" startline="102" endline="106">TokenStack::pop_move</references>
        <references refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" compoundref="interpret_8h" startline="635" endline="638">SLIInterpreter::raiseerror</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RaiseerrorFunction</label>
        <link refid="classRaiseerrorFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RaiseerrorFunction</label>
        <link refid="classRaiseerrorFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="283" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="284" bodyend="290"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>RaiseerrorFunction</scope><name>backtrace</name></member>
      <member refid="classRaiseerrorFunction_1a8acdd8bd27d26de1e7a83ea2bc69a856" prot="public" virt="virtual"><scope>RaiseerrorFunction</scope><name>execute</name></member>
      <member refid="classRaiseerrorFunction_1a6d6a50731584762cb0dca5b4b9983ea8" prot="public" virt="non-virtual"><scope>RaiseerrorFunction</scope><name>RaiseerrorFunction</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>RaiseerrorFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>RaiseerrorFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
