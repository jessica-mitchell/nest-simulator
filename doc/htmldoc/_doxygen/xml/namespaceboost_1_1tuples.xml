<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="namespaceboost_1_1tuples" kind="namespace" language="C++">
    <compoundname>boost::tuples</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::tuples::swap</definition>
        <argsstring>(boost::tuple&lt; T &amp;, U &amp; &gt; a, boost::tuple&lt; T &amp;, U &amp; &gt; b) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>boost::tuples::swap</qualifiedname>
        <param>
          <type>boost::tuple&lt; T &amp;, U &amp; &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>boost::tuple&lt; T &amp;, U &amp; &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Exchanges values of two two-element tuples. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the first value in the tuples. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the second value in the tuples. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="42" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" bodystart="42" bodyend="47"/>
        <references refid="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" compoundref="iterator__pair_8h" startline="42" endline="47">swap</references>
        <referencedby refid="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" compoundref="iterator__pair_8h" startline="42" endline="47">swap</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1tuples_1a2428ae10f291fedea3ad9d1a425dcefd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T1</type>
          </param>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class S1</type>
          </param>
          <param>
            <type>class S2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::tuples::operator&lt;</definition>
        <argsstring>(const cons&lt; T1, T2 &gt; &amp;lhs, const cons&lt; S1, S2 &gt; &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>boost::tuples::operator&lt;</qualifiedname>
        <param>
          <type>const cons&lt; T1, T2 &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const cons&lt; S1, S2 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Less than relational operator for Boost tuples. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>First operand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Second operand.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Modified operator, based on the less than operator from the Boost library. Have to implement a custom operator to only compare the first values of the tuples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="59" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" bodystart="60" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="33" column="1"/>
  </compounddef>
</doxygen>
