<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceboost_1_1tuples" kind="namespace" language="C++">
    <compoundname>boost::tuples</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::tuples::swap</definition>
        <argsstring>(boost::tuple&lt; T &amp;, U &amp; &gt; a, boost::tuple&lt; T &amp;, U &amp; &gt; b) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type>boost::tuple&lt; T &amp;, U &amp; &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>boost::tuple&lt; T &amp;, U &amp; &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Exchanges values of two two-element tuples. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the first value in the tuples. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>U</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the second value in the tuples. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="42" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" bodystart="42" bodyend="47"/>
        <references refid="namespacenest_1_1names_1a7b383c5d74fcb49623336cdb4902fe4e">nest::names::a</references>
        <references refid="namespacenest_1_1names_1aa06f71460d73472a90e5d08ac1e5c68e">nest::names::b</references>
        <referencedby refid="classnest_1_1NodeManager_1a8e6c4a313d6bf3d30f0d0ef111567575" compoundref="node__manager_8cpp" startline="105" endline="183">nest::NodeManager::add_node</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" compoundref="conn__builder_8cpp" startline="204" endline="266">nest::ConnBuilder::connect</referencedby>
        <referencedby refid="classnest_1_1TargetTable_1aacbcebfadb55deae20da0cd82f049866" compoundref="target__table_8cpp" startline="46" endline="50">nest::TargetTable::finalize</referencedby>
        <referencedby refid="classnest_1_1TargetTableDevices_1afb5ed52083295940408e11f60f7b537c" compoundref="target__table__devices_8cpp" startline="47" endline="74">nest::TargetTableDevices::finalize</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a6a6d1b63381ca974f610f04e042b0ff2" compoundref="connection__manager_8cpp" startline="134" endline="143">nest::ConnectionManager::finalize</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a25b13da9ade9fe32eb374dcdb6e7d997" compoundref="event__delivery__manager_8cpp" startline="103" endline="115">nest::EventDeliveryManager::finalize</referencedby>
        <referencedby refid="namespacenest_1a4e87d7711f377e5648ffe1a5cc3b734b" compoundref="sort_8h" startline="69" endline="79">nest::insertion_sort</referencedby>
        <referencedby refid="namespacenest_1ac4999dd06c52e281c7050729350dd6b3" compoundref="sort_8h" startline="92" endline="168">nest::quicksort3way</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1tuples_1a2428ae10f291fedea3ad9d1a425dcefd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T1</type>
          </param>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class S1</type>
          </param>
          <param>
            <type>class S2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::tuples::operator&lt;</definition>
        <argsstring>(const cons&lt; T1, T2 &gt; &amp;lhs, const cons&lt; S1, S2 &gt; &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const cons&lt; T1, T2 &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const cons&lt; S1, S2 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Less than relational operator for Boost tuples. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>First operand. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Second operand.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Modified operator, based on the less than operator from the Boost library. Have to implement a custom operator to only compare the first values of the tuples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="59" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" bodystart="60" bodyend="66"/>
        <referencedby refid="classbv__iterator_1a03acb2dac679d0a51aa14d453fadc1ff" compoundref="block__vector_8h" startline="795" endline="798">bv_iterator&lt; value_type_, ref_, ptr_ &gt;::operator&lt;=</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/iterator_pair.h" line="33" column="1"/>
  </compounddef>
</doxygen>
