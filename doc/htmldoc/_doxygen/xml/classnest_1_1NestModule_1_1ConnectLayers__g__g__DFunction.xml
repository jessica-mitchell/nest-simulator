<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction" kind="class" language="C++" prot="public">
    <compoundname>nest::NestModule::ConnectLayers_g_g_DFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="nestmodule_8h" local="no">nestmodule.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction_1ab0557c28442c2601fb6da5ebed659344" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::NestModule::ConnectLayers_g_g_DFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>nest::NestModule::ConnectLayers_g_g_DFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: nest::ConnectLayers - connect two layers </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: sourcelayer targetlayer connection_dict ConnectLayers -&gt; -</para>
<para>Description: Connects nodes in two topological layers.</para>
<para>The parameters set in the input dictionary decides the nature of the connection pattern being created. Please see parameter list below for a detailed description of these variables.</para>
<para>The connections are created by iterating through either the source or the target layer, consecutively connecting each node to a region in the opposing layer.</para>
<para>Parameters: sourcelayer - <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> for source layer targetlayer - <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> for target layer</para>
<para>connection_dict - dictionary containing any of the following elements:</para>
<para><hruler/>
 </para>
<sect2 id="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction_1autotoc_md10">
<title>Connection dictionary parameters:</title>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: connection-type</para>
<para>Type: string</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>Decides the type of connection pattern being created (i.e. convergent or divergent topological connection). A convergent topological connection is a connection between a source region and a target node. A divergent topological connection is a connection between a source node and a target region. A convergent topological connection can also be called a receptive field connection. A divergent topological connection can also be called a projective field connection. A one-to-one connection can be created by setting the size of the source or target region equal to one. The connection type has particular effect on the connection pattern when used together with the number_of_connections variable.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: mask</para>
<para>Type: dictionary</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>The mask defines the region used in the connection type described above. There exists a selection of many different region sizes and shapes. Examples are the grid region, the rectangular, circular or doughnut region.</para>
<para>The grid region takes an optional anchor parameter. The anchor parameter indicates which node of the grid region is aligned with the source node.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: weights, delays and kernel</para>
<para>Type: dictionary</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>These parameters can be initialised in many ways. Either as a constant value, with the help of a dictionary, or in an array (only for fixed grid layers). The dictionary can be of type gaussian, 2D gaussian, linear, exponential and other.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: source</para>
<para>Type: dictionary</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>The source dictionary enables us to give further detail on how the nodes in the source layer used in the connection function should be processed.</para>
<para>Parameters: model* literal lid^ integer</para>
<para>modeltype (i.e. /iaf_psc_alpha) of nodes that should be connected to in the layer. All nodes are used if this variable isn&apos;t set. ^Nesting depth of nodes that should be connected to. All layers are used if this variable isn&apos;t set.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: target</para>
<para>Type: dictionary</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>See description for source dictionary.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: number_of_connections</para>
<para>Type: integer</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description:</para>
<para>Maximum number of connections that each iterating node is allowed. The actual connections being created are picked at random from all the candidate connections.</para>
<para><verbatim>  Parameter name: synapse_model

  Type: literal

  Parameter description:

  The synapse model to be used for creating the connection.
</verbatim> <ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: allow_autapses</para>
<para>Type: bool</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description: Used together with the number_of_connections option to indicate if autapses are allowed.</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> name: allow_multapses</para>
<para>Type: bool</para>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> description: Used together with the number_of_connections option to indicate if multapses are allowed.</para>
<para><hruler/>
</para>
<para>Example:</para>
<para>Create source layer with CreateLayer &lt;&lt; /rows 15 /columns 43 /extent [1.0 2.0] /elements /iaf_psc_alpha <blockquote><para><blockquote><para><zwj/>/src_dictionary Set </para>
</blockquote></para>
</blockquote>src_dictionary CreateLayer /src Set</para>
<para>Create target layer with CreateLayer %Create layer &lt;&lt; /rows 34 /columns 71 /extent [3.0 1.0] /elements /iaf_psc_alpha <blockquote><para><blockquote><para><zwj/>/tgt_dictionary Set </para>
</blockquote></para>
</blockquote>tgt_dictionary CreateLayer /tgt Set</para>
<para>&lt;&lt; /connection_type (convergent) /mask &lt;&lt; /grid &lt;&lt; /rows 2 /columns 3 &gt;&gt; /anchor &lt;&lt; /row 4 /column 2 &gt;&gt; &gt;&gt; /weight 2.3 /delay [2.3 1.2 3.2 1.3 2.3 1.2] /kernel &lt;&lt; /gaussian &lt;&lt; /sigma 1.2 /p_center 1.41 &gt;&gt; &gt;&gt; /synapse_model /stdp_synapse</para>
<para><blockquote><para><blockquote><para><zwj/>/parameters Set </para>
</blockquote></para>
</blockquote>src tgt parameters ConnectLayers</para>
<para>Author: HÃ¥kon Enger, Kittel Austvoll</para>
<para>SeeAlso: nest::CreateLayer </para>
</sect2>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" line="739" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.cpp" bodystart="2685" bodyend="2701"/>
        <references refid="classSLIInterpreter_1a4bd843d0ad15faf88185a1ae885f8852" compoundref="interpret_8h" startline="905" endline="911">SLIInterpreter::assert_stack_load</references>
        <references refid="namespacenest_1a33bd25216b470958f2f7000bdf6eedf9" compoundref="spatial_8cpp" startline="405" endline="418">nest::connect_layers</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classnest_1_1Stopwatch_1ae80b1941ac79667732c90314755b017a" compoundref="stopwatch_8h" startline="165" endline="175">nest::Stopwatch::start</references>
        <references refid="classnest_1_1Stopwatch_1ae7799c842d1a9a6c65e65d686025ba2d" compoundref="stopwatch_8h" startline="178" endline="187">nest::Stopwatch::stop</references>
        <references refid="classnest_1_1ConnectionManager_1a66194774f828bbabf7d8c22e468ee6b7" compoundref="connection__manager_8h" startline="408">nest::ConnectionManager::sw_construction_connect</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>nest::NestModule::ConnectLayers_g_g_DFunction</label>
        <link refid="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>nest::NestModule::ConnectLayers_g_g_DFunction</label>
        <link refid="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" line="736" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" bodystart="737" bodyend="740"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>nest::NestModule::ConnectLayers_g_g_DFunction</scope><name>backtrace</name></member>
      <member refid="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction_1ab0557c28442c2601fb6da5ebed659344" prot="public" virt="virtual"><scope>nest::NestModule::ConnectLayers_g_g_DFunction</scope><name>execute</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>nest::NestModule::ConnectLayers_g_g_DFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>nest::NestModule::ConnectLayers_g_g_DFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
