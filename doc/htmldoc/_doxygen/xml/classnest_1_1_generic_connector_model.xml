<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_generic_connector_model" kind="class" language="C++" prot="public">
    <compoundname>nest::GenericConnectorModel</compoundname>
    <basecompoundref refid="classnest_1_1_connector_model" prot="public" virt="non-virtual">nest::ConnectorModel</basecompoundref>
    <includes refid="connector__model_8h" local="no">connector_model.h</includes>
    <templateparamlist>
      <param>
        <type>typename ConnectionT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_generic_connector_model_1a41c6629d2cfd9cf775da4c48fdc6e1ef" prot="private" static="no" mutable="no">
        <type>ConnectionT::CommonPropertiesType</type>
        <definition>ConnectionT::CommonPropertiesType nest::GenericConnectorModel&lt; ConnectionT &gt;::cp_</definition>
        <argsstring></argsstring>
        <name>cp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="150" column="46" bodyfile="nestkernel/connector_model.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_generic_connector_model_1a633de754da630c5e5009f1bf676682c1" prot="private" static="no" mutable="no">
        <type>ConnectionT</type>
        <definition>ConnectionT nest::GenericConnectorModel&lt; ConnectionT &gt;::default_connection_</definition>
        <argsstring></argsstring>
        <name>default_connection_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="152" column="15" bodyfile="nestkernel/connector_model.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_generic_connector_model_1ad8735784f78fe43e81ff588e918c9e18" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::GenericConnectorModel&lt; ConnectionT &gt;::receptor_type_</definition>
        <argsstring></argsstring>
        <name>receptor_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="153" column="9" bodyfile="nestkernel/connector_model.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1ac8e41618892aa99bfc585000a7bbac10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::GenericConnectorModel&lt; ConnectionT &gt;::GenericConnectorModel</definition>
        <argsstring>(const std::string name)</argsstring>
        <name>GenericConnectorModel</name>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="156" column="3" bodyfile="nestkernel/connector_model.h" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1ae1c6258af8224f5183595a2c2fcf9db5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::GenericConnectorModel&lt; ConnectionT &gt;::GenericConnectorModel</definition>
        <argsstring>(const GenericConnectorModel &amp;cm, const std::string name)</argsstring>
        <name>GenericConnectorModel</name>
        <param>
          <type>const <ref refid="classnest_1_1_generic_connector_model" kindref="compound">GenericConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="162" column="3" bodyfile="nestkernel/connector_model.h" bodystart="162" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a55662c78049406c5119cd0c81e6de812" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::add_connection</definition>
        <argsstring>(Node &amp;src, Node &amp;tgt, std::vector&lt; ConnectorBase * &gt; &amp;hetconn, const synindex syn_id, const DictionaryDatum &amp;d, const double delay, const double weight) override</argsstring>
        <name>add_connection</name>
        <reimplements refid="classnest_1_1_connector_model_1a65b12da20ec1f2816b53b56dede7cc75">add_connection</reimplements>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>tgt</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1_connector_base" kindref="compound">ConnectorBase</ref> * &gt; &amp;</type>
          <declname>hetconn</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a connection.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_source" kindref="compound">Source</ref> node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tgt</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_target" kindref="compound">Target</ref> node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hetconn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_connector" kindref="compound">Connector</ref> vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Synapse id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_parameter" kindref="compound">Parameter</ref> dictionary to configure the synapse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay of the connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of the connection</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Delay and weight have the default value NAN, a special value, which describes double values that are not a number. If delay or weight is omitted, NAN indicates this and weight/delay are set only if they are valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="170" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="192" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a9111ebca3dccccd7734b8e679b062766" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1_connector_model" kindref="compound">ConnectorModel</ref> *</type>
        <definition>ConnectorModel * nest::GenericConnectorModel&lt; ConnectionT &gt;::clone</definition>
        <argsstring>(std::string, synindex) const override</argsstring>
        <name>clone</name>
        <reimplements refid="classnest_1_1_connector_model_1aa7fe5e612ac57397923de1c0fd55aeb7">clone</reimplements>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <defname>syn_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="178" column="18" bodyfile="nestkernel/connector_model_impl.h" bodystart="66" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a8b22d67222d48edbd71796d62b1c8310" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::calibrate</definition>
        <argsstring>(const TimeConverter &amp;tc) override</argsstring>
        <name>calibrate</name>
        <reimplements refid="classnest_1_1_connector_model_1a4d54fb6a6e2158edd92251f968a2029d">calibrate</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1_time_converter" kindref="compound">TimeConverter</ref> &amp;</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="180" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1aa8c72dbdf47431532cab0e66946c9d27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1_connector_model_1a23c940dfb164a14a57225497fd177fdc">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="182" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="96" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1aa02f22324265fc3bbb1447322c97aa9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1_connector_model_1a4dc486d5b6d1537fb42bc0cd3d7169c4">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="183" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="114" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a512860a2f499cf64b6857c3e13e23645" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::check_synapse_params</definition>
        <argsstring>(const DictionaryDatum &amp;syn_spec) const override</argsstring>
        <name>check_synapse_params</name>
        <reimplements refid="classnest_1_1_connector_model_1a74b340444e504bc961bb7583983f7a7d">check_synapse_params</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks to see if illegal parameters are given in syn_spec. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="186" column="3" bodyfile="nestkernel/connector_model.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a8ba2a36cb2fa7969ef49451ec8924a0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ConnectionT::CommonPropertiesType const  &amp;</type>
        <definition>ConnectionT::CommonPropertiesType const&amp; nest::GenericConnectorModel&lt; ConnectionT &gt;::get_common_properties</definition>
        <argsstring>() const override</argsstring>
        <name>get_common_properties</name>
        <reimplements refid="classnest_1_1_connector_model_1aa6a70e8541a6cb9dc3a069c77751f772">get_common_properties</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="192" column="3" bodyfile="nestkernel/connector_model.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a663e4289f1edcd9b4619edcaf8ef10d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::set_syn_id</definition>
        <argsstring>(synindex syn_id) override</argsstring>
        <name>set_syn_id</name>
        <reimplements refid="classnest_1_1_connector_model_1a87685961db1b5547f2a30a8b7d4764e1">set_syn_id</reimplements>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="197" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1ac7fa275e13d9aef8d80694f033fcf50e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1_secondary_event" kindref="compound">SecondaryEvent</ref> *</type>
        <definition>SecondaryEvent* nest::GenericConnectorModel&lt; ConnectionT &gt;::get_secondary_event</definition>
        <argsstring>() override</argsstring>
        <name>get_secondary_event</name>
        <reimplements refid="classnest_1_1_connector_model_1a76a6674064f729387937e2316af2004c">get_secondary_event</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="200" column="3" bodyfile="nestkernel/connector_model.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a544341346e713f1ad6ff44e92f2c31f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ConnectionT const  &amp;</type>
        <definition>ConnectionT const&amp; nest::GenericConnectorModel&lt; ConnectionT &gt;::get_default_connection</definition>
        <argsstring>() const</argsstring>
        <name>get_default_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="206" column="3" bodyfile="nestkernel/connector_model.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a20dcb39b4807eb02c6d55d737f4afa83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::used_default_delay</definition>
        <argsstring>()</argsstring>
        <name>used_default_delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="212" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="142" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_generic_connector_model_1a0786c7e789e6ad238b87ee53ec0035f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::GenericConnectorModel&lt; ConnectionT &gt;::add_connection_</definition>
        <argsstring>(Node &amp;src, Node &amp;tgt, std::vector&lt; ConnectorBase * &gt; &amp;hetconn, const synindex syn_id, ConnectionT &amp;c, const rport receptor_type)</argsstring>
        <name>add_connection_</name>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <declname>tgt</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1_connector_base" kindref="compound">ConnectorBase</ref> * &gt; &amp;</type>
          <declname>hetconn</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>ConnectionT &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/connector_model.h" line="214" column="8" bodyfile="nestkernel/connector_model_impl.h" bodystart="268" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ConnectorModel</label>
        <link refid="classnest_1_1_connector_model"/>
      </node>
      <node id="1">
        <label>nest::GenericConnectorModel&lt; ConnectionT &gt;</label>
        <link refid="classnest_1_1_generic_connector_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ConnectorModel</label>
        <link refid="classnest_1_1_connector_model"/>
      </node>
      <node id="1">
        <label>nest::GenericConnectorModel&lt; ConnectionT &gt;</label>
        <link refid="classnest_1_1_generic_connector_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/connector_model.h" line="147" column="1" bodyfile="nestkernel/connector_model.h" bodystart="148" bodyend="221"/>
    <listofallmembers>
      <member refid="classnest_1_1_generic_connector_model_1a55662c78049406c5119cd0c81e6de812" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>add_connection</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a0786c7e789e6ad238b87ee53ec0035f7" prot="private" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>add_connection_</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a8b22d67222d48edbd71796d62b1c8310" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>calibrate</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a512860a2f499cf64b6857c3e13e23645" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a9111ebca3dccccd7734b8e679b062766" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>clone</name></member>
      <member refid="classnest_1_1_connector_model_1a7667961923287c9ca330c6ca32ee0f89" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>ConnectorModel</name></member>
      <member refid="classnest_1_1_connector_model_1a35e5eb9a749494f77250cfe1bf370fc3" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>ConnectorModel</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a41c6629d2cfd9cf775da4c48fdc6e1ef" prot="private" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>cp_</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a633de754da630c5e5009f1bf676682c1" prot="private" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>default_connection_</name></member>
      <member refid="classnest_1_1_connector_model_1ae7911aa0186184953e5b35033ee317f9" prot="protected" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>default_delay_needs_check_</name></member>
      <member refid="classnest_1_1_generic_connector_model_1ac8e41618892aa99bfc585000a7bbac10" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>GenericConnectorModel</name></member>
      <member refid="classnest_1_1_generic_connector_model_1ae1c6258af8224f5183595a2c2fcf9db5" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>GenericConnectorModel</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a8ba2a36cb2fa7969ef49451ec8924a0f" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>get_common_properties</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a544341346e713f1ad6ff44e92f2c31f3" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>get_default_connection</name></member>
      <member refid="classnest_1_1_connector_model_1a697f7ef525ecca6e04c4d2c23ba7736f" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>get_name</name></member>
      <member refid="classnest_1_1_connector_model_1a537b4249ca897dc9387e2a01f6a60b76" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>get_properties</name></member>
      <member refid="classnest_1_1_generic_connector_model_1ac7fa275e13d9aef8d80694f033fcf50e" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>get_secondary_event</name></member>
      <member refid="classnest_1_1_generic_connector_model_1aa8c72dbdf47431532cab0e66946c9d27" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>get_status</name></member>
      <member refid="classnest_1_1_connector_model_1a2ff68f3ae1070d6ea7970693fca7c511" prot="public" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>has_property</name></member>
      <member refid="classnest_1_1_connector_model_1a42cc2d70a67df540eb6fb4aa04ec128d" prot="protected" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>name_</name></member>
      <member refid="classnest_1_1_connector_model_1aecc15376ff6b4d4e6e6e805dadf22192" prot="protected" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>properties_</name></member>
      <member refid="classnest_1_1_generic_connector_model_1ad8735784f78fe43e81ff588e918c9e18" prot="private" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>receptor_type_</name></member>
      <member refid="classnest_1_1_generic_connector_model_1aa02f22324265fc3bbb1447322c97aa9a" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>set_status</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a663e4289f1edcd9b4619edcaf8ef10d9" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1_generic_connector_model_1a20dcb39b4807eb02c6d55d737f4afa83" prot="private" virt="non-virtual"><scope>nest::GenericConnectorModel</scope><name>used_default_delay</name></member>
      <member refid="classnest_1_1_connector_model_1a59234daf4de0418aaf86563f9b6ce192" prot="public" virt="virtual"><scope>nest::GenericConnectorModel</scope><name>~ConnectorModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
