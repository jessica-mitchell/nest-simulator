<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1ConnBuilder" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::ConnBuilder</compoundname>
    <derivedcompoundref refid="classnest_1_1AllToAllBuilder" prot="public" virt="non-virtual">nest::AllToAllBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1BernoulliBuilder" prot="public" virt="non-virtual">nest::BernoulliBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1FixedInDegreeBuilder" prot="public" virt="non-virtual">nest::FixedInDegreeBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1FixedOutDegreeBuilder" prot="public" virt="non-virtual">nest::FixedOutDegreeBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1FixedTotalNumberBuilder" prot="public" virt="non-virtual">nest::FixedTotalNumberBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1OneToOneBuilder" prot="public" virt="non-virtual">nest::OneToOneBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1SPBuilder" prot="public" virt="non-virtual">nest::SPBuilder</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1SymmetricBernoulliBuilder" prot="public" virt="non-virtual">nest::SymmetricBernoulliBuilder</derivedcompoundref>
    <includes refid="conn__builder_8h" local="no">conn_builder.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classnest_1_1ConnBuilder_1ad0b9124c3f087f1699800935054ad91a" prot="private" static="no">
        <type>std::map&lt; Name, <ref refid="classnest_1_1ConnParameter" kindref="compound">ConnParameter</ref> * &gt;</type>
        <definition>typedef std::map&lt; Name, ConnParameter* &gt; nest::ConnBuilder::ConnParameterMap</definition>
        <argsstring></argsstring>
        <name>ConnParameterMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="215" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a464b9cad4d0148634d443398c1d7d5a9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        <definition>NodeCollectionPTR nest::ConnBuilder::sources_</definition>
        <argsstring></argsstring>
        <name>sources_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="181" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="181" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedInDegreeBuilder_1a36ab7805dc7ab7084d162793eeecd04d" compoundref="conn__builder_8cpp" startline="1080" endline="1133">nest::FixedInDegreeBuilder::FixedInDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedTotalNumberBuilder_1a1f1e2cf60e602652e53b6850f50bb304" compoundref="conn__builder_8cpp" startline="1374" endline="1407">nest::FixedTotalNumberBuilder::FixedTotalNumberBuilder</referencedby>
        <referencedby refid="classnest_1_1AllToAllBuilder_1a806a3d4780c398b9bb8fe539ed2f8c24" compoundref="conn__builder_8h" startline="299" endline="302">nest::AllToAllBuilder::is_symmetric</referencedby>
        <referencedby refid="classnest_1_1OneToOneBuilder_1ad7a1aa85ec4965c54798ab827b229fa2" compoundref="conn__builder_8cpp" startline="594" endline="605">nest::OneToOneBuilder::OneToOneBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a7cabed3a9ba94e4ef4cc401019bb824d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        <definition>NodeCollectionPTR nest::ConnBuilder::targets_</definition>
        <argsstring></argsstring>
        <name>targets_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="182" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="182" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedOutDegreeBuilder_1a5a921216df3a6041b26162e567ba41ee" compoundref="conn__builder_8cpp" startline="1244" endline="1299">nest::FixedOutDegreeBuilder::FixedOutDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedTotalNumberBuilder_1a1f1e2cf60e602652e53b6850f50bb304" compoundref="conn__builder_8cpp" startline="1374" endline="1407">nest::FixedTotalNumberBuilder::FixedTotalNumberBuilder</referencedby>
        <referencedby refid="classnest_1_1AllToAllBuilder_1a806a3d4780c398b9bb8fe539ed2f8c24" compoundref="conn__builder_8h" startline="299" endline="302">nest::AllToAllBuilder::is_symmetric</referencedby>
        <referencedby refid="classnest_1_1OneToOneBuilder_1ad7a1aa85ec4965c54798ab827b229fa2" compoundref="conn__builder_8cpp" startline="594" endline="605">nest::OneToOneBuilder::OneToOneBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1ae4f5e56dc411af3804240dd632c4f3ec" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::allow_autapses_</definition>
        <argsstring></argsstring>
        <name>allow_autapses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="184" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="184" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedInDegreeBuilder_1a36ab7805dc7ab7084d162793eeecd04d" compoundref="conn__builder_8cpp" startline="1080" endline="1133">nest::FixedInDegreeBuilder::FixedInDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedOutDegreeBuilder_1a5a921216df3a6041b26162e567ba41ee" compoundref="conn__builder_8cpp" startline="1244" endline="1299">nest::FixedOutDegreeBuilder::FixedOutDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1SymmetricBernoulliBuilder_1adf66c83952b6869907a90004052f5eda" compoundref="conn__builder_8cpp" startline="1659" endline="1688">nest::SymmetricBernoulliBuilder::SymmetricBernoulliBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a59ab20628f392f86dd5c7d739e648c66" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::allow_multapses_</definition>
        <argsstring></argsstring>
        <name>allow_multapses_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="185" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="185" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedInDegreeBuilder_1a36ab7805dc7ab7084d162793eeecd04d" compoundref="conn__builder_8cpp" startline="1080" endline="1133">nest::FixedInDegreeBuilder::FixedInDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedOutDegreeBuilder_1a5a921216df3a6041b26162e567ba41ee" compoundref="conn__builder_8cpp" startline="1244" endline="1299">nest::FixedOutDegreeBuilder::FixedOutDegreeBuilder</referencedby>
        <referencedby refid="classnest_1_1FixedTotalNumberBuilder_1a1f1e2cf60e602652e53b6850f50bb304" compoundref="conn__builder_8cpp" startline="1374" endline="1407">nest::FixedTotalNumberBuilder::FixedTotalNumberBuilder</referencedby>
        <referencedby refid="classnest_1_1SymmetricBernoulliBuilder_1adf66c83952b6869907a90004052f5eda" compoundref="conn__builder_8cpp" startline="1659" endline="1688">nest::SymmetricBernoulliBuilder::SymmetricBernoulliBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a15a2456e42f5637e1d8001ae73fa7e52" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::make_symmetric_</definition>
        <argsstring></argsstring>
        <name>make_symmetric_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="186" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="186" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1SymmetricBernoulliBuilder_1adf66c83952b6869907a90004052f5eda" compoundref="conn__builder_8cpp" startline="1659" endline="1688">nest::SymmetricBernoulliBuilder::SymmetricBernoulliBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1aacdef9d1a02f25cd6b427cf4173ade5b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::creates_symmetric_connections_</definition>
        <argsstring></argsstring>
        <name>creates_symmetric_connections_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="187" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="187" bodyend="-1"/>
        <referencedby refid="classnest_1_1SymmetricBernoulliBuilder_1adf66c83952b6869907a90004052f5eda" compoundref="conn__builder_8cpp" startline="1659" endline="1688">nest::SymmetricBernoulliBuilder::SymmetricBernoulliBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1abba02533d1aa42c88177b68ff11dd3f7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; WrappedThreadException &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; WrappedThreadException &gt; &gt; nest::ConnBuilder::exceptions_raised_</definition>
        <argsstring></argsstring>
        <name>exceptions_raised_</name>
        <briefdescription>
<para>buffer for exceptions raised in threads </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="190" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1ac5ff17cf7dc8accebf3a60fb8ca08b83" prot="protected" static="no" mutable="no">
        <type>Name</type>
        <definition>Name nest::ConnBuilder::pre_synaptic_element_name_</definition>
        <argsstring></argsstring>
        <name>pre_synaptic_element_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="194" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="194" bodyend="-1"/>
        <referencedby refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" compoundref="conn__builder_8h" startline="413" endline="416">nest::SPBuilder::get_pre_synaptic_element_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1ae0242d555bdaa2756db3a6744a9da65b" prot="protected" static="no" mutable="no">
        <type>Name</type>
        <definition>Name nest::ConnBuilder::post_synaptic_element_name_</definition>
        <argsstring></argsstring>
        <name>post_synaptic_element_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="195" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" compoundref="conn__builder_8h" startline="418" endline="421">nest::SPBuilder::get_post_synaptic_element_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::use_pre_synaptic_element_</definition>
        <argsstring></argsstring>
        <name>use_pre_synaptic_element_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="197" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="classnest_1_1SPBuilder_1ad52b37546d512e5d7c9e77b2a3e0d897" compoundref="conn__builder_8cpp" startline="1795" endline="1806">nest::SPBuilder::SPBuilder</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" compoundref="conn__builder_8h" startline="201" endline="204">use_structural_plasticity_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::use_post_synaptic_element_</definition>
        <argsstring></argsstring>
        <name>use_post_synaptic_element_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="198" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="198" bodyend="-1"/>
        <referencedby refid="classnest_1_1SPBuilder_1ad52b37546d512e5d7c9e77b2a3e0d897" compoundref="conn__builder_8cpp" startline="1795" endline="1806">nest::SPBuilder::SPBuilder</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" compoundref="conn__builder_8h" startline="201" endline="204">use_structural_plasticity_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1ConnParameter" kindref="compound">ConnParameter</ref> * &gt;</type>
        <definition>std::vector&lt; ConnParameter* &gt; nest::ConnBuilder::parameters_requiring_skipping_</definition>
        <argsstring></argsstring>
        <name>parameters_requiring_skipping_</name>
        <briefdescription>
<para>pointers to connection parameters specified as arrays </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="207" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="207" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1aff777833ec510565b318f0059df520a0" compoundref="conn__builder_8h" startline="449" endline="455">register_parameters_requiring_skipping_</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1a9cb089bbde94e308f255a41c2abd09a3" compoundref="conn__builder_8h" startline="458" endline="466">skip_conn_parameter_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt;</type>
        <definition>std::vector&lt; index &gt; nest::ConnBuilder::synapse_model_id_</definition>
        <argsstring></argsstring>
        <name>synapse_model_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="209" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="209" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" compoundref="conn__builder_8h" startline="94" endline="101">get_default_delay</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" compoundref="conn__builder_8h" startline="84" endline="91">get_synapse_model</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1a07998ea08ce1a6d1afdf67b42d0f94c3" compoundref="conn__builder__impl_8h" startline="36" endline="47">single_disconnect_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1ae6927c7fa75b13b37b25fb0851cd5faa" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; DictionaryDatum &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; DictionaryDatum &gt; &gt; nest::ConnBuilder::param_dicts_</definition>
        <argsstring></argsstring>
        <name>param_dicts_</name>
        <briefdescription>
<para>dictionaries to pass to connect function, one per thread for every syn_spec </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="212" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="212" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a386e5b955385f3490bd28479285c06eb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; nest::ConnBuilder::default_weight_and_delay_</definition>
        <argsstring></argsstring>
        <name>default_weight_and_delay_</name>
        <briefdescription>
<para>indicate that weight and delay should not be set per synapse </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="218" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="218" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a780c5320b5a14d18a42452ee055e649c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; nest::ConnBuilder::default_weight_</definition>
        <argsstring></argsstring>
        <name>default_weight_</name>
        <briefdescription>
<para>indicate that weight should not be set per synapse </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="221" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="221" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; nest::ConnBuilder::default_delay_</definition>
        <argsstring></argsstring>
        <name>default_delay_</name>
        <briefdescription>
<para>indicate that delay should not be set per synapse </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="224" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="224" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" compoundref="conn__builder_8h" startline="94" endline="101">get_default_delay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a4bac8367e1e0b6a93f57a5e09166e54c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1ConnParameter" kindref="compound">ConnParameter</ref> * &gt;</type>
        <definition>std::vector&lt; ConnParameter* &gt; nest::ConnBuilder::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="227" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="227" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1aa5fb972b09aa51c867008682aaac31ee" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1ConnParameter" kindref="compound">ConnParameter</ref> * &gt;</type>
        <definition>std::vector&lt; ConnParameter* &gt; nest::ConnBuilder::delays_</definition>
        <argsstring></argsstring>
        <name>delays_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="228" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="228" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1abca9a10069e6ff74d67f2c8cf218b57e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1ConnBuilder_1ad0b9124c3f087f1699800935054ad91a" kindref="member">ConnParameterMap</ref> &gt;</type>
        <definition>std::vector&lt; ConnParameterMap &gt; nest::ConnBuilder::synapse_params_</definition>
        <argsstring></argsstring>
        <name>synapse_params_</name>
        <briefdescription>
<para>all other parameters, mapping name to value representation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="231" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="231" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnBuilder_1a41b508eee3fcc1be96d808ae78b4cb3f" prot="private" static="no" mutable="no">
        <type>std::set&lt; Name &gt;</type>
        <definition>std::set&lt; Name &gt; nest::ConnBuilder::skip_syn_params_</definition>
        <argsstring></argsstring>
        <name>skip_syn_params_</name>
        <briefdescription>
<para>synapse-specific parameters that should be skipped when we set default synapse parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="234" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="234" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
<para>Connect sources to targets according to specifications in dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para>Now we can connect with or without structural plasticity.</para>
<para>To create a connection, call</para>
<para><ref refid="namespacenest_1af6ec6494018607109b78df691ed06e6d" kindref="member">cb.connect()</ref>;</para>
<para>where conn_spec_dict speficies connection type and its parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="76" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="204" bodyend="266"/>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="280" endline="284">nest::ModelManager::get_connection_model</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::model_manager</references>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <references refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4a0d58de623e6d3803e7f1c01d03059abf">nest::REQUIRES_SYMMETRIC</references>
        <references refid="namespacenest_1_1names_1a7aacf2268f048a53c347f0f49336f4c3">nest::names::requires_symmetric</references>
        <references refid="namespaceboost_1_1tuples_1aa87b0f687682daa154ba6aae65ca909c" compoundref="iterator__pair_8h" startline="42" endline="47">boost::tuples::swap</references>
        <references refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770">nest::names::synapse_model</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a719414132e35d4b6ffa6c2a636df92eb" compoundref="connection__manager_8cpp" startline="387" endline="436">nest::ConnectionManager::connect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a4fafe51332d31c75a637d4837bbaea4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Now we can delete synapses with or without structural plasticity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="77" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="272" bodyend="291"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnBuilder::ConnBuilder</definition>
        <argsstring>(NodeCollectionPTR, NodeCollectionPTR, const DictionaryDatum &amp;, const std::vector&lt; DictionaryDatum &gt; &amp;)</argsstring>
        <name>ConnBuilder</name>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>sources</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>targets</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>conn_spec</defname>
        </param>
        <param>
          <type>const std::vector&lt; DictionaryDatum &gt; &amp;</type>
          <defname>syn_specs</defname>
        </param>
        <briefdescription>
<para>parameters: sources, targets, specifications </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="80" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="42" bodyend="123"/>
        <references refid="namespacenest_1_1names_1a3a9aa50a486ede5bf5eec386dbd44688">nest::names::allow_autapses</references>
        <references refid="classnest_1_1ConnBuilder_1ae4f5e56dc411af3804240dd632c4f3ec" compoundref="conn__builder_8h" startline="184">allow_autapses_</references>
        <references refid="namespacenest_1_1names_1a18f346470b8a4e1e81647dbe67a51510">nest::names::allow_multapses</references>
        <references refid="classnest_1_1ConnBuilder_1a59ab20628f392f86dd5c7d739e648c66" compoundref="conn__builder_8h" startline="185">allow_multapses_</references>
        <references refid="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" compoundref="conn__builder_8h" startline="224">default_delay_</references>
        <references refid="classnest_1_1ConnBuilder_1a780c5320b5a14d18a42452ee055e649c" compoundref="conn__builder_8h" startline="221">default_weight_</references>
        <references refid="classnest_1_1ConnBuilder_1a386e5b955385f3490bd28479285c06eb" compoundref="conn__builder_8h" startline="218">default_weight_and_delay_</references>
        <references refid="namespacenest_1_1names_1ab9cc026669479769b697c033fed944aa">nest::names::delay</references>
        <references refid="classnest_1_1ConnBuilder_1aa5fb972b09aa51c867008682aaac31ee" compoundref="conn__builder_8h" startline="228">delays_</references>
        <references refid="classnest_1_1ModelManager_1a4ee6b18a6bad6d272e07d838a2af7f1a" compoundref="model__manager_8cpp" startline="394" endline="410">nest::ModelManager::get_connector_defaults</references>
        <references refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a8df108b0ce71ca1f1d7b79fcf4462f7e">nest::names::make_symmetric</references>
        <references refid="classnest_1_1ConnBuilder_1a15a2456e42f5637e1d8001ae73fa7e52" compoundref="conn__builder_8h" startline="186">make_symmetric_</references>
        <references refid="namespacenest_1_1names_1a377a20cde03833197dafab3a17f2d174">nest::names::max_delay</references>
        <references refid="namespacenest_1_1names_1a4dafd0ba22d5e86faacb875050b6f544">nest::names::min_delay</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::model_manager</references>
        <references refid="namespacenest_1_1names_1a3cd00d79ca1b24b50c366c08d89b7a36">nest::names::music_channel</references>
        <references refid="namespacenest_1_1names_1ad38a41a23fea8eec72cc77e989306b5d">nest::names::num_connections</references>
        <references refid="classnest_1_1ConnBuilder_1ae6927c7fa75b13b37b25fb0851cd5faa" compoundref="conn__builder_8h" startline="212">param_dicts_</references>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <references refid="classnest_1_1ConnBuilder_1a7742245ffd86ae962c26b92dab363cd6" compoundref="conn__builder_8cpp" startline="583" endline="592">reset_delays_</references>
        <references refid="classnest_1_1ConnBuilder_1a993a31f7f69de094a8bd007c66cdc089" compoundref="conn__builder_8cpp" startline="571" endline="580">reset_weights_</references>
        <references refid="classnest_1_1ConnBuilder_1ae0eb35bbf0f42c4139e0f1f562a4a0a3" compoundref="conn__builder_8cpp" startline="457" endline="490">set_default_weight_or_delay_</references>
        <references refid="classnest_1_1ConnBuilder_1a67a9c61ef70dbca8ff24722766b0faba" compoundref="conn__builder_8cpp" startline="532" endline="568">set_structural_plasticity_parameters</references>
        <references refid="classnest_1_1ConnBuilder_1a9c2e48ef813d9123f9c61df2f40ef1ea" compoundref="conn__builder_8cpp" startline="439" endline="454">set_synapse_model_</references>
        <references refid="classnest_1_1ConnBuilder_1a1d5db8eeefd6c7602d16da5f05618c9e" compoundref="conn__builder_8cpp" startline="493" endline="529">set_synapse_params</references>
        <references refid="classnest_1_1ConnBuilder_1a41b508eee3fcc1be96d808ae78b4cb3f" compoundref="conn__builder_8h" startline="234">skip_syn_params_</references>
        <references refid="classnest_1_1ConnBuilder_1a464b9cad4d0148634d443398c1d7d5a9" compoundref="conn__builder_8h" startline="181">sources_</references>
        <references refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770">nest::names::synapse_model</references>
        <references refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" compoundref="conn__builder_8h" startline="209">synapse_model_id_</references>
        <references refid="classnest_1_1ConnBuilder_1abca9a10069e6ff74d67f2c8cf218b57e" compoundref="conn__builder_8h" startline="231">synapse_params_</references>
        <references refid="classnest_1_1ConnBuilder_1a7cabed3a9ba94e4ef4cc401019bb824d" compoundref="conn__builder_8h" startline="182">targets_</references>
        <references refid="namespacenest_1_1names_1a89371cf52bd3967922c650c11858cf7d">nest::names::weight</references>
        <references refid="classnest_1_1ConnBuilder_1a4bac8367e1e0b6a93f57a5e09166e54c" compoundref="conn__builder_8h" startline="227">weights_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a8f4f6f5f4e9ac3ed75dd9f0cb6467740" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>nest::ConnBuilder::~ConnBuilder</definition>
        <argsstring>()</argsstring>
        <name>~ConnBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="81" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="125" bodyend="144"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::ConnBuilder::get_synapse_model</definition>
        <argsstring>() const</argsstring>
        <name>get_synapse_model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="84" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="84" bodyend="91"/>
        <references refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" compoundref="conn__builder_8h" startline="209">synapse_model_id_</references>
        <referencedby refid="classnest_1_1SPManager_1a6c5563d7088a144d3b630e4ed8faee3b" compoundref="sp__manager_8cpp" startline="341" endline="417">nest::SPManager::update_structural_plasticity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::get_default_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_default_delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="94" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="94" bodyend="101"/>
        <references refid="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" compoundref="conn__builder_8h" startline="224">default_delay_</references>
        <references refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" compoundref="conn__builder_8h" startline="209">synapse_model_id_</references>
        <referencedby refid="classnest_1_1SPManager_1a826cbcc83e2da5a24acf3345917e7921" compoundref="sp__manager_8cpp" startline="128" endline="177">nest::SPManager::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a344a8fc339bc288dd272b370213ce18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_pre_synaptic_element_name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>set_pre_synaptic_element_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="103" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="376" bodyend="385"/>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a46694477447f70340fb29a9d31449b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_post_synaptic_element_name</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>set_post_synaptic_element_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="104" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="388" bodyend="397"/>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a0a0cffe24ec8a736bafc21cf376a5078" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::all_parameters_scalar_</definition>
        <argsstring>() const</argsstring>
        <name>all_parameters_scalar_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="400" bodyend="429"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <referencedby refid="classnest_1_1AllToAllBuilder_1a806a3d4780c398b9bb8fe539ed2f8c24" compoundref="conn__builder_8h" startline="299" endline="302">nest::AllToAllBuilder::is_symmetric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1aaaf1a924c8030b8971b6f86e448615cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::change_connected_synaptic_elements</definition>
        <argsstring>(index, index, const int, int)</argsstring>
        <name>change_connected_synaptic_elements</name>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>snode_id</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>tnode_id</defname>
        </param>
        <param>
          <type>const int</type>
          <defname>tid</defname>
        </param>
        <param>
          <type>int</type>
          <defname>update</defname>
        </param>
        <briefdescription>
<para>Updates the number of connected synaptic elements in the target and the source. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns 0 if the target is either on another MPI machine or another thread. Returns 1 otherwise.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snode_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tnode_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the target </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>thread id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>update</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of connected synaptic elements to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="108" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="159" bodyend="198"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1ac152763ca685a2346cd1d158ec810aa3">nest::names::local</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="254">nest::KernelManager::node_manager</references>
        <references refid="namespacenest_1_1names_1af9fc29ade057c46d8e283df412841131">nest::names::source</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1ae01b03e86e9634b7dc9f6e6b08d123c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool nest::ConnBuilder::supports_symmetric</definition>
        <argsstring>() const</argsstring>
        <name>supports_symmetric</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1a0712558f3916221f8e8252ec74053b47">supports_symmetric</reimplementedby>
        <reimplementedby refid="classnest_1_1SymmetricBernoulliBuilder_1a98631469e3dcfea55b62ede08684378c">supports_symmetric</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="111" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1ac46d2f5b591f00c2e1fed3e35e6b9b35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool nest::ConnBuilder::is_symmetric</definition>
        <argsstring>() const</argsstring>
        <name>is_symmetric</name>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1a806a3d4780c398b9bb8fe539ed2f8c24">is_symmetric</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="117" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a1e5a7be0ac2f6bcc77a77d3e974a8e6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool nest::ConnBuilder::requires_proxies</definition>
        <argsstring>() const</argsstring>
        <name>requires_proxies</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1a675d93c34d44b6790761dfafbe298de4">requires_proxies</reimplementedby>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1a9f6389f2674b6161dacdf021a2eea831">requires_proxies</reimplementedby>
        <briefdescription>
<para>Return true if rule is applicable only to nodes with proxies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="124" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="124" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1abbe0a9ef49761e33196033449eb409cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnBuilder::connect_</definition>
        <argsstring>()=0</argsstring>
        <name>connect_</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1a32044ab7e189d7ca5389165781b1b126">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1a923eef1a06a2714c07fbfb18a8be03a3">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1FixedInDegreeBuilder_1a831a8c5343e315c97863c5112ea27f57">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1FixedOutDegreeBuilder_1ab9a2bb23bb142823ef65509b1486ed53">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1FixedTotalNumberBuilder_1abab6d39ad2dc94125e09f5c6fc4212c4">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1BernoulliBuilder_1a0aa500518f0f92edf83f9273f25a3495">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1SymmetricBernoulliBuilder_1a7dc57144fbbfb3bdacc30a8b6de8307b">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1SPBuilder_1a266ad8a84e626b03f822fddebec6d74f">connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1SPBuilder_1abbe0a9ef49761e33196033449eb409cc">connect_</reimplementedby>
        <briefdescription>
<para>Implements the actual connection algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="131" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a9480e4b0e2834e4ee8a4dcd24a02106b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ConnBuilder::sp_connect_</definition>
        <argsstring>()</argsstring>
        <name>sp_connect_</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1a5b19ec07f4ed9e7c79cbff755c5c112b">sp_connect_</reimplementedby>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1a63715afc65b67a92bc0e6777bd61a91b">sp_connect_</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="133" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a3e48d3be487889e2af93d8bc0c428f46" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ConnBuilder::disconnect_</definition>
        <argsstring>()</argsstring>
        <name>disconnect_</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1a4311332702ee0643fa6fc4aadf29a203">disconnect_</reimplementedby>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1ae0f4378442fc308cfc46512d70b77bbc">disconnect_</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="138" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1ae0b6de2eafc3c8a10286b5420bd1068d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ConnBuilder::sp_disconnect_</definition>
        <argsstring>()</argsstring>
        <name>sp_disconnect_</name>
        <reimplementedby refid="classnest_1_1OneToOneBuilder_1aa0018649c25aba23ea18edd33f817403">sp_disconnect_</reimplementedby>
        <reimplementedby refid="classnest_1_1AllToAllBuilder_1a906d70bc39e3caba3afe5dff1fdc1eb0">sp_disconnect_</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="143" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a4b0dff13dcdd94d8a1e7184911b5f4b8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::update_param_dict_</definition>
        <argsstring>(index snode_id, Node &amp;target, thread target_thread, RngPtr rng, index indx)</argsstring>
        <name>update_param_dict_</name>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>target_thread</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="148" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="294" bodyend="319"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a3edb34cd9b903094a46df238bb26cfb9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::single_connect_</definition>
        <argsstring>(index, Node &amp;, thread, RngPtr)</argsstring>
        <name>single_connect_</name>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>snode_id</defname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <defname>target</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <defname>target_thread</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <defname>rng</defname>
        </param>
        <briefdescription>
<para>Create connection between given nodes, fill parameter values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="151" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="322" bodyend="373"/>
        <references refid="classnest_1_1ConnectionManager_1a719414132e35d4b6ffa6c2a636df92eb" compoundref="connection__manager_8cpp" startline="387" endline="436">nest::ConnectionManager::connect</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::connection_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" compoundref="numerics_8cpp" startline="88">numerics::nan</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a07998ea08ce1a6d1afdf67b42d0f94c3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::single_disconnect_</definition>
        <argsstring>(index, Node &amp;, thread)</argsstring>
        <name>single_disconnect_</name>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <defname>snode_id</defname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <defname>target</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <defname>target_thread</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="152" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder_impl.h" bodystart="36" bodyend="47"/>
        <references refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a1bb61f56ad18de2dbd28058a4b05256b" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::sp_manager</references>
        <references refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" compoundref="conn__builder_8h" startline="209">synapse_model_id_</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a9cb089bbde94e308f255a41c2abd09a3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::skip_conn_parameter_</definition>
        <argsstring>(thread, size_t n_skip=1)</argsstring>
        <name>skip_conn_parameter_</name>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <defname>target_thread</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_skip</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Moves pointer in parameter array. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls value-function of all parameters being instantiations of <ref refid="classnest_1_1ArrayDoubleParameter" kindref="compound">ArrayDoubleParameter</ref> or <ref refid="classnest_1_1ArrayIntegerParameter" kindref="compound">ArrayIntegerParameter</ref>, thus moving the pointer to the next parameter value. The function is called when the target node is not located on the current thread or MPI-process and read of an array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="163" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="458" bodyend="466"/>
        <references refid="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" compoundref="conn__builder_8h" startline="207">parameters_requiring_skipping_</references>
        <references refid="namespacenest_1_1names_1a1bd80482ac8ce213b4a9800d7b7eddc9">nest::names::target_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a90063b4c289115d9337a4bf3bc28bff8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::loop_over_targets_</definition>
        <argsstring>() const</argsstring>
        <name>loop_over_targets_</name>
        <briefdescription>
<para>Returns true if conventional looping over targets is indicated. </para>
        </briefdescription>
        <detaileddescription>
<para>Conventional looping over targets must be used if<itemizedlist>
<listitem><para>any connection parameter requires skipping</para>
</listitem><listitem><para>targets are not given as a simple range (lookup otherwise too slow)</para>
</listitem></itemizedlist>
</para>
<para>Conventional looping should be used if<itemizedlist>
<listitem><para>the number of targets is smaller than the number of local nodes</para>
</listitem></itemizedlist>
</para>
<para>For background, see Ippen et al (2017).</para>
<para><simplesect kind="return"><para>true if conventional looping is to be used </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="179" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="432" bodyend="436"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="254">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1NodeManager_1a2ba50262a362b4b6b0d77047971b01da" compoundref="node__manager_8h" startline="320" endline="323">nest::NodeManager::size</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnBuilder::use_structural_plasticity_</definition>
        <argsstring>() const</argsstring>
        <name>use_structural_plasticity_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="201" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="201" bodyend="204"/>
        <references refid="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" compoundref="conn__builder_8h" startline="198">use_post_synaptic_element_</references>
        <references refid="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" compoundref="conn__builder_8h" startline="197">use_pre_synaptic_element_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1aff777833ec510565b318f0059df520a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::register_parameters_requiring_skipping_</definition>
        <argsstring>(ConnParameter &amp;param)</argsstring>
        <name>register_parameters_requiring_skipping_</name>
        <param>
          <type><ref refid="classnest_1_1ConnParameter" kindref="compound">ConnParameter</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Collects all array parameters in a vector. </para>
        </briefdescription>
        <detaileddescription>
<para>If the inserted parameter is an array it will be added to a vector of ConnParameters. This vector will be exploited in some connection routines to ensuring thread-safety. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="243" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="449" bodyend="455"/>
        <references refid="classnest_1_1ConnParameter_1a574bb23d4cd5514b7bf5d51a440abb55">nest::ConnParameter::is_array</references>
        <references refid="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" compoundref="conn__builder_8h" startline="207">parameters_requiring_skipping_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a9c2e48ef813d9123f9c61df2f40ef1ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_synapse_model_</definition>
        <argsstring>(DictionaryDatum syn_params, size_t indx)</argsstring>
        <name>set_synapse_model_</name>
        <param>
          <type>DictionaryDatum</type>
          <declname>syn_params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="248" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="439" bodyend="454"/>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="280" endline="284">nest::ModelManager::get_connection_model</references>
        <references refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::model_manager</references>
        <references refid="namespacenest_1_1names_1a1a874edf0e9b8150cf44e1c6c39b5770">nest::names::synapse_model</references>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1ae0eb35bbf0f42c4139e0f1f562a4a0a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_default_weight_or_delay_</definition>
        <argsstring>(DictionaryDatum syn_params, size_t indx)</argsstring>
        <name>set_default_weight_or_delay_</name>
        <param>
          <type>DictionaryDatum</type>
          <declname>syn_params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="249" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="457" bodyend="490"/>
        <references refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" compoundref="conn__parameter_8cpp" startline="36" endline="74">nest::ConnParameter::create</references>
        <references refid="namespacenest_1_1names_1ab9cc026669479769b697c033fed944aa">nest::names::delay</references>
        <references refid="classnest_1_1ModelManager_1a4ee6b18a6bad6d272e07d838a2af7f1a" compoundref="model__manager_8cpp" startline="394" endline="410">nest::ModelManager::get_connector_defaults</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::model_manager</references>
        <references refid="namespacenest_1_1names_1a89371cf52bd3967922c650c11858cf7d">nest::names::weight</references>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a1d5db8eeefd6c7602d16da5f05618c9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_synapse_params</definition>
        <argsstring>(DictionaryDatum syn_defaults, DictionaryDatum syn_params, size_t indx)</argsstring>
        <name>set_synapse_params</name>
        <param>
          <type>DictionaryDatum</type>
          <declname>syn_defaults</declname>
        </param>
        <param>
          <type>DictionaryDatum</type>
          <declname>syn_params</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>indx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="250" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="493" bodyend="529"/>
        <references refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" compoundref="conn__parameter_8cpp" startline="36" endline="74">nest::ConnParameter::create</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a67a9c61ef70dbca8ff24722766b0faba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::set_structural_plasticity_parameters</definition>
        <argsstring>(std::vector&lt; DictionaryDatum &gt; syn_specs)</argsstring>
        <name>set_structural_plasticity_parameters</name>
        <param>
          <type>std::vector&lt; DictionaryDatum &gt;</type>
          <declname>syn_specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="251" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="532" bodyend="568"/>
        <references refid="namespacenest_1_1names_1acc02ec704ddb9599126cfc2d871c1362">nest::names::post_synaptic_element</references>
        <references refid="namespacenest_1_1names_1a80a88cb579d9c5f2496711bd85f8c3f2">nest::names::pre_synaptic_element</references>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a993a31f7f69de094a8bd007c66cdc089" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::reset_weights_</definition>
        <argsstring>()</argsstring>
        <name>reset_weights_</name>
        <briefdescription>
<para>Reset weight and delay pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="256" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="571" bodyend="580"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnBuilder_1a7742245ffd86ae962c26b92dab363cd6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnBuilder::reset_delays_</definition>
        <argsstring>()</argsstring>
        <name>reset_delays_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="257" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="583" bodyend="592"/>
        <referencedby refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" compoundref="conn__builder_8cpp" startline="42" endline="123">ConnBuilder</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for ConnBuilders. </para>
    </briefdescription>
    <detaileddescription>
<para>The base class extracts and holds parameters and provides the connect interface. Derived classes implement the connect method.</para>
<para><simplesect kind="note"><para>Naming classes *Builder to avoid name confusion with <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref> classes. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::AllToAllBuilder</label>
        <link refid="classnest_1_1AllToAllBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::FixedInDegreeBuilder</label>
        <link refid="classnest_1_1FixedInDegreeBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::SPBuilder</label>
        <link refid="classnest_1_1SPBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
      <node id="3">
        <label>nest::BernoulliBuilder</label>
        <link refid="classnest_1_1BernoulliBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::FixedOutDegreeBuilder</label>
        <link refid="classnest_1_1FixedOutDegreeBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::OneToOneBuilder</label>
        <link refid="classnest_1_1OneToOneBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>nest::SymmetricBernoulliBuilder</label>
        <link refid="classnest_1_1SymmetricBernoulliBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::FixedTotalNumberBuilder</label>
        <link refid="classnest_1_1FixedTotalNumberBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="64" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="65" bodyend="258"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnBuilder_1a0a0cffe24ec8a736bafc21cf376a5078" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>all_parameters_scalar_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae4f5e56dc411af3804240dd632c4f3ec" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>allow_autapses_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a59ab20628f392f86dd5c7d739e648c66" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>allow_multapses_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aaaf1a924c8030b8971b6f86e448615cb" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>change_connected_synaptic_elements</name></member>
      <member refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>ConnBuilder</name></member>
      <member refid="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>connect</name></member>
      <member refid="classnest_1_1ConnBuilder_1abbe0a9ef49761e33196033449eb409cc" prot="protected" virt="pure-virtual"><scope>nest::ConnBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad0b9124c3f087f1699800935054ad91a" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>ConnParameterMap</name></member>
      <member refid="classnest_1_1ConnBuilder_1aacdef9d1a02f25cd6b427cf4173ade5b" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>creates_symmetric_connections_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>default_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a780c5320b5a14d18a42452ee055e649c" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>default_weight_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a386e5b955385f3490bd28479285c06eb" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>default_weight_and_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aa5fb972b09aa51c867008682aaac31ee" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4fafe51332d31c75a637d4837bbaea4d" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>disconnect</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3e48d3be487889e2af93d8bc0c428f46" prot="protected" virt="virtual"><scope>nest::ConnBuilder</scope><name>disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abba02533d1aa42c88177b68ff11dd3f7" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>exceptions_raised_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>get_default_delay</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>get_synapse_model</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac46d2f5b591f00c2e1fed3e35e6b9b35" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>is_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a90063b4c289115d9337a4bf3bc28bff8" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>loop_over_targets_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a15a2456e42f5637e1d8001ae73fa7e52" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>make_symmetric_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae6927c7fa75b13b37b25fb0851cd5faa" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>param_dicts_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0242d555bdaa2756db3a6744a9da65b" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>post_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac5ff17cf7dc8accebf3a60fb8ca08b83" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>pre_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aff777833ec510565b318f0059df520a0" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>register_parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1e5a7be0ac2f6bcc77a77d3e974a8e6d" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>requires_proxies</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7742245ffd86ae962c26b92dab363cd6" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>reset_delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a993a31f7f69de094a8bd007c66cdc089" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>reset_weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0eb35bbf0f42c4139e0f1f562a4a0a3" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_default_weight_or_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a46694477447f70340fb29a9d31449b95" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_post_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a344a8fc339bc288dd272b370213ce18a" prot="public" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_pre_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a67a9c61ef70dbca8ff24722766b0faba" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_structural_plasticity_parameters</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9c2e48ef813d9123f9c61df2f40ef1ea" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_synapse_model_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1d5db8eeefd6c7602d16da5f05618c9e" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>set_synapse_params</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3edb34cd9b903094a46df238bb26cfb9" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>single_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a07998ea08ce1a6d1afdf67b42d0f94c3" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>single_disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9cb089bbde94e308f255a41c2abd09a3" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>skip_conn_parameter_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a41b508eee3fcc1be96d808ae78b4cb3f" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>skip_syn_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a464b9cad4d0148634d443398c1d7d5a9" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>sources_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9480e4b0e2834e4ee8a4dcd24a02106b" prot="protected" virt="virtual"><scope>nest::ConnBuilder</scope><name>sp_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0b6de2eafc3c8a10286b5420bd1068d" prot="protected" virt="virtual"><scope>nest::ConnBuilder</scope><name>sp_disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae01b03e86e9634b7dc9f6e6b08d123c5" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>supports_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>synapse_model_id_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abca9a10069e6ff74d67f2c8cf218b57e" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>synapse_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7cabed3a9ba94e4ef4cc401019bb824d" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>targets_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4b0dff13dcdd94d8a1e7184911b5f4b8" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>update_param_dict_</name></member>
      <member refid="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>use_post_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>use_pre_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" prot="protected" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>use_structural_plasticity_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4bac8367e1e0b6a93f57a5e09166e54c" prot="private" virt="non-virtual"><scope>nest::ConnBuilder</scope><name>weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a8f4f6f5f4e9ac3ed75dd9f0cb6467740" prot="public" virt="virtual"><scope>nest::ConnBuilder</scope><name>~ConnBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
