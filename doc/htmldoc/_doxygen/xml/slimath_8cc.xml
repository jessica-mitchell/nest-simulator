<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="slimath_8cc" kind="file" language="C++">
    <compoundname>slimath.cc</compoundname>
    <includes refid="slimath_8h" local="yes">slimath.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="booldatum_8h" local="yes">booldatum.h</includes>
    <includes refid="doubledatum_8h" local="yes">doubledatum.h</includes>
    <includes refid="integerdatum_8h" local="yes">integerdatum.h</includes>
    <includes refid="stringdatum_8h" local="yes">stringdatum.h</includes>
    <incdepgraph>
      <node id="37">
        <label>aggregatedatum.h</label>
        <link refid="aggregatedatum_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>booldatum.h</label>
        <link refid="booldatum_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>doubledatum.h</label>
        <link refid="doubledatum_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>genericdatum.h</label>
        <link refid="genericdatum_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>integerdatum.h</label>
        <link refid="integerdatum_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>numericdatum.h</label>
        <link refid="numericdatum_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="1">
        <label>slimath.cc</label>
        <link refid="slimath_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>slimath.h</label>
        <link refid="slimath_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>stringdatum.h</label>
        <link refid="stringdatum_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="28">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>config.h</label>
      </node>
      <node id="24">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>cstdlib</label>
      </node>
      <node id="15">
        <label>deque</label>
      </node>
      <node id="18">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>list</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="5">
        <label>typeinfo</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" prot="public" static="no" mutable="no">
        <type>const <ref refid="classIntegerFunction" kindref="compound">IntegerFunction</ref></type>
        <definition>const IntegerFunction integerfunction</definition>
        <argsstring></argsstring>
        <name>integerfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1688" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1688" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDoubleFunction" kindref="compound">DoubleFunction</ref></type>
        <definition>const DoubleFunction doublefunction</definition>
        <argsstring></argsstring>
        <name>doublefunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1689" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1689" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAdd__ddFunction" kindref="compound">Add_ddFunction</ref></type>
        <definition>const Add_ddFunction add_ddfunction</definition>
        <argsstring></argsstring>
        <name>add_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1690" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1690" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a3b938ab46879c63f08befed15171370b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAdd__diFunction" kindref="compound">Add_diFunction</ref></type>
        <definition>const Add_diFunction add_difunction</definition>
        <argsstring></argsstring>
        <name>add_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1691" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1691" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAdd__idFunction" kindref="compound">Add_idFunction</ref></type>
        <definition>const Add_idFunction add_idfunction</definition>
        <argsstring></argsstring>
        <name>add_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1692" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1692" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAdd__iiFunction" kindref="compound">Add_iiFunction</ref></type>
        <definition>const Add_iiFunction add_iifunction</definition>
        <argsstring></argsstring>
        <name>add_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1693" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1693" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSub__ddFunction" kindref="compound">Sub_ddFunction</ref></type>
        <definition>const Sub_ddFunction sub_ddfunction</definition>
        <argsstring></argsstring>
        <name>sub_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1694" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1694" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSub__diFunction" kindref="compound">Sub_diFunction</ref></type>
        <definition>const Sub_diFunction sub_difunction</definition>
        <argsstring></argsstring>
        <name>sub_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1695" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1695" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSub__idFunction" kindref="compound">Sub_idFunction</ref></type>
        <definition>const Sub_idFunction sub_idfunction</definition>
        <argsstring></argsstring>
        <name>sub_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1696" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1696" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSub__iiFunction" kindref="compound">Sub_iiFunction</ref></type>
        <definition>const Sub_iiFunction sub_iifunction</definition>
        <argsstring></argsstring>
        <name>sub_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1697" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1697" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMul__ddFunction" kindref="compound">Mul_ddFunction</ref></type>
        <definition>const Mul_ddFunction mul_ddfunction</definition>
        <argsstring></argsstring>
        <name>mul_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1699" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1699" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMul__diFunction" kindref="compound">Mul_diFunction</ref></type>
        <definition>const Mul_diFunction mul_difunction</definition>
        <argsstring></argsstring>
        <name>mul_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1700" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1700" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af52792922371ea73580ec7f724ce437b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMul__idFunction" kindref="compound">Mul_idFunction</ref></type>
        <definition>const Mul_idFunction mul_idfunction</definition>
        <argsstring></argsstring>
        <name>mul_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1701" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1701" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMul__iiFunction" kindref="compound">Mul_iiFunction</ref></type>
        <definition>const Mul_iiFunction mul_iifunction</definition>
        <argsstring></argsstring>
        <name>mul_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1702" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1702" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDiv__ddFunction" kindref="compound">Div_ddFunction</ref></type>
        <definition>const Div_ddFunction div_ddfunction</definition>
        <argsstring></argsstring>
        <name>div_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1703" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1703" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDiv__diFunction" kindref="compound">Div_diFunction</ref></type>
        <definition>const Div_diFunction div_difunction</definition>
        <argsstring></argsstring>
        <name>div_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1704" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1704" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDiv__idFunction" kindref="compound">Div_idFunction</ref></type>
        <definition>const Div_idFunction div_idfunction</definition>
        <argsstring></argsstring>
        <name>div_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1705" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1705" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a60a646eb192999563254c8471350a8b7" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDiv__iiFunction" kindref="compound">Div_iiFunction</ref></type>
        <definition>const Div_iiFunction div_iifunction</definition>
        <argsstring></argsstring>
        <name>div_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1706" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1706" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSin__dFunction" kindref="compound">Sin_dFunction</ref></type>
        <definition>const Sin_dFunction sin_dfunction</definition>
        <argsstring></argsstring>
        <name>sin_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1707" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1707" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAsin__dFunction" kindref="compound">Asin_dFunction</ref></type>
        <definition>const Asin_dFunction asin_dfunction</definition>
        <argsstring></argsstring>
        <name>asin_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1708" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1708" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCos__dFunction" kindref="compound">Cos_dFunction</ref></type>
        <definition>const Cos_dFunction cos_dfunction</definition>
        <argsstring></argsstring>
        <name>cos_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1709" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1709" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAcos__dFunction" kindref="compound">Acos_dFunction</ref></type>
        <definition>const Acos_dFunction acos_dfunction</definition>
        <argsstring></argsstring>
        <name>acos_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1710" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1710" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classExp__dFunction" kindref="compound">Exp_dFunction</ref></type>
        <definition>const Exp_dFunction exp_dfunction</definition>
        <argsstring></argsstring>
        <name>exp_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1711" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1711" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLn__dFunction" kindref="compound">Ln_dFunction</ref></type>
        <definition>const Ln_dFunction ln_dfunction</definition>
        <argsstring></argsstring>
        <name>ln_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1712" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1712" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLog__dFunction" kindref="compound">Log_dFunction</ref></type>
        <definition>const Log_dFunction log_dfunction</definition>
        <argsstring></argsstring>
        <name>log_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1713" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1713" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSqr__dFunction" kindref="compound">Sqr_dFunction</ref></type>
        <definition>const Sqr_dFunction sqr_dfunction</definition>
        <argsstring></argsstring>
        <name>sqr_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1714" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1714" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classSqrt__dFunction" kindref="compound">Sqrt_dFunction</ref></type>
        <definition>const Sqrt_dFunction sqrt_dfunction</definition>
        <argsstring></argsstring>
        <name>sqrt_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1715" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1715" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classPow__ddFunction" kindref="compound">Pow_ddFunction</ref></type>
        <definition>const Pow_ddFunction pow_ddfunction</definition>
        <argsstring></argsstring>
        <name>pow_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1716" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1716" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" prot="public" static="no" mutable="no">
        <type>const <ref refid="classPow__diFunction" kindref="compound">Pow_diFunction</ref></type>
        <definition>const Pow_diFunction pow_difunction</definition>
        <argsstring></argsstring>
        <name>pow_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1717" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1717" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" prot="public" static="no" mutable="no">
        <type>const <ref refid="classModf__dFunction" kindref="compound">Modf_dFunction</ref></type>
        <definition>const Modf_dFunction modf_dfunction</definition>
        <argsstring></argsstring>
        <name>modf_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1719" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1719" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" prot="public" static="no" mutable="no">
        <type>const <ref refid="classFrexp__dFunction" kindref="compound">Frexp_dFunction</ref></type>
        <definition>const Frexp_dFunction frexp_dfunction</definition>
        <argsstring></argsstring>
        <name>frexp_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1720" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1720" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLdexp__diFunction" kindref="compound">Ldexp_diFunction</ref></type>
        <definition>const Ldexp_diFunction ldexp_difunction</definition>
        <argsstring></argsstring>
        <name>ldexp_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1722" column="24" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1722" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classDexp__iFunction" kindref="compound">Dexp_iFunction</ref></type>
        <definition>const Dexp_iFunction dexp_ifunction</definition>
        <argsstring></argsstring>
        <name>dexp_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1723" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1723" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMod__iiFunction" kindref="compound">Mod_iiFunction</ref></type>
        <definition>const Mod_iiFunction mod_iifunction</definition>
        <argsstring></argsstring>
        <name>mod_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1725" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1725" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAbs__iFunction" kindref="compound">Abs_iFunction</ref></type>
        <definition>const Abs_iFunction abs_ifunction</definition>
        <argsstring></argsstring>
        <name>abs_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1727" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1727" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAbs__dFunction" kindref="compound">Abs_dFunction</ref></type>
        <definition>const Abs_dFunction abs_dfunction</definition>
        <argsstring></argsstring>
        <name>abs_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1728" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1728" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" prot="public" static="no" mutable="no">
        <type>const <ref refid="classNeg__iFunction" kindref="compound">Neg_iFunction</ref></type>
        <definition>const Neg_iFunction neg_ifunction</definition>
        <argsstring></argsstring>
        <name>neg_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1730" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1730" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" prot="public" static="no" mutable="no">
        <type>const <ref refid="classNeg__dFunction" kindref="compound">Neg_dFunction</ref></type>
        <definition>const Neg_dFunction neg_dfunction</definition>
        <argsstring></argsstring>
        <name>neg_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1731" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1731" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" prot="public" static="no" mutable="no">
        <type>const <ref refid="classInv__dFunction" kindref="compound">Inv_dFunction</ref></type>
        <definition>const Inv_dFunction inv_dfunction</definition>
        <argsstring></argsstring>
        <name>inv_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1732" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1732" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classEqFunction" kindref="compound">EqFunction</ref></type>
        <definition>const EqFunction eqfunction</definition>
        <argsstring></argsstring>
        <name>eqfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1734" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1734" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classOrFunction" kindref="compound">OrFunction</ref></type>
        <definition>const OrFunction orfunction</definition>
        <argsstring></argsstring>
        <name>orfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1735" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1735" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" prot="public" static="no" mutable="no">
        <type>const <ref refid="classXorFunction" kindref="compound">XorFunction</ref></type>
        <definition>const XorFunction xorfunction</definition>
        <argsstring></argsstring>
        <name>xorfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1736" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1736" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAndFunction" kindref="compound">AndFunction</ref></type>
        <definition>const AndFunction andfunction</definition>
        <argsstring></argsstring>
        <name>andfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1737" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1737" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classAnd__iiFunction" kindref="compound">And_iiFunction</ref></type>
        <definition>const And_iiFunction and_iifunction</definition>
        <argsstring></argsstring>
        <name>and_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1738" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1738" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" prot="public" static="no" mutable="no">
        <type>const <ref refid="classOr__iiFunction" kindref="compound">Or_iiFunction</ref></type>
        <definition>const Or_iiFunction or_iifunction</definition>
        <argsstring></argsstring>
        <name>or_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1739" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1739" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGeq__iiFunction" kindref="compound">Geq_iiFunction</ref></type>
        <definition>const Geq_iiFunction geq_iifunction</definition>
        <argsstring></argsstring>
        <name>geq_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1741" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1741" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1abf33d60af756887813206489615fcd6c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGeq__idFunction" kindref="compound">Geq_idFunction</ref></type>
        <definition>const Geq_idFunction geq_idfunction</definition>
        <argsstring></argsstring>
        <name>geq_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1742" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1742" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGeq__diFunction" kindref="compound">Geq_diFunction</ref></type>
        <definition>const Geq_diFunction geq_difunction</definition>
        <argsstring></argsstring>
        <name>geq_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1743" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1743" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGeq__ddFunction" kindref="compound">Geq_ddFunction</ref></type>
        <definition>const Geq_ddFunction geq_ddfunction</definition>
        <argsstring></argsstring>
        <name>geq_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1744" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1744" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLeq__iiFunction" kindref="compound">Leq_iiFunction</ref></type>
        <definition>const Leq_iiFunction leq_iifunction</definition>
        <argsstring></argsstring>
        <name>leq_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1746" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1746" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLeq__idFunction" kindref="compound">Leq_idFunction</ref></type>
        <definition>const Leq_idFunction leq_idfunction</definition>
        <argsstring></argsstring>
        <name>leq_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1747" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1747" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLeq__diFunction" kindref="compound">Leq_diFunction</ref></type>
        <definition>const Leq_diFunction leq_difunction</definition>
        <argsstring></argsstring>
        <name>leq_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1748" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1748" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLeq__ddFunction" kindref="compound">Leq_ddFunction</ref></type>
        <definition>const Leq_ddFunction leq_ddfunction</definition>
        <argsstring></argsstring>
        <name>leq_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1749" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1749" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classNeqFunction" kindref="compound">NeqFunction</ref></type>
        <definition>const NeqFunction neqfunction</definition>
        <argsstring></argsstring>
        <name>neqfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1752" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1752" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classNot__bFunction" kindref="compound">Not_bFunction</ref></type>
        <definition>const Not_bFunction not_bfunction</definition>
        <argsstring></argsstring>
        <name>not_bfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1753" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1753" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" prot="public" static="no" mutable="no">
        <type>const <ref refid="classNot__iFunction" kindref="compound">Not_iFunction</ref></type>
        <definition>const Not_iFunction not_ifunction</definition>
        <argsstring></argsstring>
        <name>not_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1754" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1754" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGt__iiFunction" kindref="compound">Gt_iiFunction</ref></type>
        <definition>const Gt_iiFunction gt_iifunction</definition>
        <argsstring></argsstring>
        <name>gt_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1756" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1756" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGt__ddFunction" kindref="compound">Gt_ddFunction</ref></type>
        <definition>const Gt_ddFunction gt_ddfunction</definition>
        <argsstring></argsstring>
        <name>gt_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1757" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1757" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGt__idFunction" kindref="compound">Gt_idFunction</ref></type>
        <definition>const Gt_idFunction gt_idfunction</definition>
        <argsstring></argsstring>
        <name>gt_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1758" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1758" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGt__diFunction" kindref="compound">Gt_diFunction</ref></type>
        <definition>const Gt_diFunction gt_difunction</definition>
        <argsstring></argsstring>
        <name>gt_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1759" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1759" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" prot="public" static="no" mutable="no">
        <type>const <ref refid="classGt__ssFunction" kindref="compound">Gt_ssFunction</ref></type>
        <definition>const Gt_ssFunction gt_ssfunction</definition>
        <argsstring></argsstring>
        <name>gt_ssfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1760" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1760" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLt__iiFunction" kindref="compound">Lt_iiFunction</ref></type>
        <definition>const Lt_iiFunction lt_iifunction</definition>
        <argsstring></argsstring>
        <name>lt_iifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1762" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1762" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a95957da94284bde6accd0681b24c7652" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLt__ddFunction" kindref="compound">Lt_ddFunction</ref></type>
        <definition>const Lt_ddFunction lt_ddfunction</definition>
        <argsstring></argsstring>
        <name>lt_ddfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1763" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1763" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLt__idFunction" kindref="compound">Lt_idFunction</ref></type>
        <definition>const Lt_idFunction lt_idfunction</definition>
        <argsstring></argsstring>
        <name>lt_idfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1764" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1764" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLt__diFunction" kindref="compound">Lt_diFunction</ref></type>
        <definition>const Lt_diFunction lt_difunction</definition>
        <argsstring></argsstring>
        <name>lt_difunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1765" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1765" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classLt__ssFunction" kindref="compound">Lt_ssFunction</ref></type>
        <definition>const Lt_ssFunction lt_ssfunction</definition>
        <argsstring></argsstring>
        <name>lt_ssfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1766" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1766" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classUnitStep__iFunction" kindref="compound">UnitStep_iFunction</ref></type>
        <definition>const UnitStep_iFunction unitstep_ifunction</definition>
        <argsstring></argsstring>
        <name>unitstep_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1768" column="26" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1768" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" prot="public" static="no" mutable="no">
        <type>const <ref refid="classUnitStep__dFunction" kindref="compound">UnitStep_dFunction</ref></type>
        <definition>const UnitStep_dFunction unitstep_dfunction</definition>
        <argsstring></argsstring>
        <name>unitstep_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1769" column="26" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1769" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classUnitStep__iaFunction" kindref="compound">UnitStep_iaFunction</ref></type>
        <definition>const UnitStep_iaFunction unitstep_iafunction</definition>
        <argsstring></argsstring>
        <name>unitstep_iafunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1770" column="27" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1770" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" prot="public" static="no" mutable="no">
        <type>const <ref refid="classUnitStep__daFunction" kindref="compound">UnitStep_daFunction</ref></type>
        <definition>const UnitStep_daFunction unitstep_dafunction</definition>
        <argsstring></argsstring>
        <name>unitstep_dafunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1771" column="27" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1771" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" prot="public" static="no" mutable="no">
        <type>const <ref refid="classRound__dFunction" kindref="compound">Round_dFunction</ref></type>
        <definition>const Round_dFunction round_dfunction</definition>
        <argsstring></argsstring>
        <name>round_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1773" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1773" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" prot="public" static="no" mutable="no">
        <type>const <ref refid="classFloor__dFunction" kindref="compound">Floor_dFunction</ref></type>
        <definition>const Floor_dFunction floor_dfunction</definition>
        <argsstring></argsstring>
        <name>floor_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1774" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1774" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCeil__dFunction" kindref="compound">Ceil_dFunction</ref></type>
        <definition>const Ceil_dFunction ceil_dfunction</definition>
        <argsstring></argsstring>
        <name>ceil_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1775" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1775" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMax__d__dFunction" kindref="compound">Max_d_dFunction</ref></type>
        <definition>const Max_d_dFunction max_d_dfunction</definition>
        <argsstring></argsstring>
        <name>max_d_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1777" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1777" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac942022e56d1641641b56063157428dd" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMax__d__iFunction" kindref="compound">Max_d_iFunction</ref></type>
        <definition>const Max_d_iFunction max_d_ifunction</definition>
        <argsstring></argsstring>
        <name>max_d_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1778" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1778" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMax__i__dFunction" kindref="compound">Max_i_dFunction</ref></type>
        <definition>const Max_i_dFunction max_i_dfunction</definition>
        <argsstring></argsstring>
        <name>max_i_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1779" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1779" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMax__i__iFunction" kindref="compound">Max_i_iFunction</ref></type>
        <definition>const Max_i_iFunction max_i_ifunction</definition>
        <argsstring></argsstring>
        <name>max_i_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1780" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1780" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1afaad309a4a4243930989806b54a150fd" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMin__d__dFunction" kindref="compound">Min_d_dFunction</ref></type>
        <definition>const Min_d_dFunction min_d_dfunction</definition>
        <argsstring></argsstring>
        <name>min_d_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1782" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1782" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1af540e56acd23e094ac084de978837f5c" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMin__d__iFunction" kindref="compound">Min_d_iFunction</ref></type>
        <definition>const Min_d_iFunction min_d_ifunction</definition>
        <argsstring></argsstring>
        <name>min_d_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1783" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1783" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMin__i__dFunction" kindref="compound">Min_i_dFunction</ref></type>
        <definition>const Min_i_dFunction min_i_dfunction</definition>
        <argsstring></argsstring>
        <name>min_i_dfunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1784" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1784" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      <memberdef kind="variable" id="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" prot="public" static="no" mutable="no">
        <type>const <ref refid="classMin__i__iFunction" kindref="compound">Min_i_iFunction</ref></type>
        <definition>const Min_i_iFunction min_i_ifunction</definition>
        <argsstring></argsstring>
        <name>min_i_ifunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1785" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1785" bodyend="-1"/>
        <referencedby refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" compoundref="slimath_8cc" startline="1789" endline="1891">init_slimath</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="slimath_8cc_1a04130b0f3a1affccee27ae0e864cc7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slimath</definition>
        <argsstring>(SLIInterpreter *i)</argsstring>
        <name>init_slimath</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" line="1789" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1789" bodyend="1891"/>
        <references refid="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" compoundref="slimath_8cc" startline="1728">abs_dfunction</references>
        <references refid="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" compoundref="slimath_8cc" startline="1727">abs_ifunction</references>
        <references refid="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" compoundref="slimath_8cc" startline="1710">acos_dfunction</references>
        <references refid="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" compoundref="slimath_8cc" startline="1690">add_ddfunction</references>
        <references refid="slimath_8cc_1a3b938ab46879c63f08befed15171370b" compoundref="slimath_8cc" startline="1691">add_difunction</references>
        <references refid="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" compoundref="slimath_8cc" startline="1692">add_idfunction</references>
        <references refid="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" compoundref="slimath_8cc" startline="1693">add_iifunction</references>
        <references refid="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" compoundref="slimath_8cc" startline="1738">and_iifunction</references>
        <references refid="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" compoundref="slimath_8cc" startline="1737">andfunction</references>
        <references refid="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" compoundref="slimath_8cc" startline="1708">asin_dfunction</references>
        <references refid="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" compoundref="slimath_8cc" startline="1775">ceil_dfunction</references>
        <references refid="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" compoundref="slimath_8cc" startline="1709">cos_dfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" compoundref="slimath_8cc" startline="1723">dexp_ifunction</references>
        <references refid="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" compoundref="slimath_8cc" startline="1703">div_ddfunction</references>
        <references refid="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" compoundref="slimath_8cc" startline="1704">div_difunction</references>
        <references refid="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" compoundref="slimath_8cc" startline="1705">div_idfunction</references>
        <references refid="slimath_8cc_1a60a646eb192999563254c8471350a8b7" compoundref="slimath_8cc" startline="1706">div_iifunction</references>
        <references refid="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" compoundref="slimath_8cc" startline="1689">doublefunction</references>
        <references refid="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" compoundref="slimath_8cc" startline="1734">eqfunction</references>
        <references refid="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" compoundref="slimath_8cc" startline="1711">exp_dfunction</references>
        <references refid="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" compoundref="slimath_8cc" startline="1774">floor_dfunction</references>
        <references refid="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" compoundref="slimath_8cc" startline="1720">frexp_dfunction</references>
        <references refid="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" compoundref="slimath_8cc" startline="1744">geq_ddfunction</references>
        <references refid="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" compoundref="slimath_8cc" startline="1743">geq_difunction</references>
        <references refid="slimath_8cc_1abf33d60af756887813206489615fcd6c" compoundref="slimath_8cc" startline="1742">geq_idfunction</references>
        <references refid="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" compoundref="slimath_8cc" startline="1741">geq_iifunction</references>
        <references refid="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" compoundref="slimath_8cc" startline="1757">gt_ddfunction</references>
        <references refid="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" compoundref="slimath_8cc" startline="1759">gt_difunction</references>
        <references refid="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" compoundref="slimath_8cc" startline="1758">gt_idfunction</references>
        <references refid="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" compoundref="slimath_8cc" startline="1756">gt_iifunction</references>
        <references refid="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" compoundref="slimath_8cc" startline="1760">gt_ssfunction</references>
        <references refid="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" compoundref="slimath_8cc" startline="1688">integerfunction</references>
        <references refid="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" compoundref="slimath_8cc" startline="1732">inv_dfunction</references>
        <references refid="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" compoundref="slimath_8cc" startline="1722">ldexp_difunction</references>
        <references refid="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" compoundref="slimath_8cc" startline="1749">leq_ddfunction</references>
        <references refid="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" compoundref="slimath_8cc" startline="1748">leq_difunction</references>
        <references refid="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" compoundref="slimath_8cc" startline="1747">leq_idfunction</references>
        <references refid="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" compoundref="slimath_8cc" startline="1746">leq_iifunction</references>
        <references refid="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" compoundref="slimath_8cc" startline="1712">ln_dfunction</references>
        <references refid="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" compoundref="slimath_8cc" startline="1713">log_dfunction</references>
        <references refid="slimath_8cc_1a95957da94284bde6accd0681b24c7652" compoundref="slimath_8cc" startline="1763">lt_ddfunction</references>
        <references refid="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" compoundref="slimath_8cc" startline="1765">lt_difunction</references>
        <references refid="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" compoundref="slimath_8cc" startline="1764">lt_idfunction</references>
        <references refid="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" compoundref="slimath_8cc" startline="1762">lt_iifunction</references>
        <references refid="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" compoundref="slimath_8cc" startline="1766">lt_ssfunction</references>
        <references refid="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" compoundref="slimath_8cc" startline="1777">max_d_dfunction</references>
        <references refid="slimath_8cc_1ac942022e56d1641641b56063157428dd" compoundref="slimath_8cc" startline="1778">max_d_ifunction</references>
        <references refid="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" compoundref="slimath_8cc" startline="1779">max_i_dfunction</references>
        <references refid="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" compoundref="slimath_8cc" startline="1780">max_i_ifunction</references>
        <references refid="slimath_8cc_1afaad309a4a4243930989806b54a150fd" compoundref="slimath_8cc" startline="1782">min_d_dfunction</references>
        <references refid="slimath_8cc_1af540e56acd23e094ac084de978837f5c" compoundref="slimath_8cc" startline="1783">min_d_ifunction</references>
        <references refid="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" compoundref="slimath_8cc" startline="1784">min_i_dfunction</references>
        <references refid="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" compoundref="slimath_8cc" startline="1785">min_i_ifunction</references>
        <references refid="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" compoundref="slimath_8cc" startline="1725">mod_iifunction</references>
        <references refid="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" compoundref="slimath_8cc" startline="1719">modf_dfunction</references>
        <references refid="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" compoundref="slimath_8cc" startline="1699">mul_ddfunction</references>
        <references refid="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" compoundref="slimath_8cc" startline="1700">mul_difunction</references>
        <references refid="slimath_8cc_1af52792922371ea73580ec7f724ce437b" compoundref="slimath_8cc" startline="1701">mul_idfunction</references>
        <references refid="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" compoundref="slimath_8cc" startline="1702">mul_iifunction</references>
        <references refid="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" compoundref="slimath_8cc" startline="1731">neg_dfunction</references>
        <references refid="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" compoundref="slimath_8cc" startline="1730">neg_ifunction</references>
        <references refid="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" compoundref="slimath_8cc" startline="1752">neqfunction</references>
        <references refid="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" compoundref="slimath_8cc" startline="1753">not_bfunction</references>
        <references refid="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" compoundref="slimath_8cc" startline="1754">not_ifunction</references>
        <references refid="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" compoundref="slimath_8cc" startline="1739">or_iifunction</references>
        <references refid="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" compoundref="slimath_8cc" startline="1735">orfunction</references>
        <references refid="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" compoundref="slimath_8cc" startline="1716">pow_ddfunction</references>
        <references refid="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" compoundref="slimath_8cc" startline="1717">pow_difunction</references>
        <references refid="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" compoundref="slimath_8cc" startline="1773">round_dfunction</references>
        <references refid="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" compoundref="slimath_8cc" startline="1707">sin_dfunction</references>
        <references refid="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" compoundref="slimath_8cc" startline="1714">sqr_dfunction</references>
        <references refid="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" compoundref="slimath_8cc" startline="1715">sqrt_dfunction</references>
        <references refid="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" compoundref="slimath_8cc" startline="1694">sub_ddfunction</references>
        <references refid="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" compoundref="slimath_8cc" startline="1695">sub_difunction</references>
        <references refid="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" compoundref="slimath_8cc" startline="1696">sub_idfunction</references>
        <references refid="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" compoundref="slimath_8cc" startline="1697">sub_iifunction</references>
        <references refid="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" compoundref="slimath_8cc" startline="1771">unitstep_dafunction</references>
        <references refid="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" compoundref="slimath_8cc" startline="1769">unitstep_dfunction</references>
        <references refid="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" compoundref="slimath_8cc" startline="1770">unitstep_iafunction</references>
        <references refid="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" compoundref="slimath_8cc" startline="1768">unitstep_ifunction</references>
        <references refid="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" compoundref="slimath_8cc" startline="1736">xorfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>slimath.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>slimath.cc</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="slimath_8h" kindref="compound">slimath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="booldatum_8h" kindref="compound">booldatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="doubledatum_8h" kindref="compound">doubledatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integerdatum_8h" kindref="compound">integerdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringdatum_8h" kindref="compound">stringdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classIntegerFunction_1ae6379a2121330a09e1b1c0d1175ebf7a" refkind="member"><highlight class="normal"><ref refid="classIntegerFunction_1ae6379a2121330a09e1b1c0d1175ebf7a" kindref="member">IntegerFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="42"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>res(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" kindref="member">swap</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classDoubleFunction_1a99ee2ffbdf972d9fb4307d64584f6ff0" refkind="member"><highlight class="normal"><ref refid="classDoubleFunction_1a99ee2ffbdf972d9fb4307d64584f6ff0" kindref="member">DoubleFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="56"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>res(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" kindref="member">swap</ref>(<sp/>res<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classAdd__iiFunction_1ac7f7102cef229bd5c768272693cfee50" refkind="member"><highlight class="normal"><ref refid="classAdd__iiFunction_1ac7f7102cef229bd5c768272693cfee50" kindref="member">Add_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>+=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classAdd__ddFunction_1a7878196d8bacb3ca68f3fad8f831fd3f" refkind="member"><highlight class="normal"><ref refid="classAdd__ddFunction_1a7878196d8bacb3ca68f3fad8f831fd3f" kindref="member">Add_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>+=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classAdd__diFunction_1adc62afb79a89fbb6d4bc00881b78708c" refkind="member"><highlight class="normal"><ref refid="classAdd__diFunction_1adc62afb79a89fbb6d4bc00881b78708c" kindref="member">Add_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>int<sp/>add<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>+=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classAdd__idFunction_1a8a3562e4a94fa7c32966b1614f767fa7" refkind="member"><highlight class="normal"><ref refid="classAdd__idFunction_1a8a3562e4a94fa7c32966b1614f767fa7" kindref="member">Add_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ind<sp/>double<sp/>add<sp/>-&gt;<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>+=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classSub__iiFunction_1ab806b49fda226e2bd5b35448bc364ca8" refkind="member"><highlight class="normal"><ref refid="classSub__iiFunction_1ab806b49fda226e2bd5b35448bc364ca8" kindref="member">Sub_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>-=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classSub__ddFunction_1a2ee22c72d70d3ffc4650aa9444737448" refkind="member"><highlight class="normal"><ref refid="classSub__ddFunction_1a2ee22c72d70d3ffc4650aa9444737448" kindref="member">Sub_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>-=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classSub__diFunction_1a5d1242d6b59e9eedad38ccd1242af939" refkind="member"><highlight class="normal"><ref refid="classSub__diFunction_1a5d1242d6b59e9eedad38ccd1242af939" kindref="member">Sub_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="152"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>-=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classSub__idFunction_1ae99e13f3f8ff597e9a96ec8d88f3bc22" refkind="member"><highlight class="normal"><ref refid="classSub__idFunction_1ae99e13f3f8ff597e9a96ec8d88f3bc22" kindref="member">Sub_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>-<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classMul__iiFunction_1ab4868240a168126183652d955a397c1d" refkind="member"><highlight class="normal"><ref refid="classMul__iiFunction_1ab4868240a168126183652d955a397c1d" kindref="member">Mul_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>*=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="classMul__ddFunction_1a9a71f82b7139462f6a59d2d4fa4c274e" refkind="member"><highlight class="normal"><ref refid="classMul__ddFunction_1a9a71f82b7139462f6a59d2d4fa4c274e" kindref="member">Mul_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>*=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classMul__diFunction_1a5f9f06582ee189889fa6f8ed0163b667" refkind="member"><highlight class="normal"><ref refid="classMul__diFunction_1a5f9f06582ee189889fa6f8ed0163b667" kindref="member">Mul_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>*=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="classMul__idFunction_1a5870d318fa39a22ed85eb9b3949aa64c" refkind="member"><highlight class="normal"><ref refid="classMul__idFunction_1a5870d318fa39a22ed85eb9b3949aa64c" kindref="member">Mul_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="218"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>*=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classDiv__iiFunction_1a6add7a24f6908dbe4d1b192bc629cf1f" refkind="member"><highlight class="normal"><ref refid="classDiv__iiFunction_1a6add7a24f6908dbe4d1b192bc629cf1f" kindref="member">Div_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="232"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>/=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a135795dcf992c429a46458ba7fae85ab" kindref="member">DivisionByZeroError</ref><sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------</highlight></codeline>
<codeline lineno="257"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classMod__iiFunction_1a3ba11e0a5bedbb08e32efb603c039d93" refkind="member"><highlight class="normal"><ref refid="classMod__iiFunction_1a3ba11e0a5bedbb08e32efb603c039d93" kindref="member">Mod_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="259"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&lt;<sp/>2<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1af98b93bb76491e6bc67e7636ca8e9ea9" kindref="member">StackUnderflowError</ref><sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>op1<sp/>or<sp/>not<sp/>op2<sp/>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a0f433320b9ff523f5e70964bc29af548" kindref="member">ArgumentTypeError</ref><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>*op1<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>%<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a135795dcf992c429a46458ba7fae85ab" kindref="member">DivisionByZeroError</ref><sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classDiv__ddFunction_1accc371b7bb3b7b4460352d9ce8cb3615" refkind="member"><highlight class="normal"><ref refid="classDiv__ddFunction_1accc371b7bb3b7b4460352d9ce8cb3615" kindref="member">Div_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>/=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a135795dcf992c429a46458ba7fae85ab" kindref="member">DivisionByZeroError</ref><sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classDiv__diFunction_1ad076751d8287b98805db1924ab99e4d1" refkind="member"><highlight class="normal"><ref refid="classDiv__diFunction_1ad076751d8287b98805db1924ab99e4d1" kindref="member">Div_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="309"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>/=<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a135795dcf992c429a46458ba7fae85ab" kindref="member">DivisionByZeroError</ref><sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classDiv__idFunction_1a798f8d1eb5b3462c3394ec3363677ff3" refkind="member"><highlight class="normal"><ref refid="classDiv__idFunction_1a798f8d1eb5b3462c3394ec3363677ff3" kindref="member">Div_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)<sp/>/<sp/>(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a135795dcf992c429a46458ba7fae85ab" kindref="member">DivisionByZeroError</ref><sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="classSin__dFunction_1aae315b892f24a81fa5e871a2590adc4e" refkind="member"><highlight class="normal"><ref refid="classSin__dFunction_1aae315b892f24a81fa5e871a2590adc4e" kindref="member">Sin_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::sin(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="classAsin__dFunction_1adc1230bfc4bb2fcb0615fa823d6136a6" refkind="member"><highlight class="normal"><ref refid="classAsin__dFunction_1adc1230bfc4bb2fcb0615fa823d6136a6" kindref="member">Asin_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::asin(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classCos__dFunction_1a7d9d4f60e5aef9fdea9b1d78d24729ad" refkind="member"><highlight class="normal"><ref refid="classCos__dFunction_1a7d9d4f60e5aef9fdea9b1d78d24729ad" kindref="member">Cos_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="416"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::cos(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="classAcos__dFunction_1a1bbe3b831b8b7273e0132455b7d99a82" refkind="member"><highlight class="normal"><ref refid="classAcos__dFunction_1a1bbe3b831b8b7273e0132455b7d99a82" kindref="member">Acos_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="441"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::acos(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="classExp__dFunction_1aa0425682a4917c78dcd8eed7c775584d" refkind="member"><highlight class="normal"><ref refid="classExp__dFunction_1aa0425682a4917c78dcd8eed7c775584d" kindref="member">Exp_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="462"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::exp(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="classLog__dFunction_1a701d41d1b7f3aa9016585ab08504785b" refkind="member"><highlight class="normal"><ref refid="classLog__dFunction_1a701d41d1b7f3aa9016585ab08504785b" kindref="member">Log_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="482"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>*op<sp/>=<sp/>std::log10(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" kindref="member">RangeCheckError</ref><sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="classLn__dFunction_1a1182db4c7e6c2a80a9cf8366e9244005" refkind="member"><highlight class="normal"><ref refid="classLn__dFunction_1a1182db4c7e6c2a80a9cf8366e9244005" kindref="member">Ln_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="508"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>*op<sp/>=<sp/>std::log(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" kindref="member">RangeCheckError</ref><sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classSqr__dFunction_1a7ef59acf4e7a1c615ffdd7ee14238c7a" refkind="member"><highlight class="normal"><ref refid="classSqr__dFunction_1a7ef59acf4e7a1c615ffdd7ee14238c7a" kindref="member">Sqr_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="531"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>*<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classSqrt__dFunction_1a4dd71783377ba895ea900422c41db37a" refkind="member"><highlight class="normal"><ref refid="classSqrt__dFunction_1a4dd71783377ba895ea900422c41db37a" kindref="member">Sqrt_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="549"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>*op<sp/>=<sp/>std::sqrt(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" kindref="member">RangeCheckError</ref><sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="classPow__ddFunction_1a79b08d73ee5fb7f57b6bf5f230c80969" refkind="member"><highlight class="normal"><ref refid="classPow__ddFunction_1a79b08d73ee5fb7f57b6bf5f230c80969" kindref="member">Pow_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="576"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>*op1<sp/>=<sp/>std::pow(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>(),<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" kindref="member">RangeCheckError</ref><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="classPow__diFunction_1ac0923f0015f3f1a6d76ed22e8203c12f" refkind="member"><highlight class="normal"><ref refid="classPow__diFunction_1ac0923f0015f3f1a6d76ed22e8203c12f" kindref="member">Pow_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="597"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>raise<sp/>anything<sp/>to<sp/>an<sp/>integer<sp/>power,<sp/>except<sp/>zero<sp/>to<sp/>neg<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>==<sp/>0.0<sp/>and<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cast<sp/>explicitly<sp/>to<sp/>double<sp/>to<sp/>avoid<sp/>overloading<sp/>ambiguity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>*op1<sp/>=<sp/>std::pow(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" kindref="member">RangeCheckError</ref><sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="classModf__dFunction_1a86b6147cdd3b982eb7abf303d5f749a5" refkind="member"><highlight class="normal"><ref refid="classModf__dFunction_1a86b6147cdd3b982eb7abf303d5f749a5" kindref="member">Modf_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="633"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>*op1<sp/>=<sp/>std::modf(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>(),<sp/>&amp;y<sp/>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>y<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classFrexp__dFunction_1a0d05a546f1cdfbeca4e18ee091992de7" refkind="member"><highlight class="normal"><ref refid="classFrexp__dFunction_1a0d05a546f1cdfbeca4e18ee091992de7" kindref="member">Frexp_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="663"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>*op1<sp/>=<sp/>std::frexp(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>(),<sp/>&amp;y<sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/>y<sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="classLdexp__diFunction_1a075b3d4af975cfc4de084cee04c72997" refkind="member"><highlight class="normal"><ref refid="classLdexp__diFunction_1a075b3d4af975cfc4de084cee04c72997" kindref="member">Ldexp_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="695"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>*op1<sp/>=<sp/>std::ldexp(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>(),<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="classDexp__iFunction_1a78fe12a604e5069c7f88cdd053e3267f" refkind="member"><highlight class="normal"><ref refid="classDexp__iFunction_1a78fe12a604e5069c7f88cdd053e3267f" kindref="member">Dexp_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="721"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>std::ldexp(<sp/>1.0,<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>()<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="classAbs__iFunction_1a96951691f32ae94347230e044d67f584" refkind="member"><highlight class="normal"><ref refid="classAbs__iFunction_1a96951691f32ae94347230e044d67f584" kindref="member">Abs_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="755"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::labs(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784" refid="classAbs__dFunction_1ae932b226f4cc979a50a5a4ca462fced7" refkind="member"><highlight class="normal"><ref refid="classAbs__dFunction_1ae932b226f4cc979a50a5a4ca462fced7" kindref="member">Abs_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="785"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::fabs(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="classNeg__iFunction_1a90fa5411cd53e49662c30ef26d19219e" refkind="member"><highlight class="normal"><ref refid="classNeg__iFunction_1a90fa5411cd53e49662c30ef26d19219e" kindref="member">Neg_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="810"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>-op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833" refid="classNeg__dFunction_1ad5f3d462d1120ce84d121c502b0eb9b4" refkind="member"><highlight class="normal"><ref refid="classNeg__dFunction_1ad5f3d462d1120ce84d121c502b0eb9b4" kindref="member">Neg_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="834"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>-op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="classInv__dFunction_1adf50634e78d24677de9c5e15040cafe2" refkind="member"><highlight class="normal"><ref refid="classInv__dFunction_1adf50634e78d24677de9c5e15040cafe2" kindref="member">Inv_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="850"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1af98b93bb76491e6bc67e7636ca8e9ea9" kindref="member">StackUnderflowError</ref><sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>op<sp/>)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>i-&gt;<ref refid="classSLIInterpreter_1a0f433320b9ff523f5e70964bc29af548" kindref="member">ArgumentTypeError</ref><sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>1.0<sp/>/<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886" refid="classEqFunction_1a183fd38b1b16d20ff2c93859bf3650f4" refkind="member"><highlight class="normal"><ref refid="classEqFunction_1a183fd38b1b16d20ff2c93859bf3650f4" kindref="member">EqFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="887"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><ref refid="classDatum" kindref="compound">Datum</ref>*<sp/>op1<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><ref refid="classDatum" kindref="compound">Datum</ref>*<sp/>op2<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>();</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classDatum_1a30302c3f9b5e9f86fc01021599011a7f" kindref="member">equals</ref>(<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="classNeqFunction_1a37d3a120ba54b59c93c5bc485f3a6d92" refkind="member"><highlight class="normal"><ref refid="classNeqFunction_1a37d3a120ba54b59c93c5bc485f3a6d92" kindref="member">NeqFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="914"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="classDatum" kindref="compound">Datum</ref>*<sp/>op1<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>();</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><ref refid="classDatum" kindref="compound">Datum</ref>*<sp/>op2<sp/>=<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>not<sp/>op1-&gt;<ref refid="classDatum_1a30302c3f9b5e9f86fc01021599011a7f" kindref="member">equals</ref>(<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938" refid="classGeq__iiFunction_1adb9567dd1162d015c350e4eecb0452c8" refkind="member"><highlight class="normal"><ref refid="classGeq__iiFunction_1adb9567dd1162d015c350e4eecb0452c8" kindref="member">Geq_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="939"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="classGeq__idFunction_1abfa47735f4aca091e1f0ac05f7c86be7" refkind="member"><highlight class="normal"><ref refid="classGeq__idFunction_1abfa47735f4aca091e1f0ac05f7c86be7" kindref="member">Geq_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="953"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="classGeq__diFunction_1aa061dfc9716c58eb0ca4f20810548560" refkind="member"><highlight class="normal"><ref refid="classGeq__diFunction_1aa061dfc9716c58eb0ca4f20810548560" kindref="member">Geq_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="967"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="classGeq__ddFunction_1a88e689255e5d935374c340a35407616c" refkind="member"><highlight class="normal"><ref refid="classGeq__ddFunction_1a88e689255e5d935374c340a35407616c" kindref="member">Geq_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="981"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="classLeq__iiFunction_1a970e655bab161b733c59de77ecf37b81" refkind="member"><highlight class="normal"><ref refid="classLeq__iiFunction_1a970e655bab161b733c59de77ecf37b81" kindref="member">Leq_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1006"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019" refid="classLeq__idFunction_1a242478cba96a40147deb69044a4f5a71" refkind="member"><highlight class="normal"><ref refid="classLeq__idFunction_1a242478cba96a40147deb69044a4f5a71" kindref="member">Leq_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1020"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033" refid="classLeq__diFunction_1a1b5a6dddcf5facc41323300222773772" refkind="member"><highlight class="normal"><ref refid="classLeq__diFunction_1a1b5a6dddcf5facc41323300222773772" kindref="member">Leq_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1034"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047" refid="classLeq__ddFunction_1af4437962bb4626d5843ff4c51ed53db3" refkind="member"><highlight class="normal"><ref refid="classLeq__ddFunction_1af4437962bb4626d5843ff4c51ed53db3" kindref="member">Leq_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1048"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;=<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="classNot__bFunction_1a85f9950a04b99ab37217911719646b46" refkind="member"><highlight class="normal"><ref refid="classNot__bFunction_1a85f9950a04b99ab37217911719646b46" kindref="member">Not_bFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1074"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>not<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084" refid="classNot__iFunction_1a2980f824ff6be71c838c82d5fa22fc16" refkind="member"><highlight class="normal"><ref refid="classNot__iFunction_1a2980f824ff6be71c838c82d5fa22fc16" kindref="member">Not_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1085"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>~op-&gt;get();</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="classOrFunction_1a153979323cdee14d30dd0bdc9b9ad139" refkind="member"><highlight class="normal"><ref refid="classOrFunction_1a153979323cdee14d30dd0bdc9b9ad139" kindref="member">OrFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>or<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141" refid="classXorFunction_1a638b44a694a6b6fd8e644e5207c0b084" refkind="member"><highlight class="normal"><ref refid="classXorFunction_1a638b44a694a6b6fd8e644e5207c0b084" kindref="member">XorFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>(<sp/>(<sp/>*op1<sp/>or<sp/>*op2<sp/>)<sp/>and<sp/>not(<sp/>*op1<sp/>and<sp/>*op2<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="classAndFunction_1a5b453fbad707ae3fa2944be2462af3b6" refkind="member"><highlight class="normal"><ref refid="classAndFunction_1a5b453fbad707ae3fa2944be2462af3b6" kindref="member">AndFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1170"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>(<sp/>*op1<sp/>and<sp/>*op2<sp/>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183" refid="classAnd__iiFunction_1ab4438c8e2ec244e641616c429b0077bd" refkind="member"><highlight class="normal"><ref refid="classAnd__iiFunction_1ab4438c8e2ec244e641616c429b0077bd" kindref="member">And_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1184"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&amp;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196" refid="classOr__iiFunction_1a52cc897a4f1b6ae66c60e3776f4cf405" refkind="member"><highlight class="normal"><ref refid="classOr__iiFunction_1a52cc897a4f1b6ae66c60e3776f4cf405" kindref="member">Or_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1197"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>|<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="classGt__idFunction_1a91f4f9c0f92b1799bc90ae6c2612a807" refkind="member"><highlight class="normal"><ref refid="classGt__idFunction_1a91f4f9c0f92b1799bc90ae6c2612a807" kindref="member">Gt_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1221"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>integer<sp/>double<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>*op1<sp/>&gt;<sp/>*op2;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236" refid="classGt__diFunction_1a20dd028c6f829b4e399b73d769eef5e9" refkind="member"><highlight class="normal"><ref refid="classGt__diFunction_1a20dd028c6f829b4e399b73d769eef5e9" kindref="member">Gt_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1237"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>double<sp/>integer<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>*op1<sp/>&gt;<sp/>*op2;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253" refid="classGt__iiFunction_1a14581810c3f7baeaa4db209ee5c35f4e" refkind="member"><highlight class="normal"><ref refid="classGt__iiFunction_1a14581810c3f7baeaa4db209ee5c35f4e" kindref="member">Gt_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1254"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>integer<sp/>integer<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270" refid="classGt__ddFunction_1a060e8778be3d70a291f25b9dd99f544b" refkind="member"><highlight class="normal"><ref refid="classGt__ddFunction_1a060e8778be3d70a291f25b9dd99f544b" kindref="member">Gt_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1271"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>double<sp/>double<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288" refid="classGt__ssFunction_1a2b74649010dc2364ee03f4e817738a5f" refkind="member"><highlight class="normal"><ref refid="classGt__ssFunction_1a2b74649010dc2364ee03f4e817738a5f" kindref="member">Gt_ssFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>string<sp/>string<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>*op1<sp/>&gt;<sp/>*op2;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//----</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315" refid="classLt__idFunction_1abc6c29e9330ffcd8d3eb80fecadd0dad" refkind="member"><highlight class="normal"><ref refid="classLt__idFunction_1abc6c29e9330ffcd8d3eb80fecadd0dad" kindref="member">Lt_idFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1316"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>integer<sp/>double<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="classLt__diFunction_1a9c29f0fbac6667d2512ae3a49ce86383" refkind="member"><highlight class="normal"><ref refid="classLt__diFunction_1a9c29f0fbac6667d2512ae3a49ce86383" kindref="member">Lt_diFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1333"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>double<sp/>integer<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="classLt__iiFunction_1a4d9f322d00a8f85473e9817664132ccc" refkind="member"><highlight class="normal"><ref refid="classLt__iiFunction_1a4d9f322d00a8f85473e9817664132ccc" kindref="member">Lt_iiFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1351"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>integer<sp/>integer<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367" refid="classLt__ddFunction_1a499089d678af7233ac278af0fd3a622a" refkind="member"><highlight class="normal"><ref refid="classLt__ddFunction_1a499089d678af7233ac278af0fd3a622a" kindref="member">Lt_ddFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1368"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>double<sp/>double<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385" refid="classLt__ssFunction_1a602f9010049e4d5bca353ef961bd5994" refkind="member"><highlight class="normal"><ref refid="classLt__ssFunction_1a602f9010049e4d5bca353ef961bd5994" kindref="member">Lt_ssFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1386"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call:<sp/>string<sp/>string<sp/>gt<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>assert(<sp/>op1<sp/>and<sp/>op2<sp/>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>*op1<sp/>&lt;<sp/>*op2;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classBoolDatum" kindref="compound">BoolDatum</ref>(<sp/>result<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404" refid="classUnitStep__dFunction_1ad745fde1bb76e9ef7567f94295f0481e" refkind="member"><highlight class="normal"><ref refid="classUnitStep__dFunction_1ad745fde1bb76e9ef7567f94295f0481e" kindref="member">UnitStep_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1405"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>x-&gt;get()<sp/>&gt;=<sp/>0.0;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>1.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>0.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427" refid="classUnitStep__iFunction_1acc06a1df307d659a0bf11ec902474c4f" refkind="member"><highlight class="normal"><ref refid="classUnitStep__iFunction_1acc06a1df307d659a0bf11ec902474c4f" kindref="member">UnitStep_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1428"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>assert(<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>x-&gt;get()<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>1.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>0.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451" refid="classUnitStep__daFunction_1afd850dcce0ebe6542fc9396a53624830" refkind="member"><highlight class="normal"><ref refid="classUnitStep__daFunction_1afd850dcce0ebe6542fc9396a53624830" kindref="member">UnitStep_daFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1452"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>*<sp/>a<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>assert(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>a-&gt;size();<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>(<sp/>*a<sp/>)[<sp/>j<sp/>].datum()<sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x-&gt;get()<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>1.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>0.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485" refid="classUnitStep__iaFunction_1a9378a2bbd2c679ee91d218f2dfd11a9d" refkind="member"><highlight class="normal"><ref refid="classUnitStep__iaFunction_1a9378a2bbd2c679ee91d218f2dfd11a9d" kindref="member">UnitStep_iaFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1486"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>*<sp/>a<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>assert(<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>a-&gt;size();<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>x<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>(<sp/>*a<sp/>)[<sp/>j<sp/>].datum()<sp/>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>x-&gt;get()<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>1.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a75a8af662288b54a64d5185c90401dec" kindref="member">push_by_pointer</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>0.0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>round<sp/>to<sp/>the<sp/>nearest<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519" refid="classRound__dFunction_1af27685e891ef78c97ae95e6f818bbc40" refkind="member"><highlight class="normal"><ref refid="classRound__dFunction_1af27685e891ef78c97ae95e6f818bbc40" kindref="member">Round_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1520"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::floor(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>+<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531" refid="classFloor__dFunction_1a3c010192ea5a0c0d9c9181a14e94f73a" refkind="member"><highlight class="normal"><ref refid="classFloor__dFunction_1a3c010192ea5a0c0d9c9181a14e94f73a" kindref="member">Floor_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1532"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::floor(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/mathematica.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543" refid="classCeil__dFunction_1a38d5f4e4fb116575eda31ea510aeae88" refkind="member"><highlight class="normal"><ref refid="classCeil__dFunction_1a38d5f4e4fb116575eda31ea510aeae88" kindref="member">Ceil_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1544"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/>*op<sp/>=<sp/>std::ceil(<sp/>op-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/typeinit.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556" refid="classMax__i__iFunction_1ad2d3f51c67c4d28b097a84d9673ff804" refkind="member"><highlight class="normal"><ref refid="classMax__i__iFunction_1ad2d3f51c67c4d28b097a84d9673ff804" kindref="member">Max_i_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1557"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572" refid="classMax__i__dFunction_1a8e1be6febab52033e2f6acb0c3f2627f" refkind="member"><highlight class="normal"><ref refid="classMax__i__dFunction_1a8e1be6febab52033e2f6acb0c3f2627f" kindref="member">Max_i_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1573"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588" refid="classMax__d__iFunction_1a65b5dfaaecc02bf6a193f009d5304286" refkind="member"><highlight class="normal"><ref refid="classMax__d__iFunction_1a65b5dfaaecc02bf6a193f009d5304286" kindref="member">Max_d_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1589"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604" refid="classMax__d__dFunction_1a12a335f8b56dc403556908f9d5d21613" refkind="member"><highlight class="normal"><ref refid="classMax__d__dFunction_1a12a335f8b56dc403556908f9d5d21613" kindref="member">Max_d_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1605"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&lt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Documentation<sp/>can<sp/>be<sp/>found<sp/>in<sp/>file<sp/>synod2/lib/sli/typeinit.sli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623" refid="classMin__i__iFunction_1a091ef6965b8624bb1db8697d3290fd66" refkind="member"><highlight class="normal"><ref refid="classMin__i__iFunction_1a091ef6965b8624bb1db8697d3290fd66" kindref="member">Min_i_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1624"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639" refid="classMin__i__dFunction_1a7b7f2d597342e3d06d89a6eedbdefbb0" refkind="member"><highlight class="normal"><ref refid="classMin__i__dFunction_1a7b7f2d597342e3d06d89a6eedbdefbb0" kindref="member">Min_i_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1640"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655" refid="classMin__d__iFunction_1a99963c12a9af8f53e55987050d537901" refkind="member"><highlight class="normal"><ref refid="classMin__d__iFunction_1a99963c12a9af8f53e55987050d537901" kindref="member">Min_d_iFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1656"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671" refid="classMin__d__dFunction_1a1dc138fde311c0dbff357616995be88f" refkind="member"><highlight class="normal"><ref refid="classMin__d__dFunction_1a1dc138fde311c0dbff357616995be88f" kindref="member">Min_d_dFunction::execute</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1672"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>assert(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;=<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>1<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>op2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>0<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>op1-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>&gt;<sp/>op2-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a0f58b17e8e9871f5679774bc9f8d1c51" kindref="member">swap</ref>();</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688" refid="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIntegerFunction" kindref="compound">IntegerFunction</ref><sp/><ref refid="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" kindref="member">integerfunction</ref>;</highlight></codeline>
<codeline lineno="1689" refid="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDoubleFunction" kindref="compound">DoubleFunction</ref><sp/><ref refid="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" kindref="member">doublefunction</ref>;</highlight></codeline>
<codeline lineno="1690" refid="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAdd__ddFunction" kindref="compound">Add_ddFunction</ref><sp/><ref refid="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" kindref="member">add_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1691" refid="slimath_8cc_1a3b938ab46879c63f08befed15171370b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAdd__diFunction" kindref="compound">Add_diFunction</ref><sp/><ref refid="slimath_8cc_1a3b938ab46879c63f08befed15171370b" kindref="member">add_difunction</ref>;</highlight></codeline>
<codeline lineno="1692" refid="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAdd__idFunction" kindref="compound">Add_idFunction</ref><sp/><ref refid="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" kindref="member">add_idfunction</ref>;</highlight></codeline>
<codeline lineno="1693" refid="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAdd__iiFunction" kindref="compound">Add_iiFunction</ref><sp/><ref refid="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" kindref="member">add_iifunction</ref>;</highlight></codeline>
<codeline lineno="1694" refid="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSub__ddFunction" kindref="compound">Sub_ddFunction</ref><sp/><ref refid="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" kindref="member">sub_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1695" refid="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSub__diFunction" kindref="compound">Sub_diFunction</ref><sp/><ref refid="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" kindref="member">sub_difunction</ref>;</highlight></codeline>
<codeline lineno="1696" refid="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSub__idFunction" kindref="compound">Sub_idFunction</ref><sp/><ref refid="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" kindref="member">sub_idfunction</ref>;</highlight></codeline>
<codeline lineno="1697" refid="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSub__iiFunction" kindref="compound">Sub_iiFunction</ref><sp/><ref refid="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" kindref="member">sub_iifunction</ref>;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699" refid="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMul__ddFunction" kindref="compound">Mul_ddFunction</ref><sp/><ref refid="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" kindref="member">mul_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1700" refid="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMul__diFunction" kindref="compound">Mul_diFunction</ref><sp/><ref refid="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" kindref="member">mul_difunction</ref>;</highlight></codeline>
<codeline lineno="1701" refid="slimath_8cc_1af52792922371ea73580ec7f724ce437b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMul__idFunction" kindref="compound">Mul_idFunction</ref><sp/><ref refid="slimath_8cc_1af52792922371ea73580ec7f724ce437b" kindref="member">mul_idfunction</ref>;</highlight></codeline>
<codeline lineno="1702" refid="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMul__iiFunction" kindref="compound">Mul_iiFunction</ref><sp/><ref refid="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" kindref="member">mul_iifunction</ref>;</highlight></codeline>
<codeline lineno="1703" refid="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDiv__ddFunction" kindref="compound">Div_ddFunction</ref><sp/><ref refid="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" kindref="member">div_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1704" refid="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDiv__diFunction" kindref="compound">Div_diFunction</ref><sp/><ref refid="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" kindref="member">div_difunction</ref>;</highlight></codeline>
<codeline lineno="1705" refid="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDiv__idFunction" kindref="compound">Div_idFunction</ref><sp/><ref refid="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" kindref="member">div_idfunction</ref>;</highlight></codeline>
<codeline lineno="1706" refid="slimath_8cc_1a60a646eb192999563254c8471350a8b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDiv__iiFunction" kindref="compound">Div_iiFunction</ref><sp/><ref refid="slimath_8cc_1a60a646eb192999563254c8471350a8b7" kindref="member">div_iifunction</ref>;</highlight></codeline>
<codeline lineno="1707" refid="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSin__dFunction" kindref="compound">Sin_dFunction</ref><sp/><ref refid="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" kindref="member">sin_dfunction</ref>;</highlight></codeline>
<codeline lineno="1708" refid="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAsin__dFunction" kindref="compound">Asin_dFunction</ref><sp/><ref refid="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" kindref="member">asin_dfunction</ref>;</highlight></codeline>
<codeline lineno="1709" refid="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCos__dFunction" kindref="compound">Cos_dFunction</ref><sp/><ref refid="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" kindref="member">cos_dfunction</ref>;</highlight></codeline>
<codeline lineno="1710" refid="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAcos__dFunction" kindref="compound">Acos_dFunction</ref><sp/><ref refid="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" kindref="member">acos_dfunction</ref>;</highlight></codeline>
<codeline lineno="1711" refid="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classExp__dFunction" kindref="compound">Exp_dFunction</ref><sp/><ref refid="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" kindref="member">exp_dfunction</ref>;</highlight></codeline>
<codeline lineno="1712" refid="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLn__dFunction" kindref="compound">Ln_dFunction</ref><sp/><ref refid="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" kindref="member">ln_dfunction</ref>;</highlight></codeline>
<codeline lineno="1713" refid="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLog__dFunction" kindref="compound">Log_dFunction</ref><sp/><ref refid="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" kindref="member">log_dfunction</ref>;</highlight></codeline>
<codeline lineno="1714" refid="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSqr__dFunction" kindref="compound">Sqr_dFunction</ref><sp/><ref refid="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" kindref="member">sqr_dfunction</ref>;</highlight></codeline>
<codeline lineno="1715" refid="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSqrt__dFunction" kindref="compound">Sqrt_dFunction</ref><sp/><ref refid="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" kindref="member">sqrt_dfunction</ref>;</highlight></codeline>
<codeline lineno="1716" refid="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPow__ddFunction" kindref="compound">Pow_ddFunction</ref><sp/><ref refid="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" kindref="member">pow_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1717" refid="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classPow__diFunction" kindref="compound">Pow_diFunction</ref><sp/><ref refid="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" kindref="member">pow_difunction</ref>;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719" refid="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classModf__dFunction" kindref="compound">Modf_dFunction</ref><sp/><ref refid="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" kindref="member">modf_dfunction</ref>;</highlight></codeline>
<codeline lineno="1720" refid="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classFrexp__dFunction" kindref="compound">Frexp_dFunction</ref><sp/><ref refid="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" kindref="member">frexp_dfunction</ref>;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722" refid="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLdexp__diFunction" kindref="compound">Ldexp_diFunction</ref><sp/><ref refid="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" kindref="member">ldexp_difunction</ref>;</highlight></codeline>
<codeline lineno="1723" refid="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDexp__iFunction" kindref="compound">Dexp_iFunction</ref><sp/><ref refid="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" kindref="member">dexp_ifunction</ref>;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725" refid="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMod__iiFunction" kindref="compound">Mod_iiFunction</ref><sp/><ref refid="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" kindref="member">mod_iifunction</ref>;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727" refid="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAbs__iFunction" kindref="compound">Abs_iFunction</ref><sp/><ref refid="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" kindref="member">abs_ifunction</ref>;</highlight></codeline>
<codeline lineno="1728" refid="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAbs__dFunction" kindref="compound">Abs_dFunction</ref><sp/><ref refid="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" kindref="member">abs_dfunction</ref>;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730" refid="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeg__iFunction" kindref="compound">Neg_iFunction</ref><sp/><ref refid="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" kindref="member">neg_ifunction</ref>;</highlight></codeline>
<codeline lineno="1731" refid="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeg__dFunction" kindref="compound">Neg_dFunction</ref><sp/><ref refid="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" kindref="member">neg_dfunction</ref>;</highlight></codeline>
<codeline lineno="1732" refid="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classInv__dFunction" kindref="compound">Inv_dFunction</ref><sp/><ref refid="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" kindref="member">inv_dfunction</ref>;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734" refid="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEqFunction" kindref="compound">EqFunction</ref><sp/><ref refid="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" kindref="member">eqfunction</ref>;</highlight></codeline>
<codeline lineno="1735" refid="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classOrFunction" kindref="compound">OrFunction</ref><sp/><ref refid="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" kindref="member">orfunction</ref>;</highlight></codeline>
<codeline lineno="1736" refid="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classXorFunction" kindref="compound">XorFunction</ref><sp/><ref refid="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" kindref="member">xorfunction</ref>;</highlight></codeline>
<codeline lineno="1737" refid="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAndFunction" kindref="compound">AndFunction</ref><sp/><ref refid="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" kindref="member">andfunction</ref>;</highlight></codeline>
<codeline lineno="1738" refid="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classAnd__iiFunction" kindref="compound">And_iiFunction</ref><sp/><ref refid="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" kindref="member">and_iifunction</ref>;</highlight></codeline>
<codeline lineno="1739" refid="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classOr__iiFunction" kindref="compound">Or_iiFunction</ref><sp/><ref refid="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" kindref="member">or_iifunction</ref>;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741" refid="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGeq__iiFunction" kindref="compound">Geq_iiFunction</ref><sp/><ref refid="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" kindref="member">geq_iifunction</ref>;</highlight></codeline>
<codeline lineno="1742" refid="slimath_8cc_1abf33d60af756887813206489615fcd6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGeq__idFunction" kindref="compound">Geq_idFunction</ref><sp/><ref refid="slimath_8cc_1abf33d60af756887813206489615fcd6c" kindref="member">geq_idfunction</ref>;</highlight></codeline>
<codeline lineno="1743" refid="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGeq__diFunction" kindref="compound">Geq_diFunction</ref><sp/><ref refid="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" kindref="member">geq_difunction</ref>;</highlight></codeline>
<codeline lineno="1744" refid="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGeq__ddFunction" kindref="compound">Geq_ddFunction</ref><sp/><ref refid="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" kindref="member">geq_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746" refid="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLeq__iiFunction" kindref="compound">Leq_iiFunction</ref><sp/><ref refid="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" kindref="member">leq_iifunction</ref>;</highlight></codeline>
<codeline lineno="1747" refid="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLeq__idFunction" kindref="compound">Leq_idFunction</ref><sp/><ref refid="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" kindref="member">leq_idfunction</ref>;</highlight></codeline>
<codeline lineno="1748" refid="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLeq__diFunction" kindref="compound">Leq_diFunction</ref><sp/><ref refid="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" kindref="member">leq_difunction</ref>;</highlight></codeline>
<codeline lineno="1749" refid="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLeq__ddFunction" kindref="compound">Leq_ddFunction</ref><sp/><ref refid="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" kindref="member">leq_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752" refid="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNeqFunction" kindref="compound">NeqFunction</ref><sp/><ref refid="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" kindref="member">neqfunction</ref>;</highlight></codeline>
<codeline lineno="1753" refid="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNot__bFunction" kindref="compound">Not_bFunction</ref><sp/><ref refid="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" kindref="member">not_bfunction</ref>;</highlight></codeline>
<codeline lineno="1754" refid="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classNot__iFunction" kindref="compound">Not_iFunction</ref><sp/><ref refid="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" kindref="member">not_ifunction</ref>;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756" refid="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGt__iiFunction" kindref="compound">Gt_iiFunction</ref><sp/><ref refid="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" kindref="member">gt_iifunction</ref>;</highlight></codeline>
<codeline lineno="1757" refid="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGt__ddFunction" kindref="compound">Gt_ddFunction</ref><sp/><ref refid="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" kindref="member">gt_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1758" refid="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGt__idFunction" kindref="compound">Gt_idFunction</ref><sp/><ref refid="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" kindref="member">gt_idfunction</ref>;</highlight></codeline>
<codeline lineno="1759" refid="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGt__diFunction" kindref="compound">Gt_diFunction</ref><sp/><ref refid="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" kindref="member">gt_difunction</ref>;</highlight></codeline>
<codeline lineno="1760" refid="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classGt__ssFunction" kindref="compound">Gt_ssFunction</ref><sp/><ref refid="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" kindref="member">gt_ssfunction</ref>;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762" refid="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLt__iiFunction" kindref="compound">Lt_iiFunction</ref><sp/><ref refid="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" kindref="member">lt_iifunction</ref>;</highlight></codeline>
<codeline lineno="1763" refid="slimath_8cc_1a95957da94284bde6accd0681b24c7652" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLt__ddFunction" kindref="compound">Lt_ddFunction</ref><sp/><ref refid="slimath_8cc_1a95957da94284bde6accd0681b24c7652" kindref="member">lt_ddfunction</ref>;</highlight></codeline>
<codeline lineno="1764" refid="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLt__idFunction" kindref="compound">Lt_idFunction</ref><sp/><ref refid="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" kindref="member">lt_idfunction</ref>;</highlight></codeline>
<codeline lineno="1765" refid="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLt__diFunction" kindref="compound">Lt_diFunction</ref><sp/><ref refid="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" kindref="member">lt_difunction</ref>;</highlight></codeline>
<codeline lineno="1766" refid="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classLt__ssFunction" kindref="compound">Lt_ssFunction</ref><sp/><ref refid="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" kindref="member">lt_ssfunction</ref>;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768" refid="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUnitStep__iFunction" kindref="compound">UnitStep_iFunction</ref><sp/><ref refid="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" kindref="member">unitstep_ifunction</ref>;</highlight></codeline>
<codeline lineno="1769" refid="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUnitStep__dFunction" kindref="compound">UnitStep_dFunction</ref><sp/><ref refid="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" kindref="member">unitstep_dfunction</ref>;</highlight></codeline>
<codeline lineno="1770" refid="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUnitStep__iaFunction" kindref="compound">UnitStep_iaFunction</ref><sp/><ref refid="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" kindref="member">unitstep_iafunction</ref>;</highlight></codeline>
<codeline lineno="1771" refid="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classUnitStep__daFunction" kindref="compound">UnitStep_daFunction</ref><sp/><ref refid="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" kindref="member">unitstep_dafunction</ref>;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773" refid="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRound__dFunction" kindref="compound">Round_dFunction</ref><sp/><ref refid="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" kindref="member">round_dfunction</ref>;</highlight></codeline>
<codeline lineno="1774" refid="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classFloor__dFunction" kindref="compound">Floor_dFunction</ref><sp/><ref refid="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" kindref="member">floor_dfunction</ref>;</highlight></codeline>
<codeline lineno="1775" refid="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classCeil__dFunction" kindref="compound">Ceil_dFunction</ref><sp/><ref refid="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" kindref="member">ceil_dfunction</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777" refid="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMax__d__dFunction" kindref="compound">Max_d_dFunction</ref><sp/><ref refid="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" kindref="member">max_d_dfunction</ref>;</highlight></codeline>
<codeline lineno="1778" refid="slimath_8cc_1ac942022e56d1641641b56063157428dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMax__d__iFunction" kindref="compound">Max_d_iFunction</ref><sp/><ref refid="slimath_8cc_1ac942022e56d1641641b56063157428dd" kindref="member">max_d_ifunction</ref>;</highlight></codeline>
<codeline lineno="1779" refid="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMax__i__dFunction" kindref="compound">Max_i_dFunction</ref><sp/><ref refid="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" kindref="member">max_i_dfunction</ref>;</highlight></codeline>
<codeline lineno="1780" refid="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMax__i__iFunction" kindref="compound">Max_i_iFunction</ref><sp/><ref refid="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" kindref="member">max_i_ifunction</ref>;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782" refid="slimath_8cc_1afaad309a4a4243930989806b54a150fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMin__d__dFunction" kindref="compound">Min_d_dFunction</ref><sp/><ref refid="slimath_8cc_1afaad309a4a4243930989806b54a150fd" kindref="member">min_d_dfunction</ref>;</highlight></codeline>
<codeline lineno="1783" refid="slimath_8cc_1af540e56acd23e094ac084de978837f5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMin__d__iFunction" kindref="compound">Min_d_iFunction</ref><sp/><ref refid="slimath_8cc_1af540e56acd23e094ac084de978837f5c" kindref="member">min_d_ifunction</ref>;</highlight></codeline>
<codeline lineno="1784" refid="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMin__i__dFunction" kindref="compound">Min_i_dFunction</ref><sp/><ref refid="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" kindref="member">min_i_dfunction</ref>;</highlight></codeline>
<codeline lineno="1785" refid="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMin__i__iFunction" kindref="compound">Min_i_iFunction</ref><sp/><ref refid="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" kindref="member">min_i_ifunction</ref>;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789" refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" refkind="member"><highlight class="normal"><ref refid="slimath_8cc_1a04130b0f3a1affccee27ae0e864cc7cf" kindref="member">init_slimath</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;int_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" kindref="member">integerfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;double_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" kindref="member">doublefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;add_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" kindref="member">add_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;add_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a3b938ab46879c63f08befed15171370b" kindref="member">add_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;add_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" kindref="member">add_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;add_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" kindref="member">add_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sub_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" kindref="member">sub_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sub_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" kindref="member">sub_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sub_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" kindref="member">sub_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sub_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" kindref="member">sub_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;mul_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" kindref="member">mul_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;mul_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" kindref="member">mul_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;mul_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af52792922371ea73580ec7f724ce437b" kindref="member">mul_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;mul_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" kindref="member">mul_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;div_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" kindref="member">div_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;div_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" kindref="member">div_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;div_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" kindref="member">div_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;div_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a60a646eb192999563254c8471350a8b7" kindref="member">div_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;mod&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" kindref="member">mod_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sin_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" kindref="member">sin_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;asin_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" kindref="member">asin_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;cos_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" kindref="member">cos_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;acos_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" kindref="member">acos_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exp_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" kindref="member">exp_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;log_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" kindref="member">log_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ln_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" kindref="member">ln_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sqr_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" kindref="member">sqr_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;sqrt_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" kindref="member">sqrt_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;pow_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" kindref="member">pow_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;pow_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" kindref="member">pow_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;modf_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" kindref="member">modf_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;frexp_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" kindref="member">frexp_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ldexp_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" kindref="member">ldexp_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;dexp_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" kindref="member">dexp_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;abs_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" kindref="member">abs_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;abs_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" kindref="member">abs_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;neg_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" kindref="member">neg_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;neg_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" kindref="member">neg_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;inv&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" kindref="member">inv_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;eq&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" kindref="member">eqfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;and&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" kindref="member">andfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;and_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" kindref="member">and_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;or_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" kindref="member">or_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;or&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" kindref="member">orfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;xor&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" kindref="member">xorfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;leq_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" kindref="member">leq_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;leq_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" kindref="member">leq_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;leq_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" kindref="member">leq_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;leq_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" kindref="member">leq_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;geq_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" kindref="member">geq_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;geq_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1abf33d60af756887813206489615fcd6c" kindref="member">geq_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;geq_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" kindref="member">geq_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;geq_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" kindref="member">geq_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;neq&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" kindref="member">neqfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;not_b&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" kindref="member">not_bfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;not_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" kindref="member">not_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;gt_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" kindref="member">gt_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;gt_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" kindref="member">gt_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;gt_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" kindref="member">gt_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;gt_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" kindref="member">gt_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;gt_ss&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" kindref="member">gt_ssfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;lt_ii&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" kindref="member">lt_iifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;lt_dd&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a95957da94284bde6accd0681b24c7652" kindref="member">lt_ddfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;lt_id&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" kindref="member">lt_idfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;lt_di&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" kindref="member">lt_difunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;lt_ss&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" kindref="member">lt_ssfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;UnitStep_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" kindref="member">unitstep_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;UnitStep_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" kindref="member">unitstep_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;UnitStep_ia&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" kindref="member">unitstep_iafunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;UnitStep_da&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" kindref="member">unitstep_dafunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;round_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" kindref="member">round_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;floor_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" kindref="member">floor_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ceil_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" kindref="member">ceil_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;max_d_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" kindref="member">max_d_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;max_d_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac942022e56d1641641b56063157428dd" kindref="member">max_d_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;max_i_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" kindref="member">max_i_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;max_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" kindref="member">max_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;min_d_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1afaad309a4a4243930989806b54a150fd" kindref="member">min_d_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;min_d_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1af540e56acd23e094ac084de978837f5c" kindref="member">min_d_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;min_i_d&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" kindref="member">min_i_dfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>i-&gt;<ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/></highlight><highlight class="stringliteral">&quot;min_i_i&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" kindref="member">min_i_ifunction</ref><sp/>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc"/>
  </compounddef>
</doxygen>
