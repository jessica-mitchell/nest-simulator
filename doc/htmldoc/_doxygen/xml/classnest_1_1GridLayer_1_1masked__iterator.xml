<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1GridLayer_1_1masked__iterator" kind="class" language="C++" prot="public">
    <compoundname>nest::GridLayer::masked_iterator</compoundname>
    <includes refid="grid__layer_8h" local="no">grid_layer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1GridLayer_1_1masked__iterator_1a77f44315bd7b461a491816aa7120f9bd" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classnest_1_1GridLayer" kindref="compound">GridLayer</ref>&lt; D &gt; &amp;</type>
        <definition>const GridLayer&lt; D &gt;&amp; nest::GridLayer&lt; D &gt;::masked_iterator::layer_</definition>
        <argsstring></argsstring>
        <name>layer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="100" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" compoundref="grid__layer_8h" startline="320" endline="370">nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</referencedby>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a56bb2f082c869011e7deb776b97afdc8" compoundref="grid__layer_8h" startline="94" endline="97">nest::GridLayer&lt; D &gt;::masked_iterator::operator!=</referencedby>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1ad068a1fef007f8b3c057813a511f4085" compoundref="grid__layer_8h" startline="89" endline="92">nest::GridLayer&lt; D &gt;::masked_iterator::operator==</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GridLayer_1_1masked__iterator_1a69e2ff6fb783f49563a84127b5b543c8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::GridLayer&lt; D &gt;::masked_iterator::layer_size_</definition>
        <argsstring></argsstring>
        <name>layer_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="101" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" compoundref="grid__layer_8h" startline="320" endline="370">nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GridLayer_1_1masked__iterator_1a5dbf99deecfd50643af82627861884e8" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; *</type>
        <definition>const Mask&lt; D &gt;* nest::GridLayer&lt; D &gt;::masked_iterator::mask_</definition>
        <argsstring></argsstring>
        <name>mask_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="102" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" compoundref="grid__layer_8h" startline="320" endline="370">nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GridLayer_1_1masked__iterator_1afca1929f7299fcd1b9afeee9287e1113" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::GridLayer&lt; D &gt;::masked_iterator::anchor_</definition>
        <argsstring></argsstring>
        <name>anchor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="103" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="103" bodyend="-1"/>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" compoundref="grid__layer_8h" startline="320" endline="370">nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GridLayer_1_1masked__iterator_1a8b3a15f7de5d4bd2944faaf062b53da8" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1MultiIndex" kindref="compound">MultiIndex</ref>&lt; D &gt;</type>
        <definition>MultiIndex&lt; D &gt; nest::GridLayer&lt; D &gt;::masked_iterator::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="104" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" compoundref="grid__layer_8h" startline="320" endline="370">nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</referencedby>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1a56bb2f082c869011e7deb776b97afdc8" compoundref="grid__layer_8h" startline="94" endline="97">nest::GridLayer&lt; D &gt;::masked_iterator::operator!=</referencedby>
        <referencedby refid="classnest_1_1GridLayer_1_1masked__iterator_1ad068a1fef007f8b3c057813a511f4085" compoundref="grid__layer_8h" startline="89" endline="92">nest::GridLayer&lt; D &gt;::masked_iterator::operator==</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1ac992ba71e4ebe2e9c42f65972a7d9d75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</definition>
        <argsstring>(const GridLayer&lt; D &gt; &amp;layer)</argsstring>
        <name>masked_iterator</name>
        <param>
          <type>const <ref refid="classnest_1_1GridLayer" kindref="compound">GridLayer</ref>&lt; D &gt; &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Constructor for an invalid iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="53" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GridLayer&lt; D &gt;::masked_iterator::masked_iterator</definition>
        <argsstring>(const GridLayer&lt; D &gt; &amp;layer, const Mask&lt; D &gt; &amp;mask, const Position&lt; D &gt; &amp;anchor)</argsstring>
        <name>masked_iterator</name>
        <param>
          <type>const <ref refid="classnest_1_1GridLayer" kindref="compound">GridLayer</ref>&lt; D &gt; &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Initialise an iterator to point to the first node inside the mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="64" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="320" bodyend="370"/>
        <references refid="namespacenest_1_1names_1ac3df6aff8b6e53821a239077aff7d7a5">nest::names::anchor</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1afca1929f7299fcd1b9afeee9287e1113" compoundref="grid__layer_8h" startline="103">nest::GridLayer&lt; D &gt;::masked_iterator::anchor_</references>
        <references refid="classnest_1_1GridLayer_1ac3a8ddb646a06c1c6cc2e5c40a23b638" compoundref="grid__layer_8h" startline="152">nest::GridLayer&lt; D &gt;::dims_</references>
        <references refid="classnest_1_1Layer_1a3fe40a896502071fc257e0bf4b7f5961" compoundref="layer_8h" startline="437">nest::Layer&lt; D &gt;::extent_</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a77f44315bd7b461a491816aa7120f9bd" compoundref="grid__layer_8h" startline="100">nest::GridLayer&lt; D &gt;::masked_iterator::layer_</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a69e2ff6fb783f49563a84127b5b543c8" compoundref="grid__layer_8h" startline="101">nest::GridLayer&lt; D &gt;::masked_iterator::layer_size_</references>
        <references refid="namespacenest_1_1names_1a75e71dfa981ee8509c2aa146b7e396a8">nest::names::lower_left</references>
        <references refid="structnest_1_1Box_1a07258756c85bafcfcd7187707791e306" compoundref="position_8h" startline="325">nest::Box&lt; D &gt;::lower_left</references>
        <references refid="classnest_1_1Layer_1af53da8f0c9a40e6c25a99fac5e303487" compoundref="layer_8h" startline="436">nest::Layer&lt; D &gt;::lower_left_</references>
        <references refid="namespacenest_1_1names_1a5b38373f58e71172fcc2a32f0fa9075a">nest::names::mask</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a5dbf99deecfd50643af82627861884e8" compoundref="grid__layer_8h" startline="102">nest::GridLayer&lt; D &gt;::masked_iterator::mask_</references>
        <references refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730">nest::names::max</references>
        <references refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6">nest::names::min</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a8b3a15f7de5d4bd2944faaf062b53da8" compoundref="grid__layer_8h" startline="104">nest::GridLayer&lt; D &gt;::masked_iterator::node_</references>
        <references refid="classnest_1_1Layer_1ac2a10c1e0879d2166cdbcfdb0ba3a82e" compoundref="layer_8h" startline="438">nest::Layer&lt; D &gt;::periodic_</references>
        <references refid="namespacenest_1_1names_1a7fb918b2ff99e770996f82413334e9fa">nest::names::upper_right</references>
        <references refid="structnest_1_1Box_1abdae9440dd4d9e0a7bbb3586d440528c" compoundref="position_8h" startline="326">nest::Box&lt; D &gt;::upper_right</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1ab0463613aa8beb6aaaf11b24cef218d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1GridLayer_1a402c0547e8a907263e6dfe1a1a90697b" kindref="member">value_type</ref></type>
        <definition>std::pair&lt; Position&lt; D &gt;, index &gt; nest::GridLayer&lt; D &gt;::masked_iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="66" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="374" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1a97739d99a842d77dc097cf9fe57db4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1GridLayer_1_1masked__iterator" kindref="compound">masked_iterator</ref> &amp;</type>
        <definition>GridLayer&lt; D &gt;::masked_iterator &amp; nest::GridLayer&lt; D &gt;::masked_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Move the iterator to the next node within the mask. </para>
        </briefdescription>
        <detaileddescription>
<para>May cause the iterator to become invalid if there are no more nodes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="72" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="382" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1a8b232450b8965091f6b741687dee8806" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1GridLayer_1_1masked__iterator" kindref="compound">masked_iterator</ref></type>
        <definition>masked_iterator nest::GridLayer&lt; D &gt;::masked_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Postfix increment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="78" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1ad068a1fef007f8b3c057813a511f4085" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::GridLayer&lt; D &gt;::masked_iterator::operator==</definition>
        <argsstring>(const masked_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnest_1_1GridLayer_1_1masked__iterator" kindref="compound">masked_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Iterators are equal if they point to the same node in the same layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="89" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="89" bodyend="92"/>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a77f44315bd7b461a491816aa7120f9bd" compoundref="grid__layer_8h" startline="100">nest::GridLayer&lt; D &gt;::masked_iterator::layer_</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a8b3a15f7de5d4bd2944faaf062b53da8" compoundref="grid__layer_8h" startline="104">nest::GridLayer&lt; D &gt;::masked_iterator::node_</references>
        <references refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d">nest::names::other</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GridLayer_1_1masked__iterator_1a56bb2f082c869011e7deb776b97afdc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::GridLayer&lt; D &gt;::masked_iterator::operator!=</definition>
        <argsstring>(const masked_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnest_1_1GridLayer_1_1masked__iterator" kindref="compound">masked_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="94" column="5" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="94" bodyend="97"/>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a77f44315bd7b461a491816aa7120f9bd" compoundref="grid__layer_8h" startline="100">nest::GridLayer&lt; D &gt;::masked_iterator::layer_</references>
        <references refid="classnest_1_1GridLayer_1_1masked__iterator_1a8b3a15f7de5d4bd2944faaf062b53da8" compoundref="grid__layer_8h" startline="104">nest::GridLayer&lt; D &gt;::masked_iterator::node_</references>
        <references refid="namespacenest_1_1names_1a7d67dc420acf69b2b62a5c25796d941d">nest::names::other</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator iterating over the nodes inside a <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::GridLayer&lt; D &gt;::masked_iterator</label>
        <link refid="classnest_1_1GridLayer_1_1masked__iterator"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" line="47" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/grid_layer.h" bodystart="48" bodyend="105"/>
    <listofallmembers>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1afca1929f7299fcd1b9afeee9287e1113" prot="protected" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>anchor_</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a77f44315bd7b461a491816aa7120f9bd" prot="protected" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>layer_</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a69e2ff6fb783f49563a84127b5b543c8" prot="protected" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>layer_size_</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a5dbf99deecfd50643af82627861884e8" prot="protected" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>mask_</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1ac992ba71e4ebe2e9c42f65972a7d9d75" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>masked_iterator</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a7d2815902bd06d0e211ec1b8a0111792" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>masked_iterator</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a8b3a15f7de5d4bd2944faaf062b53da8" prot="protected" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>node_</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a56bb2f082c869011e7deb776b97afdc8" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>operator!=</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1ab0463613aa8beb6aaaf11b24cef218d8" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>operator*</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a97739d99a842d77dc097cf9fe57db4ce" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>operator++</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1a8b232450b8965091f6b741687dee8806" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>operator++</name></member>
      <member refid="classnest_1_1GridLayer_1_1masked__iterator_1ad068a1fef007f8b3c057813a511f4085" prot="public" virt="non-virtual"><scope>nest::GridLayer::masked_iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
