<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="interpret_8cc" kind="file" language="C++">
    <compoundname>interpret.cc</compoundname>
    <includes refid="interpret_8h" local="yes">interpret.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">ctime</includes>
    <includes local="no">exception</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="yes">compose.hpp</includes>
    <includes refid="numerics_8h" local="yes">numerics.h</includes>
    <includes refid="dictdatum_8h" local="yes">dictdatum.h</includes>
    <includes refid="dictstack_8h" local="yes">dictstack.h</includes>
    <includes refid="dictutils_8h" local="yes">dictutils.h</includes>
    <includes refid="doubledatum_8h" local="yes">doubledatum.h</includes>
    <includes refid="functional_8h" local="yes">functional.h</includes>
    <includes refid="functiondatum_8h" local="yes">functiondatum.h</includes>
    <includes refid="integerdatum_8h" local="yes">integerdatum.h</includes>
    <includes refid="iostreamdatum_8h" local="yes">iostreamdatum.h</includes>
    <includes refid="namedatum_8h" local="yes">namedatum.h</includes>
    <includes refid="parser_8h" local="yes">parser.h</includes>
    <includes refid="stringdatum_8h" local="yes">stringdatum.h</includes>
    <includes refid="triedatum_8h" local="yes">triedatum.h</includes>
    <incdepgraph>
      <node id="38">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>numerics.h</label>
        <link refid="numerics_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>aggregatedatum.h</label>
        <link refid="aggregatedatum_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>arraydatum.h</label>
        <link refid="arraydatum_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>charcode.h</label>
        <link refid="charcode_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>dictdatum.h</label>
        <link refid="dictdatum_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>dictstack.h</label>
        <link refid="dictstack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>dictutils.h</label>
        <link refid="dictutils_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>doubledatum.h</label>
        <link refid="doubledatum_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>functional.h</label>
        <link refid="functional_8h"/>
      </node>
      <node id="54">
        <label>functiondatum.h</label>
        <link refid="functiondatum_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>genericdatum.h</label>
        <link refid="genericdatum_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>integerdatum.h</label>
        <link refid="integerdatum_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>interpret.cc</label>
        <link refid="interpret_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>iostreamdatum.h</label>
        <link refid="iostreamdatum_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>lockptrdatum.h</label>
        <link refid="lockptrdatum_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>namedatum.h</label>
        <link refid="namedatum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>numericdatum.h</label>
        <link refid="numericdatum_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>scanner.h</label>
        <link refid="scanner_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="8">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>slinames.h</label>
        <link refid="slinames_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>stringdatum.h</label>
        <link refid="stringdatum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>symboldatum.h</label>
        <link refid="symboldatum_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>tokenutils.h</label>
        <link refid="tokenutils_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>triedatum.h</label>
        <link refid="triedatum_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>typearray.h</label>
        <link refid="typearray_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>typechk.h</label>
        <link refid="typechk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="33">
        <label>cmath</label>
      </node>
      <node id="31">
        <label>compose.hpp</label>
      </node>
      <node id="19">
        <label>config.h</label>
      </node>
      <node id="23">
        <label>cstddef</label>
      </node>
      <node id="46">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>ctime</label>
      </node>
      <node id="14">
        <label>deque</label>
      </node>
      <node id="28">
        <label>exception</label>
      </node>
      <node id="29">
        <label>fstream</label>
      </node>
      <node id="42">
        <label>functional</label>
      </node>
      <node id="17">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>limits</label>
      </node>
      <node id="3">
        <label>list</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="39">
        <label>memory</label>
      </node>
      <node id="30">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="4">
        <label>typeinfo</label>
      </node>
      <node id="18">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="interpret_8cc_1a6a862694b895dfd3c3e7ff8c2e751862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slidict</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slidict</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="56" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slidict.cc" bodystart="997" bodyend="1022" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="56" declcolumn="13"/>
        <references refid="slidict_8cc_1aac31d6242e9fde94e5dbbb073e1a4146" compoundref="slidict_8cc" startline="989">cleardictfunction</references>
        <references refid="slidict_8cc_1a69b092581f9fb470aec066c6e0897dd7" compoundref="slidict_8cc" startline="985">cleardictstackfunction</references>
        <references refid="slidict_8cc_1a3a31a5615df25aea9cc10c9b65746229" compoundref="slidict_8cc" startline="990">clonedictfunction</references>
        <references refid="slidict_8cc_1a9652b975d1da5992117bdaaa20a211b6" compoundref="slidict_8cc" startline="984">countdictstackfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slidict_8cc_1a9ef1a68bd066619978eaf686ee93c3d5" compoundref="slidict_8cc" startline="986">currentdictfunction</references>
        <references refid="slidict_8cc_1a27dfa002ebfce0caaaa46961b04ed564" compoundref="slidict_8cc" startline="991">cva_dfunction</references>
        <references refid="slidict_8cc_1a174ae5c43fbf2fc8083b0b1840521231" compoundref="slidict_8cc" startline="978">dictbeginfunction</references>
        <references refid="slidict_8cc_1a8d21275750cf11ed36f72f90b84020d1" compoundref="slidict_8cc" startline="980">dictconstructfunction</references>
        <references refid="slidict_8cc_1a7fc4726ba564d36939bb19bc73d10c62" compoundref="slidict_8cc" startline="979">dictendfunction</references>
        <references refid="slidict_8cc_1a19c81ff2216ab988acfe5fddb637808f" compoundref="slidict_8cc" startline="972">dictfunction</references>
        <references refid="slidict_8cc_1a4426638c018398fa9d502e54721691bf" compoundref="slidict_8cc" startline="974">dictgetfunction</references>
        <references refid="slidict_8cc_1ad0aeca2bd330ee5e1db95ab1b36d7ad1" compoundref="slidict_8cc" startline="975">dictinfofunction</references>
        <references refid="slidict_8cc_1a5cfa2a718903b52af2108f08c240fcb6" compoundref="slidict_8cc" startline="973">dictputfunction</references>
        <references refid="slidict_8cc_1a31bab3c76cc806c6bbc782c3f27b1e29" compoundref="slidict_8cc" startline="983">dictstackfunction</references>
        <references refid="slidict_8cc_1a6231314b3c1abc92d68d5616a5cad60c" compoundref="slidict_8cc" startline="976">dicttopinfofunction</references>
        <references refid="slidict_8cc_1a6ca6f8288d4f65a6643cdd47ee751563" compoundref="slidict_8cc" startline="982">empty_Dfunction</references>
        <references refid="classSLIInterpreter_1af10afcb60ee15c1629b400d15041a057" compoundref="interpret_8h" startline="124">SLIInterpreter::end_name</references>
        <references refid="slidict_8cc_1a1b3d5a6451c1716bff05d4c842f7e782" compoundref="slidict_8cc" startline="992">keysfunction</references>
        <references refid="slidict_8cc_1ad44b6568fc08577bba790bc5c13d3ac2" compoundref="slidict_8cc" startline="987">knownfunction</references>
        <references refid="slidict_8cc_1a2c047022bb7bffea749454f1b152ef5d" compoundref="slidict_8cc" startline="981">length_dfunction</references>
        <references refid="slidict_8cc_1a4ed494637ad608799610f603238d2c4d" compoundref="slidict_8cc" startline="994">restoredstackfunction</references>
        <references refid="slidict_8cc_1a64b1d23bf72dc385a0fb1fc2c761f52d" compoundref="slidict_8cc" startline="988">undeffunction</references>
        <references refid="slidict_8cc_1a51e31f17acd6fd73b5a740fd2b6fe015" compoundref="slidict_8cc" startline="993">valuesfunction</references>
        <references refid="slidict_8cc_1aaff2028328074f3253395faa3b0ff466" compoundref="slidict_8cc" startline="977">whofunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1a4816bb2c64fe5f4bf36694f8814fbf35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slicontrol</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slicontrol</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: mark - puts a mark on the stack </para>
        </briefdescription>
        <detaileddescription>
<para>Description: A mark is a token which is lying on the stack and can be found by the user. The mark is used : 1) by using it as command mark 2) by using it as [ when creating an array 3) by using it as &lt;&lt; when creating a dict</para>
<para>Examples: [ 1 2 add ] -&gt; [3] mark 1 2 add ] -&gt; [3]</para>
<para>Author: docu by Marc Oliver Gewaltig and Sirko Straube SeeAlso: counttomark, arraystore, switch, case </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="57" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.cc" bodystart="2188" bodyend="2260" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="57" declcolumn="13"/>
        <references refid="slicontrol_8cc_1af423ee7c744a537f8d92b080ee80b62b" compoundref="slicontrol_8cc" startline="2112">backtrace_offfunction</references>
        <references refid="slicontrol_8cc_1a0f01018b13a02f25f3aa6da3e9375862" compoundref="slicontrol_8cc" startline="2111">backtrace_onfunction</references>
        <references refid="slicontrol_8cc_1aad51b7d5271a1e9e69a01ee33dcf0fc7" compoundref="slicontrol_8cc" startline="2149">casefunction</references>
        <references refid="slicontrol_8cc_1a2ca3c7269b78756dbe81610a0a236eaf" compoundref="slicontrol_8cc" startline="2121">closeinputfunction</references>
        <references refid="slicontrol_8cc_1a9f68dd71fb4b7ca5dd36a24e8b90b5c3" compoundref="slicontrol_8cc" startline="2143">codeaccessedfunction</references>
        <references refid="slicontrol_8cc_1a9e68013123bff9a7e70a0f9dd0dea50a" compoundref="slicontrol_8cc" startline="2144">codeexecutedfunction</references>
        <references refid="slicontrol_8cc_1aa410c5d91daeec57a6f34f6c562f64d2" compoundref="slicontrol_8cc" startline="2150">counttomarkfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slicontrol_8cc_1a780e413610dfa3b6c859325b089c4238" compoundref="slicontrol_8cc" startline="2124">currentnamefunction</references>
        <references refid="slicontrol_8cc_1ae720f27844a7f788d2fe692abbd7f4d9" compoundref="slicontrol_8cc" startline="2142">cyclesfunction</references>
        <references refid="slicontrol_8cc_1ab7f1a1b460405c125e334b8d13d86685" compoundref="slicontrol_8cc" startline="2169">debugfunction</references>
        <references refid="slicontrol_8cc_1a26f979449e6cdfd8cd163da754436488" compoundref="slicontrol_8cc" startline="2168">debugofffunction</references>
        <references refid="slicontrol_8cc_1a3774ab868ea2ee7eff51b4ce4165e525" compoundref="slicontrol_8cc" startline="2167">debugonfunction</references>
        <references refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" compoundref="interpret_8cc" startline="329" endline="332">SLIInterpreter::def</references>
        <references refid="slicontrol_8cc_1a0d6edbc1202aa897590ab86d7c3f8d35" compoundref="slicontrol_8cc" startline="2128">deffunction</references>
        <references refid="slicontrol_8cc_1abb27205769884e3864e893618874e29b" compoundref="slicontrol_8cc" startline="2114">estackdumpfunction</references>
        <references refid="slicontrol_8cc_1ae256f82dea38f78d6e08288ce4868419" compoundref="slicontrol_8cc" startline="2145">execfunction</references>
        <references refid="slicontrol_8cc_1a81f57cbb38c6411edfdc2417733d270e" compoundref="slicontrol_8cc" startline="2116">exitfunction</references>
        <references refid="classSLIInterpreter_1ae17c622fcc079a453649581c02f00a6f" compoundref="interpret_8h" startline="129">SLIInterpreter::false_name</references>
        <references refid="slicontrol_8cc_1a6e5075b76ec45bbd6c130d16952fca9b" compoundref="slicontrol_8cc" startline="2134">forall_afunction</references>
        <references refid="slicontrol_8cc_1ac56ef50c9e3e610b510a9e81b7a12a7d" compoundref="slicontrol_8cc" startline="2137">forall_sfunction</references>
        <references refid="slicontrol_8cc_1a72ed808eabf8817f02db47dc2101c986" compoundref="slicontrol_8cc" startline="2135">forallindexed_afunction</references>
        <references refid="slicontrol_8cc_1a177fece3d73e5d7a147201498b784ad5" compoundref="slicontrol_8cc" startline="2136">forallindexed_sfunction</references>
        <references refid="slicontrol_8cc_1a8ff1e7eb2cf44240aca40cdf0ad9e6a5" compoundref="slicontrol_8cc" startline="2133">forfunction</references>
        <references refid="slicontrol_8cc_1a3cdb9ef4faa40485007153c2874be727" compoundref="slicontrol_8cc" startline="2119">ifelsefunction</references>
        <references refid="slicontrol_8cc_1ad3a1e73452bed691b081877d4d05a532" compoundref="slicontrol_8cc" startline="2118">iffunction</references>
        <references refid="slicontrol_8cc_1a05e73c2678cee0f99ffff01d15960439" compoundref="slicontrol_8cc" startline="2127">iparsefunction</references>
        <references refid="slicontrol_8cc_1a5667bc3314a96ca8e63907f6a068cdfe" compoundref="slicontrol_8cc" startline="2125">iparsestdinfunction</references>
        <references refid="classSLIInterpreter_1ab527da2fa52972b0f7d96ee7859cae1c" compoundref="interpret_8h" startline="131">SLIInterpreter::istopped_name</references>
        <references refid="slicontrol_8cc_1a3aa4497de0d3b18031863cd54a25dcf3" compoundref="slicontrol_8cc" startline="2130">loadfunction</references>
        <references refid="slicontrol_8cc_1ae02a0722d3f7972f1eee1718e033d201" compoundref="slicontrol_8cc" startline="2131">lookupfunction</references>
        <references refid="slicontrol_8cc_1af72441d05c14199bcdf58dcf3ff102b6" compoundref="slicontrol_8cc" startline="2115">loopfunction</references>
        <references refid="classSLIInterpreter_1afe0e3fe443a8fa59dfaf31a4a5f46526" compoundref="interpret_8h" startline="130">SLIInterpreter::mark_name</references>
        <references refid="slicontrol_8cc_1ac3c26e6a1f746c1a193e19f5f84b6dff" compoundref="slicontrol_8cc" startline="2164">messagefunction</references>
        <references refid="classSLIInterpreter_1a0375658238d1001fadafea960ac64e6a" compoundref="interpret_8h" startline="136">SLIInterpreter::newerror_name</references>
        <references refid="slicontrol_8cc_1a240e38256312908dd2714c58c8211065" compoundref="slicontrol_8cc" startline="2165">noopfunction</references>
        <references refid="slicontrol_8cc_1a4d691abab0772df99eca88addfaf0e7a" compoundref="slicontrol_8cc" startline="2113">ostackdumpfunction</references>
        <references refid="slicontrol_8cc_1a19994931e9be37cb8fed050468d9bfb4" compoundref="slicontrol_8cc" startline="2126">parsestdinfunction</references>
        <references refid="slicontrol_8cc_1a78b561877ff475b4ba3cb16b7218c17e" compoundref="slicontrol_8cc" startline="2151">pclocksfunction</references>
        <references refid="slicontrol_8cc_1a6a0948795ed21432f3c1c3ddd0fa258c" compoundref="slicontrol_8cc" startline="2152">pclockspersecfunction</references>
        <references refid="slicontrol_8cc_1a36f5a7652dd3682285976b355bf44e54" compoundref="slicontrol_8cc" startline="2153">pgetrusagefunction</references>
        <references refid="slicontrol_8cc_1a6cae6155c2ba45c281856498bb4de4dc" compoundref="slicontrol_8cc" startline="2139">printerrorfunction</references>
        <references refid="slicontrol_8cc_1ae8b615563f1bc61f8dd4ace6a91a3385" compoundref="slicontrol_8cc" startline="2117">quitfunction</references>
        <references refid="slicontrol_8cc_1ab10a795dd755eebc7bafb83fd39853e1" compoundref="slicontrol_8cc" startline="2140">raiseagainfunction</references>
        <references refid="slicontrol_8cc_1abe9201a3291671bad1d2a7b2aad161c9" compoundref="slicontrol_8cc" startline="2138">raiseerrorfunction</references>
        <references refid="classSLIInterpreter_1a41324ebc0bc4df32082ea1d7303e0376" compoundref="interpret_8h" startline="140">SLIInterpreter::recordstacks_name</references>
        <references refid="slicontrol_8cc_1a159dc34756f97a22af2f53cc9d76833f" compoundref="slicontrol_8cc" startline="2108">removeguardfunction</references>
        <references refid="slicontrol_8cc_1a298fa63c4b2bcf578ebb5fbb77d845df" compoundref="slicontrol_8cc" startline="2120">repeatfunction</references>
        <references refid="slicontrol_8cc_1ac67221a8a366a89fc8c1c71d12c98dbb" compoundref="slicontrol_8cc" startline="2129">setfunction</references>
        <references refid="slicontrol_8cc_1a1c55447a25a810e1dcabc48915aa599f" compoundref="slicontrol_8cc" startline="2107">setguardfunction</references>
        <references refid="slicontrol_8cc_1a089a9745904bac8d76fb045fe094d44a" compoundref="slicontrol_8cc" startline="2162">setverbosityfunction</references>
        <references refid="slicontrol_8cc_1a4bd8aebfc61862fe53a0e1cf1001a8ca" compoundref="slicontrol_8cc" startline="2155">sleep_dfunction</references>
        <references refid="slicontrol_8cc_1af8fba8133ef52a4c48c23c35cab6e7ea" compoundref="slicontrol_8cc" startline="2166">startfunction</references>
        <references refid="slicontrol_8cc_1a7896b090bc533231dcea32c683fae05f" compoundref="slicontrol_8cc" startline="2123">stopfunction</references>
        <references refid="slicontrol_8cc_1ac364fec666349d35bbbf0a9ececdd82c" compoundref="slicontrol_8cc" startline="2122">stoppedfunction</references>
        <references refid="slicontrol_8cc_1ae7183356d726cdbaf35d4399884f06a7" compoundref="slicontrol_8cc" startline="2148">switchdefaultfunction</references>
        <references refid="slicontrol_8cc_1aca3194e6852d56f8c98b084411ea50c2" compoundref="slicontrol_8cc" startline="2147">switchfunction</references>
        <references refid="slicontrol_8cc_1a7ccff94b8acd98c07698f2684d57f17d" compoundref="slicontrol_8cc" startline="2160">symbol_sfunction</references>
        <references refid="slicontrol_8cc_1a6d694998b395595a54a3bcc9ec644f4f" compoundref="slicontrol_8cc" startline="2154">timefunction</references>
        <references refid="slicontrol_8cc_1aae23931d7efc139db558444b4f951d14" compoundref="slicontrol_8cc" startline="2158">token_isfunction</references>
        <references refid="slicontrol_8cc_1aba5048d331f55b5089ca53996be8af09" compoundref="slicontrol_8cc" startline="2157">token_sfunction</references>
        <references refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" compoundref="interpret_8h" startline="128">SLIInterpreter::true_name</references>
        <references refid="slicontrol_8cc_1a07ec3aa98ed2e3709df13938da23da55" compoundref="slicontrol_8cc" startline="2146">typeinfofunction</references>
        <references refid="slicontrol_8cc_1ae36e659d28e4ccfb5898510d7719ab92" compoundref="slicontrol_8cc" startline="2163">verbosityfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1aa8f83e1b7c564f5621a746653b22055d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_sli_io</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_sli_io</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: cin - Standard input stream Synopsis: cin -&gt; istream Description: cin corresponds to the C++ object with the same name. SeeAlso: cout, cerr</para>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: cout - Standard output stream Synopsis: cout -&gt; ostream Description: cout corresponds to the C++ object with the same name. SeeAlso: cin, cerr</para>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: cerr - Standard error output stream Synopsis: cerr -&gt; ostream Description: cerr corresponds to the C++ object with the same name. SeeAlso: cin, cout</para>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="58" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sli_io.cc" bodystart="1956" bodyend="2054" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="58" declcolumn="13"/>
        <references refid="sli__io_8cc_1aa39d0c267ccf3b57696cb25a55a6b63a" compoundref="sli__io_8cc" startline="1907">closeistreamfunction</references>
        <references refid="sli__io_8cc_1ad74f2db9cabf6400578b1bb379cd9c2b" compoundref="sli__io_8cc" startline="1908">closeostreamfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="sli__io_8cc_1a60890776ab35fecb0373de6fe38ed4d0" compoundref="sli__io_8cc" startline="1895">cvx_ffunction</references>
        <references refid="classSLIInterpreter_1a76a264883cecec44cfabc6f3c93a10cf" compoundref="interpret_8cc" startline="347" endline="350">SLIInterpreter::def_move</references>
        <references refid="sli__io_8cc_1ae6db50873458d5549c7abe71653c6f92" compoundref="sli__io_8cc" startline="1915">eatwhitefunction</references>
        <references refid="sli__io_8cc_1a6a189742635786c6c6a40f7f482c9f07" compoundref="sli__io_8cc" startline="1913">endlfunction</references>
        <references refid="sli__io_8cc_1a8dcaa6e704b0c13188417b43678eb956" compoundref="sli__io_8cc" startline="1914">endsfunction</references>
        <references refid="sli__io_8cc_1a6e3e130ba91d26c721c7c3eda1bb42ef" compoundref="sli__io_8cc" startline="1912">flushfunction</references>
        <references refid="sli__io_8cc_1adcb523294179d871b5a718b4e5bc412f" compoundref="sli__io_8cc" startline="1934">getcfunction</references>
        <references refid="sli__io_8cc_1ad5f5674e774a71c579809f2e6e36fa8d" compoundref="sli__io_8cc" startline="1936">getlinefunction</references>
        <references refid="sli__io_8cc_1a68266e24804619182368db0f6962f2ad" compoundref="sli__io_8cc" startline="1935">getsfunction</references>
        <references refid="sli__io_8cc_1a66ba355a68960d4c84b9da4d9a44f465" compoundref="sli__io_8cc" startline="1939">iclearfunction</references>
        <references refid="sli__io_8cc_1ab71d252a39d6b932376d6ed7ab33cf5f" compoundref="sli__io_8cc" startline="1944">ieoffunction</references>
        <references refid="sli__io_8cc_1ada61792cc0149e1c2f7d1b404b209ac3" compoundref="sli__io_8cc" startline="1940">ifailfunction</references>
        <references refid="sli__io_8cc_1a9442a0bc28ff0b6a6413a549098bb0b9" compoundref="sli__io_8cc" startline="1892">ifstreamfunction</references>
        <references refid="sli__io_8cc_1a46ea8b25353f73cd11487891dbdd1c25" compoundref="sli__io_8cc" startline="1941">igoodfunction</references>
        <references refid="sli__io_8cc_1a01d629c781a177e255b5760210bd6741" compoundref="sli__io_8cc" startline="1947">in_availfunction</references>
        <references refid="sli__io_8cc_1ac941b9229394821b4fec2fb16370c97e" compoundref="sli__io_8cc" startline="1926">iosdecfunction</references>
        <references refid="sli__io_8cc_1a97381741594411a79c8a281a4208b479" compoundref="sli__io_8cc" startline="1920">iosdefaultfunction</references>
        <references refid="sli__io_8cc_1ad8ea9c9ff2bb2917e5cb5b2741243da7" compoundref="sli__io_8cc" startline="1919">iosfixedfunction</references>
        <references refid="sli__io_8cc_1abe459c67286d725f5110d3b5140b6c96" compoundref="sli__io_8cc" startline="1927">ioshexfunction</references>
        <references refid="sli__io_8cc_1a5778ce93df8d56c66fa827d960a5e30b" compoundref="sli__io_8cc" startline="1932">iosinternalfunction</references>
        <references refid="sli__io_8cc_1acfe5e4ef32c1bff6da71c7fd20b7b53f" compoundref="sli__io_8cc" startline="1930">iosleftfunction</references>
        <references refid="sli__io_8cc_1acb92df0d7d8efb745792959d13e5f4b9" compoundref="sli__io_8cc" startline="1925">iosnoshowbasefunction</references>
        <references refid="sli__io_8cc_1a247563f1f19fc053569d31e5b1b515ef" compoundref="sli__io_8cc" startline="1922">iosnoshowpointfunction</references>
        <references refid="sli__io_8cc_1a6caf26a7dd699c63fd4972a62d8f07dd" compoundref="sli__io_8cc" startline="1928">iosoctfunction</references>
        <references refid="sli__io_8cc_1a39ea90bf38ea48b0f991a17d51d37bbb" compoundref="sli__io_8cc" startline="1931">iosrightfunction</references>
        <references refid="sli__io_8cc_1ae4708e7bf0e5f92003a717e279345dc8" compoundref="sli__io_8cc" startline="1918">iosscientificfunction</references>
        <references refid="sli__io_8cc_1a5a5fe108c53b42e4f8fec75b0e873f8d" compoundref="sli__io_8cc" startline="1924">iosshowbasefunction</references>
        <references refid="sli__io_8cc_1aedd1cb305f4bf13a711e66f42587169e" compoundref="sli__io_8cc" startline="1921">iosshowpointfunction</references>
        <references refid="sli__io_8cc_1a4df02d8553c3421ef2c0df30bd8f4ea6" compoundref="sli__io_8cc" startline="1889">mathlinkputstringfunction</references>
        <references refid="sli__io_8cc_1a4937eeed7537771c36f45162e7aba44b" compoundref="sli__io_8cc" startline="1938">oclearfunction</references>
        <references refid="sli__io_8cc_1aa135bea178bc468fb84d52bb3be37d59" compoundref="sli__io_8cc" startline="1945">oeoffunction</references>
        <references refid="sli__io_8cc_1ad5a21ac4659b9b063639edab5e511441" compoundref="sli__io_8cc" startline="1894">ofsopenfunction</references>
        <references refid="sli__io_8cc_1ab354d62b8e921d47f6fa8258c01f5924" compoundref="sli__io_8cc" startline="1893">ofstreamfunction</references>
        <references refid="sli__io_8cc_1ab03e489d09a7fc61cc2289cff82045af" compoundref="sli__io_8cc" startline="1942">ogoodfunction</references>
        <references refid="sli__io_8cc_1a8d8a0e1de4513dbbffd57b5d4c566206" compoundref="sli__io_8cc" startline="1903">ostrstreamfunction</references>
        <references refid="sli__io_8cc_1ad5de35325e873ddbf33e7d7770918cfe" compoundref="sli__io_8cc" startline="1910">prettyprintfunction</references>
        <references refid="sli__io_8cc_1a39b23b1b1186d81140f1d25dcf0afc55" compoundref="sli__io_8cc" startline="1909">printfunction</references>
        <references refid="sli__io_8cc_1a3d5eb819186527f0cec535ebaada3c21" compoundref="sli__io_8cc" startline="1949">readdoublefunction</references>
        <references refid="sli__io_8cc_1aa031504cd8fa44b4c74711dae83b239d" compoundref="sli__io_8cc" startline="1950">readintfunction</references>
        <references refid="sli__io_8cc_1a67177faa011d476ca70a32b0cccf8295" compoundref="sli__io_8cc" startline="1951">readwordfunction</references>
        <references refid="sli__io_8cc_1a5b7adb1519fe7a92f12a5c4dc54ddbaa" compoundref="sli__io_8cc" startline="1917">setprecisionfunction</references>
        <references refid="sli__io_8cc_1a7ee1b38a79c6ee1f58e50847a0e30cc7" compoundref="sli__io_8cc" startline="1916">setwfunction</references>
        <references refid="sli__io_8cc_1a3d6367ef2fefa6c39ada941ec2acebcc" compoundref="sli__io_8cc" startline="1904">strfunction</references>
        <references refid="sli__io_8cc_1af65c0fdacae326b93234256fb13e0ad9" compoundref="sli__io_8cc" startline="1891">xifstreamfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1ab974b65d48100771a053e3328595da0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slistack</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slistack</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="59" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slistack.cc" bodystart="474" bodyend="497" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="59" declcolumn="13"/>
        <references refid="slistack_8cc_1aa420f5382d732cd6c80c4304b677ec2f" compoundref="slistack_8cc" startline="461">clearfunction</references>
        <references refid="slistack_8cc_1a95ac49e76b68cc50ccf2756e22efd283" compoundref="slistack_8cc" startline="458">copyfunction</references>
        <references refid="slistack_8cc_1a9d97cb379c2e66c066660b0775d00405" compoundref="slistack_8cc" startline="460">countfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slistack_8cc_1aa55f01e21d6976c04f2ad4a566ae3f2f" compoundref="slistack_8cc" startline="456">dupfunction</references>
        <references refid="slistack_8cc_1a81fdbf5cff1541374fb72d6b0ede09ca" compoundref="slistack_8cc" startline="455">exchfunction</references>
        <references refid="slistack_8cc_1aacdb9c143ae0d89bb9547ff29eb7e883" compoundref="slistack_8cc" startline="468">execstackfunction</references>
        <references refid="slistack_8cc_1a7dc5d3de0c657a89a69a8fbf646796bb" compoundref="slistack_8cc" startline="457">indexfunction</references>
        <references refid="slistack_8cc_1a16a0c48b3f730b7cd42c5ac8c155dca7" compoundref="slistack_8cc" startline="454">npopfunction</references>
        <references refid="slistack_8cc_1a54390ba3586632eed41f3b6627ed3bc4" compoundref="slistack_8cc" startline="471">operandstackfunction</references>
        <references refid="slistack_8cc_1aee254cb0bdc33fca43477034ba6f67a4" compoundref="slistack_8cc" startline="466">overfunction</references>
        <references refid="slistack_8cc_1a4846019609e4faaca892a45f9aaa5cdd" compoundref="slistack_8cc" startline="453">popfunction</references>
        <references refid="slistack_8cc_1ab889ef147b9c88d151b21a0201848df7" compoundref="slistack_8cc" startline="469">restoreestackfunction</references>
        <references refid="slistack_8cc_1a93a2f8caae66336325bb5cbe52c312a0" compoundref="slistack_8cc" startline="470">restoreostackfunction</references>
        <references refid="slistack_8cc_1ac032492770184281a2e07107956e22f3" compoundref="slistack_8cc" startline="465">rolldfunction</references>
        <references refid="slistack_8cc_1ad638654702840e08a629b5ca30d722a0" compoundref="slistack_8cc" startline="459">rollfunction</references>
        <references refid="slistack_8cc_1a2df42bfea748ef921bfed85ab6150142" compoundref="slistack_8cc" startline="464">rollufunction</references>
        <references refid="slistack_8cc_1ad229c91e463679b871d30504d0ad4adb" compoundref="slistack_8cc" startline="463">rotfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slimath</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slimath</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="60" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slimath.cc" bodystart="1789" bodyend="1891" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="60" declcolumn="13"/>
        <references refid="slimath_8cc_1a2f27515b08e80bb32555a736e452aa8b" compoundref="slimath_8cc" startline="1728">abs_dfunction</references>
        <references refid="slimath_8cc_1a7f0554c6e2a9e8168909ec2e49eb63ed" compoundref="slimath_8cc" startline="1727">abs_ifunction</references>
        <references refid="slimath_8cc_1a8ef76ea040b32bdd8547bff34988f7de" compoundref="slimath_8cc" startline="1710">acos_dfunction</references>
        <references refid="slimath_8cc_1a865c0507a5f9d77dc8bfd5e7b64acc2e" compoundref="slimath_8cc" startline="1690">add_ddfunction</references>
        <references refid="slimath_8cc_1a3b938ab46879c63f08befed15171370b" compoundref="slimath_8cc" startline="1691">add_difunction</references>
        <references refid="slimath_8cc_1a6a9ba6d57e2b93bc1c14b702bfdb9db2" compoundref="slimath_8cc" startline="1692">add_idfunction</references>
        <references refid="slimath_8cc_1a3e7879f34900ddde83de5018b3cf0be5" compoundref="slimath_8cc" startline="1693">add_iifunction</references>
        <references refid="slimath_8cc_1aa6fbffce4a28e816eb017deceb8ab15f" compoundref="slimath_8cc" startline="1738">and_iifunction</references>
        <references refid="slimath_8cc_1acb01a599b64b63b0c5e8525a79428edc" compoundref="slimath_8cc" startline="1737">andfunction</references>
        <references refid="slimath_8cc_1a47fdfff9353c08b58bfabbe9fe8d8577" compoundref="slimath_8cc" startline="1708">asin_dfunction</references>
        <references refid="slimath_8cc_1a402a1f4731ac7cba0cba42de5cdbc019" compoundref="slimath_8cc" startline="1775">ceil_dfunction</references>
        <references refid="slimath_8cc_1a2f27cee6e95710c87b50cc7f376acf45" compoundref="slimath_8cc" startline="1709">cos_dfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slimath_8cc_1a70b7f2fe86ec0a0569a5a1fdf765c94b" compoundref="slimath_8cc" startline="1723">dexp_ifunction</references>
        <references refid="slimath_8cc_1a89e5a9419bf081d0bbe6505c1dd4fe8b" compoundref="slimath_8cc" startline="1703">div_ddfunction</references>
        <references refid="slimath_8cc_1a4ecd936f97bfa05ad7da8dcfbb256364" compoundref="slimath_8cc" startline="1704">div_difunction</references>
        <references refid="slimath_8cc_1a4b4b26cef43785932c8de585a47cd8c3" compoundref="slimath_8cc" startline="1705">div_idfunction</references>
        <references refid="slimath_8cc_1a60a646eb192999563254c8471350a8b7" compoundref="slimath_8cc" startline="1706">div_iifunction</references>
        <references refid="slimath_8cc_1abd71325b3e40df8339d3d420895eeb72" compoundref="slimath_8cc" startline="1689">doublefunction</references>
        <references refid="slimath_8cc_1ac2cf9e4e0da30a0cc28628bc017ffb4f" compoundref="slimath_8cc" startline="1734">eqfunction</references>
        <references refid="slimath_8cc_1ac55a38b694b39101c7526096e7f4c91c" compoundref="slimath_8cc" startline="1711">exp_dfunction</references>
        <references refid="slimath_8cc_1ae4472a6eb86ad127d05932ac91f9e762" compoundref="slimath_8cc" startline="1774">floor_dfunction</references>
        <references refid="slimath_8cc_1a3d6ce5c4b426036a54d83279fa6b72ac" compoundref="slimath_8cc" startline="1720">frexp_dfunction</references>
        <references refid="slimath_8cc_1ac722b0e04bda020b56c09a19cd571118" compoundref="slimath_8cc" startline="1744">geq_ddfunction</references>
        <references refid="slimath_8cc_1a50070d446ec899556ce3f3db93af01ab" compoundref="slimath_8cc" startline="1743">geq_difunction</references>
        <references refid="slimath_8cc_1abf33d60af756887813206489615fcd6c" compoundref="slimath_8cc" startline="1742">geq_idfunction</references>
        <references refid="slimath_8cc_1ac0b249e2a2b808d023c4f0c01a3c94b3" compoundref="slimath_8cc" startline="1741">geq_iifunction</references>
        <references refid="slimath_8cc_1a5e9914901015924c7dc10c03807fdb2f" compoundref="slimath_8cc" startline="1757">gt_ddfunction</references>
        <references refid="slimath_8cc_1a2b9d9f7f7c673c6e0776f93444591b1c" compoundref="slimath_8cc" startline="1759">gt_difunction</references>
        <references refid="slimath_8cc_1a67c5903393b0cd2eabd1f203ae4c3f3e" compoundref="slimath_8cc" startline="1758">gt_idfunction</references>
        <references refid="slimath_8cc_1adcea9cc9ae274dddac9ca086f8c26c29" compoundref="slimath_8cc" startline="1756">gt_iifunction</references>
        <references refid="slimath_8cc_1a86403f19cdb1a44b8ae4fa8d1def2242" compoundref="slimath_8cc" startline="1760">gt_ssfunction</references>
        <references refid="slimath_8cc_1a77dfef8f452263fc1fa8b3cbe7691387" compoundref="slimath_8cc" startline="1688">integerfunction</references>
        <references refid="slimath_8cc_1a0f0b12e3eed04624b2e7c5e0ff86e260" compoundref="slimath_8cc" startline="1732">inv_dfunction</references>
        <references refid="slimath_8cc_1a4ab7ee13d09c99a87a1704fe79f68ae4" compoundref="slimath_8cc" startline="1722">ldexp_difunction</references>
        <references refid="slimath_8cc_1af73958716abf3dc20ffa860c81fa4ad1" compoundref="slimath_8cc" startline="1749">leq_ddfunction</references>
        <references refid="slimath_8cc_1a0639d6ed5808a8a118c1620fc1ddbbff" compoundref="slimath_8cc" startline="1748">leq_difunction</references>
        <references refid="slimath_8cc_1a27c90990af50b7763915519fcf2bed52" compoundref="slimath_8cc" startline="1747">leq_idfunction</references>
        <references refid="slimath_8cc_1a608af0fefa91a361fc64beccc8109dec" compoundref="slimath_8cc" startline="1746">leq_iifunction</references>
        <references refid="slimath_8cc_1a295f7ee46f4d761ed20d6c5219a2f18b" compoundref="slimath_8cc" startline="1712">ln_dfunction</references>
        <references refid="slimath_8cc_1ac86a0095ab72601a8b8087f6ad5e1eed" compoundref="slimath_8cc" startline="1713">log_dfunction</references>
        <references refid="slimath_8cc_1a95957da94284bde6accd0681b24c7652" compoundref="slimath_8cc" startline="1763">lt_ddfunction</references>
        <references refid="slimath_8cc_1a3a44801472339847299a9829c7ed21d2" compoundref="slimath_8cc" startline="1765">lt_difunction</references>
        <references refid="slimath_8cc_1ae77055266d9ecf57c86372c1edfcd11d" compoundref="slimath_8cc" startline="1764">lt_idfunction</references>
        <references refid="slimath_8cc_1afcbf05752619acce53be0bdca73628f7" compoundref="slimath_8cc" startline="1762">lt_iifunction</references>
        <references refid="slimath_8cc_1a0fd72c751b1554d699cabcbfa51f16fc" compoundref="slimath_8cc" startline="1766">lt_ssfunction</references>
        <references refid="slimath_8cc_1a118a2099584618f161ac7f66a3c2e42d" compoundref="slimath_8cc" startline="1777">max_d_dfunction</references>
        <references refid="slimath_8cc_1ac942022e56d1641641b56063157428dd" compoundref="slimath_8cc" startline="1778">max_d_ifunction</references>
        <references refid="slimath_8cc_1a08d181331a7e29573a47dd6f64a4b4b0" compoundref="slimath_8cc" startline="1779">max_i_dfunction</references>
        <references refid="slimath_8cc_1a0a69806eac2402906d5dc393b08412f1" compoundref="slimath_8cc" startline="1780">max_i_ifunction</references>
        <references refid="slimath_8cc_1afaad309a4a4243930989806b54a150fd" compoundref="slimath_8cc" startline="1782">min_d_dfunction</references>
        <references refid="slimath_8cc_1af540e56acd23e094ac084de978837f5c" compoundref="slimath_8cc" startline="1783">min_d_ifunction</references>
        <references refid="slimath_8cc_1ac53c64c2b5e7b61168e7ee288deaa8ac" compoundref="slimath_8cc" startline="1784">min_i_dfunction</references>
        <references refid="slimath_8cc_1a46c123e6414446a2cfb2b62420ee123e" compoundref="slimath_8cc" startline="1785">min_i_ifunction</references>
        <references refid="slimath_8cc_1aceec5b873f25d997c560ff8513bb9e31" compoundref="slimath_8cc" startline="1725">mod_iifunction</references>
        <references refid="slimath_8cc_1af41e48af6d8b954c48e78b375b8eaed6" compoundref="slimath_8cc" startline="1719">modf_dfunction</references>
        <references refid="slimath_8cc_1af581c3c663c995f6e5e33ad9703b3b49" compoundref="slimath_8cc" startline="1699">mul_ddfunction</references>
        <references refid="slimath_8cc_1a2ce1f9e81f756b5caac02096dc86a661" compoundref="slimath_8cc" startline="1700">mul_difunction</references>
        <references refid="slimath_8cc_1af52792922371ea73580ec7f724ce437b" compoundref="slimath_8cc" startline="1701">mul_idfunction</references>
        <references refid="slimath_8cc_1a4a3c491359e880c1ba851348b90f0fac" compoundref="slimath_8cc" startline="1702">mul_iifunction</references>
        <references refid="slimath_8cc_1a6e470925954fd213ca32cb68ed3a2810" compoundref="slimath_8cc" startline="1731">neg_dfunction</references>
        <references refid="slimath_8cc_1a04b8197501d28a718a79e38b9f8ea120" compoundref="slimath_8cc" startline="1730">neg_ifunction</references>
        <references refid="slimath_8cc_1a09c7a69b61d470c303f4952870e83ebc" compoundref="slimath_8cc" startline="1752">neqfunction</references>
        <references refid="slimath_8cc_1a518dbb3d7f5e2324c4e44e648546a7c1" compoundref="slimath_8cc" startline="1753">not_bfunction</references>
        <references refid="slimath_8cc_1ae4c4cb3c6ea27c32b0bac0758c1feab2" compoundref="slimath_8cc" startline="1754">not_ifunction</references>
        <references refid="slimath_8cc_1a2ce886d788b70c923e64bf31eb8847bb" compoundref="slimath_8cc" startline="1739">or_iifunction</references>
        <references refid="slimath_8cc_1a3886484040e3966ddba4987ae13179fc" compoundref="slimath_8cc" startline="1735">orfunction</references>
        <references refid="slimath_8cc_1abe634ab102a788fffdd7d4805364d24d" compoundref="slimath_8cc" startline="1716">pow_ddfunction</references>
        <references refid="slimath_8cc_1ac8feb2b7d3017021362d5b3699ea9e64" compoundref="slimath_8cc" startline="1717">pow_difunction</references>
        <references refid="slimath_8cc_1ada185f8c16721a75fc55c8bbfb73e955" compoundref="slimath_8cc" startline="1773">round_dfunction</references>
        <references refid="slimath_8cc_1a90b6a90b42cfe791ea4ef278bfd5cb1d" compoundref="slimath_8cc" startline="1707">sin_dfunction</references>
        <references refid="slimath_8cc_1af09d72f8673167df2068c3c1a9b3ad27" compoundref="slimath_8cc" startline="1714">sqr_dfunction</references>
        <references refid="slimath_8cc_1a52fef9fdfefd156c42f1cc26e658b47b" compoundref="slimath_8cc" startline="1715">sqrt_dfunction</references>
        <references refid="slimath_8cc_1a7ba313064f6f4619ec636d55ab05630b" compoundref="slimath_8cc" startline="1694">sub_ddfunction</references>
        <references refid="slimath_8cc_1af9a9545f9b6ba358b1e5846bbf1d7b48" compoundref="slimath_8cc" startline="1695">sub_difunction</references>
        <references refid="slimath_8cc_1ac05a6f5292b2ece9bb3b0f0b6dae4cbb" compoundref="slimath_8cc" startline="1696">sub_idfunction</references>
        <references refid="slimath_8cc_1acecacbdcf9414bb4ce97955b9447ab90" compoundref="slimath_8cc" startline="1697">sub_iifunction</references>
        <references refid="slimath_8cc_1acbbb336f75243a284f36c3f4dc7742db" compoundref="slimath_8cc" startline="1771">unitstep_dafunction</references>
        <references refid="slimath_8cc_1a02b4fe2986679de67caf2212d2fb61f5" compoundref="slimath_8cc" startline="1769">unitstep_dfunction</references>
        <references refid="slimath_8cc_1a32675f902c33931b665d40f7eafcc0f8" compoundref="slimath_8cc" startline="1770">unitstep_iafunction</references>
        <references refid="slimath_8cc_1a2688f9501794dac517de3e9b39cd644d" compoundref="slimath_8cc" startline="1768">unitstep_ifunction</references>
        <references refid="slimath_8cc_1a133deb9b123b74a61acf5511135f2d68" compoundref="slimath_8cc" startline="1736">xorfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1a112733a6e72c0a9cbfa3e99c84f793c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slitypecheck</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slitypecheck</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="61" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slitypecheck.cc" bodystart="349" bodyend="357" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="61" declcolumn="13"/>
        <references refid="slitypecheck_8cc_1a3878b3f563bcee1dca29cb9977c65e94" compoundref="slitypecheck_8cc" startline="343">addtotriefunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slitypecheck_8cc_1ad1e9792877870021dab241bfc9d662ec" compoundref="slitypecheck_8cc" startline="344">cva_tfunction</references>
        <references refid="slitypecheck_8cc_1a4497cfa46bf93caab2aebe8e7f5cc78e" compoundref="slitypecheck_8cc" startline="345">cvt_afunction</references>
        <references refid="slitypecheck_8cc_1a2b63b7fe81a55af822fe7468919de27e" compoundref="slitypecheck_8cc" startline="341">triefunction</references>
        <references refid="slitypecheck_8cc_1a4eeb9fb7aac3e631803bd02c845e9792" compoundref="slitypecheck_8cc" startline="342">trieinfofunction</references>
        <references refid="slitypecheck_8cc_1a485a8163f621cc6ea5080b59d9c36b6e" compoundref="slitypecheck_8cc" startline="346">typefunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1a577ac45c38bfa97848b3523f2ae4cc4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slidata</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slidata</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="62" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slidata.cc" bodystart="1618" bodyend="1682" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="62" declcolumn="13"/>
        <references refid="slidata_8cc_1a0f12c5ae182b592c2c331981b651f074" compoundref="slidata_8cc" startline="1550">allocations_afunction</references>
        <references refid="slidata_8cc_1a98ad099a6a969e1e9c17225392ca3409" compoundref="slidata_8cc" startline="1556">append_afunction</references>
        <references refid="slidata_8cc_1ae1d4e805f55046c6936aaad55020c842" compoundref="slidata_8cc" startline="1557">append_pfunction</references>
        <references refid="slidata_8cc_1a343e5b5149d5fae69c2665bbcf4fc250" compoundref="slidata_8cc" startline="1558">append_sfunction</references>
        <references refid="slidata_8cc_1a64e3dbb9fe392bc60f19ab3a12453db1" compoundref="slidata_8cc" startline="1601">capacity_afunction</references>
        <references refid="slidata_8cc_1acd30a9475778db0d3c3be9aa98951daf" compoundref="slidata_8cc" startline="1609">capacity_sfunction</references>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="slidata_8cc_1a2b00e6948032f3c0b3e6493190410d20" compoundref="slidata_8cc" startline="1590">cvd_sfunction</references>
        <references refid="slidata_8cc_1a257fd962fe129ea88a9a88f9112e4e3e" compoundref="slidata_8cc" startline="1589">cvi_sfunction</references>
        <references refid="slidata_8cc_1a3cddd53240516ab4a6883dfd21cdf24c" compoundref="slidata_8cc" startline="1584">cvlit_nfunction</references>
        <references refid="slidata_8cc_1ab707ea4c4434f8d3cc60413c544101c0" compoundref="slidata_8cc" startline="1585">cvlit_pfunction</references>
        <references refid="slidata_8cc_1ae2657fe5d7b53b6f4c093f3bcb4f6af8" compoundref="slidata_8cc" startline="1586">cvlp_pfunction</references>
        <references refid="slidata_8cc_1a700759c1c818ab4940de3fe8c3eb2676" compoundref="slidata_8cc" startline="1587">cvn_lfunction</references>
        <references refid="slidata_8cc_1ace22afb98f37ca348b1bb275c1c0901e" compoundref="slidata_8cc" startline="1588">cvn_sfunction</references>
        <references refid="slidata_8cc_1a152de7abfb97cff3a0cc2de63e78a74f" compoundref="slidata_8cc" startline="1583">cvx_afunction</references>
        <references refid="slidata_8cc_1ae1fe7db2f67c9b4546c08795315e5a50" compoundref="slidata_8cc" startline="1605">empty_afunction</references>
        <references refid="slidata_8cc_1a9341614d78610a954f8b095ee1ffbc0d" compoundref="slidata_8cc" startline="1613">empty_sfunction</references>
        <references refid="slidata_8cc_1a46c3572ab95ea92e0f73fb892ce33164" compoundref="slidata_8cc" startline="1572">erase_afunction</references>
        <references refid="slidata_8cc_1acdba3b886c119d5f72dffec3df06c6be" compoundref="slidata_8cc" startline="1573">erase_pfunction</references>
        <references refid="slidata_8cc_1a731796a848166504de1673519460e767" compoundref="slidata_8cc" startline="1571">erase_sfunction</references>
        <references refid="slidata_8cc_1a7ea89354dedb1223bb5ea64401fe2407" compoundref="slidata_8cc" startline="1551">get_a_afunction</references>
        <references refid="slidata_8cc_1a703d0940c131227a828724da7e970e1e" compoundref="slidata_8cc" startline="1552">get_afunction</references>
        <references refid="slidata_8cc_1a748fb510e919130c62ca1965ad741c67" compoundref="slidata_8cc" startline="1554">get_lpfunction</references>
        <references refid="slidata_8cc_1aca2edf2fa4af341f40c845ebc238601b" compoundref="slidata_8cc" startline="1553">get_pfunction</references>
        <references refid="slidata_8cc_1afdfd8bede36e4e311c3bfee382c6b603" compoundref="slidata_8cc" startline="1592">get_sfunction</references>
        <references refid="slidata_8cc_1afd085fb548f973feec953f4e8c5a9edc" compoundref="slidata_8cc" startline="1581">getinterval_afunction</references>
        <references refid="slidata_8cc_1ad88dd08e50d624dc628c1dd506d488d8" compoundref="slidata_8cc" startline="1580">getinterval_sfunction</references>
        <references refid="slidata_8cc_1a65f76f221a4bfa1146adf60485ddbf4b" compoundref="slidata_8cc" startline="1566">insert_afunction</references>
        <references refid="slidata_8cc_1af27bc0f583f77b147f649dfb71750681" compoundref="slidata_8cc" startline="1565">insert_sfunction</references>
        <references refid="slidata_8cc_1a78977dbae695e4dd24fc985aa75f3bb5" compoundref="slidata_8cc" startline="1567">insertelement_afunction</references>
        <references refid="slidata_8cc_1a1ff97c13d012b0d5f6cb00df1ef3d929" compoundref="slidata_8cc" startline="1568">insertelement_sfunction</references>
        <references refid="slidata_8cc_1a90d5a0221618294e425730ded97f135c" compoundref="slidata_8cc" startline="1614">irepeatanyfunction</references>
        <references refid="slidata_8cc_1ab6c62a7daeb74f2cab4c05da8ac2c852" compoundref="slidata_8cc" startline="1563">join_afunction</references>
        <references refid="slidata_8cc_1a5bbbc9424ae83b373edff6d59a7490a2" compoundref="slidata_8cc" startline="1564">join_pfunction</references>
        <references refid="slidata_8cc_1a25e638621a3ebd28446c22b9b2e0e767" compoundref="slidata_8cc" startline="1562">join_sfunction</references>
        <references refid="slidata_8cc_1a545064240796197fd30fcc7f864fd849" compoundref="slidata_8cc" startline="1576">length_afunction</references>
        <references refid="slidata_8cc_1adad4367565379f55504b6a9a109113a1" compoundref="slidata_8cc" startline="1577">length_lpfunction</references>
        <references refid="slidata_8cc_1a9d8b55656751a606837fe4d8baa29f47" compoundref="slidata_8cc" startline="1578">length_pfunction</references>
        <references refid="slidata_8cc_1adae62ca2cea90a2987f2507e1a4366fa" compoundref="slidata_8cc" startline="1575">length_sfunction</references>
        <references refid="slidata_8cc_1a8a17b8b53f9ea32e6c98fe377d1c5dbe" compoundref="slidata_8cc" startline="1559">prepend_afunction</references>
        <references refid="slidata_8cc_1ae09fb1c5e6c50760c7777616a1531da6" compoundref="slidata_8cc" startline="1560">prepend_pfunction</references>
        <references refid="slidata_8cc_1aff1e4521f0056daa93a913b70d3db545" compoundref="slidata_8cc" startline="1561">prepend_sfunction</references>
        <references refid="slidata_8cc_1a8a37d6a784f8d0ad7516fcd225ffd9e3" compoundref="slidata_8cc" startline="1594">put_afunction</references>
        <references refid="slidata_8cc_1a78bd48ef14bcdd77eb2bd4e0e99dc960" compoundref="slidata_8cc" startline="1596">put_lpfunction</references>
        <references refid="slidata_8cc_1a8efdcbcee3819720239c068816425df9" compoundref="slidata_8cc" startline="1595">put_pfunction</references>
        <references refid="slidata_8cc_1a3b16a56054c81f0d1400870c977fd1ca" compoundref="slidata_8cc" startline="1593">put_sfunction</references>
        <references refid="slidata_8cc_1aa42c141e3758c34c4a93d9c5c821b945" compoundref="slidata_8cc" startline="1606">references_afunction</references>
        <references refid="slidata_8cc_1aef8e2b069bd848cb8407de1c2c13e2bf" compoundref="slidata_8cc" startline="1615">repeatanyfunction</references>
        <references refid="slidata_8cc_1a1bae25e855ef575a170e99b61d15e39d" compoundref="slidata_8cc" startline="1570">replace_afunction</references>
        <references refid="slidata_8cc_1a7ddd8ca2eca0b89a0196480c8652ec2f" compoundref="slidata_8cc" startline="1569">replace_sfunction</references>
        <references refid="slidata_8cc_1a1570102c49d6569ee12963364ca47d9d" compoundref="slidata_8cc" startline="1603">reserve_afunction</references>
        <references refid="slidata_8cc_1acc8c8399e75d1a2732ffa0f20fbf6139" compoundref="slidata_8cc" startline="1611">reserve_sfunction</references>
        <references refid="slidata_8cc_1aabe1b61876bf3ab0a1320d5602a364c2" compoundref="slidata_8cc" startline="1604">resize_afunction</references>
        <references refid="slidata_8cc_1a9390a86fbc493bc3ec6afb29f3f35a16" compoundref="slidata_8cc" startline="1612">resize_sfunction</references>
        <references refid="slidata_8cc_1ad431871a3e6731d346ff02834c44080b" compoundref="slidata_8cc" startline="1599">search_afunction</references>
        <references refid="slidata_8cc_1a092a4f5222538c39507cdd3ba4896497" compoundref="slidata_8cc" startline="1598">search_sfunction</references>
        <references refid="slidata_8cc_1ad23dc33df0b930682dc55f846c0e784f" compoundref="slidata_8cc" startline="1607">shrink_afunction</references>
        <references refid="slidata_8cc_1aa1e2cdc0a46f23f6a9ef6808e7f172d4" compoundref="slidata_8cc" startline="1602">size_afunction</references>
        <references refid="slidata_8cc_1a2d280a35fbf463d56c8f1d1d7dff4acd" compoundref="slidata_8cc" startline="1610">size_sfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      <memberdef kind="function" id="interpret_8cc_1a83ebe3ab7c6f9415194ec8706f3ebf06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_slistring</definition>
        <argsstring>(SLIInterpreter *)</argsstring>
        <name>init_slistring</name>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" line="63" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/stringdatum.cc" bodystart="111" bodyend="115" declfile="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc" declline="63" declcolumn="13"/>
        <references refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</references>
        <references refid="stringdatum_8cc_1a795fee161ece4b710d2806112ec430a3" compoundref="stringdatum_8cc" startline="50">tolowercase_sfunction</references>
        <references refid="stringdatum_8cc_1a55860ff1912272626154ca36ba1df7d8" compoundref="stringdatum_8cc" startline="49">touppercase_sfunction</references>
        <referencedby refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" compoundref="interpret_8cc" startline="220" endline="234">SLIInterpreter::initexternals</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>interpret.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>Definitions<sp/>for<sp/>the<sp/>SLI<sp/>Interpreter<sp/>class</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interpret_8h" kindref="compound">interpret.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compose.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="numerics_8h" kindref="compound">numerics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictdatum_8h" kindref="compound">dictdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictstack_8h" kindref="compound">dictstack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictutils_8h" kindref="compound">dictutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="doubledatum_8h" kindref="compound">doubledatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functional_8h" kindref="compound">functional.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="functiondatum_8h" kindref="compound">functiondatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integerdatum_8h" kindref="compound">integerdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="iostreamdatum_8h" kindref="compound">iostreamdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="namedatum_8h" kindref="compound">namedatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringdatum_8h" kindref="compound">stringdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="triedatum_8h" kindref="compound">triedatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>the<sp/>only<sp/>interface<sp/>to<sp/>the<sp/>driver<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1a6a862694b895dfd3c3e7ff8c2e751862" kindref="member">init_slidict</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1a4816bb2c64fe5f4bf36694f8814fbf35" kindref="member">init_slicontrol</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1aa8f83e1b7c564f5621a746653b22055d" kindref="member">init_sli_io</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1ab974b65d48100771a053e3328595da0c" kindref="member">init_slistack</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" kindref="member">init_slimath</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1a112733a6e72c0a9cbfa3e99c84f793c5" kindref="member">init_slitypecheck</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1a577ac45c38bfa97848b3523f2ae4cc4c" kindref="member">init_slidata</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interpret_8cc_1a83ebe3ab7c6f9415194ec8706f3ebf06" kindref="member">init_slistring</ref>(<sp/><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref>*<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a69034009aa7c7a7a11db939bf4803f14" kindref="member">SLIInterpreter::M_ALL</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a8e1cdcbe896e2914564b1df5b5c79f78" kindref="member">SLIInterpreter::M_DEBUG</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1ab598c268e2f4982a379aaf26eda6cf8e" kindref="member">SLIInterpreter::M_STATUS</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1ad07d680a9d59de3d7bad37ad6f43e731" kindref="member">SLIInterpreter::M_INFO</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a63715d65dc436afe9be8e14dcc639768" kindref="member">SLIInterpreter::M_PROGRESS</ref><sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1ae7af23ee84e18a135a44e5e6177011ca" kindref="member">SLIInterpreter::M_DEPRECATED</ref><sp/>=<sp/>18;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1aff69c7ddd8b138398cff86e27d04d47b" kindref="member">SLIInterpreter::M_WARNING</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">SLIInterpreter::M_ERROR</ref><sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">SLIInterpreter::M_FATAL</ref><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1aa8f87482e288e0611b8200a5de89921f" kindref="member">SLIInterpreter::M_QUIET</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1aeadc51a3dc40b521c0a5504130c2a422" kindref="member">SLIInterpreter::M_ALL_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a3a1d933681f180131590e3ff7963320e" kindref="member">SLIInterpreter::M_DEBUG_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Debug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1abc5a2a83b757e4a25b1fd765bd24cd49" kindref="member">SLIInterpreter::M_STATUS_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Status&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a33eb44511dc26a8f6d897ca221e786bf" kindref="member">SLIInterpreter::M_INFO_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Info&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a38952d40cc46abf06928c44e972549e7" kindref="member">SLIInterpreter::M_PROGRESS_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Progress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1aa7c04a939c7dd80bb0eb8db804bcd239" kindref="member">SLIInterpreter::M_DEPRECATED_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Deprecated&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1ad9a2d169a4de0b88b06a2b74afcc68b4" kindref="member">SLIInterpreter::M_WARNING_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Warning&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a44234827b12fe44cfb0745cdc9686a32" kindref="member">SLIInterpreter::M_ERROR_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a21f57d65e99452db0d20860908773fb7" kindref="member">SLIInterpreter::M_FATAL_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Fatal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a19187e1edb69f354b363e030b4ae368e" kindref="member">SLIInterpreter::M_QUIET_NAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1af484433fdc01810efb780eb4ae96d7da" kindref="member">SLIInterpreter::Integertype</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1ab21fab73c08d3c29eac0ccd3b947ea8c" kindref="member">SLIInterpreter::Doubletype</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a9efad84e8afeeaaedf646acead166dd4" kindref="member">SLIInterpreter::Stringtype</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1abb29e56ae7fef801871300981986e352" kindref="member">SLIInterpreter::Nametype</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a544ba1b11759973851ac41b4447dd0f5" kindref="member">SLIInterpreter::Booltype</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a6ced7d7f4304fd80bc98fe2073d7b14e" kindref="member">SLIInterpreter::Literaltype</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1acada7ac86b789f39b2802aeedec96bf4" kindref="member">SLIInterpreter::Arraytype</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a3efba688de85d9c98de470622f27cb1a" kindref="member">SLIInterpreter::Proceduretype</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a3be292d20f8d95117cd68a9aaf85f6d2" kindref="member">SLIInterpreter::Litproceduretype</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a673fafa2724e1381c23b39ea1509bc4d" kindref="member">SLIInterpreter::Dictionarytype</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1ae85891721986d903c4381e769c454781" kindref="member">SLIInterpreter::Symboltype</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1abf1fb8f7f4a433872980aec1689b814e" kindref="member">SLIInterpreter::Functiontype</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a3ed38282a84ebf9b6a7d6e346c8449ba" kindref="member">SLIInterpreter::Trietype</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a2069b211818dae33b1fc93396e15dabf" kindref="member">SLIInterpreter::Callbacktype</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1aeea9100b28092dabc12c85b1a5949dcb" kindref="member">SLIInterpreter::Istreamtype</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a5d93e8c0d4e0a52e2aacb53d6b59f3ab" kindref="member">SLIInterpreter::XIstreamtype</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a2b3d5895081a2f336637e04384976d39" kindref="member">SLIInterpreter::Ostreamtype</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1aa6dfd10c6cc797f38301305ceb8fc7cb" kindref="member">SLIInterpreter::IntVectortype</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="classSLIType" kindref="compound">SLIType</ref><sp/><ref refid="classSLIInterpreter_1a55585fa0c73c9b6ae29371971f8d327b" kindref="member">SLIInterpreter::DoubleVectortype</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SLIType<sp/>SLIInterpreter::IOstreamtype;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SLIType<sp/>default<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><ref refid="classDatatypeFunction" kindref="compound">DatatypeFunction</ref><sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">SLIInterpreter::datatypefunction</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="classNametypeFunction" kindref="compound">NametypeFunction</ref><sp/><ref refid="classSLIInterpreter_1aa55bcbaf43141078a3e5ff512b6c518f" kindref="member">SLIInterpreter::nametypefunction</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="classProceduretypeFunction" kindref="compound">ProceduretypeFunction</ref><sp/><ref refid="classSLIInterpreter_1af0de1916adf0147d7b172ec12520e380" kindref="member">SLIInterpreter::proceduretypefunction</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="classLitproceduretypeFunction" kindref="compound">LitproceduretypeFunction</ref><sp/><ref refid="classSLIInterpreter_1a163f7a35332353a7f3aa452de36bfcfd" kindref="member">SLIInterpreter::litproceduretypefunction</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="classFunctiontypeFunction" kindref="compound">FunctiontypeFunction</ref><sp/><ref refid="classSLIInterpreter_1abdfb119352e87d629c42bc4a3d1e2dfe" kindref="member">SLIInterpreter::functiontypefunction</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classTrietypeFunction" kindref="compound">TrietypeFunction</ref><sp/><ref refid="classSLIInterpreter_1a3b251fb048c1c5e9dc20d9cb14f47734" kindref="member">SLIInterpreter::trietypefunction</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="classCallbacktypeFunction" kindref="compound">CallbacktypeFunction</ref><sp/><ref refid="classSLIInterpreter_1abd216bb187d1068c1a060da4bbc67676" kindref="member">SLIInterpreter::callbacktypefunction</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="classXIstreamtypeFunction" kindref="compound">XIstreamtypeFunction</ref><sp/><ref refid="classSLIInterpreter_1a9e0bd8f734284936f59966d732f71405" kindref="member">SLIInterpreter::xistreamtypefunction</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Basic<sp/>Operations<sp/>needed<sp/>to<sp/>run<sp/>the<sp/>default<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIlookupFunction" kindref="compound">IlookupFunction</ref><sp/><ref refid="classSLIInterpreter_1ad77407f67087284bc5f92b4e260cb81e" kindref="member">SLIInterpreter::ilookupfunction</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIsetcallbackFunction" kindref="compound">IsetcallbackFunction</ref><sp/><ref refid="classSLIInterpreter_1aa9f9d76f6d7f3df0bf21f3a7dbc7a636" kindref="member">SLIInterpreter::isetcallbackfunction</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIiterateFunction" kindref="compound">IiterateFunction</ref><sp/><ref refid="classSLIInterpreter_1a57fc3e1d51586853a56186f1e1ca13f0" kindref="member">SLIInterpreter::iiteratefunction</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIloopFunction" kindref="compound">IloopFunction</ref><sp/><ref refid="classSLIInterpreter_1ab734ba960f83ecd8370337cb874f0880" kindref="member">SLIInterpreter::iloopfunction</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIrepeatFunction" kindref="compound">IrepeatFunction</ref><sp/><ref refid="classSLIInterpreter_1ab3a455ad9cf4efbdbea2d0299f8d0ff2" kindref="member">SLIInterpreter::irepeatfunction</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIforFunction" kindref="compound">IforFunction</ref><sp/><ref refid="classSLIInterpreter_1ae1266efbf8a86b774d568abf52b836f9" kindref="member">SLIInterpreter::iforfunction</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIforallarrayFunction" kindref="compound">IforallarrayFunction</ref><sp/><ref refid="classSLIInterpreter_1aead918f70001dd379bf9bf954c37d249" kindref="member">SLIInterpreter::iforallarrayfunction</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIforallindexedarrayFunction" kindref="compound">IforallindexedarrayFunction</ref><sp/><ref refid="classSLIInterpreter_1aa2febf87e87589a3e4ad67f922f3b2cd" kindref="member">SLIInterpreter::iforallindexedarrayfunction</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIforallindexedstringFunction" kindref="compound">IforallindexedstringFunction</ref><sp/><ref refid="classSLIInterpreter_1ad1f2e9659dc78633d3a3b8b83861a623" kindref="member">SLIInterpreter::iforallindexedstringfunction</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIforallstringFunction" kindref="compound">IforallstringFunction</ref><sp/><ref refid="classSLIInterpreter_1a24a4de201dfe864b9ed53dad878b3567" kindref="member">SLIInterpreter::iforallstringfunction</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classSLIInterpreter_1af2f1774cb6cda0021a856410cec88c08" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1af2f1774cb6cda0021a856410cec88c08" kindref="member">SLIInterpreter::inittypes</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1af484433fdc01810efb780eb4ae96d7da" kindref="member">Integertype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;integertype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1af484433fdc01810efb780eb4ae96d7da" kindref="member">Integertype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ab21fab73c08d3c29eac0ccd3b947ea8c" kindref="member">Doubletype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;doubletype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ab21fab73c08d3c29eac0ccd3b947ea8c" kindref="member">Doubletype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a9efad84e8afeeaaedf646acead166dd4" kindref="member">Stringtype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;stringtype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a9efad84e8afeeaaedf646acead166dd4" kindref="member">Stringtype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abb29e56ae7fef801871300981986e352" kindref="member">Nametype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;nametype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abb29e56ae7fef801871300981986e352" kindref="member">Nametype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1aa55bcbaf43141078a3e5ff512b6c518f" kindref="member">nametypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a544ba1b11759973851ac41b4447dd0f5" kindref="member">Booltype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;booltype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a544ba1b11759973851ac41b4447dd0f5" kindref="member">Booltype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a6ced7d7f4304fd80bc98fe2073d7b14e" kindref="member">Literaltype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;literaltype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a6ced7d7f4304fd80bc98fe2073d7b14e" kindref="member">Literaltype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1acada7ac86b789f39b2802aeedec96bf4" kindref="member">Arraytype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;arraytype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1acada7ac86b789f39b2802aeedec96bf4" kindref="member">Arraytype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3efba688de85d9c98de470622f27cb1a" kindref="member">Proceduretype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;proceduretype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3efba688de85d9c98de470622f27cb1a" kindref="member">Proceduretype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1af0de1916adf0147d7b172ec12520e380" kindref="member">proceduretypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3be292d20f8d95117cd68a9aaf85f6d2" kindref="member">Litproceduretype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;literalproceduretype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3be292d20f8d95117cd68a9aaf85f6d2" kindref="member">Litproceduretype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1a163f7a35332353a7f3aa452de36bfcfd" kindref="member">litproceduretypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a673fafa2724e1381c23b39ea1509bc4d" kindref="member">Dictionarytype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;dictionarytype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a673fafa2724e1381c23b39ea1509bc4d" kindref="member">Dictionarytype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ae85891721986d903c4381e769c454781" kindref="member">Symboltype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;symboltype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ae85891721986d903c4381e769c454781" kindref="member">Symboltype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abf1fb8f7f4a433872980aec1689b814e" kindref="member">Functiontype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;functiontype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abf1fb8f7f4a433872980aec1689b814e" kindref="member">Functiontype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1abdfb119352e87d629c42bc4a3d1e2dfe" kindref="member">functiontypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3ed38282a84ebf9b6a7d6e346c8449ba" kindref="member">Trietype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;trietype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3ed38282a84ebf9b6a7d6e346c8449ba" kindref="member">Trietype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1a3b251fb048c1c5e9dc20d9cb14f47734" kindref="member">trietypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2069b211818dae33b1fc93396e15dabf" kindref="member">Callbacktype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;callbacktype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2069b211818dae33b1fc93396e15dabf" kindref="member">Callbacktype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1abd216bb187d1068c1a060da4bbc67676" kindref="member">callbacktypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aeea9100b28092dabc12c85b1a5949dcb" kindref="member">Istreamtype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;istreamtype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aeea9100b28092dabc12c85b1a5949dcb" kindref="member">Istreamtype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a5d93e8c0d4e0a52e2aacb53d6b59f3ab" kindref="member">XIstreamtype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;xistreamtype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a5d93e8c0d4e0a52e2aacb53d6b59f3ab" kindref="member">XIstreamtype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1a9e0bd8f734284936f59966d732f71405" kindref="member">xistreamtypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2b3d5895081a2f336637e04384976d39" kindref="member">Ostreamtype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;ostreamtype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2b3d5895081a2f336637e04384976d39" kindref="member">Ostreamtype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa6dfd10c6cc797f38301305ceb8fc7cb" kindref="member">IntVectortype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;intvectortype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa6dfd10c6cc797f38301305ceb8fc7cb" kindref="member">IntVectortype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a55585fa0c73c9b6ae29371971f8d327b" kindref="member">DoubleVectortype</ref>.<ref refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" kindref="member">settypename</ref>(<sp/></highlight><highlight class="stringliteral">&quot;doublevectortype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a55585fa0c73c9b6ae29371971f8d327b" kindref="member">DoubleVectortype</ref>.<ref refid="classSLIType_1a7aed57c2d173c535fc762b0f8a8b3f0f" kindref="member">setdefaultaction</ref>(<sp/><ref refid="classSLIInterpreter_1acfb9676c76b64a974aab6d6e787081a5" kindref="member">datatypefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classSLIInterpreter_1ac147fcca021c85ec616b9158d642b616" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ac147fcca021c85ec616b9158d642b616" kindref="member">SLIInterpreter::initdictionaries</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>assert(<sp/>not<sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref><sp/>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDictionary" kindref="compound">Dictionary</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>sysdict(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDictionary" kindref="compound">Dictionary</ref>()<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>userdict(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classDictionary" kindref="compound">Dictionary</ref>()<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">push</ref>(<sp/>sysdict<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a5baf5097495a26a297a62fa66b8fe93d" kindref="member">set_basedict</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" kindref="member">def</ref>(<sp/><ref refid="classSLIInterpreter_1a924302175da373adcaa5d01566495b2d" kindref="member">errordict_name</ref>,<sp/><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" kindref="member">def</ref>(<sp/><ref refid="classSLIInterpreter_1aaccb221b27ed1967f4ecc45b2662cb0f" kindref="member">systemdict_name</ref>,<sp/>sysdict<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" kindref="member">def</ref>(<sp/><ref refid="classSLIInterpreter_1a87bfd183a6bc220d992e199dd5fa0e2a" kindref="member">userdict_name</ref>,<sp/>userdict<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" kindref="member">def</ref>(<sp/></highlight><highlight class="stringliteral">&quot;statusdict&quot;</highlight><highlight class="normal">,<sp/><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref>(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classSLIInterpreter_1ac1f5c7fd0e3a9264d4285f3896cce76a" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ac1f5c7fd0e3a9264d4285f3896cce76a" kindref="member">SLIInterpreter::initbuiltins</ref>()</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1aadc8321a16952a662dda835d5f49a50a" kindref="member">ilookup_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ad77407f67087284bc5f92b4e260cb81e" kindref="member">SLIInterpreter::ilookupfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1afc98c6e519f0b54305c58df9f3f4fabb" kindref="member">ipop_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ad77407f67087284bc5f92b4e260cb81e" kindref="member">SLIInterpreter::ilookupfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1abb465fa1eefb1546c85a739b0aed6d37" kindref="member">isetcallback_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1aa9f9d76f6d7f3df0bf21f3a7dbc7a636" kindref="member">SLIInterpreter::isetcallbackfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1a00707767de00dd27f93d578bb7967478" kindref="member">iiterate_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1a57fc3e1d51586853a56186f1e1ca13f0" kindref="member">SLIInterpreter::iiteratefunction</ref><sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1ae213c63e58fcbbd8040f638df5c42fe3" kindref="member">iloop_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ab734ba960f83ecd8370337cb874f0880" kindref="member">SLIInterpreter::iloopfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1a7c87893237097d3f1e59184e271c982c" kindref="member">irepeat_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ab3a455ad9cf4efbdbea2d0299f8d0ff2" kindref="member">SLIInterpreter::irepeatfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1abe502fd653e8d6fe9cb4f64316d23c0d" kindref="member">ifor_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ae1266efbf8a86b774d568abf52b836f9" kindref="member">SLIInterpreter::iforfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1ab7e09e5f4839123f67c1dddaad003cd0" kindref="member">iforallarray_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1aead918f70001dd379bf9bf954c37d249" kindref="member">SLIInterpreter::iforallarrayfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1a126d2dcc9257520d986987eeaff70ada" kindref="member">iforallindexedstring_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ad1f2e9659dc78633d3a3b8b83861a623" kindref="member">SLIInterpreter::iforallindexedstringfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1abdad91736869d75640dd1ded6a2f7677" kindref="member">iforallindexedarray_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1aa2febf87e87589a3e4ad67f922f3b2cd" kindref="member">SLIInterpreter::iforallindexedarrayfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">createcommand</ref>(<sp/><ref refid="classSLIInterpreter_1af3c620b75d1d85322fd39c5d004ad5e1" kindref="member">iforallstring_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1a24a4de201dfe864b9ed53dad878b3567" kindref="member">SLIInterpreter::iforallstringfunction</ref><sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a683d2ea44b1e8ebcb8710094502d8041" kindref="member">createdouble</ref>(<sp/><ref refid="classSLIInterpreter_1afc532119708ef5be2da4e14b9d6da1d6" kindref="member">pi_name</ref>,<sp/><ref refid="namespacenumerics_1a0effada298f73ccb99be98760ac8f8f0" kindref="member">numerics::pi</ref><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a683d2ea44b1e8ebcb8710094502d8041" kindref="member">createdouble</ref>(<sp/><ref refid="classSLIInterpreter_1ae2f0e8c254e331c4d112d167d9525e8d" kindref="member">e_name</ref>,<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">numerics::e</ref><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" kindref="member">SLIInterpreter::initexternals</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1a6a862694b895dfd3c3e7ff8c2e751862" kindref="member">init_slidict</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1a4816bb2c64fe5f4bf36694f8814fbf35" kindref="member">init_slicontrol</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1aa8f83e1b7c564f5621a746653b22055d" kindref="member">init_sli_io</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1ab974b65d48100771a053e3328595da0c" kindref="member">init_slistack</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1ac53b5668daef9b44abe06be2e2e5e5fd" kindref="member">init_slimath</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1a112733a6e72c0a9cbfa3e99c84f793c5" kindref="member">init_slitypecheck</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1a577ac45c38bfa97848b3523f2ae4cc4c" kindref="member">init_slidata</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="interpret_8cc_1a83ebe3ab7c6f9415194ec8706f3ebf06" kindref="member">init_slistring</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">ArrayDatum</ref>*<sp/>ad<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>at(<sp/>ad<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a76a264883cecec44cfabc6f3c93a10cf" kindref="member">def_move</ref>(<sp/><ref refid="classSLIInterpreter_1a65ccbd9f78b7f8efd59509d35ea2d3db" kindref="member">commandstring_name</ref>,<sp/>at<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/**************************************</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/>The<sp/>interpreter&apos;s<sp/>dictionary<sp/>stack<sp/>is<sp/>accessed<sp/>through<sp/>member<sp/>functions</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/>of<sp/>the<sp/>interpreter.<sp/>This<sp/>is<sp/>a<sp/>slight<sp/>inconsistency<sp/>with<sp/>the<sp/>way<sp/>the</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/>other<sp/>stacks<sp/>are<sp/>accessed,<sp/>however,<sp/><sp/>class<sp/>DictionaryStack<sp/>has</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/>to<sp/>know<sp/>class<sp/>Interpreter.<sp/>Thous,<sp/>the<sp/>dictionary<sp/>stack<sp/>is<sp/>allocated<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/>free<sp/>storage.</highlight></codeline>
<codeline lineno="242"><highlight class="comment">****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*</highlight></codeline>
<codeline lineno="245" refid="classSLIInterpreter_1a3847a060c1c4348dd1b88cfa9bc3dfe7" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a3847a060c1c4348dd1b88cfa9bc3dfe7" kindref="member">SLIInterpreter::Ilookup</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="246"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>(<sp/><ref refid="classSLIInterpreter_1aadc8321a16952a662dda835d5f49a50a" kindref="member">ilookup_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1ad77407f67087284bc5f92b4e260cb81e" kindref="member">SLIInterpreter::ilookupfunction</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*</highlight></codeline>
<codeline lineno="251" refid="classSLIInterpreter_1aa40d5a2985fdb6563a4f923448bd5857" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1aa40d5a2985fdb6563a4f923448bd5857" kindref="member">SLIInterpreter::Iiterate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>(<sp/><ref refid="classSLIInterpreter_1a00707767de00dd27f93d578bb7967478" kindref="member">iiterate_name</ref>,<sp/>&amp;<ref refid="classSLIInterpreter_1a57fc3e1d51586853a56186f1e1ca13f0" kindref="member">SLIInterpreter::iiteratefunction</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classSLIInterpreter_1a683d2ea44b1e8ebcb8710094502d8041" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a683d2ea44b1e8ebcb8710094502d8041" kindref="member">SLIInterpreter::createdouble</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>t(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>d<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">def_move</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" kindref="member">SLIInterpreter::createcommand</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classSLIFunction" kindref="compound">SLIFunction</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>fn,<sp/>std::string<sp/>deprecation_info<sp/>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a7d92859ff56dd8ff8bd6cc084142476c" kindref="member">known</ref>(<sp/>n<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classNamingConflict" kindref="compound">NamingConflict</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>function<sp/>called<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(n.<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>exists<sp/>already.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>choose<sp/>a<sp/>different<sp/>name!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>t(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>(<sp/>n,<sp/>fn,<sp/>deprecation_info<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">def_move</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classSLIInterpreter_1a66bdd480ff4fda13852c5ddb0465eb0a" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a66bdd480ff4fda13852c5ddb0465eb0a" kindref="member">SLIInterpreter::createconstant</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val<sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>t(<sp/>val<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">def_move</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="299" refid="classSLIInterpreter_1aee9369cf50fc0555440989c561613d66" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1aee9369cf50fc0555440989c561613d66" kindref="member">SLIInterpreter::lookup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a9647f3edd0f806cdef4e1452aaaac480" kindref="member">lookup</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="305" refid="classSLIInterpreter_1aa304291df80f1d715caf0a341bec7473" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1aa304291df80f1d715caf0a341bec7473" kindref="member">SLIInterpreter::lookup2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="306"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" kindref="member">lookup2</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="311" refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">SLIInterpreter::baselookup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="312"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a8581db76ab8f676ec4677cf666e7cf91" kindref="member">baselookup</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classSLIInterpreter_1a0a1fe916c3d8db47a60778e4f98c9f80" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a0a1fe916c3d8db47a60778e4f98c9f80" kindref="member">SLIInterpreter::known</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a7d92859ff56dd8ff8bd6cc084142476c" kindref="member">known</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="classSLIInterpreter_1a419b7037fa664c19545195c3de5e85ad" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a419b7037fa664c19545195c3de5e85ad" kindref="member">SLIInterpreter::baseknown</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="324"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a2788ee691c8872c2b586fbf98f3433ab" kindref="member">baseknown</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1aa0717aebf8001f9be9cea57825e85f7e" kindref="member">SLIInterpreter::def</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a059fd306e6b5880bd7f292ccb18a60ce" kindref="member">def</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classSLIInterpreter_1a83bc34f605734c406c504b34a6a1b346" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a83bc34f605734c406c504b34a6a1b346" kindref="member">SLIInterpreter::undef</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1ad1cb0f7217c63f0b5ef32f86a2903cfc" kindref="member">undef</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classSLIInterpreter_1a617b26a4730f414bfb2096411e1cecb7" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a617b26a4730f414bfb2096411e1cecb7" kindref="member">SLIInterpreter::basedef</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a07607d88ed5c9e539f4173fb6342be06" kindref="member">basedef</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classSLIInterpreter_1a76a264883cecec44cfabc6f3c93a10cf" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a76a264883cecec44cfabc6f3c93a10cf" kindref="member">SLIInterpreter::def_move</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">def_move</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classSLIInterpreter_1adf3339ba91ce0a7e4b3af8ea519223ba" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1adf3339ba91ce0a7e4b3af8ea519223ba" kindref="member">SLIInterpreter::basedef_move</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1aafd0651e94ff35dfbf6862be6e87364e" kindref="member">basedef_move</ref>(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classSLIInterpreter_1ad5e9a77afa0308977e0b1f13b27f3d46" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ad5e9a77afa0308977e0b1f13b27f3d46" kindref="member">SLIInterpreter::SLIInterpreter</ref>()</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>:<sp/>debug_mode_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>,<sp/>show_stack_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>,<sp/>show_backtrace_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>,<sp/>catch_errors_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>,<sp/>opt_tailrecursion_(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>,<sp/>call_depth_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>,<sp/>max_call_depth_(<sp/>10<sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>,<sp/>cycle_count(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>,<sp/>cycle_guard(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>,<sp/>cycle_restriction(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>,<sp/>verbositylevel(<sp/>M_INFO<sp/>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>,<sp/>statusdict(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>,<sp/>errordict(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>,<sp/>DStack(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>,<sp/>parse(<sp/>nullptr<sp/>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>,<sp/>ilookup_name(<sp/></highlight><highlight class="stringliteral">&quot;::lookup&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>,<sp/>ipop_name(<sp/></highlight><highlight class="stringliteral">&quot;::pop&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>,<sp/>isetcallback_name(<sp/></highlight><highlight class="stringliteral">&quot;::setcallback&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>,<sp/>iiterate_name(<sp/></highlight><highlight class="stringliteral">&quot;::executeprocedure&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>,<sp/>iloop_name(<sp/></highlight><highlight class="stringliteral">&quot;::loop&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>,<sp/>irepeat_name(<sp/></highlight><highlight class="stringliteral">&quot;::repeat&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>,<sp/>ifor_name(<sp/></highlight><highlight class="stringliteral">&quot;::for&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>,<sp/>iforallarray_name(<sp/></highlight><highlight class="stringliteral">&quot;::forall_a&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>,<sp/>iforallindexedarray_name(<sp/></highlight><highlight class="stringliteral">&quot;::forallindexed_a&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>,<sp/>iforallindexedstring_name(<sp/></highlight><highlight class="stringliteral">&quot;::forallindexed_s&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>,<sp/>iforallstring_name(<sp/></highlight><highlight class="stringliteral">&quot;::forall_s&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>,<sp/>pi_name(<sp/></highlight><highlight class="stringliteral">&quot;Pi&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>,<sp/>e_name(<sp/></highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>,<sp/>iparse_name(<sp/></highlight><highlight class="stringliteral">&quot;::parse&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>,<sp/>stop_name(<sp/></highlight><highlight class="stringliteral">&quot;stop&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>,<sp/>end_name(<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>,<sp/>null_name(<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>,<sp/>true_name(<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>,<sp/>false_name(<sp/></highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>,<sp/>mark_name(<sp/></highlight><highlight class="stringliteral">&quot;mark&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>,<sp/>istopped_name(<sp/></highlight><highlight class="stringliteral">&quot;::stopped&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>,<sp/>systemdict_name(<sp/></highlight><highlight class="stringliteral">&quot;systemdict&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>,<sp/>userdict_name(<sp/></highlight><highlight class="stringliteral">&quot;userdict&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>,<sp/>errordict_name(<sp/></highlight><highlight class="stringliteral">&quot;errordict&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>,<sp/>quitbyerror_name(<sp/></highlight><highlight class="stringliteral">&quot;quitbyerror&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>,<sp/>newerror_name(<sp/></highlight><highlight class="stringliteral">&quot;newerror&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>,<sp/>errorname_name(<sp/></highlight><highlight class="stringliteral">&quot;errorname&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>,<sp/>commandname_name(<sp/></highlight><highlight class="stringliteral">&quot;commandname&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>,<sp/>signo_name(<sp/></highlight><highlight class="stringliteral">&quot;sys_signo&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>,<sp/>recordstacks_name(<sp/></highlight><highlight class="stringliteral">&quot;recordstacks&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>,<sp/>estack_name(<sp/></highlight><highlight class="stringliteral">&quot;estack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>,<sp/>ostack_name(<sp/></highlight><highlight class="stringliteral">&quot;ostack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>,<sp/>dstack_name(<sp/></highlight><highlight class="stringliteral">&quot;dstack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>,<sp/>commandstring_name(<sp/></highlight><highlight class="stringliteral">&quot;moduleinitializers&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>,<sp/>interpreter_name(<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter::execute&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>,<sp/>ArgumentTypeError(<sp/></highlight><highlight class="stringliteral">&quot;ArgumentType&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>,<sp/>StackUnderflowError(<sp/></highlight><highlight class="stringliteral">&quot;StackUnderflow&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>,<sp/>UndefinedNameError(<sp/></highlight><highlight class="stringliteral">&quot;UndefinedName&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>,<sp/>WriteProtectedError(<sp/></highlight><highlight class="stringliteral">&quot;WriteProtected&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>,<sp/>DivisionByZeroError(<sp/></highlight><highlight class="stringliteral">&quot;DivisionByZero&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>,<sp/>RangeCheckError(<sp/></highlight><highlight class="stringliteral">&quot;RangeCheck&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>,<sp/>PositiveIntegerExpectedError(<sp/></highlight><highlight class="stringliteral">&quot;PositiveIntegerExpected&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>,<sp/>BadIOError(<sp/></highlight><highlight class="stringliteral">&quot;BadIO&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>,<sp/>StringStreamExpectedError(<sp/></highlight><highlight class="stringliteral">&quot;StringStreamExpected&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>,<sp/>CycleGuardError(<sp/></highlight><highlight class="stringliteral">&quot;AllowedCyclesExceeded&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>,<sp/><ref refid="classSystemSignal" kindref="compound">SystemSignal</ref>(<sp/></highlight><highlight class="stringliteral">&quot;SystemSignal&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>,<sp/>BadErrorHandler(<sp/></highlight><highlight class="stringliteral">&quot;BadErrorHandler&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>,<sp/>KernelError(<sp/></highlight><highlight class="stringliteral">&quot;KernelError&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>,<sp/>InternalKernelError(<sp/></highlight><highlight class="stringliteral">&quot;InternalKernelError&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>,<sp/>OStack(<sp/>100<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>,<sp/>EStack(<sp/>100<sp/>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1af2f1774cb6cda0021a856410cec88c08" kindref="member">inittypes</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ac147fcca021c85ec616b9158d642b616" kindref="member">initdictionaries</ref>();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ac1f5c7fd0e3a9264d4285f3896cce76a" kindref="member">initbuiltins</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a830c152af62113824cc972f451271386" kindref="member">parse</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classParser" kindref="compound">Parser</ref>(<sp/>std::cin<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3c2b1137a8836c59a8273cd3c0538287" kindref="member">initexternals</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a50bb0ea5239c65d9e058a037718e49a4" kindref="member">quitbyerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ae17c622fcc079a453649581c02f00a6f" kindref="member">false_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="classSLIInterpreter_1a4e2329896e852a91514ee595d968c87a" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ae30e0e38ea9997de5f78a2995bf3e26e" kindref="member">SLIInterpreter::addmodule</ref>(<sp/><ref refid="classSLIModule" kindref="compound">SLIModule</ref>*<sp/>m<sp/>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a6db935658d1b00432cf03ec2b67926ae" kindref="member">modules</ref>.push_back(<sp/>m<sp/>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>m-&gt;<ref refid="classSLIModule_1ac32734c42e93e16aaf644a842de40bc2" kindref="member">install</ref>(<sp/>std::cerr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIException" kindref="compound">SLIException</ref>&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>occurred<sp/>while<sp/>loading<sp/>module<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m-&gt;<ref refid="classSLIModule_1a2e0c93f5145eb879abd3a8fdcfcedf6c" kindref="member">name</ref>()<sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>e.message().c_str()<sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>C++<sp/>library<sp/>exception<sp/>occurred<sp/>while<sp/>loading<sp/>module<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m-&gt;<ref refid="classSLIModule_1a2e0c93f5145eb879abd3a8fdcfcedf6c" kindref="member">name</ref>()<sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>...<sp/>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>(<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>unspecified<sp/>exception<sp/>occurred<sp/>while<sp/>loading<sp/>module<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>m-&gt;<ref refid="classSLIModule_1a2e0c93f5145eb879abd3a8fdcfcedf6c" kindref="member">name</ref>()<sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>commandstring<sp/>to<sp/>list<sp/>of<sp/>module<sp/>initializers.<sp/>They<sp/>will<sp/>be<sp/>executed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>sli-init.sli<sp/>once<sp/>all<sp/>C++<sp/>stuff<sp/>is<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>m-&gt;<ref refid="classSLIModule_1a05bb33e2c5494f406dfdda137a305ead" kindref="member">commandstring</ref>().empty()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">ArrayDatum</ref>*<sp/>ad<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">ArrayDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1a65ccbd9f78b7f8efd59509d35ea2d3db" kindref="member">commandstring_name</ref><sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>ad<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ad-&gt;push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stringdatum_8h_1a3a3be330a17a12978173328265c8ff78" kindref="member">StringDatum</ref>(<sp/>m-&gt;<ref refid="classSLIModule_1a05bb33e2c5494f406dfdda137a305ead" kindref="member">commandstring</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="classSLIInterpreter_1a7b9a0d7ce52361709895f715e70e58fa" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a7b9a0d7ce52361709895f715e70e58fa" kindref="member">SLIInterpreter::addlinkedusermodule</ref>(<sp/><ref refid="classSLIModule" kindref="compound">SLIModule</ref>*<sp/>m<sp/>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>m-&gt;<ref refid="classSLIModule_1ac32734c42e93e16aaf644a842de40bc2" kindref="member">install</ref>(<sp/>std::cerr,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>commandstring<sp/>to<sp/>list<sp/>of<sp/>module<sp/>initializers.<sp/>They<sp/>will<sp/>be<sp/>executed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>sli-init.sli<sp/>once<sp/>all<sp/>C++<sp/>stuff<sp/>is<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>m-&gt;<ref refid="classSLIModule_1a05bb33e2c5494f406dfdda137a305ead" kindref="member">commandstring</ref>().empty()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">ArrayDatum</ref>*<sp/>ad<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classAggregateDatum" kindref="compound">ArrayDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1a65ccbd9f78b7f8efd59509d35ea2d3db" kindref="member">commandstring_name</ref><sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>ad<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>ad-&gt;push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stringdatum_8h_1a3a3be330a17a12978173328265c8ff78" kindref="member">StringDatum</ref>(<sp/>m-&gt;<ref refid="classSLIModule_1a05bb33e2c5494f406dfdda137a305ead" kindref="member">commandstring</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="classSLIInterpreter_1af44a5ac5a80872ca2577d183a044b136" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1af44a5ac5a80872ca2577d183a044b136" kindref="member">SLIInterpreter::~SLIInterpreter</ref>()</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>there<sp/>is<sp/>no<sp/>more<sp/>data<sp/>on<sp/>the<sp/>stacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>the<sp/>modules<sp/>are<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a718dc49b82f89b99d9d8a59155adb97d" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a718dc49b82f89b99d9d8a59155adb97d" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>for_each(<sp/><ref refid="classSLIInterpreter_1a6db935658d1b00432cf03ec2b67926ae" kindref="member">modules</ref>.rbegin(),<sp/><ref refid="classSLIInterpreter_1a6db935658d1b00432cf03ec2b67926ae" kindref="member">modules</ref>.rend(),<sp/><ref refid="classdelete__ptr" kindref="compound">delete_ptr&lt; SLIModule &gt;</ref>()<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1ad4eb8703d1963c570ae0607886d83275" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a830c152af62113824cc972f451271386" kindref="member">parse</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1af484433fdc01810efb780eb4ae96d7da" kindref="member">Integertype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ab21fab73c08d3c29eac0ccd3b947ea8c" kindref="member">Doubletype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a9efad84e8afeeaaedf646acead166dd4" kindref="member">Stringtype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abb29e56ae7fef801871300981986e352" kindref="member">Nametype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a544ba1b11759973851ac41b4447dd0f5" kindref="member">Booltype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a6ced7d7f4304fd80bc98fe2073d7b14e" kindref="member">Literaltype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1acada7ac86b789f39b2802aeedec96bf4" kindref="member">Arraytype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3efba688de85d9c98de470622f27cb1a" kindref="member">Proceduretype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3be292d20f8d95117cd68a9aaf85f6d2" kindref="member">Litproceduretype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a673fafa2724e1381c23b39ea1509bc4d" kindref="member">Dictionarytype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ae85891721986d903c4381e769c454781" kindref="member">Symboltype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1abf1fb8f7f4a433872980aec1689b814e" kindref="member">Functiontype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3ed38282a84ebf9b6a7d6e346c8449ba" kindref="member">Trietype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2069b211818dae33b1fc93396e15dabf" kindref="member">Callbacktype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aeea9100b28092dabc12c85b1a5949dcb" kindref="member">Istreamtype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a5d93e8c0d4e0a52e2aacb53d6b59f3ab" kindref="member">XIstreamtype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2b3d5895081a2f336637e04384976d39" kindref="member">Ostreamtype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1aa6dfd10c6cc797f38301305ceb8fc7cb" kindref="member">IntVectortype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a55585fa0c73c9b6ae29371971f8d327b" kindref="member">DoubleVectortype</ref>.<ref refid="classSLIType_1addb0f5b030b0d9b863c9b7b4534909e1" kindref="member">deletetypename</ref>();</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="group__SLIError_1ga5d57aa6fa36a18f55937701fd1a0627b" refkind="member"><highlight class="normal"><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">SLIInterpreter::raiseerror</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/>err<sp/>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><ref refid="className" kindref="compound">Name</ref><sp/>caller<sp/>=<sp/><ref refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" kindref="member">getcurrentname</ref>();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>caller,<sp/>err<sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="classSLIInterpreter_1a64a24809b92a555db7b56629b9b7267e" refkind="member"><highlight class="normal"><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">SLIInterpreter::raiseerror</ref>(<sp/>std::exception&amp;<sp/>err<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="className" kindref="compound">Name</ref><sp/>caller<sp/>=<sp/><ref refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" kindref="member">getcurrentname</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref><sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;command&quot;</highlight><highlight class="normal">,<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>func/trie<sp/>that<sp/>caused<sp/>the<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SLIException<sp/>provide<sp/>addtional<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="classSLIException" kindref="compound">SLIException</ref>*<sp/>slierr<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classSLIException" kindref="compound">SLIException</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;err<sp/>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>slierr<sp/>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>err<sp/>is<sp/>a<sp/>SLIException</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/>),<sp/>slierr-&gt;<ref refid="classSLIException_1a8f0a43c586456cc0e161d683ff316531" kindref="member">message</ref>()<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>caller,<sp/>slierr-&gt;<ref refid="classSLIException_1a4ac56d362c7d86819a47c76571c9c031" kindref="member">what</ref>()<sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plain<sp/>std::exception:<sp/>turn<sp/>what()<sp/>output<sp/>into<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/>),<sp/>std::string(<sp/>err.what()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>caller,<sp/></highlight><highlight class="stringliteral">&quot;C++Exception&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="group__SLIError_1ga098156501ff35f206a32d389bf262e05" refkind="member"><highlight class="normal"><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">SLIInterpreter::raiseerror</ref>(<sp/><ref refid="className" kindref="compound">Name</ref><sp/>cmd,<sp/><ref refid="className" kindref="compound">Name</ref><sp/>err<sp/>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>error<sp/>related<sp/>symbols<sp/>are<sp/>now<sp/>in<sp/>their<sp/>correct<sp/>dictionary,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>error<sp/>dictionary<sp/>$errordict<sp/>(<sp/>see<sp/>Bug<sp/>#4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref><sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="classSLIInterpreter_1a0375658238d1001fadafea960ac64e6a" kindref="member">newerror_name</ref><sp/>)<sp/>==<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ae17c622fcc079a453649581c02f00a6f" kindref="member">false_name</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a0375658238d1001fadafea960ac64e6a" kindref="member">newerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" kindref="member">true_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a590251af158d35c7614fcee160cbe022" kindref="member">errorname_name</ref>,<sp/><ref refid="classLiteralDatum" kindref="compound">LiteralDatum</ref>(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a808ac5b5ef4987bff14743588ac5c586" kindref="member">commandname_name</ref>,<sp/><ref refid="classLiteralDatum" kindref="compound">LiteralDatum</ref>(<sp/>cmd<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="classSLIInterpreter_1a41324ebc0bc4df32082ea1d7303e0376" kindref="member">recordstacks_name</ref><sp/>)<sp/>==<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" kindref="member">true_name</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>est(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af5f5f068333e1fec6c754e2d4edcc7af" kindref="member">toArray</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>ost(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref>(<sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af5f5f068333e1fec6c754e2d4edcc7af" kindref="member">toArray</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref><sp/>olddstack;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a2aa452e3851567a438fe4abc34fcdaea" kindref="member">DStack</ref>-&gt;<ref refid="classDictionaryStack_1a3e10c9a812a39de9cf03e57ab2a9d7ae" kindref="member">toArray</ref>(<sp/>olddstack<sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>dst(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref>(<sp/>olddstack<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a9ce327c0a94abb3a166d805e74b8af57" kindref="member">insert_move</ref>(<sp/><ref refid="classSLIInterpreter_1a1c3be4d49737437ea8af10de75e29681" kindref="member">estack_name</ref>,<sp/>est<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a9ce327c0a94abb3a166d805e74b8af57" kindref="member">insert_move</ref>(<sp/><ref refid="classSLIInterpreter_1acfc2d7305a53fb15d807ad16c2bd09e8" kindref="member">ostack_name</ref>,<sp/>ost<sp/>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a9ce327c0a94abb3a166d805e74b8af57" kindref="member">insert_move</ref>(<sp/><ref refid="classSLIInterpreter_1a68fdc1c805ac73fbb35d6a7cffbda75c" kindref="member">dstack_name</ref>,<sp/>dst<sp/>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/><ref refid="classLiteralDatum" kindref="compound">LiteralDatum</ref>(<sp/>cmd<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ad7a9a4121a69a006ca9709aaf7553d83" kindref="member">stop_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>There<sp/>might<sp/>be<sp/>an<sp/>error<sp/>in<sp/>the<sp/>error-handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a0375658238d1001fadafea960ac64e6a" kindref="member">newerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ae17c622fcc079a453649581c02f00a6f" kindref="member">false_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;raiserror&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="classSLIInterpreter_1ab2aa62ab786830cbc79434c4a390eacb" kindref="member">BadErrorHandler</ref><sp/>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="classSLIInterpreter_1a1f76b68c473ace082511ddaa9eca5733" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a1f76b68c473ace082511ddaa9eca5733" kindref="member">SLIInterpreter::print_error</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>cmd<sp/>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>variables<sp/>where<sp/>the<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>about<sp/>the<sp/>error<sp/>is<sp/>stored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>std::string<sp/>errorname;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>msg;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>errorname<sp/>from<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/><ref refid="classSLIInterpreter_1a590251af158d35c7614fcee160cbe022" kindref="member">errorname_name</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>errorname<sp/>=<sp/>std::string(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="classSLIInterpreter_1a590251af158d35c7614fcee160cbe022" kindref="member">errorname_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>correct<sp/>message<sp/>for<sp/>the<sp/>errorname.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>errorname<sp/>is<sp/>equal<sp/>to<sp/>SystemError<sp/>no<sp/>message<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>printed.<sp/>The<sp/>if-else<sp/>branching<sp/>below<sp/>follows<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>syntax<sp/>of<sp/>the<sp/>lib/sli/sli-init.sli<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/:print_error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>errorname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SystemError&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>errorname<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;BadErrorHandler&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>The<sp/>error<sp/>handler<sp/>of<sp/>a<sp/>stopped<sp/>context<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;contained<sp/>itself<sp/>an<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>pre-defined<sp/>message<sp/>from<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;erase(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>command<sp/>information<sp/>for<sp/>error<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;command&quot;</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>command<sp/>=<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;command&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;erase(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;command&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>information<sp/>is<sp/>only<sp/>printed<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>command<sp/>is<sp/>of<sp/>trietype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command.<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command-&gt;<ref refid="classDatum_1af7a6a22e2fadd9d3b75e15d7d4dc3998" kindref="member">gettypename</ref>()<sp/>==<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;trietype&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\nCandidates<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>command<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>are:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/>trie<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>command.datum()<sp/>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>trie<sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trie-&gt;<ref refid="classTrieDatum_1a32d8bf015b07c8b0e24ca654116eaa9e" kindref="member">get</ref>().<ref refid="classTypeTrie_1af75874239a6274d6babfbcb64496da4a" kindref="member">info</ref>(<sp/>msg<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>message<sp/>header<sp/>is<sp/>defined<sp/>as<sp/>&quot;$errorname<sp/>in<sp/>$cmd&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>std::string<sp/>from<sp/>=<sp/>std::string(<sp/>cmd<sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref>,<sp/>from.c_str(),<sp/>msg.str().c_str(),<sp/>errorname.c_str()<sp/>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="group__SLIError_1gaf0e0e8a833e50337078b8dd48df80a53" refkind="member"><highlight class="normal"><ref refid="group__SLIError_1gaf0e0e8a833e50337078b8dd48df80a53" kindref="member">SLIInterpreter::raiseagain</ref>()</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref><sp/>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/><ref refid="classSLIInterpreter_1a808ac5b5ef4987bff14743588ac5c586" kindref="member">commandname_name</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>cmd_t<sp/>=<sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a93d377a487a78812b2f626c843306695" kindref="member">lookup</ref>(<sp/><ref refid="classSLIInterpreter_1a808ac5b5ef4987bff14743588ac5c586" kindref="member">commandname_name</ref><sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>not<sp/>cmd_t.<ref refid="classToken_1a397db8062278fec3e786aa62f9d9baf8" kindref="member">empty</ref>()<sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a0375658238d1001fadafea960ac64e6a" kindref="member">newerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" kindref="member">true_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a9d3b72926bfa2090389f0782cd2b6e76" kindref="member">push_move</ref>(<sp/>cmd_t<sp/>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ad7a9a4121a69a006ca9709aaf7553d83" kindref="member">stop_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/><ref refid="className" kindref="compound">Name</ref>(<sp/></highlight><highlight class="stringliteral">&quot;raiseagain&quot;</highlight><highlight class="normal"><sp/>),<sp/><ref refid="classSLIInterpreter_1ab2aa62ab786830cbc79434c4a390eacb" kindref="member">BadErrorHandler</ref><sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="group__SLIError_1gab1f76ff8c7308acedfa1017ffe2c7de4" refkind="member"><highlight class="normal"><ref refid="group__SLIError_1gab1f76ff8c7308acedfa1017ffe2c7de4" kindref="member">SLIInterpreter::raisesignal</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/>)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><ref refid="className" kindref="compound">Name</ref><sp/>caller<sp/>=<sp/><ref refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" kindref="member">getcurrentname</ref>();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a6764f86eb71b42dc872d437ba5dc3a3a" kindref="member">signo_name</ref>,<sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>sig<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>caller,<sp/><ref refid="classSystemSignal" kindref="compound">SystemSignal</ref><sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="group__SLIMessaging_1ga0f5ec4cb38a20dfa11e33d6b3a2cfbbc" refkind="member"><highlight class="normal"><ref refid="group__SLIMessaging_1ga2971786fa516d575d0db5436c8cce1f9" kindref="member">SLIInterpreter::verbosity</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1af0909391400ac821d469a33aeefb23dd" kindref="member">verbositylevel</ref><sp/>=<sp/>level;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="group__SLIMessaging_1ga2971786fa516d575d0db5436c8cce1f9" refkind="member"><highlight class="normal"><ref refid="group__SLIMessaging_1ga2971786fa516d575d0db5436c8cce1f9" kindref="member">SLIInterpreter::verbosity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="754"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1af0909391400ac821d469a33aeefb23dd" kindref="member">verbositylevel</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" kindref="member">SLIInterpreter::terminate</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnvalue<sp/>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>returnvalue<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>exitcodes<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>*<ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>returnvalue<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>exitcodes,<sp/></highlight><highlight class="stringliteral">&quot;fatal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Exiting.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>std::exit(<sp/>returnvalue<sp/>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" refkind="member"><highlight class="normal"><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">SLIInterpreter::message</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>from[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errorname[]<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="775"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>one<sp/>thread<sp/>may<sp/>write<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical(<sp/>message<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1af0909391400ac821d469a33aeefb23dd" kindref="member">verbositylevel</ref><sp/>)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref><sp/>)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1a21f57d65e99452db0d20860908773fb7" kindref="member">M_FATAL_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1aafcfa7e2b250f23f2c66af03f0fea32e" kindref="member">M_ERROR</ref><sp/>)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1a44234827b12fe44cfb0745cdc9686a32" kindref="member">M_ERROR_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1aff69c7ddd8b138398cff86e27d04d47b" kindref="member">M_WARNING</ref><sp/>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1ad9a2d169a4de0b88b06a2b74afcc68b4" kindref="member">M_WARNING_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1ae7af23ee84e18a135a44e5e6177011ca" kindref="member">M_DEPRECATED</ref><sp/>)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1aa7c04a939c7dd80bb0eb8db804bcd239" kindref="member">M_DEPRECATED_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1a63715d65dc436afe9be8e14dcc639768" kindref="member">M_PROGRESS</ref><sp/>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1a38952d40cc46abf06928c44e972549e7" kindref="member">M_PROGRESS_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1ad07d680a9d59de3d7bad37ad6f43e731" kindref="member">M_INFO</ref><sp/>)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1a33eb44511dc26a8f6d897ca221e786bf" kindref="member">M_INFO_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1ab598c268e2f4982a379aaf26eda6cf8e" kindref="member">M_STATUS</ref><sp/>)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1abc5a2a83b757e4a25b1fd765bd24cd49" kindref="member">M_STATUS_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>level<sp/>&gt;=<sp/><ref refid="classSLIInterpreter_1a8e1cdcbe896e2914564b1df5b5c79f78" kindref="member">M_DEBUG</ref><sp/>)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1a3a1d933681f180131590e3ff7963320e" kindref="member">M_DEBUG_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/>std::cout,<sp/><ref refid="classSLIInterpreter_1aeadc51a3dc40b521c0a5504130c2a422" kindref="member">M_ALL_NAME</ref>,<sp/>from,<sp/>text,<sp/>errorname<sp/>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827" refid="classSLIInterpreter_1a75baacf6e1a364af6b118309c4d92d11" refkind="member"><highlight class="normal"><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">SLIInterpreter::message</ref>(<sp/>std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>levelname[],</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>from[],</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[],</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>errorname[]<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="832"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buflen<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>timestring[<sp/>buflen<sp/>+<sp/>1<sp/>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time_t<sp/>tm<sp/>=<sp/>std::time(<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>std::strftime(<sp/>timestring,<sp/>buflen,<sp/></highlight><highlight class="stringliteral">&quot;%b<sp/>%d<sp/>%H:%M:%S&quot;</highlight><highlight class="normal">,<sp/>std::localtime(<sp/>&amp;tm<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;%1<sp/>%2<sp/>[%3]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>timestring,<sp/>from,<sp/>levelname<sp/>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>errorname;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>preferred<sp/>line<sp/>indentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indent<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>the<sp/>output<sp/>window.<sp/>The<sp/>message<sp/>text<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>adapted<sp/>to<sp/>the<sp/>width<sp/>of<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>COLUMNS<sp/>variable<sp/>should<sp/>preferably<sp/>be<sp/>extracted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>environment<sp/>dictionary<sp/>set<sp/>up<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Processes<sp/>class.<sp/>getenv(&quot;COLUMNS&quot;)<sp/>works<sp/>only<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>created<sp/>NEST<sp/>executable<sp/>(not<sp/>on<sp/>the<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>printed<sp/>by<sp/>make<sp/>install).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>std::getenv(<sp/></highlight><highlight class="stringliteral">&quot;COLUMNS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_width<sp/>=<sp/>78;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>columns<sp/>)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>max_width<sp/>=<sp/>std::atoi(<sp/>columns<sp/>);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>max_width<sp/>&lt;<sp/>3<sp/>*<sp/>indent<sp/>)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>max_width<sp/>=<sp/>3<sp/>*<sp/>indent;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>max_width<sp/>-<sp/>indent;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>char*<sp/>to<sp/>string<sp/>to<sp/>be<sp/>able<sp/>to<sp/>use<sp/>the<sp/>string<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>std::string<sp/>text_str(<sp/>text<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Indent<sp/>first<sp/>message<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>text_str.size()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::string(<sp/>indent,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>text_str.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>text_str.at(<sp/>i<sp/>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>and<sp/>i<sp/>!=<sp/>text_str.size()<sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>a<sp/>lineshift<sp/>followed<sp/>by<sp/>an<sp/>indented<sp/>whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manually<sp/>inserted<sp/>lineshift<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>suppressed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::string(<sp/>indent,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>reached<sp/>the<sp/>width<sp/>of<sp/>the<sp/>output<sp/>we&apos;ll<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>lineshift<sp/>regardless<sp/>of<sp/>whether<sp/>&apos;\n&apos;<sp/>is<sp/>found<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>printing<sp/>is<sp/>done<sp/>so<sp/>that<sp/>no<sp/>word<sp/>splitting<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>space<sp/>=<sp/>text_str.find(<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>&lt;<sp/>text_str.find(<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>)<sp/>?<sp/>text_str.find(<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>i<sp/>)<sp/>:<sp/>text_str.find(<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>space<sp/>is<sp/>found<sp/>(i.e.<sp/>the<sp/>last<sp/>word)<sp/>the<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variable<sp/>is<sp/>set<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>space<sp/>==<sp/>std::string::npos<sp/>)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>=<sp/>text_str.size();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>on<sp/>a<sp/>new<sp/>line<sp/>if<sp/>the<sp/>next<sp/>word<sp/>is<sp/>longer<sp/>than<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space<sp/>available<sp/>(as<sp/>long<sp/>as<sp/>the<sp/>word<sp/>is<sp/>shorter<sp/>than<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>width<sp/>of<sp/>the<sp/>printout).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/>0<sp/>and<sp/>text_str.at(<sp/>i<sp/>-<sp/>1<sp/>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>space<sp/>-<sp/>i<sp/>)<sp/>&gt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>width<sp/>-<sp/>pos<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::string(<sp/>indent,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>print<sp/>character<sp/>if<sp/>we&apos;re<sp/>not<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>and<sp/>the<sp/>last<sp/>character<sp/>is<sp/>a<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not(<sp/>width<sp/>-<sp/>pos<sp/>==<sp/>0<sp/>and<sp/>text_str.at(<sp/>i<sp/>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>actual<sp/>character.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>text_str.at(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><ref refid="className" kindref="compound">Name</ref></highlight></codeline>
<codeline lineno="924" refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" kindref="member">SLIInterpreter::getcurrentname</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="925"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*<sp/>func<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>func<sp/>)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>func-&gt;<ref refid="classFunctionDatum_1ad88df509baf6b1236fa250c916cf5eae" kindref="member">getname</ref>()<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/>trie<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>().<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>trie<sp/>)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>trie-&gt;<ref refid="classTrieDatum_1a1e7cf5785458357371422c106f041400" kindref="member">getname</ref>()<sp/>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1ae7e611a30eb911843d009681f1db2adc" kindref="member">interpreter_name</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="classSLIInterpreter_1a7839dae2b4a2d5c28f85e24bf6be033c" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a7839dae2b4a2d5c28f85e24bf6be033c" kindref="member">SLIInterpreter::setcycleguard</ref>(<sp/><ref refid="token_8h_1a7959fe6ad8d00bd30697baef794f83b2" kindref="member">Index</ref><sp/>c<sp/>)</highlight></codeline>
<codeline lineno="941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2beaf40f9fb6dd843b9412f288acbb3e" kindref="member">cycle_guard</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a6cde0c91bd15c54725b5238fbde1f724" kindref="member">cycle_restriction</ref><sp/>=<sp/><ref refid="classSLIInterpreter_1af18fd61f3612a8186ab36ac63213a65e" kindref="member">cycles</ref>()<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="classSLIInterpreter_1a0db19873e691859c8c76cfbed3a44671" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a0db19873e691859c8c76cfbed3a44671" kindref="member">SLIInterpreter::removecycleguard</ref>()</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2beaf40f9fb6dd843b9412f288acbb3e" kindref="member">cycle_guard</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="classSLIInterpreter_1ad182047df2a018c8c8339cf1f8969d81" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ad182047df2a018c8c8339cf1f8969d81" kindref="member">SLIInterpreter::toggle_stack_display</ref>()</highlight></codeline>
<codeline lineno="954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref><sp/>=<sp/>not<sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref>;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>std::string<sp/>msg<sp/>=<sp/>std::string(<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>display<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>+<sp/>(<sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;On&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1ad07d680a9d59de3d7bad37ad6f43e731" kindref="member">M_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="classSLIInterpreter_1a1ef43a348dce9987282b41fda73dc86d" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a1ef43a348dce9987282b41fda73dc86d" kindref="member">SLIInterpreter::backtrace_on</ref>()</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1acf42e25173c0df10bf64c4046250eecd" kindref="member">show_backtrace_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a7ae138c6783f76451eb3755c098c79ed" kindref="member">opt_tailrecursion_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>std::string<sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Showing<sp/>stack<sp/>backtrace<sp/>on<sp/>error.<sp/><sp/>Disabling<sp/>tail<sp/>recursion<sp/>optimization.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1ad07d680a9d59de3d7bad37ad6f43e731" kindref="member">M_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="classSLIInterpreter_1a6b0ba787a213ef0bd84caf57c39e0de6" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a6b0ba787a213ef0bd84caf57c39e0de6" kindref="member">SLIInterpreter::backtrace_off</ref>()</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1acf42e25173c0df10bf64c4046250eecd" kindref="member">show_backtrace_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a7ae138c6783f76451eb3755c098c79ed" kindref="member">opt_tailrecursion_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>std::string<sp/>msg<sp/>=</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>backtrace<sp/>on<sp/>error<sp/>in<sp/>now<sp/>off.<sp/>Re-enabling<sp/>tail<sp/>recursion<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;optimization.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1ad07d680a9d59de3d7bad37ad6f43e731" kindref="member">M_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>msg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" kindref="member">SLIInterpreter::stack_backtrace</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>n<sp/>-<sp/>1;<sp/>p<sp/>&gt;=<sp/>0;<sp/>--p<sp/>)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>)<sp/>p<sp/>&gt;<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*<sp/>fd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>p<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd-&gt;<ref refid="classFunctionDatum_1a0e4efeb7f53868430780d913b8a86fed" kindref="member">backtrace</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>*<sp/>nd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>p<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>nd<sp/>)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;While<sp/>executing:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="classAggregateDatum_1a94b65c55f9f89c2da061aa04d2aac065" kindref="member">print</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/>td<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classTrieDatum" kindref="compound">TrieDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" kindref="member">pick</ref>(<sp/>p<sp/>).<ref refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" kindref="member">datum</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>td<sp/>)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;While<sp/>executing:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>td-&gt;<ref refid="classTrieDatum_1a0499ff8322f331ccd6483bb1b4f8b7cc" kindref="member">print</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021" refid="classSLIInterpreter_1ac9dda32c2a2942049bc003556ec52bb6" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ac9dda32c2a2942049bc003556ec52bb6" kindref="member">SLIInterpreter::debug_options</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1022"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>one<sp/>of<sp/>the<sp/>following<sp/>commands:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nInspection:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>n)ext<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Trace<sp/>(execute)<sp/>next<sp/>command.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>l)ist<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>list<sp/>current<sp/>procedure<sp/>or<sp/>loop.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>w)here<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>show<sp/>backtrace<sp/>of<sp/>execution<sp/>stack.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>c)ontinue<sp/><sp/><sp/>-<sp/>Continue<sp/>this<sp/>level<sp/>without<sp/>debugging\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>step<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Step<sp/>over<sp/>deeper<sp/>levels.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>stack<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>show<sp/>operand<sp/>stack.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>estack<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>show<sp/>execution<sp/>stack.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>e)dit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>enter<sp/>interactive<sp/>mode.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>stop<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>raise<sp/>an<sp/>exception.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>h)elp<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>display<sp/>this<sp/>list.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>q)uit<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>quit<sp/>debug<sp/>mode.\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>show<sp/>next<sp/><sp/><sp/>-<sp/>show<sp/>next<sp/>command.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>show<sp/>stack<sp/><sp/>-<sp/>show<sp/>operand<sp/>stack.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>show<sp/>backtrace-<sp/>same<sp/>as<sp/>&apos;where&apos;.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>show<sp/>estack<sp/>-<sp/>show<sp/>execution<sp/>stack.\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>toggle<sp/>stack<sp/><sp/><sp/><sp/><sp/>-<sp/>toggle<sp/>stack<sp/>display.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>toggle<sp/>catch<sp/><sp/><sp/><sp/><sp/>-<sp/>toggle<sp/>debug<sp/>on<sp/>error.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>toggle<sp/>backtrace<sp/>-<sp/>toggle<sp/>stack<sp/>backtrace<sp/>on<sp/>error.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>toggle<sp/>tailrecursion<sp/>-<sp/>toggle<sp/>tail-recursion<sp/>optimisation.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048" refid="classSLIInterpreter_1ab345ed039af59fb2b2b546f18f153eba" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1ab345ed039af59fb2b2b546f18f153eba" kindref="member">SLIInterpreter::debug_commandline</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>next<sp/>)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/>std::string<sp/>command;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>std::string<sp/>arg;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>/dev/tty<sp/>is<sp/>the<sp/>UNIX<sp/><sp/>file<sp/>representing<sp/>the<sp/>keyboard.<sp/>We<sp/>directly<sp/>read<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>to<sp/>be<sp/>able<sp/>to<sp/>close<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>CTRL-D.<sp/>If<sp/>std::cin<sp/>is<sp/>closed<sp/>with<sp/>ctrl-D<sp/>we<sp/>cannot<sp/>re-open<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>debugger<sp/>would<sp/>be<sp/>dysfunctional<sp/>for<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>session.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>tty(<sp/></highlight><highlight class="stringliteral">&quot;/dev/tty&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref><sp/>)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Next<sp/>token:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>next.<ref refid="classToken_1a6068e75d671be14b110a441649a238d7" kindref="member">pprint</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/><ref refid="classSLIInterpreter_1a79f58b35304f1739a680446e33005304" kindref="member">call_depth_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classSLIInterpreter_1a024a32fab7bd86097b596cc4f22c263e" kindref="member">max_call_depth_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>tty<sp/>&gt;&gt;<sp/>command;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tty.eof()<sp/>)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aeaccbce3c8e4ced5a6b9be7e18544621" kindref="member">debug_mode_off</ref>();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;show&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tty<sp/>&gt;&gt;<sp/>arg;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;estack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;backtrace&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" kindref="member">stack_backtrace</ref>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;next&quot;</highlight><highlight class="normal"><sp/>or<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Next<sp/>token:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next.<ref refid="classToken_1a6068e75d671be14b110a441649a238d7" kindref="member">pprint</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;show:<sp/>Unknown<sp/>argument.<sp/>Type<sp/>&apos;help&apos;<sp/>for<sp/>help.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;toggle&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tty<sp/>&gt;&gt;<sp/>arg;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;backtrace&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1acf42e25173c0df10bf64c4046250eecd" kindref="member">show_backtrace_</ref><sp/>=<sp/>not<sp/><ref refid="classSLIInterpreter_1acf42e25173c0df10bf64c4046250eecd" kindref="member">show_backtrace_</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>backtrace<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classSLIInterpreter_1acf42e25173c0df10bf64c4046250eecd" kindref="member">show_backtrace_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>On.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off.&quot;</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref><sp/>=<sp/>not<sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stack<sp/>display<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classSLIInterpreter_1a39739d2352b0f2e4e1fbb2d498265a0c" kindref="member">show_stack_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>On.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off.&quot;</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;catch&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a8986cab2c0ddbc00d7851dd5baff570d" kindref="member">catch_errors_</ref><sp/>=<sp/>not<sp/><ref refid="classSLIInterpreter_1a8986cab2c0ddbc00d7851dd5baff570d" kindref="member">catch_errors_</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Catch<sp/>error<sp/>mode<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classSLIInterpreter_1a8986cab2c0ddbc00d7851dd5baff570d" kindref="member">catch_errors_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>On.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off.&quot;</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tailrecursion&quot;</highlight><highlight class="normal"><sp/>or<sp/>arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tail&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a7ae138c6783f76451eb3755c098c79ed" kindref="member">opt_tailrecursion_</ref><sp/>=<sp/>not<sp/><ref refid="classSLIInterpreter_1a7ae138c6783f76451eb3755c098c79ed" kindref="member">opt_tailrecursion_</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tail-recursion<sp/>optimization<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classSLIInterpreter_1a7ae138c6783f76451eb3755c098c79ed" kindref="member">opt_tailrecursion_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>On.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off.&quot;</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;list&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;l&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stop&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aeaccbce3c8e4ced5a6b9be7e18544621" kindref="member">debug_mode_off</ref>();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>(<sp/><ref refid="classSLIInterpreter_1ad7a9a4121a69a006ca9709aaf7553d83" kindref="member">stop_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;catch&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a8986cab2c0ddbc00d7851dd5baff570d" kindref="member">catch_errors_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Catch<sp/>error<sp/>mode<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<sp/><ref refid="classSLIInterpreter_1a8986cab2c0ddbc00d7851dd5baff570d" kindref="member">catch_errors_</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>On.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Off.&quot;</highlight><highlight class="normal"><sp/>)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;where&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" kindref="member">stack_backtrace</ref>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;edit&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;break&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aeaccbce3c8e4ced5a6b9be7e18544621" kindref="member">debug_mode_off</ref>();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>&apos;continue&apos;,<sp/>to<sp/>exit<sp/>interactive<sp/>mode.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>(<sp/></highlight><highlight class="stringliteral">&quot;debugon&quot;</highlight><highlight class="normal"><sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>restart<sp/>debugging<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1afe0e3fe443a8fa59dfaf31a4a5f46526" kindref="member">mark_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="iostreamdatum_8h_1ae5eee7e20f5cac5278bc97c099a375a8" kindref="member">XIstreamDatum</ref>(<sp/>std::cin<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1ad274563ba63af36ffefebc44070571eb" kindref="member">iparse_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;stack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;estack&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ac9dda32c2a2942049bc003556ec52bb6" kindref="member">debug_options</ref>();</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;next&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;continue&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cont&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a024a32fab7bd86097b596cc4f22c263e" kindref="member">max_call_depth_</ref><sp/>=<sp/><ref refid="classSLIInterpreter_1a79f58b35304f1739a680446e33005304" kindref="member">call_depth_</ref>;<sp/></highlight><highlight class="comment">//<sp/>will<sp/>show<sp/>lower<sp/>levels<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a024a32fab7bd86097b596cc4f22c263e" kindref="member">max_call_depth_</ref><sp/>=<sp/><ref refid="classSLIInterpreter_1a79f58b35304f1739a680446e33005304" kindref="member">call_depth_</ref><sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>will<sp/>this<sp/>level<sp/>and<sp/>lower.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;quit&quot;</highlight><highlight class="normal"><sp/>or<sp/>command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;q&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1aa28619d49093a8ec803e77007bc7b49a" kindref="member">debug_mode_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>command.<sp/>Type<sp/>&apos;help&apos;<sp/>for<sp/>help,<sp/>or<sp/>&apos;quit&apos;<sp/>to<sp/>leave<sp/>debugger.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201" refid="classSLIInterpreter_1a2269a9b937e72de29f6f2b6660922113" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a2269a9b937e72de29f6f2b6660922113" kindref="member">SLIInterpreter::startup</ref>()</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_initialized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitcode<sp/>=<sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>is_initialized<sp/>and<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>exitcode<sp/>=<sp/><ref refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" kindref="member">execute_</ref>();<sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>is_initialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exitcode;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="classSLIInterpreter_1a70976a8bd6135ade998f87fef7e1e6cf" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a70976a8bd6135ade998f87fef7e1e6cf" kindref="member">SLIInterpreter::execute</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>cmdline<sp/>)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitcode<sp/>=<sp/><ref refid="classSLIInterpreter_1a2269a9b937e72de29f6f2b6660922113" kindref="member">startup</ref>();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exitcode<sp/>!=<sp/>EXIT_SUCCESS<sp/>)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="stringdatum_8h_1a3a3be330a17a12978173328265c8ff78" kindref="member">StringDatum</ref>(<sp/>cmdline<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>(<sp/></highlight><highlight class="stringliteral">&quot;::evalstring&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" kindref="member">execute_</ref>();<sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="classSLIInterpreter_1a1e6b4d28d1b024841801f531226cf626" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a70976a8bd6135ade998f87fef7e1e6cf" kindref="member">SLIInterpreter::execute</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>cmd<sp/>)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitcode<sp/>=<sp/><ref refid="classSLIInterpreter_1a2269a9b937e72de29f6f2b6660922113" kindref="member">startup</ref>();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exitcode<sp/>!=<sp/>EXIT_SUCCESS<sp/>)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/>cmd<sp/>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" kindref="member">execute_</ref>();<sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243" refid="classSLIInterpreter_1aa86f607e6dff86f2d179dc4bf8d93908" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a70976a8bd6135ade998f87fef7e1e6cf" kindref="member">SLIInterpreter::execute</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a2269a9b937e72de29f6f2b6660922113" kindref="member">startup</ref>();</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classNameDatum" kindref="compound">NameDatum</ref>(<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" kindref="member">execute_</ref>();<sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classSLIInterpreter_1a2e551e6c11e2e8158d163e2b5996c33d" kindref="member">execute_debug_</ref>();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260" refid="classSLIInterpreter_1a2e551e6c11e2e8158d163e2b5996c33d" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a2e551e6c11e2e8158d163e2b5996c33d" kindref="member">SLIInterpreter::execute_debug_</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>exitlevel<sp/>)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitcode;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>exitcodes<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>*<ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>loop1<sp/><sp/>this<sp/>double<sp/>loop<sp/>to<sp/>keep<sp/>the<sp/>try/catch<sp/>outside<sp/>the<sp/>inner<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>exitlevel<sp/>)<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classSLIInterpreter_1a3597f753cfd2adb7bd0f2411204720ff" kindref="member">cycle_count</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>()-&gt;<ref refid="classDatum_1a772aa172fff8b5035e1e243eb046ae13" kindref="member">execute</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>exc<sp/>)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>exc<sp/>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>exitlevel<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>C++<sp/>library<sp/>exception<sp/>occurred.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*exitcodes,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" kindref="member">terminate</ref>(<sp/>exitcode<sp/>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>...<sp/>)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>unknown<sp/>c++<sp/>exception<sp/>occurred.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*exitcodes,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" kindref="member">terminate</ref>(<sp/>exitcode<sp/>);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exitcode&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*<ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exitcode&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exitcode<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a50bb0ea5239c65d9e058a037718e49a4" kindref="member">quitbyerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" kindref="member">true_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exitcode;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313" refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" refkind="member"><highlight class="normal"><ref refid="classSLIInterpreter_1a1d4268e9a4b8064b77e12fba24d15620" kindref="member">SLIInterpreter::execute_</ref>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>exitlevel<sp/>)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitcode;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/>exitcodes<sp/>=<sp/>getValue&lt;<sp/>DictionaryDatum<sp/>&gt;(<sp/>*<ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exitcodes&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>loop1<sp/><sp/>this<sp/>double<sp/>loop<sp/>to<sp/>keep<sp/>the<sp/>try/catch<sp/>outside<sp/>the<sp/>inner<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>exitlevel<sp/>)<sp/></highlight><highlight class="comment">//<sp/>loop<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classSLIInterpreter_1a3597f753cfd2adb7bd0f2411204720ff" kindref="member">cycle_count</ref>;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" kindref="member">top</ref>()-&gt;<ref refid="classDatum_1a772aa172fff8b5035e1e243eb046ae13" kindref="member">execute</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>exc<sp/>)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" kindref="member">raiseerror</ref>(<sp/>exc<sp/>);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" kindref="member">load</ref>()<sp/>&gt;<sp/>exitlevel<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>std::exception&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>C++<sp/>library<sp/>exception<sp/>occurred.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/>e.what()<sp/>);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*exitcodes,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" kindref="member">terminate</ref>(<sp/>exitcode<sp/>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/>...<sp/>)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" kindref="member">message</ref>(<sp/><ref refid="classSLIInterpreter_1a053e800c6bad0efff6edbb758daee802" kindref="member">M_FATAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SLIInterpreter&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>unknown<sp/>c++<sp/>exception<sp/>occurred.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" kindref="member">OStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" kindref="member">EStack</ref>.<ref refid="classTokenStack_1af045b79878ecca1701cc181d60f9c25e" kindref="member">dump</ref>(<sp/>std::cerr<sp/>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*exitcodes,<sp/></highlight><highlight class="stringliteral">&quot;exception&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a46a16463860bc84385c4b242778e8caa" kindref="member">terminate</ref>(<sp/>exitcode<sp/>);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>-&gt;<ref refid="classDictionary_1ae4575df896e8264944dd4d97e2fa4248" kindref="member">known</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exitcode&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>exitcode<sp/>=<sp/><ref refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" kindref="member">getValue&lt; long &gt;</ref>(<sp/>*<ref refid="classSLIInterpreter_1a6890364beb77618192657b9629675b0d" kindref="member">statusdict</ref>,<sp/></highlight><highlight class="stringliteral">&quot;exitcode&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>exitcode<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSLIInterpreter_1a1b18ca5366d260f74cff5e78eba704dc" kindref="member">errordict</ref>-&gt;<ref refid="classDictionary_1a94179a80d5b496321d68976e11dea85b" kindref="member">insert</ref>(<sp/><ref refid="classSLIInterpreter_1a50bb0ea5239c65d9e058a037718e49a4" kindref="member">quitbyerror_name</ref>,<sp/><ref refid="classSLIInterpreter_1a96c3eff127bf8a56860f05ff199cb6ff" kindref="member">baselookup</ref>(<sp/><ref refid="classSLIInterpreter_1aa4f57028a7915ce53b2b866b33361b0c" kindref="member">true_name</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exitcode;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/interpret.cc"/>
  </compounddef>
</doxygen>
