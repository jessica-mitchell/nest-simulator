<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1UnsupportedEvent" kind="class" language="C++" prot="public">
    <compoundname>nest::UnsupportedEvent</compoundname>
    <basecompoundref refid="classnest_1_1KernelException" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1UnsupportedEvent_1aafdb49264506e81d3bd1a06c5b7b4055" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::UnsupportedEvent::UnsupportedEvent</definition>
        <argsstring>()</argsstring>
        <name>UnsupportedEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="567" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1UnsupportedEvent_1aa759e50cfe3ab9fe207fd3c6954670b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::UnsupportedEvent::~UnsupportedEvent</definition>
        <argsstring>() override</argsstring>
        <name>~UnsupportedEvent</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="572" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="572" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1UnsupportedEvent_1af12f06a6ba7fbe0269e747a45ed69653" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::UnsupportedEvent::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="575" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.cpp" bodystart="244" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown by a <ref refid="classnest_1_1Connection" kindref="compound">Connection</ref> object if a connection with an unsupported event type is attempted. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::UnsupportedEvent</label>
        <link refid="classnest_1_1UnsupportedEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::UnsupportedEvent</label>
        <link refid="classnest_1_1UnsupportedEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="564" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="565" bodyend="576"/>
    <listofallmembers>
      <member refid="classnest_1_1KernelException_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>KernelException</name></member>
      <member refid="classnest_1_1UnsupportedEvent_1af12f06a6ba7fbe0269e747a45ed69653" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>message</name></member>
      <member refid="classnest_1_1UnsupportedEvent_1aafdb49264506e81d3bd1a06c5b7b4055" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>UnsupportedEvent</name></member>
      <member refid="classnest_1_1KernelException_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>~KernelException</name></member>
      <member refid="classnest_1_1UnsupportedEvent_1aa759e50cfe3ab9fe207fd3c6954670b8" prot="public" virt="non-virtual"><scope>nest::UnsupportedEvent</scope><name>~UnsupportedEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
