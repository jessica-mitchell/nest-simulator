<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="tokenarray_8cc" kind="file" language="C++">
    <compoundname>tokenarray.cc</compoundname>
    <includes refid="tokenarray_8h" local="yes">tokenarray.h</includes>
    <includes refid="doubledatum_8h" local="yes">doubledatum.h</includes>
    <includes refid="integerdatum_8h" local="yes">integerdatum.h</includes>
    <includes refid="stringdatum_8h" local="yes">stringdatum.h</includes>
    <incdepgraph>
      <node id="34">
        <label>aggregatedatum.h</label>
        <link refid="aggregatedatum_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>doubledatum.h</label>
        <link refid="doubledatum_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>genericdatum.h</label>
        <link refid="genericdatum_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>integerdatum.h</label>
        <link refid="integerdatum_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>numericdatum.h</label>
        <link refid="numericdatum_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="26">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>stringdatum.h</label>
        <link refid="stringdatum_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tokenarray.cc</label>
        <link refid="tokenarray_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>config.h</label>
      </node>
      <node id="4">
        <label>cstddef</label>
      </node>
      <node id="30">
        <label>cstdlib</label>
      </node>
      <node id="12">
        <label>deque</label>
      </node>
      <node id="16">
        <label>iomanip</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="23">
        <label>list</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="5">
        <label>typeinfo</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tokenarray_8cc_1a938f9e264112173708f8f234daf796ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const TokenArray &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classTokenArray" kindref="compound">TokenArray</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/tokenarray.cc" line="164" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/tokenarray.cc" bodystart="165" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>tokenarray.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tokenarray_8h" kindref="compound">tokenarray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="doubledatum_8h" kindref="compound">doubledatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integerdatum_8h" kindref="compound">integerdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stringdatum_8h" kindref="compound">stringdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>&amp;</highlight></codeline>
<codeline lineno="32" refid="classTokenArray_1a2d0b05c71bc8035989df7addd275269e" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1a2d0b05c71bc8035989df7addd275269e" kindref="member">TokenArray::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>a.data-&gt;add_reference();<sp/></highlight><highlight class="comment">//<sp/>protect<sp/>from<sp/>a=a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref>-&gt;<ref refid="classTokenArrayObj_1af2dbb1efca7e88d46fcac1dae94380bf" kindref="member">remove_reference</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref><sp/>=<sp/>a.data;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classTokenArray_1ac2fad261bed2992f7d07f95ded26108e" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1a3e82bc439751da225fcfbfad939c8e4b" kindref="member">TokenArray::TokenArray</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>long<sp/>&gt;&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>:<sp/>data(<sp/>new<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>(<sp/>a.size(),<sp/><ref refid="classToken" kindref="compound">Token</ref>(),<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>idt(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>a[<sp/>i<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*data<sp/>)[<sp/>i<sp/>].move(<sp/>idt<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classTokenArray_1a95d1115996946c9a761c9063d4f5f8a6" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1a3e82bc439751da225fcfbfad939c8e4b" kindref="member">TokenArray::TokenArray</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>size_t<sp/>&gt;&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>:<sp/>data(<sp/>new<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>(<sp/>a.size(),<sp/><ref refid="classToken" kindref="compound">Token</ref>(),<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>idt(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="integerdatum_8h_1ae9e7b850583ee9d781126bd856458aec" kindref="member">IntegerDatum</ref>(<sp/>a[<sp/>i<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*data<sp/>)[<sp/>i<sp/>].move(<sp/>idt<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classTokenArray_1a0fb260dcdeef82cd1e033d602d2db918" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1a3e82bc439751da225fcfbfad939c8e4b" kindref="member">TokenArray::TokenArray</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>:<sp/>data(<sp/>new<sp/><ref refid="classTokenArrayObj" kindref="compound">TokenArrayObj</ref>(<sp/>a.size(),<sp/><ref refid="classToken" kindref="compound">Token</ref>(),<sp/>0<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>a.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>ddt(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="doubledatum_8h_1aeffda9ec736bcfbe0e05c3b3ea56a858" kindref="member">DoubleDatum</ref>(<sp/>a[<sp/>i<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*data<sp/>)[<sp/>i<sp/>].move(<sp/>ddt<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classTokenArray_1aefcff88c417f333a27f79b1c67e29334" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1ae63545b1bf8e507c119886afdd2e6532" kindref="member">TokenArray::toVector</ref>(<sp/>std::vector&lt;<sp/>long<sp/>&gt;&amp;<sp/>a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>a.clear();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>a.reserve(<sp/><ref refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>idx<sp/>=<sp/><ref refid="classTokenArray_1a56314c4f339a8c3dfe3a21548d2de55a" kindref="member">begin</ref>();<sp/>idx<sp/>!=<sp/><ref refid="classTokenArray_1ad49f197e0fa072b80f71ea82a64671e5" kindref="member">end</ref>();<sp/>++idx<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>targetid<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>idx-&gt;datum()<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>targetid<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classTypeMismatch" kindref="compound">TypeMismatch</ref>(<sp/>d.gettypename().<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>(),<sp/>idx-&gt;datum()-&gt;gettypename().toString()<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>a.push_back(<sp/>targetid-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classTokenArray_1ae63545b1bf8e507c119886afdd2e6532" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1ae63545b1bf8e507c119886afdd2e6532" kindref="member">TokenArray::toVector</ref>(<sp/>std::vector&lt;<sp/>size_t<sp/>&gt;&amp;<sp/>a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="95"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>a.clear();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>a.reserve(<sp/><ref refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>idx<sp/>=<sp/><ref refid="classTokenArray_1a56314c4f339a8c3dfe3a21548d2de55a" kindref="member">begin</ref>();<sp/>idx<sp/>!=<sp/><ref refid="classTokenArray_1ad49f197e0fa072b80f71ea82a64671e5" kindref="member">end</ref>();<sp/>++idx<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>targetid<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>idx-&gt;datum()<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>targetid<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classTypeMismatch" kindref="compound">TypeMismatch</ref>(<sp/>d.gettypename().<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>(),<sp/>idx-&gt;datum()-&gt;gettypename().toString()<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>a.push_back(<sp/>targetid-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classTokenArray_1a19ff03c9e7e50ef6956f00ec64d05b56" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1ae63545b1bf8e507c119886afdd2e6532" kindref="member">TokenArray::toVector</ref>(<sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;<sp/>a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>a.clear();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>a.reserve(<sp/><ref refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>idx<sp/>=<sp/><ref refid="classTokenArray_1a56314c4f339a8c3dfe3a21548d2de55a" kindref="member">begin</ref>();<sp/>idx<sp/>!=<sp/><ref refid="classTokenArray_1ad49f197e0fa072b80f71ea82a64671e5" kindref="member">end</ref>();<sp/>++idx<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/>targetdd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>idx-&gt;datum()<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>targetdd<sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.push_back(<sp/>targetdd-&gt;<ref refid="classGenericDatum_1a2204e0bfb80429863ebbd37005235c1e" kindref="member">get</ref>()<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/>targetid<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classNumericDatum" kindref="compound">IntegerDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>idx-&gt;datum()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.push_back(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>targetid-&gt;get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classNumericDatum" kindref="compound">DoubleDatum</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classTypeMismatch" kindref="compound">TypeMismatch</ref>(<sp/>d.gettypename().<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>(),<sp/>idx-&gt;datum()-&gt;gettypename().toString()<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classTokenArray_1af199753863e7003db22d3d404642888c" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1ae63545b1bf8e507c119886afdd2e6532" kindref="member">TokenArray::toVector</ref>(<sp/>std::vector&lt;<sp/>std::string<sp/>&gt;&amp;<sp/>a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>a.clear();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>a.reserve(<sp/><ref refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" kindref="member">size</ref>()<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>idx<sp/>=<sp/><ref refid="classTokenArray_1a56314c4f339a8c3dfe3a21548d2de55a" kindref="member">begin</ref>();<sp/>idx<sp/>!=<sp/><ref refid="classTokenArray_1ad49f197e0fa072b80f71ea82a64671e5" kindref="member">end</ref>();<sp/>++idx<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string*<sp/>target<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/>std::string*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>idx-&gt;datum()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>target<sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAggregateDatum" kindref="compound">StringDatum</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classTypeMismatch" kindref="compound">TypeMismatch</ref>(<sp/>d.gettypename().<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>(),<sp/>idx-&gt;datum()-&gt;gettypename().toString()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>a.push_back(<sp/>*target<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classTokenArray_1a24eee3d8975f7d7dd01e6b26600bef6f" refkind="member"><highlight class="normal"><ref refid="classTokenArray_1a24eee3d8975f7d7dd01e6b26600bef6f" kindref="member">TokenArray::valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref><sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classTokenArray_1abb5dbf0be5157b0be8d53c382bf5914e" kindref="member">data</ref>-&gt;<ref refid="classTokenArrayObj_1aba732dcef9cd9ed9c1f899a500414dfc" kindref="member">valid</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="tokenarray_8cc_1a938f9e264112173708f8f234daf796ae" refkind="member"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="tokenarray_8cc_1a938f9e264112173708f8f234daf796ae" kindref="member">operator&lt;&lt;</ref>(<sp/>std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>&amp;<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>t<sp/>=<sp/>a.begin();<sp/>t<sp/>&lt;<sp/>a.end();<sp/>++t<sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*t<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/tokenarray.cc"/>
  </compounddef>
</doxygen>
