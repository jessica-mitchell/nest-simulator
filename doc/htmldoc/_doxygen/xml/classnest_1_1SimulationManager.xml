<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1SimulationManager" kind="class" language="C++" prot="public">
    <compoundname>nest::SimulationManager</compoundname>
    <basecompoundref refid="classnest_1_1ManagerInterface" prot="public" virt="non-virtual">nest::ManagerInterface</basecompoundref>
    <includes refid="simulation__manager_8h" local="no">simulation_manager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a97ea61dedc707341d8e48e30cf45d4d8" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::SimulationManager::clock_</definition>
        <argsstring></argsstring>
        <name>clock_</name>
        <qualifiedname>nest::SimulationManager::clock_</qualifiedname>
        <briefdescription>
<para><ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref> clock, updated once per slice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="193" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="193" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1af7057a3b0e6bfb57db74a5586a16a5bc" compoundref="simulation__manager_8h" startline="267" endline="270">get_clock</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1ad9a019b2da1005769418e4896fb43ec3" compoundref="simulation__manager_8h" startline="236" endline="239">get_slice_origin</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">get_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1aa9c689387262008a33c49dc010ca903a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::slice_</definition>
        <argsstring></argsstring>
        <name>slice_</name>
        <qualifiedname>nest::SimulationManager::slice_</qualifiedname>
        <briefdescription>
<para>current update slice </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="194" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="194" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a30893f339a2906aa28bf2e7d6a3c5b4d" compoundref="simulation__manager_8h" startline="261" endline="264">get_slice</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1adb14342f7dfb8a7daefbbac5f8f38bf7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::to_do_</definition>
        <argsstring></argsstring>
        <name>to_do_</name>
        <qualifiedname>nest::SimulationManager::to_do_</qualifiedname>
        <briefdescription>
<para>number of pending steps </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="195" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a51943acec0b1955dabaa2d8aa2346d71" compoundref="simulation__manager_8h" startline="286" endline="290">run_end_time</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" compoundref="simulation__manager_8h" startline="279" endline="283">run_start_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a72886a395537316a4226d4c92363de57" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::to_do_total_</definition>
        <argsstring></argsstring>
        <name>to_do_total_</name>
        <qualifiedname>nest::SimulationManager::to_do_total_</qualifiedname>
        <briefdescription>
<para>number of requested steps in current simulation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="196" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="196" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a30e26ef505cebeda402cbd1ee4aa360a" compoundref="simulation__manager_8h" startline="273" endline="276">run_duration</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" compoundref="simulation__manager_8h" startline="279" endline="283">run_start_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1ac4f127330c91e47112b00830b5e22745" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::from_step_</definition>
        <argsstring></argsstring>
        <name>from_step_</name>
        <qualifiedname>nest::SimulationManager::from_step_</qualifiedname>
        <briefdescription>
<para>update clock_+from_step&lt;=T&lt;clock_+to_step_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="197" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a47ceb3fa738660e247be133254b96f3a" compoundref="simulation__manager_8h" startline="293" endline="296">get_from_step</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">get_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1af08dde6b27d99fc89dc25166cf4e17bf" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::to_step_</definition>
        <argsstring></argsstring>
        <name>to_step_</name>
        <qualifiedname>nest::SimulationManager::to_step_</qualifiedname>
        <briefdescription>
<para>update clock_+from_step&lt;=T&lt;clock_+to_step_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="198" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="198" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a5785570f24fc1bac6255d225a0990f41" compoundref="simulation__manager_8h" startline="299" endline="302">get_to_step</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a1a8798bcd17d04f6d407cf20279f7243" prot="private" static="no" mutable="no">
        <type>timeval</type>
        <definition>timeval nest::SimulationManager::t_slice_begin_</definition>
        <argsstring></argsstring>
        <name>t_slice_begin_</name>
        <qualifiedname>nest::SimulationManager::t_slice_begin_</qualifiedname>
        <briefdescription>
<para>Wall-clock time at the begin of a time slice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="199" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a8e437ef64a5bf044d2f41c85cd7691a4" prot="private" static="no" mutable="no">
        <type>timeval</type>
        <definition>timeval nest::SimulationManager::t_slice_end_</definition>
        <argsstring></argsstring>
        <name>t_slice_end_</name>
        <qualifiedname>nest::SimulationManager::t_slice_end_</qualifiedname>
        <briefdescription>
<para>Wall-clock time at the end of time slice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="200" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1aa8fa0bf3c4c32c4f4c84dc034ec31d66" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long nest::SimulationManager::t_real_</definition>
        <argsstring></argsstring>
        <name>t_real_</name>
        <qualifiedname>nest::SimulationManager::t_real_</qualifiedname>
        <briefdescription>
<para>Accumulated wall-clock time spent simulating (in us) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="201" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1ae4d116c1207f5a9b3ebd5cdae5b95cf6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::prepared_</definition>
        <argsstring></argsstring>
        <name>prepared_</name>
        <qualifiedname>nest::SimulationManager::prepared_</qualifiedname>
        <briefdescription>
<para>Indicates whether the <ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref> is in a prepared state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="202" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="202" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a5181fce49a9d987f7822947db90aa4b5" compoundref="simulation__manager_8h" startline="255" endline="258">has_been_prepared</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a0c6956a4524b1d9ba989587a8fd6677a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::simulating_</definition>
        <argsstring></argsstring>
        <name>simulating_</name>
        <qualifiedname>nest::SimulationManager::simulating_</qualifiedname>
        <briefdescription>
<para>true if simulation in progress </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="204" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="204" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">get_time</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a51943acec0b1955dabaa2d8aa2346d71" compoundref="simulation__manager_8h" startline="286" endline="290">run_end_time</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" compoundref="simulation__manager_8h" startline="279" endline="283">run_start_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1ae930e691156acb078cc15613656dd05c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::simulated_</definition>
        <argsstring></argsstring>
        <name>simulated_</name>
        <qualifiedname>nest::SimulationManager::simulated_</qualifiedname>
        <briefdescription>
<para>indicates whether the <ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref> has already been simulated for sometime </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="205" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="205" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a3f7210530c3638bdb4dfe94cdc96ca8e" compoundref="simulation__manager_8h" startline="249" endline="252">has_been_simulated</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a8345ed7e7789b39c2c84be85258dbd23" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::inconsistent_state_</definition>
        <argsstring></argsstring>
        <name>inconsistent_state_</name>
        <qualifiedname>nest::SimulationManager::inconsistent_state_</qualifiedname>
        <briefdescription>
<para>true after exception during update_ simulation must not be resumed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="207" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1aaa655ac1423b979ea7a4f030266580f8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::print_time_</definition>
        <argsstring></argsstring>
        <name>print_time_</name>
        <qualifiedname>nest::SimulationManager::print_time_</qualifiedname>
        <briefdescription>
<para>Indicates whether time should be printed during simulations (or not) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="209" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a15163b5d9bc447c8cc1dd07a7c9841a4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SimulationManager::use_wfr_</definition>
        <argsstring></argsstring>
        <name>use_wfr_</name>
        <qualifiedname>nest::SimulationManager::use_wfr_</qualifiedname>
        <briefdescription>
<para>Indicates wheter waveform relaxation is used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="211" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="211" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1ade99232392fc1f09ecb6f8e18d5474b8" compoundref="simulation__manager_8h" startline="305" endline="308">use_wfr</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a0346265275219381f2834c985097715e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SimulationManager::wfr_comm_interval_</definition>
        <argsstring></argsstring>
        <name>wfr_comm_interval_</name>
        <qualifiedname>nest::SimulationManager::wfr_comm_interval_</qualifiedname>
        <briefdescription>
<para>Desired waveform relaxation communication interval (in ms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="212" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="212" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1ad45c6ba31aecb3dd3d5c3ecc07979450" compoundref="simulation__manager_8h" startline="311" endline="314">get_wfr_comm_interval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a42731283a13685fe0b29ed3839a4409b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SimulationManager::wfr_tol_</definition>
        <argsstring></argsstring>
        <name>wfr_tol_</name>
        <qualifiedname>nest::SimulationManager::wfr_tol_</qualifiedname>
        <briefdescription>
<para>Convergence tolerance of waveform relaxation method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="214" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="214" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1a3d247a4135461fbf1c44bb89adca9135" compoundref="simulation__manager_8h" startline="317" endline="320">get_wfr_tol</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1ae12b669102e2b027eb0fffb0b20e3479" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long nest::SimulationManager::wfr_max_iterations_</definition>
        <argsstring></argsstring>
        <name>wfr_max_iterations_</name>
        <qualifiedname>nest::SimulationManager::wfr_max_iterations_</qualifiedname>
        <briefdescription>
<para>maximal number of iterations used for waveform relaxation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="215" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a1c19981717cd7aa779fd79a25d7b34c9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::SimulationManager::wfr_interpolation_order_</definition>
        <argsstring></argsstring>
        <name>wfr_interpolation_order_</name>
        <qualifiedname>nest::SimulationManager::wfr_interpolation_order_</qualifiedname>
        <briefdescription>
<para>interpolation order for waveform relaxation method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="217" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="217" bodyend="-1"/>
        <referencedby refid="classnest_1_1SimulationManager_1aa1307dbcfa760da257d3359f66b09d14" compoundref="simulation__manager_8h" startline="323" endline="326">get_wfr_interpolation_order</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a0692804c9e044f30e3974ed5cc383f6b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SimulationManager::update_time_limit_</definition>
        <argsstring></argsstring>
        <name>update_time_limit_</name>
        <qualifiedname>nest::SimulationManager::update_time_limit_</qualifiedname>
        <briefdescription>
<para>throw exception if single update cycle takes longer than update_time_limit_ (seconds, default inf) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="219" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a6c7e6dbcf801d9c0e087f23b97a95dea" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SimulationManager::min_update_time_</definition>
        <argsstring></argsstring>
        <name>min_update_time_</name>
        <qualifiedname>nest::SimulationManager::min_update_time_</qualifiedname>
        <briefdescription>
<para>shortest update time seen so far (seconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="221" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a8f012147b5482581534080d39f69d91b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SimulationManager::max_update_time_</definition>
        <argsstring></argsstring>
        <name>max_update_time_</name>
        <qualifiedname>nest::SimulationManager::max_update_time_</qualifiedname>
        <briefdescription>
<para>longest update time seen so far (seconds) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="222" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1a95067dd27eb4d4539b7be8a4c0d2135f" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Stopwatch" kindref="compound">Stopwatch</ref></type>
        <definition>Stopwatch nest::SimulationManager::sw_simulate_</definition>
        <argsstring></argsstring>
        <name>sw_simulate_</name>
        <qualifiedname>nest::SimulationManager::sw_simulate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="225" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1SimulationManager_1ad0eb577c568b61132f8feb0f68412d27" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Stopwatch" kindref="compound">Stopwatch</ref></type>
        <definition>Stopwatch nest::SimulationManager::sw_communicate_prepare_</definition>
        <argsstring></argsstring>
        <name>sw_communicate_prepare_</name>
        <qualifiedname>nest::SimulationManager::sw_communicate_prepare_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="226" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a5a0a4ac275c615dd63e7e8738a5fce73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::SimulationManager::SimulationManager</definition>
        <argsstring>()</argsstring>
        <name>SimulationManager</name>
        <qualifiedname>nest::SimulationManager::SimulationManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="50" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="44" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a00834a4b46f5c2c47591efb7b6dda17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <qualifiedname>nest::SimulationManager::initialize</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79">initialize</reimplements>
        <briefdescription>
<para>Prepare manager for operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, the manager should be completely initialized and &quot;ready for action&quot;.</para>
<para><simplesect kind="note"><para>Initialization of any given manager may depend on other managers having been initialized before. <ref refid="classnest_1_1KernelManager_1aa731562f03c98d8fa67f1d530056ede2" kindref="member">KernelManager::initialize()</ref> is responsible for calling the initialization routines on the specific managers in correct order.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1SimulationManager_1ab8922b68742b365abda59437dbfa8ae8" kindref="member">finalize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="52" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="69" bodyend="89"/>
        <references refid="classnest_1_1Time_1a7c99d03e93b082552437e836c5b8ac34" compoundref="nest__time_8cpp" startline="131" endline="140">nest::Time::reset_resolution</references>
        <references refid="classnest_1_1Time_1a6ae59bc0875851d47b36c82cfdceec85" compoundref="nest__time_8cpp" startline="186" endline="199">nest::Time::reset_to_defaults</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1ab8922b68742b365abda59437dbfa8ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <qualifiedname>nest::SimulationManager::finalize</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606">finalize</reimplements>
        <briefdescription>
<para>Take down manager after operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, all dynamic data structures created by the manager shall be deallocated and containers emptied. Plain variables need not be reset.</para>
<para><simplesect kind="note"><para>Finalization of any given manager may depend on other managers not having been finalized yet. <ref refid="classnest_1_1KernelManager_1a9e1cccd4670b1da1f68208afb5e6622f" kindref="member">KernelManager::finalize()</ref> is responsible for calling the initialization routines on the specific managers in correct order, i.e., the opposite order of <ref refid="classnest_1_1SimulationManager_1a00834a4b46f5c2c47591efb7b6dda17c" kindref="member">initialize()</ref> calls.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1SimulationManager_1a00834a4b46f5c2c47591efb7b6dda17c" kindref="member">initialize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="53" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a8e68ef9b61dd3e17a09829333503b6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::SimulationManager::set_status</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193">set_status</reimplements>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="54" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="116" bodyend="395"/>
        <references refid="namespacenest_1_1names_1a108ad3bd5d0d682c0a46d8cd0d35d443" compoundref="nest__names_8h" startline="104">nest::names::biological_time</references>
        <references refid="classnest_1_1ConnectionManager_1a38c4581862f4bbc6e43c83daaa2453a2" compoundref="connection__manager_8cpp" startline="375" endline="381">nest::ConnectionManager::calibrate</references>
        <references refid="classnest_1_1ModelManager_1af51df51b09ebbf233be7af6bd39137b1" compoundref="model__manager_8cpp" startline="483">nest::ModelManager::calibrate</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9de27ed5f42c60efc6875208aa86c813" compoundref="event__delivery__manager_8cpp" startline="166" endline="176">nest::EventDeliveryManager::configure_spike_data_buffers</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1af3938e02f5caf1781b3f2ddae0aadd6d" compoundref="nest__time_8h" startline="444" endline="447">nest::Time::get_ms_per_tic</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1Time_1a4151d087f2f2cee5b4992780a247db26" compoundref="nest__time_8h" startline="506" endline="509">nest::Time::get_tics_per_ms</references>
        <references refid="numerics_8cpp_1ab91178f5bdf7f2414d485de2cb1383a5" compoundref="numerics_8cpp" startline="114" endline="128">is_integer</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" compoundref="logging_8h" startline="54">nest::M_INFO</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaacd7f6853f3c5659533a75bc712c3b" compoundref="logging_8h" startline="57">nest::M_WARNING</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="namespacenest_1_1names_1a00a7196cfef50fb2ccf5574585e35411" compoundref="nest__names_8h" startline="380">nest::names::print_time</references>
        <references refid="namespacenest_1_1names_1aa65460c3bfef037823696fb7f9b304b7" compoundref="nest__names_8h" startline="416">nest::names::resolution</references>
        <references refid="classnest_1_1Time_1a88a842c2c20510cfb5155abe250c7e43" compoundref="nest__time_8cpp" startline="105" endline="120">nest::Time::set_resolution</references>
        <references refid="namespacenest_1_1names_1aadfa63c04702a7b38ea78382350908b4" compoundref="nest__names_8h" startline="552">nest::names::tics_per_ms</references>
        <references refid="namespacenest_1a0f3b2839c35955d06d818b569e290f8d" compoundref="nest__time_8h" startline="568">nest::TimeZero</references>
        <references refid="namespacenest_1_1names_1a7fa2cf54202ae78d51de1c4919cc0ad4" compoundref="nest__names_8h" startline="580">nest::names::update_time_limit</references>
        <references refid="namespacenest_1_1names_1a179d09feb9ecd5fef03e90eee65d2b4f" compoundref="nest__names_8h" startline="583">nest::names::use_wfr</references>
        <references refid="namespacenest_1_1names_1a241d2f88051b8e60c0943e874a168d38" compoundref="nest__names_8h" startline="612">nest::names::wfr_comm_interval</references>
        <references refid="namespacenest_1_1names_1ad189734a1f609380fdbdbddcbe645bbd" compoundref="nest__names_8h" startline="613">nest::names::wfr_interpolation_order</references>
        <references refid="namespacenest_1_1names_1a2ca92dca4fd7c6ebdaf770119371b809" compoundref="nest__names_8h" startline="614">nest::names::wfr_max_iterations</references>
        <references refid="namespacenest_1_1names_1a1a2f73160a35837584a83d8081ebb9f3" compoundref="nest__names_8h" startline="615">nest::names::wfr_tol</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1af0b47533eada795a85ee39598f35d158" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) override</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::SimulationManager::get_status</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80">get_status</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="55" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="398" bodyend="431"/>
        <references refid="namespacenest_1_1names_1a108ad3bd5d0d682c0a46d8cd0d35d443" compoundref="nest__names_8h" startline="104">nest::names::biological_time</references>
        <references refid="classnest_1_1Time_1af3938e02f5caf1781b3f2ddae0aadd6d" compoundref="nest__time_8h" startline="444" endline="447">nest::Time::get_ms_per_tic</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1Time_1a4151d087f2f2cee5b4992780a247db26" compoundref="nest__time_8h" startline="506" endline="509">nest::Time::get_tics_per_ms</references>
        <references refid="classnest_1_1Time_1ad66e429cdd2e6a1c234756936d225817" compoundref="nest__time_8h" startline="501" endline="504">nest::Time::get_tics_per_step</references>
        <references refid="classnest_1_1Time_1ae9dee1ca672a6379a3864633c5da2ce9" compoundref="nest__time_8h" startline="434" endline="437">nest::Time::max</references>
        <references refid="namespacenest_1_1names_1a5c673d018ae7b07f8c02f57176f9e4bd" compoundref="nest__names_8h" startline="305">nest::names::max_update_time</references>
        <references refid="classnest_1_1Time_1aaaff952b882c00a4780f337f2742f3ea" compoundref="nest__time_8h" startline="439" endline="442">nest::Time::min</references>
        <references refid="namespacenest_1_1names_1adf56795d02f989c80aea4a105531b482" compoundref="nest__names_8h" startline="312">nest::names::min_update_time</references>
        <references refid="namespacenest_1_1names_1aab47c037ac890c037d7fe71ff5d6aa4f" compoundref="nest__names_8h" startline="316">nest::names::ms_per_tic</references>
        <references refid="namespacenest_1_1names_1ab1f47baab88d9b5c2cbb6ccacd5de0dd" compoundref="nest__names_8h" startline="379">nest::names::prepared</references>
        <references refid="namespacenest_1_1names_1a00a7196cfef50fb2ccf5574585e35411" compoundref="nest__names_8h" startline="380">nest::names::print_time</references>
        <references refid="namespacenest_1_1names_1aa65460c3bfef037823696fb7f9b304b7" compoundref="nest__names_8h" startline="416">nest::names::resolution</references>
        <references refid="namespacenest_1_1names_1ac2980d1f198167c6fe62ca698963f6a7" compoundref="nest__names_8h" startline="469">nest::names::T_max</references>
        <references refid="namespacenest_1_1names_1ad3d0d5e335296c65e90e824c415770b1" compoundref="nest__names_8h" startline="470">nest::names::T_min</references>
        <references refid="namespacenest_1_1names_1aadfa63c04702a7b38ea78382350908b4" compoundref="nest__names_8h" startline="552">nest::names::tics_per_ms</references>
        <references refid="namespacenest_1_1names_1a7f415476879341874a7d6fe2938e6d09" compoundref="nest__names_8h" startline="553">nest::names::tics_per_step</references>
        <references refid="namespacenest_1_1names_1ae56e8d3deb0250ec9abda1a09396d84a" compoundref="nest__names_8h" startline="563">nest::names::time_communicate_prepare</references>
        <references refid="namespacenest_1_1names_1a572f9ca955445760587c09cfdca57d7c" compoundref="nest__names_8h" startline="567">nest::names::time_simulate</references>
        <references refid="namespacenest_1_1names_1a7a9131caf8f6ae9436845b5e75e4103c" compoundref="nest__names_8h" startline="569">nest::names::to_do</references>
        <references refid="namespacenest_1_1names_1a7fa2cf54202ae78d51de1c4919cc0ad4" compoundref="nest__names_8h" startline="580">nest::names::update_time_limit</references>
        <references refid="namespacenest_1_1names_1a179d09feb9ecd5fef03e90eee65d2b4f" compoundref="nest__names_8h" startline="583">nest::names::use_wfr</references>
        <references refid="namespacenest_1_1names_1a241d2f88051b8e60c0943e874a168d38" compoundref="nest__names_8h" startline="612">nest::names::wfr_comm_interval</references>
        <references refid="namespacenest_1_1names_1ad189734a1f609380fdbdbddcbe645bbd" compoundref="nest__names_8h" startline="613">nest::names::wfr_interpolation_order</references>
        <references refid="namespacenest_1_1names_1a2ca92dca4fd7c6ebdaf770119371b809" compoundref="nest__names_8h" startline="614">nest::names::wfr_max_iterations</references>
        <references refid="namespacenest_1_1names_1a1a2f73160a35837584a83d8081ebb9f3" compoundref="nest__names_8h" startline="615">nest::names::wfr_tol</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a556718d208f5f426cee43fb948c79a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::assert_valid_simtime</definition>
        <argsstring>(Time const &amp;)</argsstring>
        <name>assert_valid_simtime</name>
        <qualifiedname>nest::SimulationManager::assert_valid_simtime</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
<para>check for errors in time before run </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1KernelException" kindref="compound">KernelException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if illegal time passed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="61" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="500" bodyend="538"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1Time_1a544e7b940882df61da1e7fcb94b660cd" compoundref="nest__time_8h" startline="385" endline="388">nest::Time::is_finite</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="classnest_1_1Time_1ae9dee1ca672a6379a3864633c5da2ce9" compoundref="nest__time_8h" startline="434" endline="437">nest::Time::max</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::prepare</definition>
        <argsstring>() override</argsstring>
        <name>prepare</name>
        <qualifiedname>nest::SimulationManager::prepare</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745">prepare</reimplements>
        <briefdescription>
<para>Initialize simulation for a set of run calls. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be called before a sequence of runs, and again after cleanup. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="73" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="434" bodyend="497"/>
        <references refid="classnest_1_1NodeManager_1a834b299d80a29979238589e61d413378" compoundref="node__manager_8cpp" startline="703" endline="712">nest::NodeManager::check_wfr_use</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9de27ed5f42c60efc6875208aa86c813" compoundref="event__delivery__manager_8cpp" startline="166" endline="176">nest::EventDeliveryManager::configure_spike_data_buffers</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1NodeManager_1a801fd82238c17423ed9dfda3f512602a" compoundref="node__manager_8cpp" startline="496" endline="564">nest::NodeManager::ensure_valid_thread_local_ids</references>
        <references refid="classnest_1_1MUSICManager_1a9539cdb90b5fbf84ad1c5c03ef7f5e18" compoundref="music__manager_8cpp" startline="108" endline="110">nest::MUSICManager::enter_runtime</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="classnest_1_1EventDeliveryManager_1a0c223a5656aa437fb3f358230e2834c2" compoundref="event__delivery__manager_8cpp" startline="198" endline="228">nest::EventDeliveryManager::init_moduli</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="classnest_1_1KernelManager_1a1ee79f33da362c06ce4d394afbef2ae8" compoundref="kernel__manager_8h" startline="251">nest::KernelManager::music_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1NodeManager_1a5024846165430a49270e72e139407db5" compoundref="node__manager_8cpp" startline="608" endline="668">nest::NodeManager::prepare_nodes</references>
        <references refid="classnest_1_1EventDeliveryManager_1aee4c15d750af6466de783ee2a1a7ead5" compoundref="event__delivery__manager_8cpp" startline="283" endline="290">nest::EventDeliveryManager::reset_timers_for_dynamics</references>
        <references refid="classnest_1_1ConnectionManager_1adb41052adde337156940c1cccb0dd157" compoundref="connection__manager_8cpp" startline="461" endline="491">nest::ConnectionManager::update_delay_extrema_</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::run</definition>
        <argsstring>(Time const &amp;)</argsstring>
        <name>run</name>
        <qualifiedname>nest::SimulationManager::run</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
<para>Run a simulation for another <computeroutput><ref refid="classnest_1_1Time" kindref="compound">Time</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be repeated ad infinitum with calls to <ref refid="classnest_1_1SimulationManager_1af0b47533eada795a85ee39598f35d158" kindref="member">get_status()</ref>, but any changes to the network are undefined, leading serious risk of incorrect results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="80" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="541" bodyend="597"/>
        <references refid="classnest_1_1RandomManager_1a76054450fb204654be7784e00f3e35c5" compoundref="random__manager_8cpp" startline="190" endline="229">nest::RandomManager::check_rng_synchrony</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="253">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaacd7f6853f3c5659533a75bc712c3b" compoundref="logging_8h" startline="57">nest::M_WARNING</references>
        <references refid="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" compoundref="io__manager_8cpp" startline="241" endline="251">nest::IOManager::post_run_hook</references>
        <references refid="classnest_1_1IOManager_1a0afe64b47ac69a05d8fa168cc07b52b4" compoundref="io__manager_8cpp" startline="228" endline="238">nest::IOManager::pre_run_hook</references>
        <references refid="classnest_1_1KernelManager_1a9b688b52b6a9c1673051084e681720de" compoundref="kernel__manager_8h" startline="244">nest::KernelManager::random_manager</references>
        <references refid="classnest_1_1EventDeliveryManager_1ab2856ff263d5e398c21939cf8fe96d8f" compoundref="event__delivery__manager_8cpp" startline="266" endline="272">nest::EventDeliveryManager::reset_counters</references>
        <referencedby refid="namespacenest_1a19ac46b17d6b9cc90262297f847f1901" compoundref="nest_8cpp" startline="236" endline="256">nest::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::cleanup</definition>
        <argsstring>() override</argsstring>
        <name>cleanup</name>
        <qualifiedname>nest::SimulationManager::cleanup</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147">cleanup</reimplements>
        <briefdescription>
<para>Closes a set of runs, doing finalizations such as file closures. </para>
        </briefdescription>
        <detaileddescription>
<para>After <ref refid="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce" kindref="member">cleanup()</ref> is called, no more <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">run()</ref>s can be called before another <ref refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" kindref="member">prepare()</ref> call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="87" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="600" bodyend="617"/>
        <references refid="classnest_1_1NodeManager_1a4dcd6368bfc2a47cefae88e7264a9893" compoundref="node__manager_8cpp" startline="689" endline="700">nest::NodeManager::finalize_nodes</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1ade99232392fc1f09ecb6f8e18d5474b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SimulationManager::use_wfr</definition>
        <argsstring>() const</argsstring>
        <name>use_wfr</name>
        <qualifiedname>nest::SimulationManager::use_wfr</qualifiedname>
        <briefdescription>
<para>Returns true if waveform relaxation is used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="92" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="305" bodyend="308"/>
        <references refid="classnest_1_1SimulationManager_1a15163b5d9bc447c8cc1dd07a7c9841a4" compoundref="simulation__manager_8h" startline="211">use_wfr_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1ad45c6ba31aecb3dd3d5c3ecc07979450" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::SimulationManager::get_wfr_comm_interval</definition>
        <argsstring>() const</argsstring>
        <name>get_wfr_comm_interval</name>
        <qualifiedname>nest::SimulationManager::get_wfr_comm_interval</qualifiedname>
        <briefdescription>
<para>Get the desired communication interval for the waveform relaxation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="97" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="311" bodyend="314"/>
        <references refid="classnest_1_1SimulationManager_1a0346265275219381f2834c985097715e" compoundref="simulation__manager_8h" startline="212">wfr_comm_interval_</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a20dcb39b4807eb02c6d55d737f4afa83" compoundref="connector__model__impl_8h" startline="135" endline="174">nest::GenericConnectorModel&lt; ConnectionT &gt;::used_default_delay</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a3d247a4135461fbf1c44bb89adca9135" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::SimulationManager::get_wfr_tol</definition>
        <argsstring>() const</argsstring>
        <name>get_wfr_tol</name>
        <qualifiedname>nest::SimulationManager::get_wfr_tol</qualifiedname>
        <briefdescription>
<para>Get the convergence tolerance of the waveform relaxation method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="102" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="317" bodyend="320"/>
        <references refid="classnest_1_1SimulationManager_1a42731283a13685fe0b29ed3839a4409b" compoundref="simulation__manager_8h" startline="214">wfr_tol_</references>
        <referencedby refid="classnest_1_1rate__neuron__ipn_1a2ba90a0d2806a0379cbd1e11388abd08" compoundref="rate__neuron__ipn__impl_8h" startline="268" endline="395">nest::rate_neuron_ipn&lt; TNonlinearities &gt;::update_</referencedby>
        <referencedby refid="classnest_1_1rate__neuron__opn_1aa8f19c2d41620fedcbe60467f3300f04" compoundref="rate__neuron__opn__impl_8h" startline="244" endline="368">nest::rate_neuron_opn&lt; TNonlinearities &gt;::update_</referencedby>
        <referencedby refid="classnest_1_1rate__transformer__node_1a56f655c73fcf14082776b6650e21d420" compoundref="rate__transformer__node__impl_8h" startline="179" endline="263">nest::rate_transformer_node&lt; TNonlinearities &gt;::update_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1aa1307dbcfa760da257d3359f66b09d14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::SimulationManager::get_wfr_interpolation_order</definition>
        <argsstring>() const</argsstring>
        <name>get_wfr_interpolation_order</name>
        <qualifiedname>nest::SimulationManager::get_wfr_interpolation_order</qualifiedname>
        <briefdescription>
<para>Get the interpolation order of the waveform relaxation method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="107" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="323" bodyend="326"/>
        <references refid="classnest_1_1SimulationManager_1a1c19981717cd7aa779fd79a25d7b34c9" compoundref="simulation__manager_8h" startline="217">wfr_interpolation_order_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1ad9a019b2da1005769418e4896fb43ec3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        <definition>Time const  &amp; nest::SimulationManager::get_slice_origin</definition>
        <argsstring>() const</argsstring>
        <name>get_slice_origin</name>
        <qualifiedname>nest::SimulationManager::get_slice_origin</qualifiedname>
        <briefdescription>
<para>Get the time at the beginning of the current time slice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="112" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="236" bodyend="239"/>
        <references refid="classnest_1_1SimulationManager_1a97ea61dedc707341d8e48e30cf45d4d8" compoundref="simulation__manager_8h" startline="193">clock_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a47d174cc3f78508f825c44806b4bf247" compoundref="connection__manager_8cpp" startline="1512" endline="1554">nest::ConnectionManager::deliver_secondary_events</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__alpha__ps_1a7d16fbbb770a2133162fcd75eb85f3fd" compoundref="iaf__psc__alpha__ps_8cpp" startline="458" endline="472">nest::iaf_psc_alpha_ps::handle</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__exp__ps_1a0fcd90d605efb9571c40de45ce473f20" compoundref="iaf__psc__exp__ps_8cpp" startline="433" endline="447">nest::iaf_psc_exp_ps::handle</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a6c271be348584c8dc5f198810817de00" compoundref="iaf__psc__exp__ps__lossless_8cpp" startline="477" endline="491">nest::iaf_psc_exp_ps_lossless::handle</referencedby>
        <referencedby refid="classnest_1_1parrot__neuron__ps_1aaf63cdd0e51747b4929ba94afe942880" compoundref="parrot__neuron__ps_8cpp" startline="106" endline="124">nest::parrot_neuron_ps::handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a42b4794c8502b65aa8df978a5158e379" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const</type>
        <definition>nest::Time const nest::SimulationManager::get_previous_slice_origin</definition>
        <argsstring>() const</argsstring>
        <name>get_previous_slice_origin</name>
        <qualifiedname>nest::SimulationManager::get_previous_slice_origin</qualifiedname>
        <briefdescription>
<para>Get the time at the beginning of the previous time slice. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="117" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="1126" bodyend="1129"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const</type>
        <definition>Time const nest::SimulationManager::get_time</definition>
        <argsstring>() const</argsstring>
        <name>get_time</name>
        <qualifiedname>nest::SimulationManager::get_time</qualifiedname>
        <briefdescription>
<para>Precise time of simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The precise time of the simulation is defined only while the simulation is not in progress. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="124" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="242" bodyend="246"/>
        <references refid="classnest_1_1SimulationManager_1a97ea61dedc707341d8e48e30cf45d4d8" compoundref="simulation__manager_8h" startline="193">clock_</references>
        <references refid="classnest_1_1SimulationManager_1ac4f127330c91e47112b00830b5e22745" compoundref="simulation__manager_8h" startline="197">from_step_</references>
        <references refid="classnest_1_1SimulationManager_1a0c6956a4524b1d9ba989587a8fd6677a" compoundref="simulation__manager_8h" startline="204">simulating_</references>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1a9c3e3fa0c2f2fb7c919092dbd0c56f53" compoundref="recording__backend__sionlib_8cpp" startline="267" endline="424">nest::RecordingBackendSIONlib::close_files_</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1a8910884c33fc3d3c41782201d6c2b927" compoundref="recording__backend__sionlib_8cpp" startline="145" endline="258">nest::RecordingBackendSIONlib::open_files_</referencedby>
        <referencedby refid="classnest_1_1ac__generator_1ad46b2ee10a45923c52c9ec2ba29b4de8" compoundref="ac__generator_8cpp" startline="177" endline="199">nest::ac_generator::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1noise__generator_1a885126416c46cb6a12072bb918414837" compoundref="noise__generator_8cpp" startline="225" endline="254">nest::noise_generator::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1pulsepacket__generator_1a1250869dd296817cdd236764ed490485" compoundref="pulsepacket__generator_8cpp" startline="132" endline="163">nest::pulsepacket_generator::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1sinusoidal__poisson__generator_1a9c2201ffb8fe2b96cc68f0d9afdb9005" compoundref="sinusoidal__poisson__generator_8cpp" startline="210" endline="227">nest::sinusoidal_poisson_generator::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a51943acec0b1955dabaa2d8aa2346d71" compoundref="simulation__manager_8h" startline="286" endline="290">run_end_time</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" compoundref="simulation__manager_8h" startline="279" endline="283">run_start_time</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a3f7210530c3638bdb4dfe94cdc96ca8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SimulationManager::has_been_simulated</definition>
        <argsstring>() const</argsstring>
        <name>has_been_simulated</name>
        <qualifiedname>nest::SimulationManager::has_been_simulated</qualifiedname>
        <briefdescription>
<para>Return true, if the <ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref> has already been simulated for some time. </para>
        </briefdescription>
        <detaileddescription>
<para>This does NOT indicate that simulate has been called (i.e. if Simulate is called with 0 as argument, the flag is still set to false.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="131" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="249" bodyend="252"/>
        <references refid="classnest_1_1SimulationManager_1ae930e691156acb078cc15613656dd05c" compoundref="simulation__manager_8h" startline="205">simulated_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a5181fce49a9d987f7822947db90aa4b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SimulationManager::has_been_prepared</definition>
        <argsstring>() const</argsstring>
        <name>has_been_prepared</name>
        <qualifiedname>nest::SimulationManager::has_been_prepared</qualifiedname>
        <briefdescription>
<para>Return true, if the <ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref> has been prepared for simulation. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the case from the time when the Prepare function is called until the simulation context is left by a call to Cleanup. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="138" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="255" bodyend="258"/>
        <references refid="classnest_1_1SimulationManager_1ae4d116c1207f5a9b3ebd5cdae5b95cf6" compoundref="simulation__manager_8h" startline="202">prepared_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a30893f339a2906aa28bf2e7d6a3c5b4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::SimulationManager::get_slice</definition>
        <argsstring>() const</argsstring>
        <name>get_slice</name>
        <qualifiedname>nest::SimulationManager::get_slice</qualifiedname>
        <briefdescription>
<para>Get slice number. </para>
        </briefdescription>
        <detaileddescription>
<para>Increased by one for each slice. Can be used to choose alternating buffers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="144" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="261" bodyend="264"/>
        <references refid="classnest_1_1SimulationManager_1aa9c689387262008a33c49dc010ca903a" compoundref="simulation__manager_8h" startline="194">slice_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a9a140d30b7f622d0290c78dd211eb3d2" compoundref="event__delivery__manager__impl_8h" startline="177" endline="180">nest::EventDeliveryManager::write_toggle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1af7057a3b0e6bfb57db74a5586a16a5bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        <definition>Time const  &amp; nest::SimulationManager::get_clock</definition>
        <argsstring>() const</argsstring>
        <name>get_clock</name>
        <qualifiedname>nest::SimulationManager::get_clock</qualifiedname>
        <briefdescription>
<para>Return current simulation time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="148" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="267" bodyend="270"/>
        <references refid="classnest_1_1SimulationManager_1a97ea61dedc707341d8e48e30cf45d4d8" compoundref="simulation__manager_8h" startline="193">clock_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1aba9898648e890ea2ac369891420259d9" compoundref="event__delivery__manager_8cpp" startline="574" endline="660">nest::EventDeliveryManager::deliver_events_</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0c223a5656aa437fb3f358230e2834c2" compoundref="event__delivery__manager_8cpp" startline="198" endline="228">nest::EventDeliveryManager::init_moduli</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a18e210cef727c0b93605fa3dcd941a28" compoundref="event__delivery__manager_8cpp" startline="239" endline="263">nest::EventDeliveryManager::update_moduli</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a30e26ef505cebeda402cbd1ee4aa360a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::SimulationManager::run_duration</definition>
        <argsstring>() const</argsstring>
        <name>run_duration</name>
        <qualifiedname>nest::SimulationManager::run_duration</qualifiedname>
        <briefdescription>
<para>Get the simulation duration in the current call to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">run()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="153" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="273" bodyend="276"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1SimulationManager_1a72886a395537316a4226d4c92363de57" compoundref="simulation__manager_8h" startline="196">to_do_total_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::SimulationManager::run_start_time</definition>
        <argsstring>() const</argsstring>
        <name>run_start_time</name>
        <qualifiedname>nest::SimulationManager::run_start_time</qualifiedname>
        <briefdescription>
<para>Get the start time of the current call to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">run()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="158" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="279" bodyend="283"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">get_time</references>
        <references refid="classnest_1_1SimulationManager_1a0c6956a4524b1d9ba989587a8fd6677a" compoundref="simulation__manager_8h" startline="204">simulating_</references>
        <references refid="classnest_1_1SimulationManager_1adb14342f7dfb8a7daefbbac5f8f38bf7" compoundref="simulation__manager_8h" startline="195">to_do_</references>
        <references refid="classnest_1_1SimulationManager_1a72886a395537316a4226d4c92363de57" compoundref="simulation__manager_8h" startline="196">to_do_total_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a51943acec0b1955dabaa2d8aa2346d71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time nest::SimulationManager::run_end_time</definition>
        <argsstring>() const</argsstring>
        <name>run_end_time</name>
        <qualifiedname>nest::SimulationManager::run_end_time</qualifiedname>
        <briefdescription>
<para>Get the simulation&apos;s time at the end of the current call to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">run()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="163" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="286" bodyend="290"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" compoundref="simulation__manager_8h" startline="242" endline="246">get_time</references>
        <references refid="classnest_1_1SimulationManager_1a0c6956a4524b1d9ba989587a8fd6677a" compoundref="simulation__manager_8h" startline="204">simulating_</references>
        <references refid="classnest_1_1SimulationManager_1adb14342f7dfb8a7daefbbac5f8f38bf7" compoundref="simulation__manager_8h" startline="195">to_do_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a47ceb3fa738660e247be133254b96f3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::get_from_step</definition>
        <argsstring>() const</argsstring>
        <name>get_from_step</name>
        <qualifiedname>nest::SimulationManager::get_from_step</qualifiedname>
        <briefdescription>
<para>Return start of current time slice, in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="167" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="293" bodyend="296"/>
        <references refid="classnest_1_1SimulationManager_1ac4f127330c91e47112b00830b5e22745" compoundref="simulation__manager_8h" startline="197">from_step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a5785570f24fc1bac6255d225a0990f41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::SimulationManager::get_to_step</definition>
        <argsstring>() const</argsstring>
        <name>get_to_step</name>
        <qualifiedname>nest::SimulationManager::get_to_step</qualifiedname>
        <briefdescription>
<para>Return end of current time slice, in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="171" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="299" bodyend="302"/>
        <references refid="classnest_1_1SimulationManager_1af08dde6b27d99fc89dc25166cf4e17bf" compoundref="simulation__manager_8h" startline="198">to_step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::update_connection_infrastructure</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>update_connection_infrastructure</name>
        <qualifiedname>nest::SimulationManager::update_connection_infrastructure</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Sorts source table and connections and create new target table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="174" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="676" bodyend="754"/>
        <references refid="classnest_1_1ConnectionManager_1a87618f444ba424475cf5dcc434bde8af" compoundref="connection__manager_8cpp" startline="1606" endline="1609">nest::ConnectionManager::check_secondary_connections_exist</references>
        <references refid="classnest_1_1ConnectionManager_1abb7f1fdbcba9a1b2d67ebfdb28250160" compoundref="connection__manager_8h" startline="858" endline="861">nest::ConnectionManager::clear_compressed_spike_data_map</references>
        <references refid="classnest_1_1ConnectionManager_1a57a2748ae9ff0b986e6c8769ea2b4f06" compoundref="connection__manager_8cpp" startline="1636" endline="1654">nest::ConnectionManager::collect_compressed_spike_data</references>
        <references refid="classnest_1_1MPIManager_1a664afc6040a9de3474310aab062a906a" compoundref="mpi__manager_8cpp" startline="1093" endline="1101">nest::MPIManager::communicate_recv_counts_secondary_events</references>
        <references refid="classnest_1_1ConnectionManager_1a5af006c2effaaa723d63c89e791606b1" compoundref="connection__manager_8cpp" startline="1557" endline="1560">nest::ConnectionManager::compress_secondary_send_buffer_pos</references>
        <references refid="classnest_1_1ConnectionManager_1a8b0dbf28a53e184b2f2c6e988e656435" compoundref="connection__manager_8cpp" startline="1351" endline="1388">nest::ConnectionManager::compute_compressed_secondary_recv_buffer_positions</references>
        <references refid="classnest_1_1ConnectionManager_1a4a305862071d9332c29fc4e675ada3f3" compoundref="connection__manager_8cpp" startline="1318" endline="1348">nest::ConnectionManager::compute_target_data_buffer_size</references>
        <references refid="classnest_1_1EventDeliveryManager_1ad10ad6a43540d15a7c39e3bd6801eed7" compoundref="event__delivery__manager_8cpp" startline="189" endline="195">nest::EventDeliveryManager::configure_secondary_buffers</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1EventDeliveryManager_1ad9be35d3f6b58eac97354bec54503ac3" compoundref="event__delivery__manager_8cpp" startline="146" endline="151">nest::EventDeliveryManager::resize_send_recv_buffers_target_data</references>
        <references refid="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" compoundref="connection__manager_8h" startline="835" endline="840">nest::ConnectionManager::restructure_connection_tables</references>
        <references refid="classnest_1_1NodeManager_1ac2e430ac232c535b40656af2568a111b" compoundref="node__manager_8h" startline="356" endline="359">nest::NodeManager::set_have_nodes_changed</references>
        <references refid="classnest_1_1ConnectionManager_1ae24f61147ce5ba965b04a07f6beda83f" compoundref="connection__manager_8cpp" startline="1301" endline="1315">nest::ConnectionManager::sort_connections</references>
        <references refid="classnest_1_1ConnectionManager_1ada2a71610370c6802f330191a06e7815" compoundref="connection__manager_8cpp" startline="1600" endline="1603">nest::ConnectionManager::sync_has_primary_connections</references>
        <references refid="classnest_1_1ConnectionManager_1aff0901b4652d3a6eb85d252f432739af" compoundref="connection__manager_8cpp" startline="1629" endline="1632">nest::ConnectionManager::unset_connections_have_changed</references>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a42095f521521f147812163a8b98ee96f" compoundref="connection__manager_8cpp" startline="946" endline="1015">nest::ConnectionManager::get_connections</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a7ef3d9ef13988810582c4a86e2e61ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::reset_timers_for_preparation</definition>
        <argsstring>()</argsstring>
        <name>reset_timers_for_preparation</name>
        <qualifiedname>nest::SimulationManager::reset_timers_for_preparation</qualifiedname>
        <briefdescription>
<para>Set time measurements for internal profiling to zero (reg. </para>
        </briefdescription>
        <detaileddescription>
<para>prep.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="179" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a67d321ede83192bb29506684e257e491" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::reset_timers_for_dynamics</definition>
        <argsstring>()</argsstring>
        <name>reset_timers_for_dynamics</name>
        <qualifiedname>nest::SimulationManager::reset_timers_for_dynamics</qualifiedname>
        <briefdescription>
<para>Set time measurements for internal profiling to zero (reg. </para>
        </briefdescription>
        <detaileddescription>
<para>sim. dyn.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="184" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="106" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1SimulationManager_1aa1ddc2339c6bda7ff3675efb16f6816c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::call_update_</definition>
        <argsstring>()</argsstring>
        <name>call_update_</name>
        <qualifiedname>nest::SimulationManager::call_update_</qualifiedname>
        <briefdescription>
<para>actually run simulation, aka wrap update_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="187" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="620" bodyend="673"/>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1NodeManager_1a765e9cedbe4ae1d8da9c7e03c07667c9" compoundref="node__manager_8h" startline="199" endline="202">nest::NodeManager::get_num_active_nodes</references>
        <references refid="classnest_1_1MPIManager_1a496c51140dd2f76db937357bb70ac565" compoundref="mpi__manager_8h" startline="513" endline="516">nest::MPIManager::get_num_processes</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" compoundref="logging_8h" startline="54">nest::M_INFO</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1MPIManager_1a79d9980ccd091cc70c2992de2f13a9c3" compoundref="mpi__manager_8h" startline="708" endline="710">nest::MPIManager::synchronize</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a4ad2ea77edb56fb13176de0932bac835" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::update_</definition>
        <argsstring>()</argsstring>
        <name>update_</name>
        <qualifiedname>nest::SimulationManager::update_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="188" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="763" bodyend="1062"/>
        <references refid="classnest_1_1MUSICManager_1a5f8f58504d9bcf6a395ae67a77615340">nest::MUSICManager::advance_music_time</references>
        <references refid="classnest_1_1SparseNodeArray_1a5e621396e30b098cbb9fac0afea7de5d" compoundref="sparse__node__array_8h" startline="227" endline="230">nest::SparseNodeArray::begin</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" compoundref="node_8h" startline="644" endline="644">nest::Node::decay_synaptic_elements_vacant</references>
        <references refid="classnest_1_1EventDeliveryManager_1a23401736e55713e86c6f4b55805d8105" compoundref="event__delivery__manager_8cpp" startline="312" endline="316">nest::EventDeliveryManager::deliver_secondary_events</references>
        <references refid="classnest_1_1SparseNodeArray_1a93393a4f5435a71467f775c682173dcd" compoundref="sparse__node__array_8h" startline="233" endline="236">nest::SparseNodeArray::end</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9686fe3b77c602b6f8fe7750f1358de7" compoundref="event__delivery__manager_8cpp" startline="304" endline="309">nest::EventDeliveryManager::gather_secondary_events</references>
        <references refid="classnest_1_1EventDeliveryManager_1a7aa93a50833ee3043dfb46b5e915c051" compoundref="event__delivery__manager_8cpp" startline="319" endline="329">nest::EventDeliveryManager::gather_spike_data</references>
        <references refid="classnest_1_1NodeManager_1a264043547cdea9a9c528384bcd655e2b" compoundref="node__manager_8h" startline="344" endline="347">nest::NodeManager::get_local_nodes</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="classnest_1_1NodeManager_1af001754f205f44b770d7955fe481ab8d" compoundref="node__manager_8h" startline="332" endline="335">nest::NodeManager::get_wfr_nodes_on_thread</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="253">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaacd7f6853f3c5659533a75bc712c3b" compoundref="logging_8h" startline="57">nest::M_WARNING</references>
        <references refid="classnest_1_1KernelManager_1a1ee79f33da362c06ce4d394afbef2ae8" compoundref="kernel__manager_8h" startline="251">nest::KernelManager::music_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1IOManager_1a9a8ec95f6913114fbed606cf6801eaf8" compoundref="io__manager_8cpp" startline="254" endline="260">nest::IOManager::post_step_hook</references>
        <references refid="classnest_1_1KernelManager_1a1bb61f56ad18de2dbd28058a4b05256b" compoundref="kernel__manager_8h" startline="248">nest::KernelManager::sp_manager</references>
        <references refid="classnest_1_1SPManager_1a6f0cc34c3cc807bf1d6b9399b318d35a" compoundref="sp__manager_8cpp" startline="325" endline="331">nest::SPManager::update_structural_plasticity</references>
        <references refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" compoundref="node_8h" startline="637" endline="637">nest::Node::update_synaptic_elements</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a767010d73cfa7a2a304793765a33569e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SimulationManager::wfr_update_</definition>
        <argsstring>(Node *)</argsstring>
        <name>wfr_update_</name>
        <qualifiedname>nest::SimulationManager::wfr_update_</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>actually perform simulation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="189" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a367e0a54fd85196fe34d543960d43110" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::advance_time_</definition>
        <argsstring>()</argsstring>
        <name>advance_time_</name>
        <qualifiedname>nest::SimulationManager::advance_time_</qualifiedname>
        <briefdescription>
<para>Update time to next time step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="190" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="1065" bodyend="1096"/>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1EventDeliveryManager_1a18e210cef727c0b93605fa3dcd941a28" compoundref="event__delivery__manager_8cpp" startline="239" endline="263">nest::EventDeliveryManager::update_moduli</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SimulationManager_1a2d37052a9afcceeb089c5e9e20d23def" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SimulationManager::print_progress_</definition>
        <argsstring>()</argsstring>
        <name>print_progress_</name>
        <qualifiedname>nest::SimulationManager::print_progress_</qualifiedname>
        <briefdescription>
<para>TODO: Remove, replace by logging! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="191" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.cpp" bodystart="1099" bodyend="1123"/>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::SimulationManager</label>
        <link refid="classnest_1_1SimulationManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::SimulationManager</label>
        <link refid="classnest_1_1SimulationManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>clock_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>sw_communicate_prepare_</edgelabel>
          <edgelabel>sw_simulate_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Stopwatch</label>
        <link refid="classnest_1_1Stopwatch"/>
      </node>
      <node id="3">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="4" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="6">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="5">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" line="47" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/simulation_manager.h" bodystart="48" bodyend="233"/>
    <listofallmembers>
      <member refid="classnest_1_1SimulationManager_1a367e0a54fd85196fe34d543960d43110" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>advance_time_</name></member>
      <member refid="classnest_1_1SimulationManager_1a556718d208f5f426cee43fb948c79a91" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>assert_valid_simtime</name></member>
      <member refid="classnest_1_1SimulationManager_1aa1ddc2339c6bda7ff3675efb16f6816c" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>call_update_</name></member>
      <member refid="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>change_number_of_threads</name></member>
      <member refid="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>cleanup</name></member>
      <member refid="classnest_1_1SimulationManager_1a97ea61dedc707341d8e48e30cf45d4d8" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>clock_</name></member>
      <member refid="classnest_1_1SimulationManager_1ab8922b68742b365abda59437dbfa8ae8" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>finalize</name></member>
      <member refid="classnest_1_1SimulationManager_1ac4f127330c91e47112b00830b5e22745" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>from_step_</name></member>
      <member refid="classnest_1_1SimulationManager_1af7057a3b0e6bfb57db74a5586a16a5bc" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_clock</name></member>
      <member refid="classnest_1_1SimulationManager_1a47ceb3fa738660e247be133254b96f3a" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_from_step</name></member>
      <member refid="classnest_1_1SimulationManager_1a42b4794c8502b65aa8df978a5158e379" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_previous_slice_origin</name></member>
      <member refid="classnest_1_1SimulationManager_1a30893f339a2906aa28bf2e7d6a3c5b4d" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_slice</name></member>
      <member refid="classnest_1_1SimulationManager_1ad9a019b2da1005769418e4896fb43ec3" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_slice_origin</name></member>
      <member refid="classnest_1_1SimulationManager_1af0b47533eada795a85ee39598f35d158" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>get_status</name></member>
      <member refid="classnest_1_1SimulationManager_1a1b3b2b5c83ad2506cef7c78b2397dcbc" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_time</name></member>
      <member refid="classnest_1_1SimulationManager_1a5785570f24fc1bac6255d225a0990f41" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_to_step</name></member>
      <member refid="classnest_1_1SimulationManager_1ad45c6ba31aecb3dd3d5c3ecc07979450" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_wfr_comm_interval</name></member>
      <member refid="classnest_1_1SimulationManager_1aa1307dbcfa760da257d3359f66b09d14" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_wfr_interpolation_order</name></member>
      <member refid="classnest_1_1SimulationManager_1a3d247a4135461fbf1c44bb89adca9135" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>get_wfr_tol</name></member>
      <member refid="classnest_1_1SimulationManager_1a5181fce49a9d987f7822947db90aa4b5" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>has_been_prepared</name></member>
      <member refid="classnest_1_1SimulationManager_1a3f7210530c3638bdb4dfe94cdc96ca8e" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>has_been_simulated</name></member>
      <member refid="classnest_1_1SimulationManager_1a8345ed7e7789b39c2c84be85258dbd23" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>inconsistent_state_</name></member>
      <member refid="classnest_1_1SimulationManager_1a00834a4b46f5c2c47591efb7b6dda17c" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>initialize</name></member>
      <member refid="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1SimulationManager_1a8f012147b5482581534080d39f69d91b" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>max_update_time_</name></member>
      <member refid="classnest_1_1SimulationManager_1a6c7e6dbcf801d9c0e087f23b97a95dea" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>min_update_time_</name></member>
      <member refid="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>operator=</name></member>
      <member refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>prepare</name></member>
      <member refid="classnest_1_1SimulationManager_1ae4d116c1207f5a9b3ebd5cdae5b95cf6" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>prepared_</name></member>
      <member refid="classnest_1_1SimulationManager_1a2d37052a9afcceeb089c5e9e20d23def" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>print_progress_</name></member>
      <member refid="classnest_1_1SimulationManager_1aaa655ac1423b979ea7a4f030266580f8" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>print_time_</name></member>
      <member refid="classnest_1_1SimulationManager_1a67d321ede83192bb29506684e257e491" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>reset_timers_for_dynamics</name></member>
      <member refid="classnest_1_1SimulationManager_1a7ef3d9ef13988810582c4a86e2e61ddf" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>reset_timers_for_preparation</name></member>
      <member refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>run</name></member>
      <member refid="classnest_1_1SimulationManager_1a30e26ef505cebeda402cbd1ee4aa360a" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>run_duration</name></member>
      <member refid="classnest_1_1SimulationManager_1a51943acec0b1955dabaa2d8aa2346d71" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>run_end_time</name></member>
      <member refid="classnest_1_1SimulationManager_1a8a748f6cb590e9150cd939c89175f808" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>run_start_time</name></member>
      <member refid="classnest_1_1SimulationManager_1a8e68ef9b61dd3e17a09829333503b6ac" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>set_status</name></member>
      <member refid="classnest_1_1SimulationManager_1ae930e691156acb078cc15613656dd05c" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>simulated_</name></member>
      <member refid="classnest_1_1SimulationManager_1a0c6956a4524b1d9ba989587a8fd6677a" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>simulating_</name></member>
      <member refid="classnest_1_1SimulationManager_1a5a0a4ac275c615dd63e7e8738a5fce73" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>SimulationManager</name></member>
      <member refid="classnest_1_1SimulationManager_1aa9c689387262008a33c49dc010ca903a" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>slice_</name></member>
      <member refid="classnest_1_1SimulationManager_1ad0eb577c568b61132f8feb0f68412d27" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>sw_communicate_prepare_</name></member>
      <member refid="classnest_1_1SimulationManager_1a95067dd27eb4d4539b7be8a4c0d2135f" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>sw_simulate_</name></member>
      <member refid="classnest_1_1SimulationManager_1aa8fa0bf3c4c32c4f4c84dc034ec31d66" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>t_real_</name></member>
      <member refid="classnest_1_1SimulationManager_1a1a8798bcd17d04f6d407cf20279f7243" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>t_slice_begin_</name></member>
      <member refid="classnest_1_1SimulationManager_1a8e437ef64a5bf044d2f41c85cd7691a4" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>t_slice_end_</name></member>
      <member refid="classnest_1_1SimulationManager_1adb14342f7dfb8a7daefbbac5f8f38bf7" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>to_do_</name></member>
      <member refid="classnest_1_1SimulationManager_1a72886a395537316a4226d4c92363de57" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>to_do_total_</name></member>
      <member refid="classnest_1_1SimulationManager_1af08dde6b27d99fc89dc25166cf4e17bf" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>to_step_</name></member>
      <member refid="classnest_1_1SimulationManager_1a4ad2ea77edb56fb13176de0932bac835" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>update_</name></member>
      <member refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>update_connection_infrastructure</name></member>
      <member refid="classnest_1_1SimulationManager_1a0692804c9e044f30e3974ed5cc383f6b" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>update_time_limit_</name></member>
      <member refid="classnest_1_1SimulationManager_1ade99232392fc1f09ecb6f8e18d5474b8" prot="public" virt="non-virtual"><scope>nest::SimulationManager</scope><name>use_wfr</name></member>
      <member refid="classnest_1_1SimulationManager_1a15163b5d9bc447c8cc1dd07a7c9841a4" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>use_wfr_</name></member>
      <member refid="classnest_1_1SimulationManager_1a0346265275219381f2834c985097715e" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>wfr_comm_interval_</name></member>
      <member refid="classnest_1_1SimulationManager_1a1c19981717cd7aa779fd79a25d7b34c9" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>wfr_interpolation_order_</name></member>
      <member refid="classnest_1_1SimulationManager_1ae12b669102e2b027eb0fffb0b20e3479" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>wfr_max_iterations_</name></member>
      <member refid="classnest_1_1SimulationManager_1a42731283a13685fe0b29ed3839a4409b" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>wfr_tol_</name></member>
      <member refid="classnest_1_1SimulationManager_1a767010d73cfa7a2a304793765a33569e" prot="private" virt="non-virtual"><scope>nest::SimulationManager</scope><name>wfr_update_</name></member>
      <member refid="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" virt="virtual"><scope>nest::SimulationManager</scope><name>~ManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
