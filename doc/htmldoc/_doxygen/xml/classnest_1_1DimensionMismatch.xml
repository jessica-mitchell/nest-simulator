<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1DimensionMismatch" kind="class" language="C++" prot="public">
    <compoundname>nest::DimensionMismatch</compoundname>
    <basecompoundref refid="classnest_1_1KernelException" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1DimensionMismatch_1a528777b2fcf86019c65dce05fc568a13" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::DimensionMismatch::expected_</definition>
        <argsstring></argsstring>
        <name>expected_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="646" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1DimensionMismatch_1ab6413df8b147ea6a71f2833580751ca4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::DimensionMismatch::provided_</definition>
        <argsstring></argsstring>
        <name>provided_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="647" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1DimensionMismatch_1ae962129a7b5c2c5c73815f45e4cb1c17" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::DimensionMismatch::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="648" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="648" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1DimensionMismatch_1a21add69b0be53920ad521ad895f719a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::DimensionMismatch::DimensionMismatch</definition>
        <argsstring>()</argsstring>
        <name>DimensionMismatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="651" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="651" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DimensionMismatch_1abeb9da324394d6ff6467a1b4775ea54f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::DimensionMismatch::DimensionMismatch</definition>
        <argsstring>(int expected, int provided)</argsstring>
        <name>DimensionMismatch</name>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>int</type>
          <declname>provided</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="658" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="658" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DimensionMismatch_1a2f2602b5bc21e8f5ab3797eefe99fac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::DimensionMismatch::DimensionMismatch</definition>
        <argsstring>(const std::string &amp;msg)</argsstring>
        <name>DimensionMismatch</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="665" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="665" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DimensionMismatch_1acb136c94037f6bf0753edcffbb725e06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::DimensionMismatch::~DimensionMismatch</definition>
        <argsstring>() override</argsstring>
        <name>~DimensionMismatch</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="674" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="674" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1DimensionMismatch_1aaec8412c9c338479ab5db4fb94c768fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::DimensionMismatch::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="678" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.cpp" bodystart="264" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown if the dimensions of two or more objects do not agree. </para>
    </briefdescription>
    <detaileddescription>
<para>Thrown by Node::set_/get_property methods. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::DimensionMismatch</label>
        <link refid="classnest_1_1DimensionMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::DimensionMismatch</label>
        <link refid="classnest_1_1DimensionMismatch"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="644" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="645" bodyend="679"/>
    <listofallmembers>
      <member refid="classnest_1_1DimensionMismatch_1a21add69b0be53920ad521ad895f719a1" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>DimensionMismatch</name></member>
      <member refid="classnest_1_1DimensionMismatch_1abeb9da324394d6ff6467a1b4775ea54f" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>DimensionMismatch</name></member>
      <member refid="classnest_1_1DimensionMismatch_1a2f2602b5bc21e8f5ab3797eefe99fac8" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>DimensionMismatch</name></member>
      <member refid="classnest_1_1DimensionMismatch_1a528777b2fcf86019c65dce05fc568a13" prot="private" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>expected_</name></member>
      <member refid="classnest_1_1KernelException_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>KernelException</name></member>
      <member refid="classnest_1_1DimensionMismatch_1aaec8412c9c338479ab5db4fb94c768fb" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>message</name></member>
      <member refid="classnest_1_1DimensionMismatch_1ae962129a7b5c2c5c73815f45e4cb1c17" prot="private" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>msg_</name></member>
      <member refid="classnest_1_1DimensionMismatch_1ab6413df8b147ea6a71f2833580751ca4" prot="private" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>provided_</name></member>
      <member refid="classnest_1_1DimensionMismatch_1acb136c94037f6bf0753edcffbb725e06" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>~DimensionMismatch</name></member>
      <member refid="classnest_1_1KernelException_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::DimensionMismatch</scope><name>~KernelException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
