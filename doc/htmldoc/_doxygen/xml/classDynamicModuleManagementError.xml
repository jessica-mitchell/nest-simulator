<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classDynamicModuleManagementError" kind="class" language="C++" prot="public">
    <compoundname>DynamicModuleManagementError</compoundname>
    <basecompoundref refid="classSLIException" prot="public" virt="non-virtual">SLIException</basecompoundref>
    <includes refid="sliexceptions_8h" local="no">sliexceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDynamicModuleManagementError_1a3ee6b03634a04c1c6c0bcb86035f28a1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DynamicModuleManagementError::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <qualifiedname>DynamicModuleManagementError::msg_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="418" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="418" bodyend="-1"/>
        <referencedby refid="classDynamicModuleManagementError_1adb9ade816cde03d29f0681521cb214e5" compoundref="sliexceptions_8cc" startline="188" endline="198">message</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDynamicModuleManagementError_1a14b0d8b2ef17d1f34b249d99f359e637" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DynamicModuleManagementError::~DynamicModuleManagementError</definition>
        <argsstring>() override</argsstring>
        <name>~DynamicModuleManagementError</name>
        <qualifiedname>DynamicModuleManagementError::~DynamicModuleManagementError</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="421" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classDynamicModuleManagementError_1a62aae9aa8c28eab419996aa5260d2df8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DynamicModuleManagementError::DynamicModuleManagementError</definition>
        <argsstring>()</argsstring>
        <name>DynamicModuleManagementError</name>
        <qualifiedname>DynamicModuleManagementError::DynamicModuleManagementError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="425" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="425" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classDynamicModuleManagementError_1a38a76dabe82be8ff8e06cc64833c3333" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DynamicModuleManagementError::DynamicModuleManagementError</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>DynamicModuleManagementError</name>
        <qualifiedname>DynamicModuleManagementError::DynamicModuleManagementError</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="431" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="431" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classDynamicModuleManagementError_1adb9ade816cde03d29f0681521cb214e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string DynamicModuleManagementError::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <qualifiedname>DynamicModuleManagementError::message</qualifiedname>
        <reimplements refid="classSLIException_1a8f0a43c586456cc0e161d683ff316531">message</reimplements>
        <briefdescription>
<para>Returns a diagnostic message or empty string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="437" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.cc" bodystart="188" bodyend="198"/>
        <references refid="classDynamicModuleManagementError_1a3ee6b03634a04c1c6c0bcb86035f28a1" compoundref="sliexceptions_8h" startline="418">msg_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown if an error occurs while loading/unloading dynamic modules. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>Shouldn&apos;t this be a KernelException? </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DynamicModuleManagementError</label>
        <link refid="classDynamicModuleManagementError"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>DynamicModuleManagementError</label>
        <link refid="classDynamicModuleManagementError"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="416" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="417" bodyend="438"/>
    <listofallmembers>
      <member refid="classDynamicModuleManagementError_1a62aae9aa8c28eab419996aa5260d2df8" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>DynamicModuleManagementError</name></member>
      <member refid="classDynamicModuleManagementError_1a38a76dabe82be8ff8e06cc64833c3333" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>DynamicModuleManagementError</name></member>
      <member refid="classDynamicModuleManagementError_1adb9ade816cde03d29f0681521cb214e5" prot="public" virt="virtual"><scope>DynamicModuleManagementError</scope><name>message</name></member>
      <member refid="classDynamicModuleManagementError_1a3ee6b03634a04c1c6c0bcb86035f28a1" prot="private" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>msg_</name></member>
      <member refid="classSLIException_1ace48f5938754e82931bab7f54471dd3f" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>SLIException</name></member>
      <member refid="classSLIException_1a5da1b6d493d134687d9ce01e9799b59d" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>SLIException</name></member>
      <member refid="classSLIException_1a4ac56d362c7d86819a47c76571c9c031" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>what</name></member>
      <member refid="classSLIException_1af0e8f12a5e346db4c028d23a2974f016" prot="private" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>what_</name></member>
      <member refid="classDynamicModuleManagementError_1a14b0d8b2ef17d1f34b249d99f359e637" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>~DynamicModuleManagementError</name></member>
      <member refid="classSLIException_1a671677b69bcc3895df94a069067c0578" prot="public" virt="non-virtual"><scope>DynamicModuleManagementError</scope><name>~SLIException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
