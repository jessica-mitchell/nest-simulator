<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="sinusoidal__gamma__generator_8h" kind="file" language="C++">
    <compoundname>sinusoidal_gamma_generator.h</compoundname>
    <includes local="yes">config.h</includes>
    <includedby refid="modelsmodule_8cpp" local="yes">modelsmodule.cpp</includedby>
    <includedby refid="sinusoidal__gamma__generator_8cpp" local="yes">sinusoidal_gamma_generator.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>sinusoidal_gamma_generator.h</label>
        <link refid="sinusoidal__gamma__generator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>sinusoidal_gamma_generator.cpp</label>
        <link refid="sinusoidal__gamma__generator_8cpp"/>
      </node>
      <node id="1">
        <label>sinusoidal_gamma_generator.h</label>
        <link refid="sinusoidal__gamma__generator_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>modelsmodule.cpp</label>
        <link refid="modelsmodule_8cpp"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>sinusoidal_gamma_generator.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SINUSOIDAL_GAMMA_GENERATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SINUSOIDAL_GAMMA_GENERATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>nestkernel:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="connection_8h" kindref="compound">connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device__node_8h" kindref="compound">device_node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="event_8h" kindref="compound">event.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nest__types_8h" kindref="compound">nest_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stimulation__device_8h" kindref="compound">stimulation_device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger_8h" kindref="compound">universal_data_logger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>device,<sp/>generator</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">Short<sp/>description</highlight></codeline>
<codeline lineno="48"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">Generates<sp/>sinusoidally<sp/>modulated<sp/>gamma<sp/>spike<sp/>trains</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="53"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">``sinusoidal_gamma_generator``<sp/>generates<sp/>sinusoidally<sp/>modulated<sp/>gamma<sp/>spike</highlight></codeline>
<codeline lineno="56"><highlight class="comment">trains.<sp/>By<sp/>default,<sp/>each<sp/>target<sp/>of<sp/>the<sp/>generator<sp/>will<sp/>receive<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="57"><highlight class="comment">spike<sp/>train.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">The<sp/>instantaneous<sp/>rate<sp/>of<sp/>the<sp/>process<sp/>is<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">..<sp/>math::</highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>f(t)<sp/>=<sp/>rate<sp/>+<sp/>amplitude<sp/>\sin<sp/>(<sp/>2<sp/>\pi<sp/>frequency<sp/>t<sp/>+<sp/>phase<sp/>\cdot<sp/>\pi/180<sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">..<sp/>note::</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>-<sp/>The<sp/>gamma<sp/>generator<sp/>requires<sp/>0<sp/>&lt;=<sp/>amplitude<sp/>&lt;=<sp/>rate.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>-<sp/>The<sp/>state<sp/>of<sp/>the<sp/>generator<sp/>is<sp/>reset<sp/>on<sp/>calibration.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>-<sp/>The<sp/>generator<sp/>does<sp/>not<sp/>support<sp/>precise<sp/>spike<sp/>timing.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>-<sp/>You<sp/>can<sp/>use<sp/>the<sp/>multimeter<sp/>to<sp/>sample<sp/>the<sp/>rate<sp/>of<sp/>the<sp/>generator.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>-<sp/>The<sp/>generator<sp/>will<sp/>create<sp/>different<sp/>trains<sp/>if<sp/>run<sp/>at<sp/>different</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>temporal<sp/>resolutions.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">Individual<sp/>spike<sp/>trains<sp/>vs<sp/>single<sp/>spike<sp/>train:</highlight></codeline>
<codeline lineno="75"><highlight class="comment">By<sp/>default,<sp/>the<sp/>generator<sp/>sends<sp/>a<sp/>different<sp/>spike<sp/>train<sp/>to<sp/>each<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="76"><highlight class="comment">targets.<sp/>If<sp/>/individual_spike_trains<sp/>is<sp/>set<sp/>to<sp/>false<sp/>using<sp/>either</highlight></codeline>
<codeline lineno="77"><highlight class="comment">SetDefaults<sp/>or<sp/>CopyModel<sp/>before<sp/>a<sp/>generator<sp/>node<sp/>is<sp/>created,<sp/>the<sp/>generator</highlight></codeline>
<codeline lineno="78"><highlight class="comment">will<sp/>send<sp/>the<sp/>same<sp/>spike<sp/>train<sp/>to<sp/>all<sp/>of<sp/>its<sp/>targets.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">..<sp/>include::<sp/>../models/stimulation_device.rst</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">rate</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>Mean<sp/>firing<sp/>rate,<sp/>default:<sp/>0<sp/>spikes/s</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment">amplitude</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>Firing<sp/>rate<sp/>modulation<sp/>amplitude,<sp/>default:<sp/>0<sp/>s^-1</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">frequency</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>Modulation<sp/>frequency,<sp/>default:<sp/>0<sp/>Hz</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">phase</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>Modulation<sp/>phase<sp/>in<sp/>degree<sp/>[0-360],<sp/>default:<sp/>0</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">order</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>Gamma<sp/>order<sp/>(&gt;=<sp/>1),<sp/>default:<sp/>1</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">individual_spike_trains</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>note<sp/>above,<sp/>default:<sp/>true</highlight></codeline>
<codeline lineno="99"><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">See<sp/>also<sp/>[1]_.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">Setting<sp/>parameters<sp/>from<sp/>a<sp/>stimulation<sp/>backend</highlight></codeline>
<codeline lineno="103"><highlight class="comment">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</highlight></codeline>
<codeline lineno="104"><highlight class="comment"></highlight></codeline>
<codeline lineno="105"><highlight class="comment">The<sp/>parameters<sp/>in<sp/>this<sp/>stimulation<sp/>device<sp/>can<sp/>be<sp/>updated<sp/>with<sp/>input</highlight></codeline>
<codeline lineno="106"><highlight class="comment">coming<sp/>from<sp/>a<sp/>stimulation<sp/>backend.<sp/>The<sp/>data<sp/>structure<sp/>used<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="107"><highlight class="comment">update<sp/>holds<sp/>one<sp/>value<sp/>for<sp/>each<sp/>of<sp/>the<sp/>parameters<sp/>mentioned<sp/>above.</highlight></codeline>
<codeline lineno="108"><highlight class="comment">The<sp/>indexing<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>0.<sp/>frequency</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>1.<sp/>phase</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>2.<sp/>order</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>3.<sp/>rate</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>4.<sp/>amplitude</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>5.<sp/>individual_spike_trains</highlight></codeline>
<codeline lineno="116"><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">Receives</highlight></codeline>
<codeline lineno="118"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment">DataLoggingRequest</highlight></codeline>
<codeline lineno="121"><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">Sends</highlight></codeline>
<codeline lineno="123"><highlight class="comment">+++++</highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">SpikeEvent</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">References</highlight></codeline>
<codeline lineno="128"><highlight class="comment">++++++++++</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">..<sp/>[1]<sp/>Barbieri<sp/>et<sp/>al.<sp/>(2001).<sp/>Construction<sp/>and<sp/>analysis<sp/>of<sp/>non-Poisson</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stimulus-response<sp/>models<sp/>of<sp/>neural<sp/>spiking<sp/>activity.<sp/>Journal<sp/>of</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Neuroscience<sp/>Methods,<sp/>105:25-3.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOI:<sp/>https://doi.org/10.1016/S0165-0270(00)00344-7</highlight></codeline>
<codeline lineno="134"><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">See<sp/>also</highlight></codeline>
<codeline lineno="136"><highlight class="comment">++++++++</highlight></codeline>
<codeline lineno="137"><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">sinusoidal_poisson_generator,<sp/>gamma_sup_generator</highlight></codeline>
<codeline lineno="139"><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">sinusoidal_gamma_generator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StimulationDevice</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>sinusoidal_gamma_generator();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>sinusoidal_gamma_generator(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sinusoidal_gamma_generator&amp;<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>send_test_event(<sp/>Node&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" kindref="member">Node::event_hook</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">Node::handle</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">Node::handles_test_event</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle(<sp/>DataLoggingRequest&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>handles_test_event(<sp/>DataLoggingRequest&amp;,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_status(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_proxies()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local_receiver()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" kindref="member">StimulationDevice::Type</ref><sp/>get_type()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_data_from_stimulation_backend(<sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;<sp/>input_param<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_state_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init_buffers_()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pre_run_hook()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>event_hook(<sp/>DSSpikeEvent&amp;<sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Parameters_</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>om_;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phi_;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>order_;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate_;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amplitude_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>individual_spike_trains_;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_trains_;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_();<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_&amp;<sp/>operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/><ref refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d" kindref="member">p</ref><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sinusoidal_gamma_generator&amp;,<sp/>Node*<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">State_</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rate_;<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>State_();<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>two<sp/>classes<sp/>need<sp/>to<sp/>be<sp/>friends<sp/>to<sp/>access<sp/>the<sp/>State_<sp/>class/member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RecordablesMap&lt;<sp/>sinusoidal_gamma_generator<sp/>&gt;;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UniversalDataLogger&lt;<sp/>sinusoidal_gamma_generator<sp/>&gt;;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Buffers_</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/>sinusoidal_gamma_generator&amp;<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>sinusoidal_gamma_generator&amp;<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>UniversalDataLogger&lt;<sp/>sinusoidal_gamma_generator<sp/>&gt;<sp/>logger_;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>t0_ms_;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>Lambda_t0_;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters_<sp/>P_prev_;<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Variables_</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_ms_;<sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>t_steps_;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref><sp/>rng_;<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>get_rate_()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="332"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1000.0<sp/>*<sp/>S_.rate_;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaLambda_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hazard_(<sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RecordablesMap&lt;<sp/>sinusoidal_gamma_generator<sp/>&gt;<sp/>recordablesMap_;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>Parameters_<sp/>P_;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>State_<sp/>S_;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>Variables_<sp/>V_;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>Buffers_<sp/>B_;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal">sinusoidal_gamma_generator::send_test_event(<sp/>Node&amp;<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref><sp/>syn_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dummy_target<sp/>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1StimulationDevice_1a1da58471abc5507ffd31884c9fda070f" kindref="member">StimulationDevice::enforce_single_syn_type</ref>(<sp/>syn_id<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>ensure<sp/>correct<sp/>overloading<sp/>resolution,<sp/>we<sp/>need<sp/>explicit<sp/>event<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore,<sp/>we<sp/>need<sp/>to<sp/>duplicate<sp/>the<sp/>code<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>P_.individual_spike_trains_<sp/>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>dummy_target<sp/>)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DSSpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.handles_test_event(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>,<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/>r<sp/>=<sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.handles_test_event(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>,<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>r<sp/>!=<sp/><ref refid="namespacenest_1a6505b01bba1d7ff79d4e718ecc097a4a" kindref="member">invalid_port</ref><sp/>and<sp/>not<sp/>is_model_prototype()<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++P_.num_trains_;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>count<sp/>targets<sp/>here,<sp/>since<sp/>connections<sp/>may<sp/>be<sp/>created<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>proxies.<sp/>Instead,<sp/>we<sp/>set<sp/>P_.num_trains_<sp/>to<sp/>1<sp/>in<sp/>Parameters_::set().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>SpikeEvent<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.set_sender(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a" kindref="member">target</ref>.handles_test_event(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>,<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></highlight></codeline>
<codeline lineno="388"><highlight class="normal">sinusoidal_gamma_generator::handles_test_event(<sp/>DataLoggingRequest&amp;<sp/>dlr,<sp/><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref><sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref><sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UnknownReceptorType(<sp/><ref refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35" kindref="member">receptor_type</ref>,<sp/>get_name()<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B_.logger_.connect_logging_device(<sp/>dlr,<sp/>recordablesMap_<sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal">sinusoidal_gamma_generator::get_status(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="399"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>P_.get(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1StimulationDevice_1a3c17981ffa0b79bf9b2e559bcfba1573" kindref="member">StimulationDevice::get_status</ref>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>(<sp/>*d<sp/>)[<sp/><ref refid="namespacenest_1_1names_1af23802d960e3bad87b63c3ec4b563176" kindref="member">names::recordables</ref><sp/>]<sp/>=<sp/>recordablesMap_.get_list();</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">sinusoidal_gamma_generator::set_status(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>Parameters_<sp/>ptmp<sp/>=<sp/>P_;<sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>copy<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>ptmp.set(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>throws<sp/>if<sp/>BadProperty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>know<sp/>that<sp/>ptmp<sp/>is<sp/>consistent.<sp/>We<sp/>do<sp/>not<sp/>write<sp/>it<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>P_<sp/>before<sp/>we<sp/>are<sp/>also<sp/>sure<sp/>that<sp/>the<sp/>properties<sp/>to<sp/>be<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>parent<sp/>class<sp/>are<sp/>internally<sp/>consistent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" kindref="member">StimulationDevice::set_status</ref>(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>get<sp/>here,<sp/>temporaries<sp/>contain<sp/>consistent<sp/>set<sp/>of<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>P_<sp/>=<sp/>ptmp;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">sinusoidal_gamma_generator::has_proxies()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="423"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not<sp/>P_.individual_spike_trains_;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">sinusoidal_gamma_generator::local_receiver()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="430"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" kindref="member">StimulationDevice::Type</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal">sinusoidal_gamma_generator::get_type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="436"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StimulationDevice::Type::SPIKE_GENERATOR;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SINUSOIDAL_GAMMA_GENERATOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/sinusoidal_gamma_generator.h"/>
  </compounddef>
</doxygen>
