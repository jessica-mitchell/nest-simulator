<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="recording__backend__ascii_8h" kind="file" language="C++">
    <compoundname>recording_backend_ascii.h</compoundname>
    <includes local="no">fstream</includes>
    <includes refid="recording__backend_8h" local="yes">recording_backend.h</includes>
    <includedby refid="io__manager_8cpp" local="yes">io_manager.cpp</includedby>
    <includedby refid="recording__backend__ascii_8cpp" local="yes">recording_backend_ascii.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>recording_backend_ascii.h</label>
        <link refid="recording__backend__ascii_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="5">
        <label>dictdatum.h</label>
      </node>
      <node id="6">
        <label>name.h</label>
      </node>
      <node id="3">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>io_manager.cpp</label>
        <link refid="io__manager_8cpp"/>
      </node>
      <node id="1">
        <label>recording_backend_ascii.h</label>
        <link refid="recording__backend__ascii_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>recording_backend_ascii.cpp</label>
        <link refid="recording__backend__ascii_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnest_1_1RecordingBackendASCII" prot="public">nest::RecordingBackendASCII</innerclass>
    <innerclass refid="structnest_1_1RecordingBackendASCII_1_1DeviceData" prot="private">nest::RecordingBackendASCII::DeviceData</innerclass>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>recording_backend_ascii.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RECORDING_BACKEND_ASCII_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECORDING_BACKEND_ASCII_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="recording__backend_8h" kindref="compound">recording_backend.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>BeginUserDocs:<sp/>NOINDEX</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">Recording<sp/>backend<sp/>`ascii`<sp/>-<sp/>Write<sp/>data<sp/>to<sp/>plain<sp/>text<sp/>files</highlight></codeline>
<codeline lineno="34"><highlight class="comment">##########################################################</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">Description</highlight></codeline>
<codeline lineno="37"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">The<sp/>`ascii`<sp/>recording<sp/>backend<sp/>writes<sp/>collected<sp/>data<sp/>persistently<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="40"><highlight class="comment">plain<sp/>text<sp/>ASCII<sp/>file.<sp/>It<sp/>can<sp/>be<sp/>used<sp/>for<sp/>small<sp/>to<sp/>medium<sp/>sized</highlight></codeline>
<codeline lineno="41"><highlight class="comment">simulations,<sp/>where<sp/>the<sp/>ease<sp/>of<sp/>a<sp/>simple<sp/>data<sp/>format<sp/>outweighs<sp/>the</highlight></codeline>
<codeline lineno="42"><highlight class="comment">benefits<sp/>of<sp/>high-performance<sp/>output<sp/>operations.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight></codeline>
<codeline lineno="44"><highlight class="comment">This<sp/>backend<sp/>will<sp/>open<sp/>one<sp/>file<sp/>per<sp/>recording<sp/>device<sp/>per<sp/>thread<sp/>on</highlight></codeline>
<codeline lineno="45"><highlight class="comment">each<sp/>MPI<sp/>process.<sp/>This<sp/>can<sp/>cause<sp/>a<sp/>high<sp/>load<sp/>on<sp/>the<sp/>file<sp/>system<sp/>in</highlight></codeline>
<codeline lineno="46"><highlight class="comment">large<sp/>simulations.<sp/>This<sp/>backend<sp/>can<sp/>become<sp/>prohibitively<sp/>inefficient,</highlight></codeline>
<codeline lineno="47"><highlight class="comment">particularly<sp/>on<sp/>machines<sp/>with<sp/>distributed<sp/>filesystems.<sp/>In<sp/>case<sp/>you</highlight></codeline>
<codeline lineno="48"><highlight class="comment">experience<sp/>such<sp/>scaling<sp/>problems,<sp/>the<sp/>:doc:`recording<sp/>backend<sp/>for</highlight></codeline>
<codeline lineno="49"><highlight class="comment">SIONlib<sp/>&lt;recording_backend_sionlib&gt;`<sp/>may<sp/>be<sp/>a<sp/>possible<sp/>alternative.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">Filenames<sp/>of<sp/>data<sp/>files<sp/>are<sp/>determined<sp/>according<sp/>to<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="52"><highlight class="comment">pattern:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">::</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>data_path/data_prefix(label|model_name)-node_id-vp.file_extension</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">The<sp/>properties<sp/>``data_path``<sp/>and<sp/>``data_prefix``<sp/>are<sp/>global<sp/>kernel</highlight></codeline>
<codeline lineno="59"><highlight class="comment">properties.<sp/>They<sp/>can,<sp/>for<sp/>example,<sp/>be<sp/>set<sp/>during<sp/>repetitive<sp/>simulation</highlight></codeline>
<codeline lineno="60"><highlight class="comment">protocols<sp/>to<sp/>separate<sp/>the<sp/>data<sp/>originating<sp/>from<sp/>individual<sp/>runs.<sp/>The</highlight></codeline>
<codeline lineno="61"><highlight class="comment">``label``<sp/>replaces<sp/>the<sp/>model<sp/>name<sp/>component<sp/>if<sp/>it<sp/>is<sp/>set<sp/>to<sp/>a<sp/>non-empty</highlight></codeline>
<codeline lineno="62"><highlight class="comment">string.<sp/>``node_id``<sp/>and<sp/>``vp``<sp/>denote<sp/>the<sp/>zero-padded<sp/>global<sp/>ID<sp/>and<sp/>virtual</highlight></codeline>
<codeline lineno="63"><highlight class="comment">process<sp/>of<sp/>the<sp/>recorder<sp/>writing<sp/>the<sp/>file.<sp/>The<sp/>filename<sp/>ends<sp/>in<sp/>a<sp/>dot</highlight></codeline>
<codeline lineno="64"><highlight class="comment">and<sp/>the<sp/>``file_extension``.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">The<sp/>life<sp/>of<sp/>a<sp/>file<sp/>starts<sp/>with<sp/>the<sp/>call<sp/>to<sp/>``Prepare``<sp/>and<sp/>ends<sp/>with</highlight></codeline>
<codeline lineno="67"><highlight class="comment">the<sp/>call<sp/>to<sp/>``Cleanup``.<sp/>Data<sp/>that<sp/>is<sp/>produced<sp/>during<sp/>successive<sp/>calls</highlight></codeline>
<codeline lineno="68"><highlight class="comment">to<sp/>``Run``<sp/>in<sp/>between<sp/>a<sp/>pair<sp/>of<sp/>``Prepare``<sp/>and<sp/>``Cleanup``<sp/>calls<sp/>will</highlight></codeline>
<codeline lineno="69"><highlight class="comment">be<sp/>written<sp/>to<sp/>the<sp/>same<sp/>file,<sp/>while<sp/>the<sp/>call<sp/>to<sp/>``Run``<sp/>will<sp/>flush<sp/>all</highlight></codeline>
<codeline lineno="70"><highlight class="comment">data<sp/>to<sp/>the<sp/>file,<sp/>so<sp/>it<sp/>is<sp/>available<sp/>for<sp/>immediate<sp/>inspection.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">If<sp/>the<sp/>file<sp/>name<sp/>already<sp/>exists<sp/>when<sp/>creating<sp/>a<sp/>new<sp/>recording,<sp/>the</highlight></codeline>
<codeline lineno="73"><highlight class="comment">call<sp/>to<sp/>``Prepare``<sp/>will<sp/>fail<sp/>with<sp/>a<sp/>``FileExists``<sp/>error.<sp/>To<sp/>overwrite</highlight></codeline>
<codeline lineno="74"><highlight class="comment">the<sp/>old<sp/>file,<sp/>the<sp/>kernel<sp/>property<sp/>``overwrite_files``<sp/>can<sp/>be<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="75"><highlight class="comment">``True``<sp/>using<sp/>the<sp/>corresponding<sp/>kernel<sp/>attribute.<sp/>An<sp/>alternative<sp/>way</highlight></codeline>
<codeline lineno="76"><highlight class="comment">for<sp/>avoiding<sp/>name<sp/>clashes<sp/>is<sp/>to<sp/>set<sp/>the<sp/>kernel<sp/>attributes</highlight></codeline>
<codeline lineno="77"><highlight class="comment">``data_path``<sp/>or<sp/>``data_prefix``,<sp/>to<sp/>write<sp/>to<sp/>a<sp/>different<sp/>file.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">Data<sp/>format</highlight></codeline>
<codeline lineno="80"><highlight class="comment">+++++++++++</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">Any<sp/>file<sp/>written<sp/>by<sp/>the<sp/>`ascii`<sp/>recording<sp/>backend<sp/>starts<sp/>with<sp/>an</highlight></codeline>
<codeline lineno="83"><highlight class="comment">informational<sp/>header.<sp/>The<sp/>first<sp/>header<sp/>line<sp/>contains<sp/>the<sp/>NEST<sp/>version,</highlight></codeline>
<codeline lineno="84"><highlight class="comment">with<sp/>which<sp/>the<sp/>file<sp/>was<sp/>created,<sp/>followed<sp/>by<sp/>the<sp/>version<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="85"><highlight class="comment">recording<sp/>backend<sp/>in<sp/>the<sp/>second.<sp/>The<sp/>third<sp/>line<sp/>describes<sp/>the<sp/>data<sp/>by</highlight></codeline>
<codeline lineno="86"><highlight class="comment">means<sp/>of<sp/>the<sp/>field<sp/>names<sp/>for<sp/>the<sp/>different<sp/>columns.<sp/>All<sp/>lines<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="87"><highlight class="comment">header<sp/>start<sp/>with<sp/>a<sp/>`#`<sp/>character.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment">The<sp/>first<sp/>field<sp/>of<sp/>each<sp/>record<sp/>written<sp/>is<sp/>the<sp/>node<sp/>ID<sp/>of<sp/>the<sp/>neuron</highlight></codeline>
<codeline lineno="90"><highlight class="comment">the<sp/>event<sp/>originated<sp/>from,<sp/>i.e.,<sp/>the<sp/>*source*<sp/>of<sp/>the<sp/>event.<sp/>This<sp/>is</highlight></codeline>
<codeline lineno="91"><highlight class="comment">followed<sp/>by<sp/>the<sp/>time<sp/>of<sp/>the<sp/>measurement,<sp/>the<sp/>recorded<sp/>floating<sp/>point</highlight></codeline>
<codeline lineno="92"><highlight class="comment">values<sp/>and<sp/>the<sp/>recorded<sp/>integer<sp/>values.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">The<sp/>format<sp/>of<sp/>the<sp/>time<sp/>field<sp/>depends<sp/>on<sp/>the<sp/>value<sp/>of<sp/>the<sp/>property</highlight></codeline>
<codeline lineno="95"><highlight class="comment">``time_in_steps``.<sp/>If<sp/>set<sp/>to<sp/>*false*<sp/>(which<sp/>is<sp/>the<sp/>default),<sp/>time<sp/>is</highlight></codeline>
<codeline lineno="96"><highlight class="comment">written<sp/>as<sp/>a<sp/>single<sp/>floating<sp/>point<sp/>number<sp/>representing<sp/>the<sp/>simulation</highlight></codeline>
<codeline lineno="97"><highlight class="comment">time<sp/>in<sp/>ms.<sp/>If<sp/>``time_in_steps``<sp/>is<sp/>*true*,<sp/>the<sp/>time<sp/>of<sp/>the<sp/>event<sp/>is</highlight></codeline>
<codeline lineno="98"><highlight class="comment">written<sp/>as<sp/>a<sp/>pair<sp/>of<sp/>values<sp/>consisting<sp/>of<sp/>the<sp/>integer<sp/>simulation<sp/>time</highlight></codeline>
<codeline lineno="99"><highlight class="comment">step<sp/>in<sp/>units<sp/>of<sp/>the<sp/>simulation<sp/>resolution<sp/>and<sp/>the<sp/>negative<sp/>floating</highlight></codeline>
<codeline lineno="100"><highlight class="comment">point<sp/>offset<sp/>in<sp/>ms<sp/>from<sp/>the<sp/>next<sp/>integer<sp/>grid<sp/>point.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">..<sp/>note::</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>decimal<sp/>places<sp/>for<sp/>all<sp/>decimal<sp/>numbers<sp/>written<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>controlled<sp/>using<sp/>the<sp/>recorder<sp/>property<sp/>``precision``.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment">Parameter<sp/>summary</highlight></codeline>
<codeline lineno="108"><highlight class="comment">+++++++++++++++++</highlight></codeline>
<codeline lineno="109"><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">file_extension</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/>A<sp/>string<sp/>(default:<sp/>*&quot;dat&quot;*)<sp/>that<sp/>specifies<sp/>the<sp/>file<sp/>name<sp/>extension,</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/>without<sp/>leading<sp/>dot.<sp/>The<sp/>generic<sp/>default<sp/>was<sp/>chosen,<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>exact<sp/>type<sp/>of<sp/>data<sp/>cannot<sp/>be<sp/>known<sp/>a<sp/>priori.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">filenames</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>A<sp/>list<sp/>of<sp/>the<sp/>filenames<sp/>where<sp/>data<sp/>is<sp/>recorded<sp/>to.<sp/>This<sp/>list<sp/>has<sp/>one</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>entry<sp/>per<sp/>local<sp/>thread<sp/>and<sp/>is<sp/>a<sp/>read-only<sp/>property.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment">label</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>A<sp/>string<sp/>(default:<sp/>*&quot;&quot;*)<sp/>that<sp/>replaces<sp/>the<sp/>model<sp/>name<sp/>component<sp/>in</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>filename<sp/>if<sp/>it<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">precision</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>integer<sp/>(default:<sp/>*3*)<sp/>that<sp/>controls<sp/>the<sp/>number<sp/>of<sp/>decimal<sp/>places</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>used<sp/>to<sp/>write<sp/>decimal<sp/>numbers<sp/>to<sp/>the<sp/>output<sp/>file.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight></codeline>
<codeline lineno="127"><highlight class="comment">time_in_steps</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>A<sp/>Boolean<sp/>(default:<sp/>*false*)<sp/>specifying<sp/>whether<sp/>to<sp/>write<sp/>time<sp/>in</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>steps,<sp/>i.e.,<sp/>in<sp/>integer<sp/>multiples<sp/>of<sp/>the<sp/>simulation<sp/>resolution<sp/>plus</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>floating<sp/>point<sp/>number<sp/>for<sp/>the<sp/>negative<sp/>offset<sp/>from<sp/>the<sp/>next<sp/>grid</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>point<sp/>in<sp/>ms,<sp/>or<sp/>just<sp/>the<sp/>simulation<sp/>time<sp/>in<sp/>ms.<sp/>This<sp/>property</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>cannot<sp/>be<sp/>set<sp/>after<sp/>Simulate<sp/>has<sp/>been<sp/>called.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment">EndUserDocs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classnest_1_1RecordingBackendASCII" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1RecordingBackendASCII" kindref="compound">RecordingBackendASCII</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackend" kindref="compound">RecordingBackend</ref></highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152" refid="classnest_1_1RecordingBackendASCII_1ad2a55220a8b5daf3d359c81713ebcce4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1ad2a55220a8b5daf3d359c81713ebcce4" kindref="member">ASCII_REC_BACKEND_VERSION</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1RecordingBackendASCII_1aaa8fe896fc8813db5a353145b683a351" kindref="member">RecordingBackendASCII</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a3b82363d28e86b44a12953bbb1bb4f4d" kindref="member">~RecordingBackendASCII</ref>()<sp/>throw()<sp/>override;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a126b120d30d4f9416f67772d7b43f8ff" kindref="member">initialize</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a88a65bfd8e8a441bb710ae4c62522168" kindref="member">finalize</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a1a95c36ab22b5e1687631c5f9f360ff1" kindref="member">enroll</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,<sp/>const<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a" kindref="member">params</ref><sp/>)<sp/>override;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1aaf4fa1fb6c512492a91c53acb13f20ca" kindref="member">disenroll</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;<sp/>device<sp/>)<sp/>override;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a3f6ce3b2435231a21a70ed29aaedd5cd" kindref="member">set_value_names</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>Name<sp/>&gt;&amp;<sp/>double_value_names,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/>Name<sp/>&gt;&amp;<sp/>long_value_names<sp/>)<sp/>override;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a3eae03a8a0324441b59ef06d08467c1d" kindref="member">prepare</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a4b6b06b48a95208f2ede85e1c40f3284" kindref="member">cleanup</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a41c9d1cc678a905ea5ad5bffc5e163dd" kindref="member">pre_run_hook</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a36cb7d08f65c7b0ad6c1231cbb3d20aa" kindref="member">post_run_hook</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1ada97baf50c962ef59e8016ed66c6a958" kindref="member">post_step_hook</ref>()<sp/>override;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a83b10ed6b51d99ffa3592769b306d73a" kindref="member">write</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;,<sp/>const<sp/><ref refid="classnest_1_1Event" kindref="compound">Event</ref>&amp;,<sp/>const<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&gt;&amp;,<sp/>const<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::vector&lt;<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&gt;&amp;<sp/>)<sp/>override;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a2ed1c97f4fa8304eb274950e9cdd5026" kindref="member">set_status</ref>(<sp/>const<sp/>DictionaryDatum&amp;<sp/>)<sp/>override;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a704c2929a8dd0ad04813777b4cbd926c" kindref="member">get_status</ref>(<sp/>DictionaryDatum&amp;<sp/>)<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a540622ebd9b5876e134841902590e4ad" kindref="member">check_device_status</ref>(<sp/>const<sp/>DictionaryDatum&amp;<sp/>)<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a360ecc2e92558961f2e992e04582d6c0" kindref="member">get_device_defaults</ref>(<sp/>DictionaryDatum&amp;<sp/>)<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1ac085ad5ab92cf03d494a9f12827fa837" kindref="member">get_device_status</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;<sp/>device,<sp/>DictionaryDatum&amp;<sp/>)<sp/>const<sp/>override;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>const<sp/><ref refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7" kindref="member">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1ae14172cd7bc3e95af782489ceaa5de3a" kindref="member">compute_vp_node_id_string_</ref>(<sp/>const<sp/><ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref>&amp;<sp/>device<sp/>)<sp/>const;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData" refkind="compound"><highlight class="normal"><sp/><sp/>struct<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData" kindref="compound">DeviceData</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="197" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a933464beba5702229ae2757a07435eea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a933464beba5702229ae2757a07435eea" kindref="member">DeviceData</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData" kindref="compound">DeviceData</ref>(<sp/>std::string,<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a3f6ce3b2435231a21a70ed29aaedd5cd" kindref="member">set_value_names</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>Name<sp/>&gt;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>Name<sp/>&gt;&amp;<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>open_file();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a83b10ed6b51d99ffa3592769b306d73a" kindref="member">write</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1Event" kindref="compound">Event</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>double<sp/>&gt;&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>long<sp/>&gt;&amp;<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flush_file();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_file();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a704c2929a8dd0ad04813777b4cbd926c" kindref="member">get_status</ref>(<sp/>DictionaryDatum&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a2ed1c97f4fa8304eb274950e9cdd5026" kindref="member">set_status</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1af14720d64035394148145b70924cb874" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1af14720d64035394148145b70924cb874" kindref="member">precision_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a64c51c08fd7f48a57b8a21950374d42e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a64c51c08fd7f48a57b8a21950374d42e" kindref="member">time_in_steps_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a3901b1d8848a7e63ea6041850997ea34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a3901b1d8848a7e63ea6041850997ea34" kindref="member">modelname_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a31c99931a3f09392d42604df126800f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a31c99931a3f09392d42604df126800f9" kindref="member">vp_node_id_string_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a1e66ab03b1ce780b17e1598e0a5b9ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a1e66ab03b1ce780b17e1598e0a5b9ba6" kindref="member">file_extension_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a1baeb22c9f248b7e09eecfbdb7d5d53b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a1baeb22c9f248b7e09eecfbdb7d5d53b" kindref="member">label_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1ae640d5d02552b2fa38b7b959dee8d938" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ofstream<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1ae640d5d02552b2fa38b7b959dee8d938" kindref="member">file_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a3db0116dd2fac763a4dc920e8061ebac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Name<sp/>&gt;<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a3db0116dd2fac763a4dc920e8061ebac" kindref="member">double_value_names_</ref>;<sp/></highlight></codeline>
<codeline lineno="216" refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a9d3390ba9363bb804f95d535ea56a947" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>Name<sp/>&gt;<sp/><ref refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a9d3390ba9363bb804f95d535ea56a947" kindref="member">long_value_names_</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>compute_filename_()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="classnest_1_1RecordingBackendASCII_1aa6a4c8193134b540c2fea4d15315fb6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::map&lt;<sp/>size_t,<sp/>DeviceData<sp/>&gt;<sp/>&gt;<sp/><ref refid="classnest_1_1RecordingBackendASCII_1aa6a4c8193134b540c2fea4d15315fb6d" kindref="member">data_map</ref>;</highlight></codeline>
<codeline lineno="222" refid="classnest_1_1RecordingBackendASCII_1a3be1b3072aa7c6d120df42c6e612d2b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1RecordingBackendASCII_1aa6a4c8193134b540c2fea4d15315fb6d" kindref="member">data_map</ref><sp/><ref refid="classnest_1_1RecordingBackendASCII_1a3be1b3072aa7c6d120df42c6e612d2b3" kindref="member">device_data_</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RECORDING_BACKEND_ASCII_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/recording_backend_ascii.h"/>
  </compounddef>
</doxygen>
