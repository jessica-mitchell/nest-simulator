<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1LognormalParameter" kind="class" language="C++" prot="public">
    <compoundname>nest::LognormalParameter</compoundname>
    <basecompoundref refid="classnest_1_1Parameter" prot="public" virt="non-virtual">nest::Parameter</basecompoundref>
    <includes refid="parameter_8h" local="no">parameter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1LognormalParameter_1abc4881d5756b025e7526369dac400860" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::LognormalParameter::mean_</definition>
        <argsstring></argsstring>
        <name>mean_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="297" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" bodystart="297" bodyend="-1"/>
        <referencedby refid="classnest_1_1LognormalParameter_1afc698a1f29a46fede10100c28bebae3b" compoundref="parameter_8cpp" startline="107" endline="122">LognormalParameter</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1LognormalParameter_1a37d09d5520213ec919f00931ab9d3838" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::LognormalParameter::std_</definition>
        <argsstring></argsstring>
        <name>std_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="297" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" bodystart="297" bodyend="-1"/>
        <referencedby refid="classnest_1_1LognormalParameter_1afc698a1f29a46fede10100c28bebae3b" compoundref="parameter_8cpp" startline="107" endline="122">LognormalParameter</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1LognormalParameter_1ac491e3d4daa90d7af205b1391437c04c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacenest_1a278010c4e02cb5fd624d48960a45fe38" kindref="member">lognormal_distribution</ref> &gt;</type>
        <definition>std::vector&lt; lognormal_distribution &gt; nest::LognormalParameter::lognormal_dists_</definition>
        <argsstring></argsstring>
        <name>lognormal_dists_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="298" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" bodystart="298" bodyend="-1"/>
        <referencedby refid="classnest_1_1LognormalParameter_1afc698a1f29a46fede10100c28bebae3b" compoundref="parameter_8cpp" startline="107" endline="122">LognormalParameter</referencedby>
        <referencedby refid="classnest_1_1LognormalParameter_1aae79ab35ee3bbee67c84d21101bb5266" compoundref="parameter_8cpp" startline="125" endline="130">value</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1LognormalParameter_1afc698a1f29a46fede10100c28bebae3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::LognormalParameter::LognormalParameter</definition>
        <argsstring>(const DictionaryDatum &amp;d)</argsstring>
        <name>LognormalParameter</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classnest_1_1LognormalParameter" kindref="compound">LognormalParameter</ref> with specifications specified in a dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>dictionary with parameter specifications</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The dictionary can include the following entries: mean - mean value of logarithm sigma - standard distribution of logarithm </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="292" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.cpp" bodystart="107" bodyend="122"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1LognormalParameter_1ac491e3d4daa90d7af205b1391437c04c" compoundref="parameter_8h" startline="298">lognormal_dists_</references>
        <references refid="namespacenest_1_1names_1a864c769c713eae9512eddf03407f2bfd">nest::names::mean</references>
        <references refid="classnest_1_1LognormalParameter_1abc4881d5756b025e7526369dac400860" compoundref="parameter_8h" startline="297">mean_</references>
        <references refid="classnest_1_1RandomDistribution_1abe54aaf62865bf0bc1d5549c74b69a2a" compoundref="random__generators_8h" startline="357" endline="360">nest::RandomDistribution&lt; DistributionT &gt;::param</references>
        <references refid="namespacenest_1_1names_1a5d090e9d6776885fbdb33f5d93d625f7">nest::names::std</references>
        <references refid="classnest_1_1LognormalParameter_1a37d09d5520213ec919f00931ab9d3838" compoundref="parameter_8h" startline="297">std_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1LognormalParameter_1aae79ab35ee3bbee67c84d21101bb5266" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double nest::LognormalParameter::value</definition>
        <argsstring>(RngPtr rng, Node *node) override</argsstring>
        <name>value</name>
        <reimplements refid="classnest_1_1Parameter_1a547d7a88eb7bce31f53fd06d370bb2e7">value</reimplements>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Generates a value based on parameter specifications and arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Used when getting a parameter value based on random values or node attributes, like position. Note that not all parameters support all overloaded versions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the random number generator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the node, used when the node position is relevant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="294" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.cpp" bodystart="125" bodyend="130"/>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="975" endline="978">nest::Node::get_node_id</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1LognormalParameter_1ac491e3d4daa90d7af205b1391437c04c" compoundref="parameter_8h" startline="298">lognormal_dists_</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
        <references refid="classnest_1_1VPManager_1a58ddc7ca0a301790ffe71f5a9c795de7" compoundref="vp__manager__impl_8h" startline="49" endline="52">nest::VPManager::vp_to_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1LognormalParameter_1a547d7a88eb7bce31f53fd06d370bb2e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>virtual double nest::Parameter::value</definition>
        <argsstring>(RngPtr rng, Node *node)=0</argsstring>
        <name>value</name>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Generates a value based on parameter specifications and arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Used when getting a parameter value based on random values or node attributes, like position. Note that not all parameters support all overloaded versions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the random number generator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the node, used when the node position is relevant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="282" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1LognormalParameter_1a829b6a636dc326bc9ec36765bc245d38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::Parameter::value</definition>
        <argsstring>(RngPtr rng, const std::vector&lt; double &gt; &amp;source_pos, const std::vector&lt; double &gt; &amp;target_pos, const AbstractLayer &amp;layer, Node *node)</argsstring>
        <name>value</name>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>source_pos</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>target_pos</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1AbstractLayer" kindref="compound">AbstractLayer</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Generates a value based on parameter specifications and arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>Used when connecting spatial nodes. Note that not all parameters support all overloaded versions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the random number generator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the source node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the target node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layer</parametername>
</parameternamelist>
<parameterdescription>
<para>spatial layer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>target node, required for normal and lognormal parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="282" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" bodystart="1453" bodyend="1460"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Random parameter with lognormal distribution. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Parameter</label>
        <link refid="classnest_1_1Parameter"/>
      </node>
      <node id="1">
        <label>nest::LognormalParameter</label>
        <link refid="classnest_1_1LognormalParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Parameter</label>
        <link refid="classnest_1_1Parameter"/>
      </node>
      <node id="1">
        <label>nest::LognormalParameter</label>
        <link refid="classnest_1_1LognormalParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" line="279" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/parameter.h" bodystart="280" bodyend="299"/>
    <listofallmembers>
      <member refid="classnest_1_1Parameter_1a73d93795275bcb0ba6e59761ab52c928" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>apply</name></member>
      <member refid="classnest_1_1Parameter_1a73aaebb7863ec82e848463497631bd88" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>is_spatial</name></member>
      <member refid="classnest_1_1Parameter_1ac20be9081c515b43cc92c7964d316902" prot="protected" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>is_spatial_</name></member>
      <member refid="classnest_1_1LognormalParameter_1ac491e3d4daa90d7af205b1391437c04c" prot="private" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>lognormal_dists_</name></member>
      <member refid="classnest_1_1LognormalParameter_1afc698a1f29a46fede10100c28bebae3b" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>LognormalParameter</name></member>
      <member refid="classnest_1_1LognormalParameter_1abc4881d5756b025e7526369dac400860" prot="private" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>mean_</name></member>
      <member refid="classnest_1_1Parameter_1a795d9e3c2ef8e4b2f272377807dc4817" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>Parameter</name></member>
      <member refid="classnest_1_1Parameter_1a7c451c0b857c87c3df9c2b2340851556" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>Parameter</name></member>
      <member refid="classnest_1_1Parameter_1ae333502a77312fc1ba9dcfdd27fc762a" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>returns_int_only</name></member>
      <member refid="classnest_1_1Parameter_1ad3e746702f48606b0b18a86188ff3350" prot="protected" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>returns_int_only_</name></member>
      <member refid="classnest_1_1LognormalParameter_1a37d09d5520213ec919f00931ab9d3838" prot="private" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>std_</name></member>
      <member refid="classnest_1_1LognormalParameter_1aae79ab35ee3bbee67c84d21101bb5266" prot="public" virt="virtual"><scope>nest::LognormalParameter</scope><name>value</name></member>
      <member refid="classnest_1_1LognormalParameter_1a547d7a88eb7bce31f53fd06d370bb2e7" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>value</name></member>
      <member refid="classnest_1_1LognormalParameter_1a829b6a636dc326bc9ec36765bc245d38" prot="public" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>value</name></member>
      <member refid="classnest_1_1Parameter_1a829b6a636dc326bc9ec36765bc245d38" prot="public" virt="virtual" ambiguityscope="nest::Parameter::"><scope>nest::LognormalParameter</scope><name>value</name></member>
      <member refid="classnest_1_1Parameter_1a60666e9ec0de4fb53188f64657217939" prot="protected" virt="non-virtual"><scope>nest::LognormalParameter</scope><name>value_is_integer_</name></member>
      <member refid="classnest_1_1Parameter_1aee3ca93bce135fcb5d8d7f0ec7bd0daf" prot="public" virt="virtual"><scope>nest::LognormalParameter</scope><name>~Parameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
