<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1Ntree" kind="class" language="C++" prot="public">
    <compoundname>nest::Ntree</compoundname>
    <includes refid="ntree_8h" local="no">ntree.h</includes>
    <innerclass refid="classnest_1_1Ntree_1_1iterator" prot="public">nest::Ntree::iterator</innerclass>
    <innerclass refid="classnest_1_1Ntree_1_1masked__iterator" prot="public">nest::Ntree::masked_iterator</innerclass>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>int</type>
        <declname>max_capacity</declname>
        <defname>max_capacity</defname>
        <defval>100</defval>
      </param>
      <param>
        <type>int</type>
        <declname>max_depth</declname>
        <defname>max_depth</defname>
        <defval>10</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1Ntree_1a9ba3d3e098dc91e28213b11548953ff3" prot="public" static="no">
        <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>typedef Position&lt; D &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <qualifiedname>nest::Ntree::key_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="58" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1Ntree_1a2d209abd7d84e0f5a031a359eda04d44" prot="public" static="no">
        <type>T</type>
        <definition>typedef T nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::mapped_type</definition>
        <argsstring></argsstring>
        <name>mapped_type</name>
        <qualifiedname>nest::Ntree::mapped_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="59" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" prot="public" static="no">
        <type>std::pair&lt; <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;, T &gt;</type>
        <definition>typedef std::pair&lt; Position&lt; D &gt;, T &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>nest::Ntree::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="60" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1Ntree_1a0292c14aaf369ed71b8db11de42b3662" prot="public" static="no">
        <type><ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>nest::Ntree::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="61" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1Ntree_1ae5618f07cb2244764fc4388637937411" prot="public" static="no">
        <type>const <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef const value_type&amp; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <qualifiedname>nest::Ntree::const_reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="62" column="28" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classnest_1_1Ntree_1ab54b92ccee3d0249365a4c9f9c1b1f26" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::N</definition>
        <argsstring></argsstring>
        <name>N</name>
        <qualifiedname>nest::Ntree::N</qualifiedname>
        <initializer>= 1 &lt;&lt; D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="56" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1ac211b71e9094cc21b5ad46a195c1f019" compoundref="ntree__impl_8h" startline="82" endline="109">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::next_leaf_</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1ac0dbf7a25f913e88683273110449f427" compoundref="ntree__impl_8h" startline="233" endline="314">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::next_leaf_</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1Ntree_1a0cdb4512f92d721fd93df4266c4e6805" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::lower_left_</definition>
        <argsstring></argsstring>
        <name>lower_left_</name>
        <qualifiedname>nest::Ntree::lower_left_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="377" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="377" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a573e9a6c350f7d5c0b691a82ceeaeb67" compoundref="ntree__impl_8h" startline="124" endline="179">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::masked_iterator</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" compoundref="ntree__impl_8h" startline="391" endline="405">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::subquad_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1a60f8f6b427326e4987681801c261ab6e" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
        <definition>Position&lt; D &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::extent_</definition>
        <argsstring></argsstring>
        <name>extent_</name>
        <qualifiedname>nest::Ntree::extent_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="378" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="378" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a573e9a6c350f7d5c0b691a82ceeaeb67" compoundref="ntree__impl_8h" startline="124" endline="179">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::masked_iterator</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" compoundref="ntree__impl_8h" startline="391" endline="405">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::subquad_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1aef768b59791d5142c4422a437a6bf871" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::leaf_</definition>
        <argsstring></argsstring>
        <name>leaf_</name>
        <qualifiedname>nest::Ntree::leaf_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="380" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="380" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a1b78d562b12579520d423b013985a744" compoundref="ntree_8h" startline="442" endline="445">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::is_leaf</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1a5d79825fa23da444a06fc89b3579da16" compoundref="ntree_8h" startline="426" endline="438">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::iterator</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1acc8a5ad92432f75779156f46e3d39c1f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &gt;</type>
        <definition>std::vector&lt; value_type &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::nodes_</definition>
        <argsstring></argsstring>
        <name>nodes_</name>
        <qualifiedname>nest::Ntree::nodes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="382" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="382" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1adc069c1ca0fc49c0c9074aef888781d3" compoundref="ntree__impl_8h" startline="37" endline="57">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::iterator</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1aa04d23cb6cd87d96a987002ee79116bc" compoundref="ntree_8h" startline="94" endline="97">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::operator*</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a3565e7ebd644830fb53ed280212a0a26" compoundref="ntree_8h" startline="178" endline="181">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::operator*</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a3bd89cf67a8c7ce380cff281eaaf66c5" compoundref="ntree__impl_8h" startline="353" endline="387">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::operator++</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1a39b0f418ff9725826e074b5c92c86ade" compoundref="ntree_8h" startline="99" endline="102">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::operator-&gt;</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a03900056de8d3613d8c100cab6d77cdc" compoundref="ntree_8h" startline="183" endline="186">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::operator-&gt;</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1a13ffaffabd026265565b316c1d785c92" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> *</type>
        <definition>Ntree* nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <qualifiedname>nest::Ntree::parent_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="384" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="384" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1a5d79825fa23da444a06fc89b3579da16" compoundref="ntree_8h" startline="426" endline="438">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::iterator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1a426394e2fc5957b0f01e7e188759f0bc" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::my_subquad_</definition>
        <argsstring></argsstring>
        <name>my_subquad_</name>
        <qualifiedname>nest::Ntree::my_subquad_</qualifiedname>
        <briefdescription>
<para>This <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>&apos;s subquad number within parent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="385" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1a81c4572b692040c83f1aa0a91fc9fc03" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::my_depth_</definition>
        <argsstring></argsstring>
        <name>my_depth_</name>
        <qualifiedname>nest::Ntree::my_depth_</qualifiedname>
        <briefdescription>
<para>This <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>&apos;s depth in the tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="386" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="386" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1abbe7f4ab02a5c6751ee3aa6e01e21a21" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> *</type>
        <definition>Ntree* nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::children_[N]</definition>
        <argsstring>[N]</argsstring>
        <name>children_</name>
        <qualifiedname>nest::Ntree::children_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="387" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="387" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1adc069c1ca0fc49c0c9074aef888781d3" compoundref="ntree__impl_8h" startline="37" endline="57">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::iterator</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1Ntree_1ad5b45402f1fd075ab9e15a3e29e6e8bb" prot="protected" static="no" mutable="no">
        <type>std::bitset&lt; D &gt;</type>
        <definition>std::bitset&lt; D &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::periodic_</definition>
        <argsstring></argsstring>
        <name>periodic_</name>
        <qualifiedname>nest::Ntree::periodic_</qualifiedname>
        <briefdescription>
<para>periodic b.c. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="388" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="388" bodyend="-1"/>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1_1masked__iterator_1a573e9a6c350f7d5c0b691a82ceeaeb67" compoundref="ntree__impl_8h" startline="124" endline="179">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_iterator::masked_iterator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1Ntree_1a67171474c4da6cc8efe0c7fafefd2b2d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>nest::Ntree::iterator</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="390" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classnest_1_1Ntree_1a4c44139c1661498b7d1c41aa8788861b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class masked_iterator</definition>
        <argsstring></argsstring>
        <name>masked_iterator</name>
        <qualifiedname>nest::Ntree::masked_iterator</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Ntree_1_1masked__iterator" kindref="compound">masked_iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="391" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1Ntree_1a2c5ba3d96935277a48cc17fa8a205601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::Ntree</definition>
        <argsstring>(const Position&lt; D &gt; &amp;lower_left, const Position&lt; D &gt; &amp;extent, std::bitset&lt; D &gt; periodic=0, Ntree *parent=0, int subquad=0)</argsstring>
        <name>Ntree</name>
        <qualifiedname>nest::Ntree::Ntree</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>lower_left</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>std::bitset&lt; D &gt;</type>
          <declname>periodic</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> *</type>
          <declname>parent</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>subquad</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> that covers the region defined by the two input positions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lower_left</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower left corner of ntree. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extent</parametername>
</parameternamelist>
<parameterdescription>
<para>Size (width,height) of ntree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="275" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="395" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a92c94f7854934e20cf5e2f76777a3483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::~Ntree</definition>
        <argsstring>()</argsstring>
        <name>~Ntree</name>
        <qualifiedname>nest::Ntree::~Ntree</qualifiedname>
        <briefdescription>
<para>Delete <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> recursively. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="284" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="411" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</definition>
        <argsstring>(Position&lt; D &gt; pos, const T &amp;node)</argsstring>
        <name>insert</name>
        <qualifiedname>nest::Ntree::insert</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Traverse quadtree structure from current ntree. </para>
        </briefdescription>
        <detaileddescription>
<para>Inserts node in correct leaf in quadtree. <simplesect kind="return"><para>iterator pointing to inserted node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="291" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree_impl.h" bodystart="460" bodyend="506"/>
        <references refid="classnest_1_1Ntree_1abbe7f4ab02a5c6751ee3aa6e01e21a21" compoundref="ntree_8h" startline="387">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::children_</references>
        <references refid="classnest_1_1Ntree_1a60f8f6b427326e4987681801c261ab6e" compoundref="ntree_8h" startline="378">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::extent_</references>
        <references refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</references>
        <references refid="classnest_1_1Ntree_1aef768b59791d5142c4422a437a6bf871" compoundref="ntree_8h" startline="380">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::leaf_</references>
        <references refid="classnest_1_1Ntree_1a0cdb4512f92d721fd93df4266c4e6805" compoundref="ntree_8h" startline="377">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::lower_left_</references>
        <references refid="classnest_1_1Ntree_1a81c4572b692040c83f1aa0a91fc9fc03" compoundref="ntree_8h" startline="386">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::my_depth_</references>
        <references refid="classnest_1_1Ntree_1acc8a5ad92432f75779156f46e3d39c1f" compoundref="ntree_8h" startline="382">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::nodes_</references>
        <references refid="classnest_1_1Ntree_1ad5b45402f1fd075ab9e15a3e29e6e8bb" compoundref="ntree_8h" startline="388">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::periodic_</references>
        <references refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</references>
        <references refid="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" compoundref="ntree__impl_8h" startline="391" endline="405">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::subquad_</references>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a2d608a77a95bb582e01a96a28916cf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</definition>
        <argsstring>(const value_type &amp;val)</argsstring>
        <name>insert</name>
        <qualifiedname>nest::Ntree::insert</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>std::multimap like insert method </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="296" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ac32e4851832ed5178c94cfb02a4dddd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</definition>
        <argsstring>(iterator, const value_type &amp;val)</argsstring>
        <name>insert</name>
        <qualifiedname>nest::Ntree::insert</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>STL container compatible insert method (the first argument is ignored) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="301" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ad2e656df91f8d8aaa524b9cab43f26df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &gt;</type>
        <definition>std::vector&lt; std::pair&lt; Position&lt; D &gt;, T &gt; &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::get_nodes</definition>
        <argsstring>()</argsstring>
        <name>get_nodes</name>
        <qualifiedname>nest::Ntree::get_nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>member nodes in ntree and their position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="306" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="450" bodyend="455"/>
        <references refid="classnest_1_1Ntree_1ae0ae0a83ea9f7b8d5f0f99464c638ca7">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::append_nodes_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a6905ba8f60b2d5f88cc34fa3c98536ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &gt;</type>
        <definition>std::vector&lt; std::pair&lt; Position&lt; D &gt;, T &gt; &gt; nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::get_nodes</definition>
        <argsstring>(const Mask&lt; D &gt; &amp;mask, const Position&lt; D &gt; &amp;anchor)</argsstring>
        <name>get_nodes</name>
        <qualifiedname>nest::Ntree::get_nodes</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Applies a <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref> to this ntree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>mask to apply. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>position to center mask in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>member nodes in ntree inside mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="314" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="459" bodyend="464"/>
        <references refid="classnest_1_1Ntree_1ae0ae0a83ea9f7b8d5f0f99464c638ca7">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::append_nodes_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ac609c0dfe2894805648e06bf8b812430" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>nest::Ntree::begin</qualifiedname>
        <briefdescription>
<para>This function returns a node iterator which will traverse the subtree below this <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator for nodes in quadtree. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="322" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ae8a66ad3f812ec29ab4ba076004ca54d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>nest::Ntree::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="328" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="328" bodyend="331"/>
        <referencedby refid="classnest_1_1FreeLayer_1ab3201672033e5215b9bdeb2cb526f061" compoundref="free__layer_8h" startline="331" endline="335">nest::FreeLayer&lt; D &gt;::insert_global_positions_ntree_</referencedby>
        <referencedby refid="classnest_1_1GridLayer_1a9bcbeaa5ead80bf9afb7c999532d3c66" compoundref="grid__layer_8h" startline="292" endline="295">nest::GridLayer&lt; D &gt;::insert_global_positions_ntree_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1af1874ae32c06a42dafd97e3da68f8041" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1masked__iterator" kindref="compound">masked_iterator</ref></type>
        <definition>masked_iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_begin</definition>
        <argsstring>(const Mask&lt; D &gt; &amp;mask, const Position&lt; D &gt; &amp;anchor)</argsstring>
        <name>masked_begin</name>
        <qualifiedname>nest::Ntree::masked_begin</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; &amp;</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>This function returns a masked node iterator which will traverse the subtree below this <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref>, skipping nodes outside the mask. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator for nodes in quadtree. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="339" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a31838087503413f4076def1d53d35e1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Ntree_1_1masked__iterator" kindref="compound">masked_iterator</ref></type>
        <definition>masked_iterator nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::masked_end</definition>
        <argsstring>()</argsstring>
        <name>masked_end</name>
        <qualifiedname>nest::Ntree::masked_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="345" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a1b78d562b12579520d423b013985a744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::is_leaf</definition>
        <argsstring>() const</argsstring>
        <name>is_leaf</name>
        <qualifiedname>nest::Ntree::is_leaf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if ntree is a leaf. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="353" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="442" bodyend="445"/>
        <references refid="classnest_1_1Ntree_1aef768b59791d5142c4422a437a6bf871" compoundref="ntree_8h" startline="380">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::leaf_</references>
        <referencedby refid="classnest_1_1Ntree_1_1iterator_1adc069c1ca0fc49c0c9074aef888781d3" compoundref="ntree__impl_8h" startline="37" endline="57">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::iterator::iterator</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</definition>
        <argsstring>()</argsstring>
        <name>split_</name>
        <qualifiedname>nest::Ntree::split_</qualifiedname>
        <briefdescription>
<para>Change a leaf ntree to a regular ntree with four children regions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="360" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree_impl.h" bodystart="510" bodyend="536"/>
        <references refid="classnest_1_1Ntree_1abbe7f4ab02a5c6751ee3aa6e01e21a21" compoundref="ntree_8h" startline="387">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::children_</references>
        <references refid="classnest_1_1Ntree_1a60f8f6b427326e4987681801c261ab6e" compoundref="ntree_8h" startline="378">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::extent_</references>
        <references refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</references>
        <references refid="classnest_1_1Ntree_1aef768b59791d5142c4422a437a6bf871" compoundref="ntree_8h" startline="380">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::leaf_</references>
        <references refid="classnest_1_1Ntree_1a0cdb4512f92d721fd93df4266c4e6805" compoundref="ntree_8h" startline="377">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::lower_left_</references>
        <references refid="classnest_1_1Ntree_1ab54b92ccee3d0249365a4c9f9c1b1f26" compoundref="ntree_8h" startline="56">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::N</references>
        <references refid="classnest_1_1Ntree_1acc8a5ad92432f75779156f46e3d39c1f" compoundref="ntree_8h" startline="382">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::nodes_</references>
        <references refid="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" compoundref="ntree__impl_8h" startline="391" endline="405">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::subquad_</references>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ae0ae0a83ea9f7b8d5f0f99464c638ca7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::append_nodes_</definition>
        <argsstring>(std::vector&lt; value_type &gt; &amp;)</argsstring>
        <name>append_nodes_</name>
        <qualifiedname>nest::Ntree::append_nodes_</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Append this ntree&apos;s nodes to the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="365" column="8"/>
        <referencedby refid="classnest_1_1Ntree_1ad2e656df91f8d8aaa524b9cab43f26df" compoundref="ntree_8h" startline="450" endline="455">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::get_nodes</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1ae047751a2639d4aaf43986a483705c76" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::append_nodes_</definition>
        <argsstring>(std::vector&lt; value_type &gt; &amp;, const Mask&lt; D &gt; &amp;, const Position&lt; D &gt; &amp;)</argsstring>
        <name>append_nodes_</name>
        <qualifiedname>nest::Ntree::append_nodes_</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" kindref="member">value_type</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Append this ntree&apos;s nodes inside the mask to the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="370" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::subquad_</definition>
        <argsstring>(const Position&lt; D &gt; &amp;)</argsstring>
        <name>subquad_</name>
        <qualifiedname>nest::Ntree::subquad_</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the subquad number for this position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="375" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree_impl.h" bodystart="391" bodyend="405"/>
        <references refid="classnest_1_1Ntree_1a60f8f6b427326e4987681801c261ab6e" compoundref="ntree_8h" startline="378">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::extent_</references>
        <references refid="classnest_1_1Ntree_1a0cdb4512f92d721fd93df4266c4e6805" compoundref="ntree_8h" startline="377">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::lower_left_</references>
        <referencedby refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" compoundref="ntree__impl_8h" startline="460" endline="506">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::insert</referencedby>
        <referencedby refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" compoundref="ntree__impl_8h" startline="510" endline="536">nest::Ntree&lt; D, T, max_capacity, max_depth &gt;::split_</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> object represents a subtree or leaf in a <ref refid="classnest_1_1Ntree" kindref="compound">Ntree</ref> structure. </para>
    </briefdescription>
    <detaileddescription>
<para>Any ntree covers a specific region in space. A leaf ntree contains a list of items and their corresponding positions. A branch ntree contains a list of N=1&lt;&lt;D other ntrees, each covering a region corresponding to the upper-left, lower-left, upper-right and lower-left corner of their mother ntree. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>nest::Ntree&lt; D, T, max_capacity, max_depth &gt;</label>
        <link refid="classnest_1_1Ntree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>children_</edgelabel>
          <edgelabel>parent_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::Ntree&lt; D, T, max_capacity, max_depth &gt;</label>
        <link refid="classnest_1_1Ntree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>children_</edgelabel>
          <edgelabel>parent_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" line="53" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ntree.h" bodystart="54" bodyend="392"/>
    <listofallmembers>
      <member refid="classnest_1_1Ntree_1ae0ae0a83ea9f7b8d5f0f99464c638ca7" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>append_nodes_</name></member>
      <member refid="classnest_1_1Ntree_1ae047751a2639d4aaf43986a483705c76" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>append_nodes_</name></member>
      <member refid="classnest_1_1Ntree_1ac609c0dfe2894805648e06bf8b812430" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>begin</name></member>
      <member refid="classnest_1_1Ntree_1abbe7f4ab02a5c6751ee3aa6e01e21a21" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>children_</name></member>
      <member refid="classnest_1_1Ntree_1ae5618f07cb2244764fc4388637937411" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>const_reference</name></member>
      <member refid="classnest_1_1Ntree_1ae8a66ad3f812ec29ab4ba076004ca54d" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>end</name></member>
      <member refid="classnest_1_1Ntree_1a60f8f6b427326e4987681801c261ab6e" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>extent_</name></member>
      <member refid="classnest_1_1Ntree_1ad2e656df91f8d8aaa524b9cab43f26df" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>get_nodes</name></member>
      <member refid="classnest_1_1Ntree_1a6905ba8f60b2d5f88cc34fa3c98536ca" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>get_nodes</name></member>
      <member refid="classnest_1_1Ntree_1a0bd273fc0114d388b6442b72674ee50f" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>insert</name></member>
      <member refid="classnest_1_1Ntree_1a2d608a77a95bb582e01a96a28916cf39" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>insert</name></member>
      <member refid="classnest_1_1Ntree_1ac32e4851832ed5178c94cfb02a4dddd4" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>insert</name></member>
      <member refid="classnest_1_1Ntree_1a1b78d562b12579520d423b013985a744" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>is_leaf</name></member>
      <member refid="classnest_1_1Ntree_1a67171474c4da6cc8efe0c7fafefd2b2d" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>iterator</name></member>
      <member refid="classnest_1_1Ntree_1a9ba3d3e098dc91e28213b11548953ff3" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>key_type</name></member>
      <member refid="classnest_1_1Ntree_1aef768b59791d5142c4422a437a6bf871" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>leaf_</name></member>
      <member refid="classnest_1_1Ntree_1a0cdb4512f92d721fd93df4266c4e6805" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>lower_left_</name></member>
      <member refid="classnest_1_1Ntree_1a2d209abd7d84e0f5a031a359eda04d44" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>mapped_type</name></member>
      <member refid="classnest_1_1Ntree_1af1874ae32c06a42dafd97e3da68f8041" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>masked_begin</name></member>
      <member refid="classnest_1_1Ntree_1a31838087503413f4076def1d53d35e1b" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>masked_end</name></member>
      <member refid="classnest_1_1Ntree_1a4c44139c1661498b7d1c41aa8788861b" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>masked_iterator</name></member>
      <member refid="classnest_1_1Ntree_1a81c4572b692040c83f1aa0a91fc9fc03" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>my_depth_</name></member>
      <member refid="classnest_1_1Ntree_1a426394e2fc5957b0f01e7e188759f0bc" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>my_subquad_</name></member>
      <member refid="classnest_1_1Ntree_1ab54b92ccee3d0249365a4c9f9c1b1f26" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>N</name></member>
      <member refid="classnest_1_1Ntree_1acc8a5ad92432f75779156f46e3d39c1f" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>nodes_</name></member>
      <member refid="classnest_1_1Ntree_1a2c5ba3d96935277a48cc17fa8a205601" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>Ntree</name></member>
      <member refid="classnest_1_1Ntree_1a13ffaffabd026265565b316c1d785c92" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>parent_</name></member>
      <member refid="classnest_1_1Ntree_1ad5b45402f1fd075ab9e15a3e29e6e8bb" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>periodic_</name></member>
      <member refid="classnest_1_1Ntree_1a0292c14aaf369ed71b8db11de42b3662" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>reference</name></member>
      <member refid="classnest_1_1Ntree_1a7bc79703ee94175e36f6630f5cc6c79d" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>split_</name></member>
      <member refid="classnest_1_1Ntree_1a92eb0dd97a0d8f5102f035bc4242a58a" prot="protected" virt="non-virtual"><scope>nest::Ntree</scope><name>subquad_</name></member>
      <member refid="classnest_1_1Ntree_1a1dc837a1075696a3f4596ef842d24047" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>value_type</name></member>
      <member refid="classnest_1_1Ntree_1a92c94f7854934e20cf5e2f76777a3483" prot="public" virt="non-virtual"><scope>nest::Ntree</scope><name>~Ntree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
