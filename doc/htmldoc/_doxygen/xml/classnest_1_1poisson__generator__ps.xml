<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1poisson__generator__ps" kind="class" language="C++" prot="public">
    <compoundname>nest::poisson_generator_ps</compoundname>
    <basecompoundref refid="classnest_1_1StimulationDevice" prot="public" virt="non-virtual">nest::StimulationDevice</basecompoundref>
    <includes refid="poisson__generator__ps_8h" local="no">poisson_generator_ps.h</includes>
    <innerclass refid="structnest_1_1poisson__generator__ps_1_1Buffers__" prot="private">nest::poisson_generator_ps::Buffers_</innerclass>
    <innerclass refid="structnest_1_1poisson__generator__ps_1_1Parameters__" prot="private">nest::poisson_generator_ps::Parameters_</innerclass>
    <innerclass refid="structnest_1_1poisson__generator__ps_1_1Variables__" prot="private">nest::poisson_generator_ps::Variables_</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1poisson__generator__ps_1a000501efab67694132108a37e8f9a329" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1poisson__generator__ps_1_1Parameters__" kindref="compound">Parameters_</ref></type>
        <definition>Parameters_ nest::poisson_generator_ps::P_</definition>
        <argsstring></argsstring>
        <name>P_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="201" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="201" bodyend="-1"/>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a800d9e11958be048772e1af1bdc06f25" compoundref="poisson__generator__ps_8h" startline="231" endline="235">get_status</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1abb7fe39ae379a1b72f4263fc710b01ab" compoundref="poisson__generator__ps_8h" startline="207" endline="228">send_test_event</referencedby>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a1007f9bc3fa93c0000d0c29d362625a0" compoundref="poisson__generator__ps_8h" startline="238" endline="257">set_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1poisson__generator__ps_1a89d9d2d41624737b66fdc5d7e1b2480d" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1poisson__generator__ps_1_1Variables__" kindref="compound">Variables_</ref></type>
        <definition>Variables_ nest::poisson_generator_ps::V_</definition>
        <argsstring></argsstring>
        <name>V_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="202" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="202" bodyend="-1"/>
        <referencedby refid="classnest_1_1poisson__generator__ps_1aa50ebb9ee8fefc3728dff40806dd44cf" compoundref="poisson__generator__ps_8h" startline="260" endline="264">calibrate_time</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1poisson__generator__ps_1a45f8b4a1d416658ae5849681164ceb75" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1poisson__generator__ps_1_1Buffers__" kindref="compound">Buffers_</ref></type>
        <definition>Buffers_ nest::poisson_generator_ps::B_</definition>
        <argsstring></argsstring>
        <name>B_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="203" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="203" bodyend="-1"/>
        <referencedby refid="classnest_1_1poisson__generator__ps_1a1007f9bc3fa93c0000d0c29d362625a0" compoundref="poisson__generator__ps_8h" startline="238" endline="257">set_status</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a80b26b22385303306a4fcf195e5d4d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::poisson_generator_ps::poisson_generator_ps</definition>
        <argsstring>()</argsstring>
        <name>poisson_generator_ps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="97" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a0c329188ac1275dfbc643a9d515bd873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::poisson_generator_ps::poisson_generator_ps</definition>
        <argsstring>(const poisson_generator_ps &amp;)</argsstring>
        <name>poisson_generator_ps</name>
        <param>
          <type>const <ref refid="classnest_1_1poisson__generator__ps" kindref="compound">poisson_generator_ps</ref> &amp;</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="98" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a49f6d17f33d7b6255b72c50248a2ab2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::poisson_generator_ps::is_off_grid</definition>
        <argsstring>() const override</argsstring>
        <name>is_off_grid</name>
        <reimplements refid="classnest_1_1Node_1acaf132bbee717313ffbc86fd291667c9">is_off_grid</reimplements>
        <briefdescription>
<para>Returns true if the node sends/receives off-grid events. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to discriminate between different types of nodes when adding new nodes to the network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="100" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1abb7fe39ae379a1b72f4263fc710b01ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::poisson_generator_ps::send_test_event</definition>
        <argsstring>(Node &amp;, rport, synindex, bool) override</argsstring>
        <name>send_test_event</name>
        <reimplements refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3">send_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>receiving_node</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dummy_target</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiving_node passed as an argument. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of check_connection just throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref>.</para>
<para>This is required during the connection handshaking to test, if the receiving_node can handle the event type and receptor_type sent by the source node.</para>
<para>If dummy_target is true, this indicates that receiving_node is derived from <ref refid="classnest_1_1ConnTestDummyNodeBase" kindref="compound">ConnTestDummyNodeBase</ref> and used in the first call to <ref refid="classnest_1_1poisson__generator__ps_1abb7fe39ae379a1b72f4263fc710b01ab" kindref="member">send_test_event()</ref>. This can be ignored in most cases, but Nodes sending DS*Events to their own event hooks and then *Events to their proper targets must send DS*Events when called with the dummy target, and *Events when called with the real target, see #478. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="104" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="207" bodyend="228"/>
        <references refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" compoundref="numerics_8cpp" startline="72">numerics::e</references>
        <references refid="classnest_1_1StimulationDevice_1a1da58471abc5507ffd31884c9fda070f" compoundref="stimulation__device_8cpp" startline="60" endline="70">nest::StimulationDevice::enforce_single_syn_type</references>
        <references refid="namespacenest_1a6505b01bba1d7ff79d4e718ecc097a4a" compoundref="nest__types_8h" startline="183">nest::invalid_port</references>
        <references refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" compoundref="node_8h" startline="1012" endline="1015">nest::Node::is_model_prototype</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Parameters___1a159e174f09af7eb703998817214c036f" compoundref="poisson__generator__ps_8h" startline="153">nest::poisson_generator_ps::Parameters_::num_targets_</references>
        <references refid="namespacenest_1_1names_1a4c815121a452a876dd0976c42ab58f1d">nest::names::p</references>
        <references refid="classnest_1_1poisson__generator__ps_1a000501efab67694132108a37e8f9a329" compoundref="poisson__generator__ps_8h" startline="201">P_</references>
        <references refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35">nest::names::receptor_type</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a800d9e11958be048772e1af1bdc06f25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="231" bodyend="235"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Parameters___1a6ab91a60064a23477692676edae6a818" compoundref="poisson__generator__ps_8cpp" startline="58" endline="62">nest::poisson_generator_ps::Parameters_::get</references>
        <references refid="classnest_1_1StimulationDevice_1a3c17981ffa0b79bf9b2e559bcfba1573" compoundref="stimulation__device_8cpp" startline="166" endline="182">nest::StimulationDevice::get_status</references>
        <references refid="classnest_1_1poisson__generator__ps_1a000501efab67694132108a37e8f9a329" compoundref="poisson__generator__ps_8h" startline="201">P_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a1007f9bc3fa93c0000d0c29d362625a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="107" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="238" bodyend="257"/>
        <references refid="classnest_1_1poisson__generator__ps_1a45f8b4a1d416658ae5849681164ceb75" compoundref="poisson__generator__ps_8h" startline="203">B_</references>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1Time_1aced9f70610dd53cd35d58a2927d3f21b" compoundref="nest__time_8h" startline="449" endline="452">nest::Time::neg_inf</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Buffers___1a8131d37e8f1adfae8baa02e42749bf4a" compoundref="poisson__generator__ps_8h" startline="174">nest::poisson_generator_ps::Buffers_::next_spike_</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Parameters___1a159e174f09af7eb703998817214c036f" compoundref="poisson__generator__ps_8h" startline="153">nest::poisson_generator_ps::Parameters_::num_targets_</references>
        <references refid="classnest_1_1poisson__generator__ps_1a000501efab67694132108a37e8f9a329" compoundref="poisson__generator__ps_8h" startline="201">P_</references>
        <references refid="namespacenest_1_1names_1a3789ad4b8875f756eea3a5234dbc1269">nest::names::rate</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Parameters___1acabc2f62c9a665921590a2936c8ffe3c" compoundref="poisson__generator__ps_8cpp" startline="65" endline="84">nest::poisson_generator_ps::Parameters_::set</references>
        <references refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" compoundref="stimulation__device_8cpp" startline="123" endline="162">nest::StimulationDevice::set_status</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1aa50ebb9ee8fefc3728dff40806dd44cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::calibrate_time</definition>
        <argsstring>(const TimeConverter &amp;tc) override</argsstring>
        <name>calibrate_time</name>
        <reimplements refid="classnest_1_1Node_1a93e4da4ded11807b07c5f2428401bbc7">calibrate_time</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Re-calculate time-based properties of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called after a change in resolution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="109" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="260" bodyend="264"/>
        <references refid="classnest_1_1TimeConverter_1a6dd858c951ee0d6d846c5fc11a9eadc3" compoundref="nest__timeconverter_8cpp" startline="49" endline="57">nest::TimeConverter::from_old_tics</references>
        <references refid="classnest_1_1Time_1aa6d82d03d2328ecabd07ac9288b7d2f4" compoundref="nest__time_8h" startline="496" endline="499">nest::Time::get_tics</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Variables___1ac9de50705968a7c24154390ca8ceb54a" compoundref="poisson__generator__ps_8h" startline="195">nest::poisson_generator_ps::Variables_::t_max_active_</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Variables___1a045f610b302b6098b6037de7e8f8bd0b" compoundref="poisson__generator__ps_8h" startline="194">nest::poisson_generator_ps::Variables_::t_min_active_</references>
        <references refid="classnest_1_1poisson__generator__ps_1a89d9d2d41624737b66fdc5d7e1b2480d" compoundref="poisson__generator__ps_8h" startline="202">V_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a7f014b5e2af50d6edb30f78f1646c0a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" kindref="member">StimulationDevice::Type</ref></type>
        <definition>StimulationDevice::Type nest::poisson_generator_ps::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classnest_1_1StimulationDevice_1a89ae6559338e2d9d45abf77e7a10d42c">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="111" column="27" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a66e10568761a54d4ab36e6be9043ef32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::set_data_from_stimulation_backend</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;input_param) override</argsstring>
        <name>set_data_from_stimulation_backend</name>
        <reimplements refid="classnest_1_1StimulationDevice_1a617933b71a1b75a31585f88b92f905b7">set_data_from_stimulation_backend</reimplements>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>input_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="112" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="280" bodyend="299"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1a2fe8464ce37525bfbe0c0b5a99b594e0">nest::names::dead_time</references>
        <references refid="namespacenest_1_1names_1a3789ad4b8875f756eea3a5234dbc1269">nest::names::rate</references>
        <references refid="structnest_1_1poisson__generator__ps_1_1Parameters___1acabc2f62c9a665921590a2936c8ffe3c" compoundref="poisson__generator__ps_8cpp" startline="65" endline="84">nest::poisson_generator_ps::Parameters_::set</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Node::event_hook</definition>
        <argsstring>(DSSpikeEvent &amp;)</argsstring>
        <name>event_hook</name>
        <param>
          <type><ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Modify <ref refid="classnest_1_1Event" kindref="compound">Event</ref> object parameters during event delivery. </para>
        </briefdescription>
        <detaileddescription>
<para>Some Nodes want to perform a function on an event for each of their targets. An example is the <ref refid="classnest_1_1poisson__generator" kindref="compound">poisson_generator</ref> which needs to draw a random number for each target. The <ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref>, DirectSendingSpikeEvent, calls sender-&gt;event_hook(thread, *this) in its operator() function instead of calling target-&gt;<ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">handle()</ref>. The default implementation of <ref refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" kindref="member">Node::event_hook()</ref> just calls target-&gt;handle(DSSpikeEvent&amp;). Any reimplementation must also execute this call. Otherwise the event will not be delivered. If needed, target-&gt;handle(DSSpikeEvent) may be called more than once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="102" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="483" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a2575699815b3eed15322b0868ec2f89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Node::event_hook</definition>
        <argsstring>(DSCurrentEvent &amp;)</argsstring>
        <name>event_hook</name>
        <param>
          <type><ref refid="classnest_1_1DSCurrentEvent" kindref="compound">DSCurrentEvent</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="102" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="489" bodyend="492"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a16ab0c36b26736a35f0850dbfdd21137" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::init_state_</definition>
        <argsstring>() override</argsstring>
        <name>init_state_</name>
        <reimplements refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef">init_state_</reimplements>
        <briefdescription>
<para>Configure state variables depending on runtime information. </para>
        </briefdescription>
        <detaileddescription>
<para>Overload this method if the node needs to adapt state variables prior to first simulation to runtime information, e.g., the number of incoming connections. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="115" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="109" bodyend="112"/>
        <references refid="classnest_1_1StimulationDevice_1acfb7d327f43c0bcf3c86920b188c5830" compoundref="device_8h" startline="72" endline="74">nest::StimulationDevice::init_state</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1ae37bed64edc6f657455071e54e434ba6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::init_buffers_</definition>
        <argsstring>() override</argsstring>
        <name>init_buffers_</name>
        <reimplements refid="classnest_1_1Node_1a5881b951d112d2c408865d080287f453">init_buffers_</reimplements>
        <briefdescription>
<para>Configure persistent internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para>Let node configure persistent internal data structures, such as input buffers or ODE solvers, to runtime information prior to first simulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="116" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="115" bodyend="122"/>
        <references refid="classnest_1_1Device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" compoundref="device_8h" startline="78" endline="80">nest::Device::init_buffers</references>
        <references refid="classnest_1_1Time_1aced9f70610dd53cd35d58a2927d3f21b" compoundref="nest__time_8h" startline="449" endline="452">nest::Time::neg_inf</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a3a60e7fe56562aa73fd078ec7ea87df6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::pre_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>pre_run_hook</name>
        <reimplements refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplements>
        <briefdescription>
<para>Set internal variables before calls to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="117" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="125" bodyend="170"/>
        <references refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" compoundref="device_8h" startline="197" endline="200">nest::Device::get_origin</references>
        <references refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" compoundref="device_8h" startline="203" endline="206">nest::Device::get_start</references>
        <references refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6">nest::names::min</references>
        <references refid="classnest_1_1Time_1aced9f70610dd53cd35d58a2927d3f21b" compoundref="nest__time_8h" startline="449" endline="452">nest::Time::neg_inf</references>
        <references refid="classnest_1_1StimulationDevice_1a53ca0035b5b2ddedbf5f5d7a5fc47718" compoundref="stimulation__device_8cpp" startline="73" endline="76">nest::StimulationDevice::pre_run_hook</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1a61693db596fef528c2b52614d5d52622" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::update</definition>
        <argsstring>(Time const &amp;, const long, const long) override</argsstring>
        <name>update</name>
        <reimplements refid="classnest_1_1Node_1a69f3767afe7e7d1bc5b141e777778fd5">update</reimplements>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
          <defname>T</defname>
        </param>
        <param>
          <type>const long</type>
          <defname>from</defname>
        </param>
        <param>
          <type>const long</type>
          <defname>to</defname>
        </param>
        <briefdescription>
<para>Update state. </para>
        </briefdescription>
        <detaileddescription>
<para>Update cannot send spikes directly, since we need to identify each target to know the time of the most recent spike sent. Since target information is in the Connectors, we send a <ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> to all targets, which is reflected to this-&gt;<ref refid="classnest_1_1poisson__generator__ps_1a2c85dd6317fe53edd65e97641aeb0535" kindref="member">event_hook()</ref> with target information. <simplesect kind="see"><para><ref refid="classnest_1_1poisson__generator__ps_1adc4906d29813d0f609b23efe52ad3fca" kindref="member">event_hook</ref>, <ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="128" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="178" bodyend="203"/>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="251">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" compoundref="device_8h" startline="197" endline="200">nest::Device::get_origin</references>
        <references refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" compoundref="device_8h" startline="203" endline="206">nest::Device::get_start</references>
        <references refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" compoundref="device_8h" startline="209" endline="212">nest::Device::get_stop</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a9426cabb2c0dd92562f8a017eecef730">nest::names::max</references>
        <references refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6">nest::names::min</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9a350f7997aebc9c0a3b0620639ac0a4" compoundref="event__delivery__manager__impl_8h" startline="60" endline="63">nest::EventDeliveryManager::send</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1poisson__generator__ps_1adc4906d29813d0f609b23efe52ad3fca" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::poisson_generator_ps::event_hook</definition>
        <argsstring>(DSSpikeEvent &amp;) override</argsstring>
        <name>event_hook</name>
        <reimplements refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535">event_hook</reimplements>
        <param>
          <type><ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Send out spikes. </para>
        </briefdescription>
        <detaileddescription>
<para>Called once per target to dispatch actual output spikes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contains</parametername>
</parameternamelist>
<parameterdescription>
<para>target information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="135" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.cpp" bodystart="206" bodyend="277"/>
        <references refid="classnest_1_1BaseRandomGenerator_1ac9f238412d989640ad55a82e8d9e3a45">nest::BaseRandomGenerator::drand</references>
        <references refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" compoundref="numerics_8cpp" startline="72">numerics::e</references>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
        <references refid="classnest_1_1Time_1ab09a27c7668460aa1e2630aabecd5338" compoundref="nest__time_8h" startline="188">nest::Time::ms_stamp</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::poisson_generator_ps</label>
        <link refid="classnest_1_1poisson__generator__ps"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
      </node>
      <node id="4">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
      </node>
      <node id="2">
        <label>nest::StimulationDevice</label>
        <link refid="classnest_1_1StimulationDevice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>nest::Device::Variables_</label>
        <link refid="structnest_1_1Device_1_1Variables__"/>
      </node>
      <node id="5">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="14">
        <label>nest::poisson_generator_ps::Parameters_</label>
        <link refid="structnest_1_1poisson__generator__ps_1_1Parameters__"/>
      </node>
      <node id="18">
        <label>nest::RandomDistribution&lt; DistributionT &gt;</label>
        <link refid="classnest_1_1RandomDistribution"/>
      </node>
      <node id="10">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="15">
        <label>nest::poisson_generator_ps::Buffers_</label>
        <link refid="structnest_1_1poisson__generator__ps_1_1Buffers__"/>
      </node>
      <node id="13">
        <label>nest::StimulationDevice::Parameters_</label>
        <link refid="structnest_1_1StimulationDevice_1_1Parameters__"/>
      </node>
      <node id="9">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="16">
        <label>nest::poisson_generator_ps::Variables_</label>
        <link refid="structnest_1_1poisson__generator__ps_1_1Variables__"/>
        <childnode refid="17" relation="usage">
          <edgelabel>+exp_dev_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>+t_max_active_</edgelabel>
          <edgelabel>+t_min_active_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Device::Parameters_</label>
        <link refid="structnest_1_1Device_1_1Parameters__"/>
        <childnode refid="8" relation="usage">
          <edgelabel>+origin_</edgelabel>
          <edgelabel>+start_</edgelabel>
          <edgelabel>+stop_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="9" relation="usage">
          <edgelabel>#LIM_NEG_INF</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#LIM_MAX</edgelabel>
          <edgelabel>#LIM_MIN</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::DeviceNode</label>
        <link refid="classnest_1_1DeviceNode"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::poisson_generator_ps</label>
        <link refid="classnest_1_1poisson__generator__ps"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>-B_</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>-V_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-V_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="4">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="5" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::StimulationDevice</label>
        <link refid="classnest_1_1StimulationDevice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#P_</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>nest::RandomDistribution&lt; std::exponential_distribution&lt;&gt; &gt;</label>
        <link refid="classnest_1_1RandomDistribution"/>
        <childnode refid="18" relation="template-instance">
          <edgelabel>&lt; std::exponential_distribution&lt;&gt; &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" line="93" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/poisson_generator_ps.h" bodystart="94" bodyend="204"/>
    <listofallmembers>
      <member refid="classnest_1_1poisson__generator__ps_1a45f8b4a1d416658ae5849681164ceb75" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>B_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a9d182e84798604a76fcf328eb135dd77" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>backend_params_</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1aa50ebb9ee8fefc3728dff40806dd44cf" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Node_1ad88edfd6f881579328b545d88372807d" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>clone</name></member>
      <member refid="group__SP__functions_1gaa5b5f01608036752d816d1980c39cb87" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>connect_synaptic_element</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62a12528cd6da80e85b7c9ae820257226d9" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>CURRENT_GENERATOR</name></member>
      <member refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62a83de8d8ce44368db01f5163e2297dbfe" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>DELAYED_RATE_CONNECTION_GENERATOR</name></member>
      <member refid="classnest_1_1Node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>Device</name></member>
      <member refid="classnest_1_1DeviceNode_1a528097bccee9d8364ba626c9ac573221" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1DeviceNode_1acb8cad4e7bc743f7469fe145cbf318f0" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>DeviceNode</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62add61e044e7971f4411dc32a8dbe87e61" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>DOUBLE_DATA_GENERATOR</name></member>
      <member refid="classnest_1_1Node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>downcast</name></member>
      <member refid="classnest_1_1StimulationDevice_1a1da58471abc5507ffd31884c9fda070f" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>enforce_single_syn_type</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1adc4906d29813d0f609b23efe52ad3fca" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>event_hook</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>event_hook</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual" ambiguityscope="nest::StimulationDevice::"><scope>nest::poisson_generator_ps</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>finalize</name></member>
      <member refid="classnest_1_1StimulationDevice_1abff1868f1e27f6c4fc169cfadfd44856" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>first_syn_id_</name></member>
      <member refid="classnest_1_1Node_1a7c48b06a535a6e036c88ea2dcbaf8283" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>frozen_</name></member>
      <member refid="classnest_1_1Node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_C_m</name></member>
      <member refid="group__SP__functions_1gae46decb34ba3dc7f912fa6a691bb0de2" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1StimulationDevice_1a07a29a4f1da521707bf0f8149fe9b9fb" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1Node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1Node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_history</name></member>
      <member refid="classnest_1_1Node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1Node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1StimulationDevice_1a616090703a892ad9c77539a2d4ab22d0" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_label</name></member>
      <member refid="classnest_1_1DeviceNode_1a170639eec44df6f43d5f9a5403959ba4" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1Node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1Node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_model_</name></member>
      <member refid="classnest_1_1Node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_name</name></member>
      <member refid="classnest_1_1Node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_nc</name></member>
      <member refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_origin</name></member>
      <member refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_start</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a800d9e11958be048772e1af1bdc06f25" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_status</name></member>
      <member refid="classnest_1_1Node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1Node_1a54f0c50b08165643cee588bc89b464b8" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_status_dict_</name></member>
      <member refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_stop</name></member>
      <member refid="group__SP__functions_1ga9ba39ec217579e3ef23db9ae20479955" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1ga7a47b88c558984889d90d5ce027787cf" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1Node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1Node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1Node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1Node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_thread</name></member>
      <member refid="classnest_1_1Node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a7f014b5e2af50d6edb30f78f1646c0a4" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_type</name></member>
      <member refid="classnest_1_1Node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1Node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>get_vp</name></member>
      <member refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1StimulationDevice_1a800a7aa91f1dc9411b1f7e052999a3b5" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1Node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>init</name></member>
      <member refid="classnest_1_1StimulationDevice_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1ae37bed64edc6f657455071e54e434ba6" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1StimulationDevice_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>init_state</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a16ab0c36b26736a35f0850dbfdd21137" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>init_state_</name></member>
      <member refid="classnest_1_1Node_1a95389430ba10f2da19aacded71503f74" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>initialized_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a32a13f00b9c9b4bb0112105c08c6a2ba" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>is_active</name></member>
      <member refid="classnest_1_1Node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a49f6d17f33d7b6255b72c50248a2ab2c" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1DeviceNode_1aa345406ceab967b0dd50907ac380747c" prot="protected" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>local_device_id_</name></member>
      <member refid="classnest_1_1Node_1ac6e5bca87246812225ab04af4fd40df2" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1Node_1ae306f4602e575047801c45c9fec2a4d4" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>model_id_</name></member>
      <member refid="classnest_1_1Node_1a3ec5fd1ce0e6f3f0bccabd314c6845c3" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>nc_ptr_</name></member>
      <member refid="classnest_1_1Node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a9d697a1550c18613e0d2a0e57c67e836" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1Node_1a9f929d2c40ddaafd4a0822ea294f1ef9" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>node_uses_wfr_</name></member>
      <member refid="classnest_1_1Node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1Node_1a9c99a8caa89a3eb73e975f25678d5d58" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>operator=</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a000501efab67694132108a37e8f9a329" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>P_</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a80b26b22385303306a4fcf195e5d4d4d" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>poisson_generator_ps</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a0c329188ac1275dfbc643a9d515bd873" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>poisson_generator_ps</name></member>
      <member refid="classnest_1_1Node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a3a60e7fe56562aa73fd078ec7ea87df6" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>print_network</name></member>
      <member refid="classnest_1_1Node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1abb7fe39ae379a1b72f4263fc710b01ab" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1Node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a66e10568761a54d4ab36e6be9043ef32" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>set_data_from_stimulation_backend</name></member>
      <member refid="classnest_1_1Node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1StimulationDevice_1ac67e5262a139223625a3eea557e7aa45" prot="protected" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1DeviceNode_1a8c8b80f5be38584cb4b36a18a2977772" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_nc_</name></member>
      <member refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_node_id_</name></member>
      <member refid="classnest_1_1Node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a1007f9bc3fa93c0000d0c29d362625a0" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>set_status</name></member>
      <member refid="classnest_1_1Node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_thread</name></member>
      <member refid="classnest_1_1Node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>set_vp</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62ab9c4f2a5779e6380a2715ea508bf4cd0" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>SPIKE_GENERATOR</name></member>
      <member refid="classnest_1_1StimulationDevice_1a26634ef9b2543d2475725980700333b0" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>StimulationDevice</name></member>
      <member refid="classnest_1_1StimulationDevice_1ab2a3965daa883409a68c29f264726e66" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>StimulationDevice</name></member>
      <member refid="classnest_1_1Node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1Node_1a9ec98b82cf08796b726ca26666e5739d" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>thread_</name></member>
      <member refid="classnest_1_1Node_1a4316e73a0c494ccb37e6a19b00664223" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>thread_lid_</name></member>
      <member refid="classnest_1_1StimulationDevice_1a5d8eb948492115bb137a35ecb5cfdc62" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>Type</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a61693db596fef528c2b52614d5d52622" prot="private" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>update</name></member>
      <member refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1poisson__generator__ps_1a89d9d2d41624737b66fdc5d7e1b2480d" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>V_</name></member>
      <member refid="classnest_1_1Node_1ad40bb2d1d3c32dd953374bbe6a76e5a6" prot="private" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>vp_</name></member>
      <member refid="classnest_1_1Node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>~Device</name></member>
      <member refid="classnest_1_1Node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::poisson_generator_ps</scope><name>~Node</name></member>
      <member refid="classnest_1_1StimulationDevice_1ac249af71b4b12eb10265614b676da7cd" prot="public" virt="non-virtual"><scope>nest::poisson_generator_ps</scope><name>~StimulationDevice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
