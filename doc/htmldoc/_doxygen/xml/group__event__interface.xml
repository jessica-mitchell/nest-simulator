<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="group__event__interface" kind="group">
    <compoundname>event_interface</compoundname>
    <title>Communication.</title>
    <innerclass refid="classnest_1_1ConnTestDummyNodeBase" prot="public">nest::ConnTestDummyNodeBase</innerclass>
    <innerclass refid="classnest_1_1Event" prot="public">nest::Event</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>port</type>
        <definition>port nest::Node::handles_test_event</definition>
        <argsstring>(SpikeEvent &amp;, rport receptor_type)</argsstring>
        <name>handles_test_event</name>
        <qualifiedname>nest::Node::handles_test_event</qualifiedname>
        <reimplementedby refid="classnest_1_1glif__psc_1ab7112f5b34a0c9e205f5801fb102f958">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a9705b342fafc8e63ea4448f500cd5653">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1af65947fe5dfeaefe79ac3cdf86e5bb27">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a7d82fb65dbbfb3abc4f434d3ab326d73">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1bernoulli__synapse_1_1ConnTestDummyNode_1aa15fd2e8d610678d06abeddd7f942864">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1ac5f2d07c51509a47d0e6d4001efde53e">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1clopath__synapse_1_1ConnTestDummyNode_1acb1d8ad15b64eef2ccc9a9ea3e63d4f7">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a3945ef56b7db6a93be1811d799015622">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1cont__delay__synapse_1_1ConnTestDummyNode_1afa229a84848315ab5216d0637197131a">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a7dc084d35d1c86f1510debbe672b37d0">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a638f4df7d3cca9623fc5202a9b717847">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1aa32cde8875786c86a21ac57f5a6a0dae">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1af25237175ae7a245eb1c75bdd3dc3518">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1ad6d456e8b64b011622333fccc09ad0f7">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1ht__synapse_1_1ConnTestDummyNode_1aa4648aadbb08f716d4fe9504f82afe06">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1af04c73294bd50237be2a629c5836e2a6">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a2225445aab4561449392d4684dab2df4">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1abe1d982b85969213a0ff977c7fea676f">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a8da69ac6a81d12de6fab8e81ea2b730d">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a40da59b43d9e5e3aa3ec90e0906fcaac">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1ad8300166bd39b45e2e6486b9725e8c02">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a9189cfbe67319c4fe54c1a44a86bad80">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a741b2da3cfccc5252ab207b1ce35baa7">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1ac0894101e4b1d307ec51ba5221127ab9">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a1e8e69f499b6c26a7f37b3650b850441">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a015518ced3a32518bf175c6cfdfd6b0f">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1jonke__synapse_1_1ConnTestDummyNode_1a81ad219714db80fe366281d63d92b6da">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1addb30fb881dd8815ac4ef074e58bb283">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a408b7efc01bb8bec1d72a4cbe470a2cd">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1acba276c2f8377188781835be65a959be">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a9ff5de0b8ffcc2534143c1786588540d">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1quantal__stp__synapse_1_1ConnTestDummyNode_1aaca54e0762d26fcdf3848d3f8c27f82f">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1aea24bf847b40dbbc427921b2f586cc7f">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1adfe22aa11916872ebc6ce86270c8cefc">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1ab74985da6724c00684b26f0d0e1c9768">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1static__synapse_1_1ConnTestDummyNode_1ac0270453abcf5ba1bece0c896738cfb5">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1static__synapse__hom__w_1_1ConnTestDummyNode_1a1d7b38863d5fbf1f3fbe2e4775c8871b">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__dopamine__synapse_1_1ConnTestDummyNode_1a9c91a593a7ffcc98b764e4365fe71244">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__nn__pre__centered__synapse_1_1ConnTestDummyNode_1ac4f903c8d9ce13b8cb25771a44fb03e0">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__nn__restr__synapse_1_1ConnTestDummyNode_1a223ee93cb3c6d45154d3878edf13e2f3">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__nn__symm__synapse_1_1ConnTestDummyNode_1a595995542a176aa76d3b6745a472e61c">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__pl__synapse__hom_1_1ConnTestDummyNode_1a4c7bacec8464fc18c8b16b75d90465ce">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__synapse_1_1ConnTestDummyNode_1a804eac3236425336b87c8a53f7e40cae">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__facetshw__synapse__hom_1_1ConnTestDummyNode_1a0e2d2b94ee5075450d6977906ae6ce18">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__synapse__hom_1_1ConnTestDummyNode_1a66f1ecbc8dcec5faa123318511e75069">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1stdp__triplet__synapse_1_1ConnTestDummyNode_1a659de6f9d8ed9465d952dfd0ba0ba8da">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1tsodyks2__synapse_1_1ConnTestDummyNode_1a12a26bdebe410cd5915dc027f95c8120">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1tsodyks__synapse_1_1ConnTestDummyNode_1a203069ff0b6cc8bbce0db7f0a035bdc7">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1tsodyks__synapse__hom_1_1ConnTestDummyNode_1a6344221e000ee3c69284bf24bfac030e">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1urbanczik__synapse_1_1ConnTestDummyNode_1a7f2897933d832eb18f0858a5d2d98863">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1vogels__sprekeler__synapse_1_1ConnTestDummyNode_1a8bfcbae53b536df1bd451a8cf72f4605">handles_test_event</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a30e40b14d856ddd78f4a8f9d6fa0f2ed">handles_test_event</reimplementedby>
        <param>
          <type>SpikeEvent &amp;</type>
        </param>
        <param>
          <type>rport</type>
          <declname>receptor_type</declname>
        </param>
        <briefdescription>
<para>Check if the node can handle a particular event and receptor type. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called upon connection setup by <ref refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3" kindref="member">send_test_event()</ref>.</para>
<para><ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">handles_test_event()</ref> function is used to verify that the receiver can handle the event. It can also be used by the receiver to return information to the sender in form of the returned port. The default implementation throws an <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> exception. Any node class should define <ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">handles_test_event()</ref> functions for all those event types it can handle.</para>
<para>See Kunkel et al, Front Neuroinform 8:78 (2014), Sec 3.</para>
<para><simplesect kind="note"><para>The semantics of all other <ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">handles_test_event()</ref> functions is identical.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="401" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="232" bodyend="237"/>
        <referencedby refid="classnest_1_1DiffusionConnection_1af7972b2f7c36ebcd7583daf222efbbd5" compoundref="diffusion__connection_8h" startline="119" endline="127">nest::DiffusionConnection&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1GapJunction_1a9e333a60c5d7bcc5dac49cc19f8d17d2" compoundref="gap__junction_8h" startline="108" endline="116">nest::GapJunction&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1RateConnectionDelayed_1a01a44b9005a58b87eca84f18d90a108d" compoundref="rate__connection__delayed_8h" startline="105" endline="113">nest::RateConnectionDelayed&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1RateConnectionInstantaneous_1a50e71ed886aae409f65dda3b1dd5d251" compoundref="rate__connection__instantaneous_8h" startline="106" endline="114">nest::RateConnectionInstantaneous&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::sends_secondary_event</definition>
        <argsstring>(GapJunctionEvent &amp;ge)</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::Node::sends_secondary_event</qualifiedname>
        <reimplementedby refid="classnest_1_1proxynode_1afdfb38f8d6bd5837527a75eb4c6ff76e">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a8cc1e073626a9ffc843b2685474238de">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a8cc1e073626a9ffc843b2685474238de">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a8cc1e073626a9ffc843b2685474238de">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a8cc1e073626a9ffc843b2685474238de">sends_secondary_event</reimplementedby>
        <param>
          <type>GapJunctionEvent &amp;</type>
          <declname>ge</declname>
        </param>
        <briefdescription>
<para>Required to check, if source neuron may send a <ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This base class implementation throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> and needs to be overwritten in the derived class.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="422" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="342" bodyend="345"/>
        <referencedby refid="classnest_1_1DiffusionConnection_1af7972b2f7c36ebcd7583daf222efbbd5" compoundref="diffusion__connection_8h" startline="119" endline="127">nest::DiffusionConnection&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1GapJunction_1a9e333a60c5d7bcc5dac49cc19f8d17d2" compoundref="gap__junction_8h" startline="108" endline="116">nest::GapJunction&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1RateConnectionDelayed_1a01a44b9005a58b87eca84f18d90a108d" compoundref="rate__connection__delayed_8h" startline="105" endline="113">nest::RateConnectionDelayed&lt; targetidentifierT &gt;::check_connection</referencedby>
        <referencedby refid="classnest_1_1RateConnectionInstantaneous_1a50e71ed886aae409f65dda3b1dd5d251" compoundref="rate__connection__instantaneous_8h" startline="106" endline="114">nest::RateConnectionInstantaneous&lt; targetidentifierT &gt;::check_connection</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::sends_secondary_event</definition>
        <argsstring>(InstantaneousRateConnectionEvent &amp;re)</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::Node::sends_secondary_event</qualifiedname>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a6a5aba45190bd20aeb5c708aee1b1c15">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a98c682a0ad4ee749a981de5035ed6b2b">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a71ad81cbd6feea526888bec3de270f78">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1ac211e3fbd950837944a19b0397a49bf7">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a5469ac53c0b9d004829e1e2dbf41d120">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a5469ac53c0b9d004829e1e2dbf41d120">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a5469ac53c0b9d004829e1e2dbf41d120">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a5469ac53c0b9d004829e1e2dbf41d120">sends_secondary_event</reimplementedby>
        <param>
          <type>InstantaneousRateConnectionEvent &amp;</type>
          <declname>re</declname>
        </param>
        <briefdescription>
<para>Required to check, if source neuron may send a <ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This base class implementation throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> and needs to be overwritten in the derived class.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="431" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::sends_secondary_event</definition>
        <argsstring>(DiffusionConnectionEvent &amp;de)</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::Node::sends_secondary_event</qualifiedname>
        <reimplementedby refid="classnest_1_1proxynode_1af4c165393526562c694aeee07fc62c31">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1aa9414a7fa4241bc77bb110ba895968e0">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1aa9414a7fa4241bc77bb110ba895968e0">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1aa9414a7fa4241bc77bb110ba895968e0">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1aa9414a7fa4241bc77bb110ba895968e0">sends_secondary_event</reimplementedby>
        <param>
          <type>DiffusionConnectionEvent &amp;</type>
          <declname>de</declname>
        </param>
        <briefdescription>
<para>Required to check, if source neuron may send a <ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This base class implementation throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> and needs to be overwritten in the derived class.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="440" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::sends_secondary_event</definition>
        <argsstring>(DelayedRateConnectionEvent &amp;re)</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::Node::sends_secondary_event</qualifiedname>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a8c79869e456285547ac720f1fde49e5a">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a371aaf7d3d5bb4b31af3a1dab70b000a">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1ae21b25c5ded2248c1dedf6faf7530fff">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1ac334f61bf4382b7418eb466430c97670">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a2f9d087e4ad8a23bc023d1d17e927806">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a2732c32368c1ea09600a1a2ffddcb2f7">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a2732c32368c1ea09600a1a2ffddcb2f7">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a2732c32368c1ea09600a1a2ffddcb2f7">sends_secondary_event</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a2732c32368c1ea09600a1a2ffddcb2f7">sends_secondary_event</reimplementedby>
        <param>
          <type>DelayedRateConnectionEvent &amp;</type>
          <declname>re</declname>
        </param>
        <briefdescription>
<para>Required to check, if source neuron may send a <ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This base class implementation throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref> and needs to be overwritten in the derived class.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="449" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(SpikeEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1glif__psc_1a253eb2bd5a6be377a4711b72ea6ac36e">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a2a87f03f9f6b53dcccb9902ef7e9556a">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1afc2c13e1f1e6f4d72cc4f66da94fb728">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a5291adc4cd03089acaab926f03dac3c3">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a7970ed77b27a84ecc28256eeb8e51316">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a84891b0d4ab3820b9777fe9fb1b9dda9">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a07028b46a5ee0b25290b33f945c3f096">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a3eaf94510adb3ecb10d630caef892d5a">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a0490c6d8284252a9403e41d4159b7c07">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a9d65717b729d137e81f452a831f695c1">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a7ffef66f807a67615a0302cb35cd95df">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a811191307b23ba1deced77632ca095fc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a7d16fbbb770a2133162fcd75eb85f3fd">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1ae259efd5b67e67544298d0076c1aec38">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a186aa50b57e0bc598f6da6d3961174b2">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1ad43348fdd7f2a9819caa7971fd061977">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1aa54d77b806192c5c83a45fe21488204d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a424413d843b3db709c86cd5beeead335">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a0fcd90d605efb9571c40de45ce473f20">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a6c271be348584c8dc5f198810817de00">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1adbef5b29d70ad5e883b800ecd8014174">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a33b06a58e890aae51a37c7d54ac0007f">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a07c5abe723443660ba1f843bb4d10e8d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1aaf63cdd0e51747b4929ba94afe942880">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a4d8e3bcd366bec6ae590546d7cd96915">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1aaa0ac22bffc48320557cbf9b2f8845da">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a1e14fac82717814d69270951cf301946">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a138100077d9fbf11497d3dfd636a73fa">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1abce2d0732de0c7c6d4d1f63f3e54be60">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1afee2333ceda2f29df27139c8703456c1">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1ae810de070216d0f281833171a3b997bc">handle</reimplementedby>
        <param>
          <type>SpikeEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handle incoming spike events. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of event handlers just throws an <ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref> exception.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the calling thread. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Event" kindref="compound">Event</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This handler has to be implemented if a <ref refid="classnest_1_1Node" kindref="compound">Node</ref> should accept spike events. <simplesect kind="see"><para>class <ref refid="classnest_1_1SpikeEvent" kindref="compound">SpikeEvent</ref></para>
</simplesect>
<simplesect kind="see"><para>class <ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref> </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>This is the default event to throw. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="469" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="226" bodyend="229"/>
        <referencedby refid="classnest_1_1SpikeEvent_1a912766fd2f87c61e2ac70b723278043b" compoundref="event_8cpp" startline="77" endline="80">nest::SpikeEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1WeightRecorderEvent_1af82d5f6cc4d23c885dd92e70dc6b05a0" compoundref="event_8cpp" startline="83" endline="86">nest::WeightRecorderEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1RateEvent_1a688b75ab2f9992e0694637035dc60b8e" compoundref="event_8cpp" startline="95" endline="98">nest::RateEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1CurrentEvent_1afd45af1aca9dce3c66dfd7ceb57630fa" compoundref="event_8cpp" startline="101" endline="104">nest::CurrentEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1DataLoggingRequest_1a9bac30a4a5c21c70a994f751c21e03a6" compoundref="event_8cpp" startline="125" endline="128">nest::DataLoggingRequest::operator()</referencedby>
        <referencedby refid="classnest_1_1DataLoggingReply_1a2dc8b349347e1bdc409b583ab0c87c0b" compoundref="event_8cpp" startline="131" endline="134">nest::DataLoggingReply::operator()</referencedby>
        <referencedby refid="classnest_1_1ConductanceEvent_1a8e7f4a6d0a288c20d798b3233b97ac15" compoundref="event_8cpp" startline="113" endline="116">nest::ConductanceEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1DoubleDataEvent_1aff4a413b64cdb534466c1662ab15de92" compoundref="event_8cpp" startline="119" endline="122">nest::DoubleDataEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1GapJunctionEvent_1a6ffd954dc3a30a3f0cc58a73787ec368" compoundref="event_8cpp" startline="137" endline="140">nest::GapJunctionEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1InstantaneousRateConnectionEvent_1a474eee8e70b66474ce69613312467895" compoundref="event_8cpp" startline="143" endline="146">nest::InstantaneousRateConnectionEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1DelayedRateConnectionEvent_1a1eb689558cf6085a58bba77aadab8d1d" compoundref="event_8cpp" startline="149" endline="152">nest::DelayedRateConnectionEvent::operator()</referencedby>
        <referencedby refid="classnest_1_1DiffusionConnectionEvent_1aa6b84f5b3136a7131f078c1cfab8a9f5" compoundref="event_8cpp" startline="155" endline="158">nest::DiffusionConnectionEvent::operator()</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(WeightRecorderEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1weight__recorder_1aa96e9631d164dd8750501fac70ba4132">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a18c58ec60440eae4dd4b264fb63a8d98">handle</reimplementedby>
        <param>
          <type>WeightRecorderEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handle incoming weight recording events. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the calling thread. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Event" kindref="compound">Event</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This handler has to be implemented if a <ref refid="classnest_1_1Node" kindref="compound">Node</ref> should accept weight recording events. <simplesect kind="see"><para>class WeightRecordingEvent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="481" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(RateEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a9686693f44cd03a5420633b836c25f27">handle</reimplementedby>
        <param>
          <type>RateEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="489" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DataLoggingRequest &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1af9035085d8c49aebac0a262ad304c46d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1acafeca43e3da59af5469bce58794de1e">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1adb83e264c23d145a02d3259c05603b3d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a502b735e683cdd663564a8650f603147">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a4b19c2b19bc82d849cc8884c5766bbe5">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1ad69b2cc662f3b9ddaf2996fbd46fc9da">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a278c810e139acf765054fa3d1d52efe3">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a35e5023ef47dd594848312fa4a42e245">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a54cd259ea63b60067d157849f62a9163">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a1a88e2e6d028a3e96adac98ea261cfa3">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a315cb0396dfb3dacb6da0c7683dfc541">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a02d10e892c31af5fc59e27c4106daf79">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a43d4c2efa319c0db069cc8298b8494eb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a0909865edc69c17ab678f54ada7930da">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1ad9b2f0adf2568a55f0903e4c7e18eb6d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a6882df8d80288cdef210e765b3863c6a">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1ac291a8c2bb149865175158e974ca5d9a">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a68f05cb5f493f5b883efb6b39b175274">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a61bcfa4d1e3c4c01c9e37ad73ec07ca4">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1abf9cb222a30f6650a8355d5d136a586f">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a0a9971b012d7ddec08af2c9bdac7ca1d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1ad4c6d43fc5661d272ee6a9cc66096728">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a016bb5999f12ca091bf688082acd4aa0">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a7bab523f9a7845c026abaffd6478b325">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1ad08d6e4e86f5f3120d3dbf6500cc790f">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a80e98a1a2f7e7e33ae70437df95bda70">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a523c6725cf04d21ed7dda34ae7522e05">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a93ecc16f5e6a708dc76f42d35a42fe64">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1acd1458cf76e47c030beafb6a4d5147ba">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1glif__psc_1a9064a1dcc7866ada80236d112192c06d">handle</reimplementedby>
        <param>
          <type>DataLoggingRequest &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for universal data logging request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="497" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DataLoggingReply &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1multimeter_1a69851b4da90acd9a090bf2cde9c1f2d3">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a76de0226b6a5eef5dbe78a68d72c4492">handle</reimplementedby>
        <param>
          <type>DataLoggingReply &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for universal data logging request. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" kindref="member">handle(SpikeEvent&amp;)</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>There is no connect_sender() for <ref refid="classnest_1_1DataLoggingReply" kindref="compound">DataLoggingReply</ref>, since this event is only used as &quot;back channel&quot; for <ref refid="classnest_1_1DataLoggingRequest" kindref="compound">DataLoggingRequest</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="507" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(CurrentEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a758e50b6233977a94d0528aefe112bc0">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a51128c5742b7cf169fc8250e127db7ee">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a3b607b5ed036bfd77741be67af70fcca">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1adc11525986f2abb323529141792230cf">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1aa30761220145d4c4d9abaccb6041524c">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a78357f3cb48b55392ecfe2db61d9b387">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a772b20b1cdad64b1fadc158464becfbc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1ae266a1cd9568130bc5fbb67423355c48">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1af97a0096ec2dc86bacaa5cc8e317dead">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1aee8bfd548fdf28d4b34d095ef1c8a1bc">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a7c3708ee16886f3e5f2ce5b4f2b9b97d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a1e474048278b8ad309aecf878ff42122">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1aea6ac44f4b796e7fe9e09e77149801d3">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a542486a584d1983beba5d2eee089bcc2">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a32c672a1b087596125951bd7c82de8be">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1aab23ebcd42009878097b408916a43d74">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1ad8602ac7d62b5f11a42692f0a7261172">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1ab2687630d4d5cf36b81ead3a3aa2b0dd">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1adef54045c4b20be6075910f936a723b6">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1glif__psc_1a5f8692b9efd52ac29b3a21bd84c2468d">handle</reimplementedby>
        <param>
          <type>CurrentEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for current events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="515" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(ConductanceEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a0b4b6baf37b18218fd5103ab72bc2cae">handle</reimplementedby>
        <param>
          <type>ConductanceEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for conductance events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="523" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DoubleDataEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a1843f8e5565026ca51fc4b0fe1da77de">handle</reimplementedby>
        <param>
          <type>DoubleDataEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for DoubleData events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, SpikeEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="531" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(GapJunctionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a32b0e430fb34b46f56dc2ebc6dc7bacb">handle</reimplementedby>
        <param>
          <type>GapJunctionEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for gap junction events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, GapJunctionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="539" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(InstantaneousRateConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1afaa1c0d00b138aae85a5ebede4106349">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a5cb41e364f0cead935aa394e965cceb1">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1af37dcf8892c0cd3348015182a59f1421">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1aec56b76a4286e1f662b33218f4083ce8">handle</reimplementedby>
        <param>
          <type>InstantaneousRateConnectionEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, InstantaneousRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="547" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DiffusionConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1ac__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1ace17f7fc8aea06c6ecc4f12deb957a81">handle</reimplementedby>
        <param>
          <type>DiffusionConnectionEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, InstantaneousRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="555" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::Node::handle</definition>
        <argsstring>(DelayedRateConnectionEvent &amp;e)</argsstring>
        <name>handle</name>
        <qualifiedname>nest::Node::handle</qualifiedname>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a15972284e7548900f73d422184c32f5d">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a293557b20f03b33f4643a93c3eb3364b">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a118208c946c3849738d93b547dcfe2d8">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1ac__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1amat2__psc__exp_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1binary__neuron_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1cm__default_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlation__detector_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlomatrix__detector_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1correlospinmatrix__detector_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1dc__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1gif__psc__exp__multisynapse_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__chs__2007_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__alpha__ps_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__delta__ps_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__htum_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1iaf__psc__exp__ps__lossless_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1izhikevich_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1mat2__psc__exp_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1multimeter_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1noise__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1parrot__neuron__ps_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1pp__psc__delta_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__ipn_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__neuron__opn_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1rate__transformer__node_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1sinusoidal__poisson__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__dilutor_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spike__recorder_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1spin__detector_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__current__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1step__rate__generator_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1volume__transmitter_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1weight__recorder_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <reimplementedby refid="classnest_1_1proxynode_1a2cebf7dc11a2a83795ff71c10c07f308">handle</reimplementedby>
        <param>
          <type>DelayedRateConnectionEvent &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Handler for delay rate neuron events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>handle(thread, DelayedRateConnectionEvent&amp;)</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1UnexpectedEvent" kindref="compound">UnexpectedEvent</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.h" line="563" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node.cpp" bodystart="384" bodyend="387"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions and infrastructure, responsible for communication between Nodes. </para>
    </briefdescription>
    <detaileddescription>
<para>Nodes communicate by sending an receiving events. The communication interface consists of two parts:<orderedlist>
<listitem><para>Functions to handle incoming events.</para>
</listitem><listitem><para>Functions to check if a connection between nodes is possible.</para>
</listitem></orderedlist>
</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1Event" kindref="compound">Event</ref> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
