<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1ParameterConnParameterWrapper" kind="class" language="C++" prot="public">
    <compoundname>nest::ParameterConnParameterWrapper</compoundname>
    <basecompoundref refid="classnest_1_1ConnParameter" prot="public" virt="non-virtual">nest::ConnParameter</basecompoundref>
    <includes refid="conn__parameter_8h" local="no">conn_parameter.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ParameterConnParameterWrapper_1a0dbf4f9e55f47ba316bc59d46dfaa293" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> *</type>
        <definition>Parameter* nest::ParameterConnParameterWrapper::parameter_</definition>
        <argsstring></argsstring>
        <name>parameter_</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::parameter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="425" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="425" bodyend="-1"/>
        <referencedby refid="classnest_1_1ParameterConnParameterWrapper_1abe345a09fed4fb24ebd01ae4ec395cd0" compoundref="conn__parameter_8h" startline="419" endline="422">provides_long</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ParameterConnParameterWrapper_1ab6773b5cfd4efcbec69b467f6d202e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ParameterConnParameterWrapper::ParameterConnParameterWrapper</definition>
        <argsstring>(const ParameterDatum &amp;, const size_t)</argsstring>
        <name>ParameterConnParameterWrapper</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::ParameterConnParameterWrapper</qualifiedname>
        <param>
          <type>const <ref refid="nest__datums_8h_1a7e761153c7304ea99cb0ab869a2d25e0" kindref="member">ParameterDatum</ref> &amp;</type>
          <defname>pd</defname>
        </param>
        <param>
          <type>const</type>
          <declname>size_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="402" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ParameterConnParameterWrapper_1a0298b654407d2267c43b45b6ee8312b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double nest::ParameterConnParameterWrapper::value_double</definition>
        <argsstring>(thread target_thread, RngPtr rng, index snode_id, Node *target) const override</argsstring>
        <name>value_double</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::value_double</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a891c9bf68a5c8f8f5416d090c4fc02f9">value_double</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        </param>
        <briefdescription>
<para>Return parameter value. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameter value may depend on target threads and random numbers. Both must be supplied, even if a concrete parameter type does not use them.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target_thread</parametername>
</parameternamelist>
<parameterdescription>
<para>will be ignored except for array parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rng</parametername>
</parameternamelist>
<parameterdescription>
<para>random number generator pointer will be ignored except for random parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="404" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.cpp" bodystart="83" bodyend="86"/>
        <referencedby refid="classnest_1_1ParameterConnParameterWrapper_1a070085526d4a8dc05d0b46b9a2e0ee19" compoundref="conn__parameter_8h" startline="407" endline="410">value_int</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ParameterConnParameterWrapper_1a070085526d4a8dc05d0b46b9a2e0ee19" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>long</type>
        <definition>long nest::ParameterConnParameterWrapper::value_int</definition>
        <argsstring>(thread target_thread, RngPtr rng, index snode_id, Node *target) const override</argsstring>
        <name>value_int</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::value_int</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a26c4ff5169680f2ba4a7c8a1694110f4">value_int</reimplements>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>target_thread</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="407" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="407" bodyend="410"/>
        <references refid="classnest_1_1ParameterConnParameterWrapper_1a0298b654407d2267c43b45b6ee8312b6" compoundref="conn__parameter_8cpp" startline="83" endline="86">value_double</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ParameterConnParameterWrapper_1a71af5747dff3bb4839e59e8099e0015c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ParameterConnParameterWrapper::is_array</definition>
        <argsstring>() const override</argsstring>
        <name>is_array</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::is_array</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a574bb23d4cd5514b7bf5d51a440abb55">is_array</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="413" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ParameterConnParameterWrapper_1abe345a09fed4fb24ebd01ae4ec395cd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::ParameterConnParameterWrapper::provides_long</definition>
        <argsstring>() const override</argsstring>
        <name>provides_long</name>
        <qualifiedname>nest::ParameterConnParameterWrapper::provides_long</qualifiedname>
        <reimplements refid="classnest_1_1ConnParameter_1a89cec93b5a09f8b41ec0c48e9fa3434a">provides_long</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="419" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="419" bodyend="422"/>
        <references refid="classnest_1_1ParameterConnParameterWrapper_1a0dbf4f9e55f47ba316bc59d46dfaa293" compoundref="conn__parameter_8h" startline="425">parameter_</references>
        <references refid="classnest_1_1Parameter_1ae333502a77312fc1ba9dcfdd27fc762a" compoundref="parameter_8h" startline="1469" endline="1472">nest::Parameter::returns_int_only</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
      <node id="1">
        <label>nest::ParameterConnParameterWrapper</label>
        <link refid="classnest_1_1ParameterConnParameterWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ConnParameter</label>
        <link refid="classnest_1_1ConnParameter"/>
      </node>
      <node id="3">
        <label>nest::Parameter</label>
        <link refid="classnest_1_1Parameter"/>
      </node>
      <node id="1">
        <label>nest::ParameterConnParameterWrapper</label>
        <link refid="classnest_1_1ParameterConnParameterWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>parameter_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" line="399" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_parameter.h" bodystart="400" bodyend="426"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnParameter_1aeba222e75a9c6e4021394160c8f0fc9a" prot="public" virt="non-virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>ConnParameter</name></member>
      <member refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" prot="public" virt="non-virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>create</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1a71af5747dff3bb4839e59e8099e0015c" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>is_array</name></member>
      <member refid="classnest_1_1ConnParameter_1a2bd64986d7840e5cb839fbc9b083c0f6" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>is_scalar</name></member>
      <member refid="classnest_1_1ConnParameter_1a5be9d99e7d8036723e673cb1d25a6ee1" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>number_of_values</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1a0dbf4f9e55f47ba316bc59d46dfaa293" prot="private" virt="non-virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>parameter_</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1ab6773b5cfd4efcbec69b467f6d202e1a" prot="public" virt="non-virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>ParameterConnParameterWrapper</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1abe345a09fed4fb24ebd01ae4ec395cd0" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>provides_long</name></member>
      <member refid="classnest_1_1ConnParameter_1a13d36c79f25051910c1ffe937e31ab1b" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>reset</name></member>
      <member refid="classnest_1_1ConnParameter_1a07bb81308cbcd25b6766faa704680b50" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>skip</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1a0298b654407d2267c43b45b6ee8312b6" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>value_double</name></member>
      <member refid="classnest_1_1ParameterConnParameterWrapper_1a070085526d4a8dc05d0b46b9a2e0ee19" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>value_int</name></member>
      <member refid="classnest_1_1ConnParameter_1ad56f5b8e66ba9cd627f5c0cdd05dfbb4" prot="public" virt="virtual"><scope>nest::ParameterConnParameterWrapper</scope><name>~ConnParameter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
