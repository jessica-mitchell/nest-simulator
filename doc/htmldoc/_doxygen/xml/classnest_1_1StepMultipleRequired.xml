<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1StepMultipleRequired" kind="class" language="C++" prot="public">
    <compoundname>nest::StepMultipleRequired</compoundname>
    <basecompoundref refid="classnest_1_1KernelException" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1StepMultipleRequired_1af15ceca8bc7ccc50595308c44c926aa9" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string nest::StepMultipleRequired::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="801" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1StepMultipleRequired_1a93854feab27cf284c8034973eacfccaf" prot="private" static="no" mutable="no">
        <type>const Name</type>
        <definition>const Name nest::StepMultipleRequired::prop_</definition>
        <argsstring></argsstring>
        <name>prop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="802" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1StepMultipleRequired_1ab47b385d25554d12808952c176267d19" prot="private" static="no" mutable="no">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>const Time nest::StepMultipleRequired::val_</definition>
        <argsstring></argsstring>
        <name>val_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="803" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="803" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1StepMultipleRequired_1aab480aeaea96cb69df9e5540f0bf2052" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::StepMultipleRequired::StepMultipleRequired</definition>
        <argsstring>(const std::string &amp;model, const Name &amp;property, const Time &amp;value)</argsstring>
        <name>StepMultipleRequired</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const Name &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>model should be passed from get_name() to ensure that names of copied models are reported correctly. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>name of model causing problem </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>name of property conflicting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value of property conflicting </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="787" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="787" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StepMultipleRequired_1ad7a70ec0278ff097f514bbbaafcc313e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::StepMultipleRequired::~StepMultipleRequired</definition>
        <argsstring>() override</argsstring>
        <name>~StepMultipleRequired</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="794" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="794" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StepMultipleRequired_1a3c572fb163869a24ba1a21bff9a2295b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::StepMultipleRequired::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="798" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.cpp" bodystart="312" bodyend="318"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown if a <ref refid="classnest_1_1Time" kindref="compound">Time</ref> object should be multiple of the resolution. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classnest_1_1TimeMultipleRequired" kindref="compound">TimeMultipleRequired</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::StepMultipleRequired</label>
        <link refid="classnest_1_1StepMultipleRequired"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="5">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="4">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="5" relation="usage">
          <edgelabel>#LIM_NEG_INF</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#LIM_MAX</edgelabel>
          <edgelabel>#LIM_MIN</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::StepMultipleRequired</label>
        <link refid="classnest_1_1StepMultipleRequired"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-val_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="777" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="778" bodyend="804"/>
    <listofallmembers>
      <member refid="classnest_1_1KernelException_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>KernelException</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1a3c572fb163869a24ba1a21bff9a2295b" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>message</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1af15ceca8bc7ccc50595308c44c926aa9" prot="private" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>model_</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1a93854feab27cf284c8034973eacfccaf" prot="private" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>prop_</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1aab480aeaea96cb69df9e5540f0bf2052" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>StepMultipleRequired</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1ab47b385d25554d12808952c176267d19" prot="private" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>val_</name></member>
      <member refid="classnest_1_1KernelException_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>~KernelException</name></member>
      <member refid="classnest_1_1StepMultipleRequired_1ad7a70ec0278ff097f514bbbaafcc313e" prot="public" virt="non-virtual"><scope>nest::StepMultipleRequired</scope><name>~StepMultipleRequired</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
