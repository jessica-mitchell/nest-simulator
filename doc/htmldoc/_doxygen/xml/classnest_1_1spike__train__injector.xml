<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1spike__train__injector" kind="class" language="C++" prot="public">
    <compoundname>nest::spike_train_injector</compoundname>
    <basecompoundref refid="classnest_1_1Node" prot="public" virt="non-virtual">nest::Node</basecompoundref>
    <basecompoundref refid="classnest_1_1Device" prot="public" virt="non-virtual">nest::Device</basecompoundref>
    <includes refid="spike__train__injector_8h" local="no">spike_train_injector.h</includes>
    <innerclass refid="structnest_1_1spike__train__injector_1_1Parameters__" prot="private">nest::spike_train_injector::Parameters_</innerclass>
    <innerclass refid="structnest_1_1spike__train__injector_1_1State__" prot="private">nest::spike_train_injector::State_</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1spike__train__injector_1ac128a69d3f858815f19067e2ea1fa7f4" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1spike__train__injector_1_1State__" kindref="compound">State_</ref></type>
        <definition>State_ nest::spike_train_injector::S_</definition>
        <argsstring></argsstring>
        <name>S_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="321" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="321" bodyend="-1"/>
        <referencedby refid="classnest_1_1spike__train__injector_1afde64b352407573bfd9ead83f2c50eef" compoundref="spike__train__injector_8h" startline="344" endline="371">set_status</referencedby>
        <referencedby refid="classnest_1_1spike__train__injector_1a8db9ee62302a08463b2dc2d32e1e8472" compoundref="spike__train__injector_8cpp" startline="325" endline="379">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" prot="private" static="no" mutable="no">
        <type><ref refid="structnest_1_1spike__train__injector_1_1Parameters__" kindref="compound">Parameters_</ref></type>
        <definition>Parameters_ nest::spike_train_injector::P_</definition>
        <argsstring></argsstring>
        <name>P_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="322" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="322" bodyend="-1"/>
        <referencedby refid="classnest_1_1spike__train__injector_1a3b05c9cdace73650fae3f92ca252aa37" compoundref="spike__train__injector_8h" startline="336" endline="340">get_status</referencedby>
        <referencedby refid="classnest_1_1spike__train__injector_1a3b82ccd1ca1445380167e967a28f2a1f" compoundref="spike__train__injector_8h" startline="251" endline="254">is_off_grid</referencedby>
        <referencedby refid="classnest_1_1spike__train__injector_1afde64b352407573bfd9ead83f2c50eef" compoundref="spike__train__injector_8h" startline="344" endline="371">set_status</referencedby>
        <referencedby refid="classnest_1_1spike__train__injector_1a8db9ee62302a08463b2dc2d32e1e8472" compoundref="spike__train__injector_8cpp" startline="325" endline="379">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a50f1a9329cee37275dbc98ed4ee33f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::spike_train_injector::spike_train_injector</definition>
        <argsstring>()</argsstring>
        <name>spike_train_injector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="242" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="257" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1afbb2849bde48bb26a48f727c216f5282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::spike_train_injector::spike_train_injector</definition>
        <argsstring>(const spike_train_injector &amp;)</argsstring>
        <name>spike_train_injector</name>
        <param>
          <type>const <ref refid="classnest_1_1spike__train__injector" kindref="compound">spike_train_injector</ref> &amp;</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="243" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="265" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1aeaec96c8575e70c563086be5c6e6ab17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::spike_train_injector::send_test_event</definition>
        <argsstring>(Node &amp;, rport, synindex, bool) override</argsstring>
        <name>send_test_event</name>
        <reimplements refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3">send_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>receiving_node</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dummy_target</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiving_node passed as an argument. </para>
        </briefdescription>
        <detaileddescription>
<para>Default implementation of check_connection just throws <ref refid="classnest_1_1IllegalConnection" kindref="compound">IllegalConnection</ref>.</para>
<para>This is required during the connection handshaking to test, if the receiving_node can handle the event type and receptor_type sent by the source node.</para>
<para>If dummy_target is true, this indicates that receiving_node is derived from <ref refid="classnest_1_1ConnTestDummyNodeBase" kindref="compound">ConnTestDummyNodeBase</ref> and used in the first call to <ref refid="classnest_1_1spike__train__injector_1aeaec96c8575e70c563086be5c6e6ab17" kindref="member">send_test_event()</ref>. This can be ignored in most cases, but Nodes sending DS*Events to their own event hooks and then *Events to their proper targets must send DS*Events when called with the dummy target, and *Events when called with the real target, see #478. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="245" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="327" bodyend="332"/>
        <references refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" compoundref="numerics_8cpp" startline="72">numerics::e</references>
        <references refid="namespacenest_1_1names_1ab48c36d5dd5d4f23066293500cf69d35">nest::names::receptor_type</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a3b05c9cdace73650fae3f92ca252aa37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="246" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="336" bodyend="340"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a3eead510035bda818b2747093a4e8e33" compoundref="spike__train__injector_8cpp" startline="62" endline="82">nest::spike_train_injector::Parameters_::get</references>
        <references refid="classnest_1_1Device_1ad04b50c499901228d9c672f8a677962e" compoundref="device_8h" startline="181" endline="184">nest::Device::get_status</references>
        <references refid="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" compoundref="spike__train__injector_8h" startline="322">P_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1afde64b352407573bfd9ead83f2c50eef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="247" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="344" bodyend="371"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" compoundref="device_8h" startline="197" endline="200">nest::Device::get_origin</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1Time_1afca952770bb510a78a30a587e39dcd7f" compoundref="nest__time_8h" startline="187">nest::Time::ms</references>
        <references refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e">nest::names::origin</references>
        <references refid="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" compoundref="spike__train__injector_8h" startline="322">P_</references>
        <references refid="classnest_1_1spike__train__injector_1ac128a69d3f858815f19067e2ea1fa7f4" compoundref="spike__train__injector_8h" startline="321">S_</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1adc1c495c5a65ae4cee447ea787f4552b" compoundref="spike__train__injector_8cpp" startline="150" endline="240">nest::spike_train_injector::Parameters_::set</references>
        <references refid="classnest_1_1Device_1a7e7f029d1c677e8d5727fc80b103e990" compoundref="device_8h" startline="187" endline="194">nest::Device::set_status</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a971062a7d55ca118a9f2af0b568b05e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::spike_train_injector::is_active</definition>
        <argsstring>(const Time &amp;) const override</argsstring>
        <name>is_active</name>
        <reimplements refid="classnest_1_1Device_1a70ac0c03cf931db59d611a974f51cf3b">is_active</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref> &amp;</type>
          <declname>T</declname>
        </param>
        <briefdescription>
<para>Returns true if the device is active at the given time stamp. </para>
        </briefdescription>
        <detaileddescription>
<para>Semantics are implemented by subclasses. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="248" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="318" bodyend="322"/>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" compoundref="device_8h" startline="221" endline="224">nest::Device::get_t_max_</references>
        <references refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" compoundref="device_8h" startline="215" endline="218">nest::Device::get_t_min_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a3b82ccd1ca1445380167e967a28f2a1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::spike_train_injector::is_off_grid</definition>
        <argsstring>() const override</argsstring>
        <name>is_off_grid</name>
        <reimplements refid="classnest_1_1Node_1acaf132bbee717313ffbc86fd291667c9">is_off_grid</reimplements>
        <briefdescription>
<para>Returns true if the node sends/receives off-grid events. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to discriminate between different types of nodes when adding new nodes to the network. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="251" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="251" bodyend="254"/>
        <references refid="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" compoundref="spike__train__injector_8h" startline="322">P_</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a07c56a2396f08de11788f29aaba79289" compoundref="spike__train__injector_8h" startline="289">nest::spike_train_injector::Parameters_::precise_times_</references>
        <referencedby refid="classnest_1_1spike__train__injector_1a0075298b8d790fe6fd808a69f11442b3" compoundref="spike__train__injector_8cpp" startline="290" endline="310">pre_run_hook</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1ac0baa395db8ddefd6ad9237a02a33007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::set_data</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;input_spikes)</argsstring>
        <name>set_data</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>input_spikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="256" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a02215bd46dfbbaaea82cf56beb602d3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::init_state_</definition>
        <argsstring>() override</argsstring>
        <name>init_state_</name>
        <reimplements refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef">init_state_</reimplements>
        <briefdescription>
<para>Configure state variables depending on runtime information. </para>
        </briefdescription>
        <detaileddescription>
<para>Overload this method if the node needs to adapt state variables prior to first simulation to runtime information, e.g., the number of incoming connections. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="259" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="279" bodyend="282"/>
        <references refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef" compoundref="node_8cpp" startline="73" endline="75">nest::Node::init_state_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a6cbb33c0814b4e781aca0bc253db5c95" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::init_buffers_</definition>
        <argsstring>() override</argsstring>
        <name>init_buffers_</name>
        <reimplements refid="classnest_1_1Node_1a5881b951d112d2c408865d080287f453">init_buffers_</reimplements>
        <briefdescription>
<para>Configure persistent internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para>Let node configure persistent internal data structures, such as input buffers or ODE solvers, to runtime information prior to first simulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="260" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a0075298b8d790fe6fd808a69f11442b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::pre_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>pre_run_hook</name>
        <reimplements refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834">pre_run_hook</reimplements>
        <briefdescription>
<para>Set internal variables before calls to <ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="261" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="290" bodyend="310"/>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="251">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1spike__train__injector_1a3b82ccd1ca1445380167e967a28f2a1f" compoundref="spike__train__injector_8h" startline="251" endline="254">is_off_grid</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" compoundref="logging_8h" startline="54">nest::M_INFO</references>
        <references refid="classnest_1_1Device_1a56f87d667d7b32a2cd3f95459e424834" compoundref="device_8cpp" startline="144" endline="153">nest::Device::pre_run_hook</references>
        <references refid="classnest_1_1EventDeliveryManager_1abecd604a0371f3f9a0625ceb9795ee36" compoundref="event__delivery__manager_8h" startline="518" endline="521">nest::EventDeliveryManager::set_off_grid_communication</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1spike__train__injector_1a8db9ee62302a08463b2dc2d32e1e8472" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::spike_train_injector::update</definition>
        <argsstring>(Time const &amp;, const long, const long) override</argsstring>
        <name>update</name>
        <reimplements refid="classnest_1_1Node_1a69f3767afe7e7d1bc5b141e777778fd5">update</reimplements>
        <param>
          <type><ref refid="classnest_1_1Time" kindref="compound">Time</ref> const &amp;</type>
        </param>
        <param>
          <type>const long</type>
        </param>
        <param>
          <type>const long</type>
        </param>
        <briefdescription>
<para>Bring the node from state $t$ to $t+n*dt$. </para>
        </briefdescription>
        <detaileddescription>
<para>n-&gt;update(T, from, to) performs the update steps beginning at T+from .. T+to-1, ie, emitting events with time stamps T+from+1 .. T+to.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1Time" kindref="compound">Time</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>network time at beginning of time slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>initial step inside time slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>post-final step inside time slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="263" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.cpp" bodystart="325" bodyend="379"/>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="251">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" compoundref="device_8h" startline="197" endline="200">nest::Device::get_origin</references>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" compoundref="device_8h" startline="221" endline="224">nest::Device::get_t_max_</references>
        <references refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" compoundref="device_8h" startline="215" endline="218">nest::Device::get_t_min_</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e">nest::names::origin</references>
        <references refid="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" compoundref="spike__train__injector_8h" startline="322">P_</references>
        <references refid="structnest_1_1spike__train__injector_1_1State___1a754fbbf6ad119feeda4b4ba307cce313" compoundref="spike__train__injector_8h" startline="271">nest::spike_train_injector::State_::position_</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a07c56a2396f08de11788f29aaba79289" compoundref="spike__train__injector_8h" startline="289">nest::spike_train_injector::Parameters_::precise_times_</references>
        <references refid="classnest_1_1spike__train__injector_1ac128a69d3f858815f19067e2ea1fa7f4" compoundref="spike__train__injector_8h" startline="321">S_</references>
        <references refid="classnest_1_1EventDeliveryManager_1a9a350f7997aebc9c0a3b0620639ac0a4" compoundref="event__delivery__manager__impl_8h" startline="60" endline="63">nest::EventDeliveryManager::send</references>
        <references refid="classnest_1_1SpikeEvent_1a819b5dd1687ab5f6baea8f69a2b9f6ff" compoundref="event_8h" startline="421" endline="424">nest::SpikeEvent::set_multiplicity</references>
        <references refid="classnest_1_1Event_1a950cfc88c56d3098f1445dcc2b6f4805" compoundref="event_8h" startline="986" endline="989">nest::Event::set_offset</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a438b63a93c627084ce45fa6294163b10" compoundref="spike__train__injector_8h" startline="286">nest::spike_train_injector::Parameters_::spike_multiplicities_</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a028f3f0558c1f48ac5a01e05c6eab167" compoundref="spike__train__injector_8h" startline="283">nest::spike_train_injector::Parameters_::spike_offsets_</references>
        <references refid="structnest_1_1spike__train__injector_1_1Parameters___1a6f8cdab4d20f98121902c623372517a4" compoundref="spike__train__injector_8h" startline="280">nest::spike_train_injector::Parameters_::spike_stamps_</references>
        <references refid="classnest_1_1Time_1a6d8d183308b48509a8b2ce27361cffed" compoundref="nest__time_8h" startline="185">nest::Time::step</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Spike train injector node. </para>
    </briefdescription>
    <detaileddescription>
<para>See UserDocs for details.</para>
<para><simplesect kind="note"><para>Spikes emitted by a spike train injector neuron will be counted by the local spike count. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::spike_train_injector</label>
        <link refid="classnest_1_1spike__train__injector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>nest::Device::Variables_</label>
        <link refid="structnest_1_1Device_1_1Variables__"/>
      </node>
      <node id="3">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="8">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
      <node id="1">
        <label>nest::spike_train_injector</label>
        <link refid="classnest_1_1spike__train__injector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-S_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="11">
        <label>nest::spike_train_injector::Parameters_</label>
        <link refid="structnest_1_1spike__train__injector_1_1Parameters__"/>
      </node>
      <node id="5">
        <label>nest::Device::Parameters_</label>
        <link refid="structnest_1_1Device_1_1Parameters__"/>
        <childnode refid="6" relation="usage">
          <edgelabel>+origin_</edgelabel>
          <edgelabel>+start_</edgelabel>
          <edgelabel>+stop_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="7" relation="usage">
          <edgelabel>#LIM_NEG_INF</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#LIM_MAX</edgelabel>
          <edgelabel>#LIM_MIN</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nest::Device</label>
        <link refid="classnest_1_1Device"/>
        <childnode refid="5" relation="usage">
          <edgelabel>-P_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-V_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>nest::spike_train_injector::State_</label>
        <link refid="structnest_1_1spike__train__injector_1_1State__"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" line="238" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/spike_train_injector.h" bodystart="239" bodyend="323"/>
    <listofallmembers>
      <member refid="classnest_1_1Node_1a93e4da4ded11807b07c5f2428401bbc7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Node_1ad88edfd6f881579328b545d88372807d" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>clone</name></member>
      <member refid="group__SP__functions_1gaa5b5f01608036752d816d1980c39cb87" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>connect_synaptic_element</name></member>
      <member refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1Device_1aea88c464444468044c92ed53ec521334" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>Device</name></member>
      <member refid="classnest_1_1Device_1a2ff1a2fd348f7109db47e1bbac3b5ac5" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>Device</name></member>
      <member refid="classnest_1_1Node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>downcast</name></member>
      <member refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>finalize</name></member>
      <member refid="classnest_1_1Node_1a7c48b06a535a6e036c88ea2dcbaf8283" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>frozen_</name></member>
      <member refid="classnest_1_1Node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_C_m</name></member>
      <member refid="group__SP__functions_1gae46decb34ba3dc7f912fa6a691bb0de2" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1Node_1a59915001de69fc05d8a155da42a89e56" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1Node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1Node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_history</name></member>
      <member refid="classnest_1_1Node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1Node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1Node_1a25b2b6f159ffa8834cd966b3802f2fef" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1Node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1Node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_model_</name></member>
      <member refid="classnest_1_1Node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_name</name></member>
      <member refid="classnest_1_1Node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_nc</name></member>
      <member refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1Device_1aa971ee0786f8fb04f3d76c65429d3d06" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_origin</name></member>
      <member refid="classnest_1_1Device_1a38b889e483489692ba03d3910167c30f" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_start</name></member>
      <member refid="classnest_1_1spike__train__injector_1a3b05c9cdace73650fae3f92ca252aa37" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_status</name></member>
      <member refid="classnest_1_1Node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1Node_1a54f0c50b08165643cee588bc89b464b8" prot="private" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_status_dict_</name></member>
      <member refid="classnest_1_1Device_1a398741486c43d247d75ba784b6b14b1f" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_stop</name></member>
      <member refid="group__SP__functions_1ga9ba39ec217579e3ef23db9ae20479955" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1ga7a47b88c558984889d90d5ce027787cf" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Device_1ab78b2c8c5dd25d5328790c3d2d77bc02" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_t_max_</name></member>
      <member refid="classnest_1_1Device_1a84e4ade576e165a46597963ae943b829" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_t_min_</name></member>
      <member refid="classnest_1_1Node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1Node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1Node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1Node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_thread</name></member>
      <member refid="classnest_1_1Node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1Node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>get_vp</name></member>
      <member refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3cadfe2698c39c5fd327f5d70d0b8adf" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1Node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>init</name></member>
      <member refid="classnest_1_1Device_1aac3d7dd71fd9f86cd8306b2faeefa6a0" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>init_buffers</name></member>
      <member refid="classnest_1_1spike__train__injector_1a6cbb33c0814b4e781aca0bc253db5c95" prot="private" virt="virtual"><scope>nest::spike_train_injector</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1Device_1acfb7d327f43c0bcf3c86920b188c5830" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>init_state</name></member>
      <member refid="classnest_1_1spike__train__injector_1a02215bd46dfbbaaea82cf56beb602d3f" prot="private" virt="virtual"><scope>nest::spike_train_injector</scope><name>init_state_</name></member>
      <member refid="classnest_1_1Node_1a95389430ba10f2da19aacded71503f74" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>initialized_</name></member>
      <member refid="classnest_1_1spike__train__injector_1a971062a7d55ca118a9f2af0b568b05e7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>is_active</name></member>
      <member refid="classnest_1_1Node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1spike__train__injector_1a3b82ccd1ca1445380167e967a28f2a1f" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1Node_1ac6e5bca87246812225ab04af4fd40df2" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1Node_1ae306f4602e575047801c45c9fec2a4d4" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>model_id_</name></member>
      <member refid="classnest_1_1Node_1a3ec5fd1ce0e6f3f0bccabd314c6845c3" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>nc_ptr_</name></member>
      <member refid="classnest_1_1Node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a9d697a1550c18613e0d2a0e57c67e836" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1Node_1a9f929d2c40ddaafd4a0822ea294f1ef9" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>node_uses_wfr_</name></member>
      <member refid="classnest_1_1Node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1Node_1a9c99a8caa89a3eb73e975f25678d5d58" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>operator=</name></member>
      <member refid="classnest_1_1spike__train__injector_1acd1703bf66b21b6f91f136cf957fa7fc" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>P_</name></member>
      <member refid="classnest_1_1Node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1spike__train__injector_1a0075298b8d790fe6fd808a69f11442b3" prot="private" virt="virtual"><scope>nest::spike_train_injector</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>print_network</name></member>
      <member refid="classnest_1_1Node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1spike__train__injector_1ac128a69d3f858815f19067e2ea1fa7f4" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>S_</name></member>
      <member refid="classnest_1_1spike__train__injector_1aeaec96c8575e70c563086be5c6e6ab17" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1Node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1spike__train__injector_1ac0baa395db8ddefd6ad9237a02a33007" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_data</name></member>
      <member refid="classnest_1_1Node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1Node_1af1edec8d44fc63df732b8ff58f0788bf" prot="protected" virt="virtual"><scope>nest::spike_train_injector</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1Node_1a7d4d7c594bd3cfbf892f040f248ac153" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_nc_</name></member>
      <member refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_node_id_</name></member>
      <member refid="classnest_1_1Node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1spike__train__injector_1afde64b352407573bfd9ead83f2c50eef" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>set_status</name></member>
      <member refid="classnest_1_1Node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_thread</name></member>
      <member refid="classnest_1_1Node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>set_vp</name></member>
      <member refid="classnest_1_1spike__train__injector_1a50f1a9329cee37275dbc98ed4ee33f3c" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>spike_train_injector</name></member>
      <member refid="classnest_1_1spike__train__injector_1afbb2849bde48bb26a48f727c216f5282" prot="public" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>spike_train_injector</name></member>
      <member refid="classnest_1_1Node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1Node_1a9ec98b82cf08796b726ca26666e5739d" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>thread_</name></member>
      <member refid="classnest_1_1Node_1a4316e73a0c494ccb37e6a19b00664223" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>thread_lid_</name></member>
      <member refid="classnest_1_1spike__train__injector_1a8db9ee62302a08463b2dc2d32e1e8472" prot="private" virt="virtual"><scope>nest::spike_train_injector</scope><name>update</name></member>
      <member refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1Device_1aba9db825c8f7e3631f8baf67f69a3beb" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>V_</name></member>
      <member refid="classnest_1_1Node_1ad40bb2d1d3c32dd953374bbe6a76e5a6" prot="private" virt="non-virtual"><scope>nest::spike_train_injector</scope><name>vp_</name></member>
      <member refid="classnest_1_1Node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1Device_1adabaff79bdfe01d0986f94241bcbd027" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>~Device</name></member>
      <member refid="classnest_1_1Node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::spike_train_injector</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
