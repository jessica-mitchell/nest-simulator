<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1histentry__extended" kind="class" language="C++" prot="public">
    <compoundname>nest::histentry_extended</compoundname>
    <includes refid="histentry_8h" local="no">histentry.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnest_1_1histentry__extended_1afd982ba0ded02500385a6afb3038cc16" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::histentry_extended::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>nest::histentry_extended::t_</qualifiedname>
        <briefdescription>
<para>point in time when spike occurred (in ms) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" line="59" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1histentry__extended_1aa31f4efd29490e8353611e9e34535dc9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::histentry_extended::dw_</definition>
        <argsstring></argsstring>
        <name>dw_</name>
        <qualifiedname>nest::histentry_extended::dw_</qualifiedname>
        <briefdescription>
<para>value dependend on the additional factor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" line="60" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1histentry__extended_1ae2317df4f55e957126250eb542a095ee" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::histentry_extended::access_counter_</definition>
        <argsstring></argsstring>
        <name>access_counter_</name>
        <qualifiedname>nest::histentry_extended::access_counter_</qualifiedname>
        <briefdescription>
<para>access counter to enable removal of the entry, once all neurons read it </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" line="61" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1histentry__extended_1a7a44cf7783417aef0811288086249dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::histentry_extended::histentry_extended</definition>
        <argsstring>(double t, double dw, size_t access_counter)</argsstring>
        <name>histentry_extended</name>
        <qualifiedname>nest::histentry_extended::histentry_extended</qualifiedname>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dw</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>access_counter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" line="57" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" line="54" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/histentry.h" bodystart="55" bodyend="62"/>
    <listofallmembers>
      <member refid="classnest_1_1histentry__extended_1ae2317df4f55e957126250eb542a095ee" prot="public" virt="non-virtual"><scope>nest::histentry_extended</scope><name>access_counter_</name></member>
      <member refid="classnest_1_1histentry__extended_1aa31f4efd29490e8353611e9e34535dc9" prot="public" virt="non-virtual"><scope>nest::histentry_extended</scope><name>dw_</name></member>
      <member refid="classnest_1_1histentry__extended_1a7a44cf7783417aef0811288086249dda" prot="public" virt="non-virtual"><scope>nest::histentry_extended</scope><name>histentry_extended</name></member>
      <member refid="classnest_1_1histentry__extended_1afd982ba0ded02500385a6afb3038cc16" prot="public" virt="non-virtual"><scope>nest::histentry_extended</scope><name>t_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
