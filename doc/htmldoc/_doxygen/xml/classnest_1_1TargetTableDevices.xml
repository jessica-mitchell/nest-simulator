<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1TargetTableDevices" kind="class" language="C++" prot="public">
    <compoundname>nest::TargetTableDevices</compoundname>
    <includes refid="target__table__devices_8h" local="no">target_table_devices.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1TargetTableDevices_1a9f9c61081cda5e0d3368dee64a963d22" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; <ref refid="classnest_1_1ConnectorBase" kindref="compound">ConnectorBase</ref> * &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; ConnectorBase* &gt; &gt; &gt; nest::TargetTableDevices::target_to_devices_</definition>
        <argsstring></argsstring>
        <name>target_to_devices_</name>
        <qualifiedname>nest::TargetTableDevices::target_to_devices_</qualifiedname>
        <briefdescription>
<para>3d structure storing connections from neurons to devices </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="57" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="57" bodyend="-1"/>
        <referencedby refid="classnest_1_1TargetTableDevices_1a09f957d8ac14589929de4dbea0273abf" compoundref="target__table__devices__impl_8h" startline="35" endline="51">add_connection_to_device</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; <ref refid="classnest_1_1ConnectorBase" kindref="compound">ConnectorBase</ref> * &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; ConnectorBase* &gt; &gt; &gt; nest::TargetTableDevices::target_from_devices_</definition>
        <argsstring></argsstring>
        <name>target_from_devices_</name>
        <qualifiedname>nest::TargetTableDevices::target_from_devices_</qualifiedname>
        <briefdescription>
<para>3d structure storing connections from devices to neurons </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="60" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="classnest_1_1TargetTableDevices_1a456568309dac07db5fa61027ebd840f0" compoundref="target__table__devices_8h" startline="212" endline="219">get_synapse_status_from_device</referencedby>
        <referencedby refid="classnest_1_1TargetTableDevices_1a99e986592b99cc3dfceafa870ee0e678" compoundref="target__table__devices_8h" startline="250" endline="265">is_device_connected</referencedby>
        <referencedby refid="classnest_1_1TargetTableDevices_1a01f89b16e9db817588032ae7ac0d19d3" compoundref="target__table__devices_8h" startline="233" endline="247">send_from_device</referencedby>
        <referencedby refid="classnest_1_1TargetTableDevices_1a54b87428990f1f4c0d92b8d6f8e0f52e" compoundref="target__table__devices_8h" startline="222" endline="230">set_synapse_status_from_device</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TargetTableDevices_1aa4ce049505c204585ffb3c155a9ddaa9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; index &gt; &gt; nest::TargetTableDevices::sending_devices_node_ids_</definition>
        <argsstring></argsstring>
        <name>sending_devices_node_ids_</name>
        <qualifiedname>nest::TargetTableDevices::sending_devices_node_ids_</qualifiedname>
        <briefdescription>
<para>3d structure storing node IDs of sending devices (necessary for get_connections) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="64" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a1e9cb074c287b266b541722998c14748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::TargetTableDevices::TargetTableDevices</definition>
        <argsstring>()</argsstring>
        <name>TargetTableDevices</name>
        <qualifiedname>nest::TargetTableDevices::TargetTableDevices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="67" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a3b7d8cbb91730542c84efb5756ebe553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::TargetTableDevices::~TargetTableDevices</definition>
        <argsstring>()</argsstring>
        <name>~TargetTableDevices</name>
        <qualifiedname>nest::TargetTableDevices::~TargetTableDevices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="68" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1ac526322735898fd1fb6a4f27236519e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>nest::TargetTableDevices::initialize</qualifiedname>
        <briefdescription>
<para>Initialize data structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="73" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="38" bodyend="44"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1afb5ed52083295940408e11f60f7b537c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <qualifiedname>nest::TargetTableDevices::finalize</qualifiedname>
        <briefdescription>
<para>Delete data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="78" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="47" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a09f957d8ac14589929de4dbea0273abf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::add_connection_to_device</definition>
        <argsstring>(Node &amp;source, Node &amp;target, const index s_node_id, const thread tid, const synindex syn_id, const DictionaryDatum &amp;p, const double d, const double w)</argsstring>
        <name>add_connection_to_device</name>
        <qualifiedname>nest::TargetTableDevices::add_connection_to_device</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>s_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Adds a connection from the neuron source to the device target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="35" bodyend="51"/>
        <references refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75">nest::ConnectorModel::add_connection</references>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="299" endline="303">nest::ModelManager::get_connection_model</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1TargetTableDevices_1a9f9c61081cda5e0d3368dee64a963d22" compoundref="target__table__devices_8h" startline="57">target_to_devices_</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1afd8f99f2e07b51408dcc72cc165e505e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::add_connection_from_device</definition>
        <argsstring>(Node &amp;source, Node &amp;target, const thread tid, const synindex syn_id, const DictionaryDatum &amp;p, const double d, const double w)</argsstring>
        <name>add_connection_from_device</name>
        <qualifiedname>nest::TargetTableDevices::add_connection_from_device</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Adds a connection from the device source to the neuron target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="95" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="54" bodyend="73"/>
        <references refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75">nest::ConnectorModel::add_connection</references>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="299" endline="303">nest::ModelManager::get_connection_model</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a83ca4950e9427381cdde2d7984056b20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::send_to_device</definition>
        <argsstring>(const thread tid, const index s_node_id, Event &amp;e, const std::vector&lt; ConnectorModel * &gt; &amp;cm)</argsstring>
        <name>send_to_device</name>
        <qualifiedname>nest::TargetTableDevices::send_to_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>s_node_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> * &gt; &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Sends a spike event to all targets of the source neuron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="76" bodyend="91"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a33f3b39e92b74e442a3d7b708a4da9a1" compoundref="connection__manager__impl_8h" startline="54" endline="57">nest::ConnectionManager::send_to_devices</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1afd39fabbe400fa7b9009ac3140c8550c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::send_to_device</definition>
        <argsstring>(const thread tid, const index s_node_id, SecondaryEvent &amp;e, const std::vector&lt; ConnectorModel * &gt; &amp;cm)</argsstring>
        <name>send_to_device</name>
        <qualifiedname>nest::TargetTableDevices::send_to_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>s_node_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> * &gt; &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="107" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="94" bodyend="107"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a01f89b16e9db817588032ae7ac0d19d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::send_from_device</definition>
        <argsstring>(const thread tid, const index ldid, Event &amp;e, const std::vector&lt; ConnectorModel * &gt; &amp;cm)</argsstring>
        <name>send_from_device</name>
        <qualifiedname>nest::TargetTableDevices::send_from_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>ldid</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> * &gt; &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Sends a spike event to all targets of the source device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="115" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="233" bodyend="247"/>
        <references refid="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" compoundref="target__table__devices_8h" startline="60">target_from_devices_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a97481546e161d8ac38d29da43914f5bf" compoundref="connection__manager__impl_8h" startline="66" endline="69">nest::ConnectionManager::send_from_device</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1aa43b68ae856da1355976d98dc4ff2664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::resize_to_number_of_neurons</definition>
        <argsstring>()</argsstring>
        <name>resize_to_number_of_neurons</name>
        <qualifiedname>nest::TargetTableDevices::resize_to_number_of_neurons</qualifiedname>
        <briefdescription>
<para>Resizes vectors according to number of local nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="120" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="77" bodyend="86"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a8ac8d6d68a9cde77289adee0f18bb03c" compoundref="connection__manager_8h" startline="683" endline="686">nest::ConnectionManager::resize_target_table_devices_to_number_of_neurons</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1ae9fa721651b8a36af760da0ec4c62270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::resize_to_number_of_synapse_types</definition>
        <argsstring>()</argsstring>
        <name>resize_to_number_of_synapse_types</name>
        <qualifiedname>nest::TargetTableDevices::resize_to_number_of_synapse_types</qualifiedname>
        <briefdescription>
<para>Resizes vectors according to number of available synapse types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="125" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="89" bodyend="105"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a7c615b8040991ef941ed79f1da616e62" compoundref="connection__manager_8h" startline="689" endline="692">nest::ConnectionManager::resize_target_table_devices_to_number_of_synapse_types</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1ab34d597db52fd55318307a5f5babea37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_connections_to_devices_</definition>
        <argsstring>(const index requested_source_node_id, const index requested_target_node_id, const thread tid, const synindex synapse_id, const long synapse_label, std::deque&lt; ConnectionID &gt; &amp;conns) const</argsstring>
        <name>get_connections_to_devices_</name>
        <qualifiedname>nest::TargetTableDevices::get_connections_to_devices_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>synapse_id</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>synapse_label</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classnest_1_1ConnectionID" kindref="compound">ConnectionID</ref> &gt; &amp;</type>
          <declname>conns</declname>
        </param>
        <briefdescription>
<para>Returns all connections from neurons to devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="130" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="108" bodyend="131"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1ac1e13e0d6e44dc15f3205d8b14b4c87d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_connections_to_device_for_lid_</definition>
        <argsstring>(const index lid, const index requested_target_node_id, const thread tid, const synindex syn_id, const long synapse_label, std::deque&lt; ConnectionID &gt; &amp;conns) const</argsstring>
        <name>get_connections_to_device_for_lid_</name>
        <qualifiedname>nest::TargetTableDevices::get_connections_to_device_for_lid_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>synapse_label</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classnest_1_1ConnectionID" kindref="compound">ConnectionID</ref> &gt; &amp;</type>
          <declname>conns</declname>
        </param>
        <briefdescription>
<para>Returns all connections from particular neuron to devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="140" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="134" bodyend="151"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a0b651e895f995d5a1e581f1a05200be0" compoundref="vp__manager__impl_8h" startline="86" endline="90">nest::VPManager::lid_to_node_id</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1acc4d13aa2d93e3afc6d18765ececb02c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_connections_from_devices_</definition>
        <argsstring>(const index requested_source_node_id, const index requested_target_node_id, const thread tid, const synindex synapse_id, const long synapse_label, std::deque&lt; ConnectionID &gt; &amp;conns) const</argsstring>
        <name>get_connections_from_devices_</name>
        <qualifiedname>nest::TargetTableDevices::get_connections_from_devices_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>synapse_id</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>synapse_label</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classnest_1_1ConnectionID" kindref="compound">ConnectionID</ref> &gt; &amp;</type>
          <declname>conns</declname>
        </param>
        <briefdescription>
<para>Returns all connections from devices to neurons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="150" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="154" bodyend="182"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a873226de90788c963cbaa1f1812c2d75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_connections</definition>
        <argsstring>(const index requested_source_node_id, const index requested_target_node_id, const thread tid, const synindex synapse_id, const long synapse_label, std::deque&lt; ConnectionID &gt; &amp;conns) const</argsstring>
        <name>get_connections</name>
        <qualifiedname>nest::TargetTableDevices::get_connections</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>requested_target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>synapse_id</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>synapse_label</declname>
        </param>
        <param>
          <type>std::deque&lt; <ref refid="classnest_1_1ConnectionID" kindref="compound">ConnectionID</ref> &gt; &amp;</type>
          <declname>conns</declname>
        </param>
        <briefdescription>
<para>Returns all connections between neurons and devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="160" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.cpp" bodystart="185" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1aa62e2c1472068967720c1117e6258e24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_synapse_status_to_device</definition>
        <argsstring>(const thread tid, const index source_node_id, const synindex syn_id, DictionaryDatum &amp;dict, const index lcid) const</argsstring>
        <name>get_synapse_status_to_device</name>
        <qualifiedname>nest::TargetTableDevices::get_synapse_status_to_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Returns synapse status of connection from neuron to device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="170" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="110" bodyend="121"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a456568309dac07db5fa61027ebd840f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::get_synapse_status_from_device</definition>
        <argsstring>(const thread tid, const index ldid, const synindex syn_id, DictionaryDatum &amp;dict, const index lcid) const</argsstring>
        <name>get_synapse_status_from_device</name>
        <qualifiedname>nest::TargetTableDevices::get_synapse_status_from_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>ldid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Returns synapse status of connection from device to neuron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="179" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="212" bodyend="219"/>
        <references refid="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" compoundref="target__table__devices_8h" startline="60">target_from_devices_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1ab37f76d5554123ed75fe8b74561c46c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::set_synapse_status_to_device</definition>
        <argsstring>(const thread tid, const index source_node_id, const synindex syn_id, ConnectorModel &amp;cm, const DictionaryDatum &amp;dict, const index lcid)</argsstring>
        <name>set_synapse_status_to_device</name>
        <qualifiedname>nest::TargetTableDevices::set_synapse_status_to_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Sets synapse status of connection from neuron to device. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="188" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices_impl.h" bodystart="124" bodyend="136"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a1bd607210e78d946f9db311877dad6b9" compoundref="vp__manager__impl_8h" startline="79" endline="83">nest::VPManager::node_id_to_lid</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a54b87428990f1f4c0d92b8d6f8e0f52e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTableDevices::set_synapse_status_from_device</definition>
        <argsstring>(const thread tid, const index ldid, const synindex syn_id, ConnectorModel &amp;cm, const DictionaryDatum &amp;dict, const index lcid)</argsstring>
        <name>set_synapse_status_from_device</name>
        <qualifiedname>nest::TargetTableDevices::set_synapse_status_from_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>ldid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Sets synapse status of connection from device to neuron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="198" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="222" bodyend="230"/>
        <references refid="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" compoundref="target__table__devices_8h" startline="60">target_from_devices_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTableDevices_1a99e986592b99cc3dfceafa870ee0e678" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::TargetTableDevices::is_device_connected</definition>
        <argsstring>(thread tid, index lcid) const</argsstring>
        <name>is_device_connected</name>
        <qualifiedname>nest::TargetTableDevices::is_device_connected</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Checks if the device has any connections in this thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="208" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="250" bodyend="265"/>
        <references refid="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" compoundref="target__table__devices_8h" startline="60">target_from_devices_</references>
        <references refid="namespacenest_1aa69a20373c241553ae8038c0fa56e37a" compoundref="connection__label_8h" startline="41">nest::UNLABELED_CONNECTION</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a3c6df98351b30307a7283fe2a3dbdf42" compoundref="connection__manager_8h" startline="819" endline="822">nest::ConnectionManager::get_device_connected</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This data structure stores the connections between local neurons and devices. </para>
    </briefdescription>
    <detaileddescription>
<para>The core structure is a two dimensional vector, which is arranged as follows:<itemizedlist>
<listitem><para>first dim: threads</para>
</listitem><listitem><para>second dim: local nodes/neurons </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" line="53" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table_devices.h" bodystart="54" bodyend="209"/>
    <listofallmembers>
      <member refid="classnest_1_1TargetTableDevices_1afd8f99f2e07b51408dcc72cc165e505e" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>add_connection_from_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a09f957d8ac14589929de4dbea0273abf" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>add_connection_to_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1afb5ed52083295940408e11f60f7b537c" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>finalize</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a873226de90788c963cbaa1f1812c2d75" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_connections</name></member>
      <member refid="classnest_1_1TargetTableDevices_1acc4d13aa2d93e3afc6d18765ececb02c" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_connections_from_devices_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1ac1e13e0d6e44dc15f3205d8b14b4c87d" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_connections_to_device_for_lid_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1ab34d597db52fd55318307a5f5babea37" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_connections_to_devices_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a456568309dac07db5fa61027ebd840f0" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_synapse_status_from_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1aa62e2c1472068967720c1117e6258e24" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>get_synapse_status_to_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1ac526322735898fd1fb6a4f27236519e8" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>initialize</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a99e986592b99cc3dfceafa870ee0e678" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>is_device_connected</name></member>
      <member refid="classnest_1_1TargetTableDevices_1aa43b68ae856da1355976d98dc4ff2664" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>resize_to_number_of_neurons</name></member>
      <member refid="classnest_1_1TargetTableDevices_1ae9fa721651b8a36af760da0ec4c62270" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>resize_to_number_of_synapse_types</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a01f89b16e9db817588032ae7ac0d19d3" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>send_from_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a83ca4950e9427381cdde2d7984056b20" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>send_to_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1afd39fabbe400fa7b9009ac3140c8550c" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>send_to_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1aa4ce049505c204585ffb3c155a9ddaa9" prot="private" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>sending_devices_node_ids_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a54b87428990f1f4c0d92b8d6f8e0f52e" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>set_synapse_status_from_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1ab37f76d5554123ed75fe8b74561c46c0" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>set_synapse_status_to_device</name></member>
      <member refid="classnest_1_1TargetTableDevices_1af9872404c6b151a5db5dd096e34ab21d" prot="private" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>target_from_devices_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a9f9c61081cda5e0d3368dee64a963d22" prot="private" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>target_to_devices_</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a1e9cb074c287b266b541722998c14748" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>TargetTableDevices</name></member>
      <member refid="classnest_1_1TargetTableDevices_1a3b7d8cbb91730542c84efb5756ebe553" prot="public" virt="non-virtual"><scope>nest::TargetTableDevices</scope><name>~TargetTableDevices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
