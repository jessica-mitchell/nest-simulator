<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1SPBuilder" kind="class" language="C++" prot="public">
    <compoundname>nest::SPBuilder</compoundname>
    <basecompoundref refid="classnest_1_1ConnBuilder" prot="public" virt="non-virtual">nest::ConnBuilder</basecompoundref>
    <includes refid="conn__builder_8h" local="no">conn_builder.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1SPBuilder_1ad52b37546d512e5d7c9e77b2a3e0d897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::SPBuilder::SPBuilder</definition>
        <argsstring>(NodeCollectionPTR sources, NodeCollectionPTR targets, const DictionaryDatum &amp;conn_spec, const std::vector&lt; DictionaryDatum &gt; &amp;syn_spec)</argsstring>
        <name>SPBuilder</name>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>sources</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>targets</declname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>conn_spec</declname>
        </param>
        <param>
          <type>const std::vector&lt; DictionaryDatum &gt; &amp;</type>
          <declname>syn_spec</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref> is in charge of the creation of synapses during the simulation under the control of the structural plasticity manager. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>net</parametername>
</parameternamelist>
<parameterdescription>
<para>the network </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sources</parametername>
</parameternamelist>
<parameterdescription>
<para>the source nodes on which synapses can be created/deleted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targets</parametername>
</parameternamelist>
<parameterdescription>
<para>the target nodes on which synapses can be created/deleted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>conn_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>connectivity specs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>synapse specs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="407" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1795" bodyend="1806"/>
        <references refid="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" compoundref="conn__builder_8h" startline="198">nest::ConnBuilder::use_post_synaptic_element_</references>
        <references refid="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" compoundref="conn__builder_8h" startline="197">nest::ConnBuilder::use_pre_synaptic_element_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::SPBuilder::get_pre_synaptic_element_name</definition>
        <argsstring>() const</argsstring>
        <name>get_pre_synaptic_element_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="413" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="413" bodyend="416"/>
        <references refid="classnest_1_1ConnBuilder_1ac5ff17cf7dc8accebf3a60fb8ca08b83" compoundref="conn__builder_8h" startline="194">nest::ConnBuilder::pre_synaptic_element_name_</references>
        <referencedby refid="classnest_1_1SPManager_1a6c5563d7088a144d3b630e4ed8faee3b" compoundref="sp__manager_8cpp" startline="341" endline="417">nest::SPManager::update_structural_plasticity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::SPBuilder::get_post_synaptic_element_name</definition>
        <argsstring>() const</argsstring>
        <name>get_post_synaptic_element_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="418" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="418" bodyend="421"/>
        <references refid="classnest_1_1ConnBuilder_1ae0242d555bdaa2756db3a6744a9da65b" compoundref="conn__builder_8h" startline="195">nest::ConnBuilder::post_synaptic_element_name_</references>
        <referencedby refid="classnest_1_1SPManager_1a6c5563d7088a144d3b630e4ed8faee3b" compoundref="sp__manager_8cpp" startline="341" endline="417">nest::SPManager::update_structural_plasticity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1a6b2967497f66cc6c1a6ccf4a45e9c3e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SPBuilder::update_delay</definition>
        <argsstring>(delay &amp;d) const</argsstring>
        <name>update_delay</name>
        <param>
          <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Writes the default delay of the connection model, if the <ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref> only uses the default delay. </para>
        </briefdescription>
        <detaileddescription>
<para>If not, the min/max_delay has to be specified explicitly with the kernel status. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="428" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1809" bodyend="1817"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1ModelManager_1a4ee6b18a6bad6d272e07d838a2af7f1a" compoundref="model__manager_8cpp" startline="394" endline="410">nest::ModelManager::get_connector_defaults</references>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::model_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1afd48465903e920c31f81dee5bb6b317f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SPBuilder::sp_connect</definition>
        <argsstring>(const std::vector&lt; index &gt; &amp;sources, const std::vector&lt; index &gt; &amp;targets)</argsstring>
        <name>sp_connect</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Only for internal use by <ref refid="classnest_1_1SPManager" kindref="compound">SPManager</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="433" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1820" bodyend="1832"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d">nest::names::targets</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SPManager_1a9d99744a7e3f8990558b5636dec66c47" compoundref="sp__manager_8cpp" startline="430" endline="463">nest::SPManager::create_synapses</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1SPBuilder_1a266ad8a84e626b03f822fddebec6d74f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::SPBuilder::connect_</definition>
        <argsstring>() override</argsstring>
        <name>connect_</name>
        <reimplements refid="classnest_1_1ConnBuilder_1abbe0a9ef49761e33196033449eb409cc">connect_</reimplements>
        <briefdescription>
<para>Implements the actual connection algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="437" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1835" bodyend="1838"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1a7fd14c92d46e3642eca834b9fcf51d64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SPBuilder::connect_</definition>
        <argsstring>(NodeCollectionPTR sources, NodeCollectionPTR targets)</argsstring>
        <name>connect_</name>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>sources</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>targets</declname>
        </param>
        <briefdescription>
<para>In charge of dynamically creating the new synapses. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="438" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1844" bodyend="1847"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1a3f3cc4e89529157f3c2381423d8f79ad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SPBuilder::connect_</definition>
        <argsstring>(const std::vector&lt; index &gt; &amp;sources, const std::vector&lt; index &gt; &amp;targets)</argsstring>
        <name>connect_</name>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
<para>In charge of dynamically creating the new synapses. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sources</parametername>
</parameternamelist>
<parameterdescription>
<para>nodes from which synapses can be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targets</parametername>
</parameternamelist>
<parameterdescription>
<para>target nodes for the newly created synapses </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="445" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.cpp" bodystart="1850" bodyend="1896"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" compoundref="nest_8cpp" startline="96" endline="99">nest::get_vp_specific_rng</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="274" endline="277">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="254">nest::KernelManager::node_manager</references>
        <references refid="namespacenest_1_1names_1a8f3b23679799316ba69b9d6c98c69e3a">nest::names::target</references>
        <references refid="namespacenest_1_1names_1a8d0e9103ea1f8b13f4cd02e143186b8d">nest::names::targets</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1SPBuilder_1abbe0a9ef49761e33196033449eb409cc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void nest::ConnBuilder::connect_</definition>
        <argsstring>()=0</argsstring>
        <name>connect_</name>
        <reimplements refid="classnest_1_1ConnBuilder_1abbe0a9ef49761e33196033449eb409cc">connect_</reimplements>
        <briefdescription>
<para>Implements the actual connection algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="436" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::SPBuilder</label>
        <link refid="classnest_1_1SPBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::SPBuilder</label>
        <link refid="classnest_1_1SPBuilder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ConnBuilder</label>
        <link refid="classnest_1_1ConnBuilder"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" line="404" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/conn_builder.h" bodystart="405" bodyend="446"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnBuilder_1a0a0cffe24ec8a736bafc21cf376a5078" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>all_parameters_scalar_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae4f5e56dc411af3804240dd632c4f3ec" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>allow_autapses_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a59ab20628f392f86dd5c7d739e648c66" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>allow_multapses_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aaaf1a924c8030b8971b6f86e448615cb" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>change_connected_synaptic_elements</name></member>
      <member refid="classnest_1_1ConnBuilder_1a530074df95dbb090b6fda4e3538c0102" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>ConnBuilder</name></member>
      <member refid="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>connect</name></member>
      <member refid="classnest_1_1SPBuilder_1a266ad8a84e626b03f822fddebec6d74f" prot="protected" virt="virtual"><scope>nest::SPBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1SPBuilder_1a7fd14c92d46e3642eca834b9fcf51d64" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1SPBuilder_1a3f3cc4e89529157f3c2381423d8f79ad" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1SPBuilder_1abbe0a9ef49761e33196033449eb409cc" prot="protected" virt="virtual"><scope>nest::SPBuilder</scope><name>connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad0b9124c3f087f1699800935054ad91a" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>ConnParameterMap</name></member>
      <member refid="classnest_1_1ConnBuilder_1aacdef9d1a02f25cd6b427cf4173ade5b" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>creates_symmetric_connections_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a74f430404fb962ed89eadd33f6ecd3f7" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>default_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a780c5320b5a14d18a42452ee055e649c" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>default_weight_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a386e5b955385f3490bd28479285c06eb" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>default_weight_and_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aa5fb972b09aa51c867008682aaac31ee" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4fafe51332d31c75a637d4837bbaea4d" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>disconnect</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3e48d3be487889e2af93d8bc0c428f46" prot="protected" virt="virtual"><scope>nest::SPBuilder</scope><name>disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abba02533d1aa42c88177b68ff11dd3f7" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>exceptions_raised_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ad650895baae7bb9140f62132344305db" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>get_default_delay</name></member>
      <member refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>get_post_synaptic_element_name</name></member>
      <member refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>get_pre_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0e18431e792e5eea35cb7da0752f98aa" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>get_synapse_model</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac46d2f5b591f00c2e1fed3e35e6b9b35" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>is_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a90063b4c289115d9337a4bf3bc28bff8" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>loop_over_targets_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a15a2456e42f5637e1d8001ae73fa7e52" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>make_symmetric_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae6927c7fa75b13b37b25fb0851cd5faa" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>param_dicts_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a615837aeb966f6f205c4c6d04cb6d6f9" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0242d555bdaa2756db3a6744a9da65b" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>post_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ac5ff17cf7dc8accebf3a60fb8ca08b83" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>pre_synaptic_element_name_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aff777833ec510565b318f0059df520a0" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>register_parameters_requiring_skipping_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1e5a7be0ac2f6bcc77a77d3e974a8e6d" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>requires_proxies</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7742245ffd86ae962c26b92dab363cd6" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>reset_delays_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a993a31f7f69de094a8bd007c66cdc089" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>reset_weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0eb35bbf0f42c4139e0f1f562a4a0a3" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_default_weight_or_delay_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a46694477447f70340fb29a9d31449b95" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_post_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a344a8fc339bc288dd272b370213ce18a" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_pre_synaptic_element_name</name></member>
      <member refid="classnest_1_1ConnBuilder_1a67a9c61ef70dbca8ff24722766b0faba" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_structural_plasticity_parameters</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9c2e48ef813d9123f9c61df2f40ef1ea" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_synapse_model_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a1d5db8eeefd6c7602d16da5f05618c9e" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>set_synapse_params</name></member>
      <member refid="classnest_1_1ConnBuilder_1a3edb34cd9b903094a46df238bb26cfb9" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>single_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a07998ea08ce1a6d1afdf67b42d0f94c3" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>single_disconnect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9cb089bbde94e308f255a41c2abd09a3" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>skip_conn_parameter_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a41b508eee3fcc1be96d808ae78b4cb3f" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>skip_syn_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a464b9cad4d0148634d443398c1d7d5a9" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>sources_</name></member>
      <member refid="classnest_1_1SPBuilder_1afd48465903e920c31f81dee5bb6b317f" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>sp_connect</name></member>
      <member refid="classnest_1_1ConnBuilder_1a9480e4b0e2834e4ee8a4dcd24a02106b" prot="protected" virt="virtual"><scope>nest::SPBuilder</scope><name>sp_connect_</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae0b6de2eafc3c8a10286b5420bd1068d" prot="protected" virt="virtual"><scope>nest::SPBuilder</scope><name>sp_disconnect_</name></member>
      <member refid="classnest_1_1SPBuilder_1ad52b37546d512e5d7c9e77b2a3e0d897" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>SPBuilder</name></member>
      <member refid="classnest_1_1ConnBuilder_1ae01b03e86e9634b7dc9f6e6b08d123c5" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>supports_symmetric</name></member>
      <member refid="classnest_1_1ConnBuilder_1a929370a7fd8d3c4036911cd985f7db59" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>synapse_model_id_</name></member>
      <member refid="classnest_1_1ConnBuilder_1abca9a10069e6ff74d67f2c8cf218b57e" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>synapse_params_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a7cabed3a9ba94e4ef4cc401019bb824d" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>targets_</name></member>
      <member refid="classnest_1_1SPBuilder_1a6b2967497f66cc6c1a6ccf4a45e9c3e5" prot="public" virt="non-virtual"><scope>nest::SPBuilder</scope><name>update_delay</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4b0dff13dcdd94d8a1e7184911b5f4b8" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>update_param_dict_</name></member>
      <member refid="classnest_1_1ConnBuilder_1af659175b2cda864bf117f842a0d75890" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>use_post_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a0b62b332165c32fce799605d34eede01" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>use_pre_synaptic_element_</name></member>
      <member refid="classnest_1_1ConnBuilder_1aea520ec2a84ea1ee1c416dcf996352d5" prot="protected" virt="non-virtual"><scope>nest::SPBuilder</scope><name>use_structural_plasticity_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a4bac8367e1e0b6a93f57a5e09166e54c" prot="private" virt="non-virtual"><scope>nest::SPBuilder</scope><name>weights_</name></member>
      <member refid="classnest_1_1ConnBuilder_1a8f4f6f5f4e9ac3ed75dd9f0cb6467740" prot="public" virt="virtual"><scope>nest::SPBuilder</scope><name>~ConnBuilder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
