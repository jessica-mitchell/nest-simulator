<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1StimulationBackendMPI" kind="class" language="C++" prot="public">
    <compoundname>nest::StimulationBackendMPI</compoundname>
    <basecompoundref refid="classnest_1_1StimulationBackend" prot="public" virt="non-virtual">nest::StimulationBackend</basecompoundref>
    <includes refid="stimulation__backend__mpi_8h" local="no">stimulation_backend_mpi.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classnest_1_1StimulationBackendMPI_1a5c92cb6ef0f99ffd33b56095bb3c98ac" prot="private" static="no">
        <type>std::vector&lt; std::map&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref>, std::pair&lt; const MPI_Comm *, <ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> * &gt; &gt; &gt;</type>
        <definition>using nest::StimulationBackendMPI::device_map =  std::vector&lt; std::map&lt; index, std::pair&lt; const MPI_Comm*, StimulationDevice* &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>device_map</name>
        <qualifiedname>nest::StimulationBackendMPI::device_map</qualifiedname>
        <briefdescription>
<para>A map for the enrolled devices. </para>
        </briefdescription>
        <detaileddescription>
<para>We have a vector with one map per local thread. The map associates the node ID of a device on a given thread with its device. Only the master thread has a valid MPI communicator pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="139" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1StimulationBackendMPI_1aaa0ae693e0f048042edae8c729d1e66a" prot="private" static="no">
        <type>std::map&lt; std::string, std::tuple&lt; MPI_Comm *, std::vector&lt; int &gt; *, int * &gt; &gt;</type>
        <definition>typedef std::map&lt; std::string, std::tuple&lt; MPI_Comm*, std::vector&lt; int &gt;*, int* &gt; &gt; nest::StimulationBackendMPI::comm_map</definition>
        <argsstring></argsstring>
        <name>comm_map</name>
        <qualifiedname>nest::StimulationBackendMPI::comm_map</qualifiedname>
        <briefdescription>
<para>A map of MPI communicators used by the master thread for the MPI communication. </para>
        </briefdescription>
        <detaileddescription>
<para>This map contains also the number of the devices linked to each MPI communicator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="145" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1StimulationBackendMPI_1a5ff1a357f603a09bb89cb03f067c3d49" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::StimulationBackendMPI::enrolled_</definition>
        <argsstring></argsstring>
        <name>enrolled_</name>
        <qualifiedname>nest::StimulationBackendMPI::enrolled_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="132" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1StimulationBackendMPI_1a121a9b8c97ee0d3ba2b23148f76f2008" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::StimulationBackendMPI::prepared_</definition>
        <argsstring></argsstring>
        <name>prepared_</name>
        <qualifiedname>nest::StimulationBackendMPI::prepared_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="133" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1StimulationBackendMPI_1af2b76ce6edfcc52ac86eb3e1e048d273" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1StimulationBackendMPI_1a5c92cb6ef0f99ffd33b56095bb3c98ac" kindref="member">device_map</ref></type>
        <definition>device_map nest::StimulationBackendMPI::devices_</definition>
        <argsstring></argsstring>
        <name>devices_</name>
        <qualifiedname>nest::StimulationBackendMPI::devices_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="140" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1StimulationBackendMPI_1abc4d718df6d1f94c0cbdb736218c4abb" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1StimulationBackendMPI_1aaa0ae693e0f048042edae8c729d1e66a" kindref="member">comm_map</ref></type>
        <definition>comm_map nest::StimulationBackendMPI::commMap_</definition>
        <argsstring></argsstring>
        <name>commMap_</name>
        <qualifiedname>nest::StimulationBackendMPI::commMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="146" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1aca51f8dce4035466449ffb54b1509a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::StimulationBackendMPI::StimulationBackendMPI</definition>
        <argsstring>()</argsstring>
        <name>StimulationBackendMPI</name>
        <qualifiedname>nest::StimulationBackendMPI::StimulationBackendMPI</qualifiedname>
        <briefdescription>
<para>InputBackend constructor The actual initialization is happening in InputBackend::initialize() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="107" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a506a4a4d1210deab5121f2b59fa4388b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>nest::StimulationBackendMPI::~StimulationBackendMPI</definition>
        <argsstring>() noexcept override</argsstring>
        <name>~StimulationBackendMPI</name>
        <qualifiedname>nest::StimulationBackendMPI::~StimulationBackendMPI</qualifiedname>
        <briefdescription>
<para>InputBackend destructor The actual finalization is happening in InputBackend::finalize() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="113" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1aa58ceaab209d05794d8d073c90df9260" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <qualifiedname>nest::StimulationBackendMPI::initialize</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a00070a035e8cd1768d7247fb247fb446">initialize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="115" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="46" bodyend="51"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a2dd500cfc39496adee2500586a9b7851" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <qualifiedname>nest::StimulationBackendMPI::finalize</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a762f1ca96f846e3617fa56ea594f6a54">finalize</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="117" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1ac3af465f99360719a66c93e44a40a4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::enroll</definition>
        <argsstring>(StimulationDevice &amp;device, const DictionaryDatum &amp;params) override</argsstring>
        <name>enroll</name>
        <qualifiedname>nest::StimulationBackendMPI::enroll</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a97900719ff848a845fea1e2f7e05bc33">enroll</reimplements>
        <param>
          <type><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Enroll a <computeroutput><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref></computeroutput> with the <computeroutput><ref refid="classnest_1_1StimulationBackend" kindref="compound">StimulationBackend</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When this function is called by a <computeroutput><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref></computeroutput> <computeroutput>device</computeroutput>, the <computeroutput><ref refid="classnest_1_1StimulationBackend" kindref="compound">StimulationBackend</ref></computeroutput> can set up per-device data structures and properties. Individual device instances can be identified using the <computeroutput>thread</computeroutput> and <computeroutput>node_id</computeroutput> of the <computeroutput>device</computeroutput>.</para>
<para>This function is called from the set_initialized_() function of the <computeroutput>device</computeroutput> and their set_status() function.</para>
<para>A backend needs to be able to cope with multiple calls to this function, as multiple calls to set_status() may occur on the <computeroutput>device</computeroutput>. For already enrolled devices this usually means that only the parameters in <computeroutput>params</computeroutput> have to be set, but no further actions are needed.</para>
<para>Each stimulation backend must ensure that enrollment (including all settings made by the user) is persistent over multiple calls to Prepare, while the enrollment of all devices should end with a call to <ref refid="classnest_1_1StimulationBackendMPI_1a2dd500cfc39496adee2500586a9b7851" kindref="member">finalize()</ref>.</para>
<para>A common implementation of this function will create an entry in a thread-local map, associating the device&apos;s node ID with the device-specific backend properties and an input facility of some kind.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> to be enrolled </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>device-specific backend parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1a56c15b58587a99e1bcc813b97bed72b9" kindref="member">disenroll()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="119" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="66" bodyend="82"/>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="972" endline="975">nest::Node::get_node_id</references>
        <references refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" compoundref="node_8h" startline="1021" endline="1024">nest::Node::get_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a56c15b58587a99e1bcc813b97bed72b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::disenroll</definition>
        <argsstring>(StimulationDevice &amp;device) override</argsstring>
        <name>disenroll</name>
        <qualifiedname>nest::StimulationBackendMPI::disenroll</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a82c6164e8c0b3355e15f5203e24ac0ad">disenroll</reimplements>
        <param>
          <type><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Disenroll a <computeroutput><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref></computeroutput> from the <computeroutput><ref refid="classnest_1_1StimulationBackend" kindref="compound">StimulationBackend</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is considered to be the opposite of <ref refid="classnest_1_1StimulationBackendMPI_1ac3af465f99360719a66c93e44a40a4bd" kindref="member">enroll()</ref> in the sense that it cancels the enrollment of a StimulatinDevice from a <ref refid="classnest_1_1StimulationBackend" kindref="compound">StimulationBackend</ref> by deleting all device specific data. When setting a new stimulation backend for a stimulation device, this function is called for each backend the device is not enrolled with.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> to be disenrolled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1ac3af465f99360719a66c93e44a40a4bd" kindref="member">enroll()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="121" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="86" bodyend="97"/>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="972" endline="975">nest::Node::get_node_id</references>
        <references refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" compoundref="node_8h" startline="1021" endline="1024">nest::Node::get_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a16f875498206f2315670fb6b68f62add" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::cleanup</definition>
        <argsstring>() override</argsstring>
        <name>cleanup</name>
        <qualifiedname>nest::StimulationBackendMPI::cleanup</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a25aa97793cc11aabd14916b08dc1d441">cleanup</reimplements>
        <briefdescription>
<para>Clean up the backend at the end of a user level call to the NEST Simulate function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called by <computeroutput><ref refid="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce" kindref="member">SimulationManager::cleanup()</ref></computeroutput> and allows the backend to close open files, close network connections, etc.</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1ac083c50fc8f38d7b7dbb0ccb9fea04bd" kindref="member">prepare()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="123" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="257" bodyend="283"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1ac083c50fc8f38d7b7dbb0ccb9fea04bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::prepare</definition>
        <argsstring>() override</argsstring>
        <name>prepare</name>
        <qualifiedname>nest::StimulationBackendMPI::prepare</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1a3f65dec5e7a63752b5e763b6872f4134">prepare</reimplements>
        <briefdescription>
<para>Prepare the backend at the beginning of the NEST Simulate function. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called by <computeroutput><ref refid="classnest_1_1KernelManager_1aa04eacfced16ba64667115aea94ff79a" kindref="member">KernelManager::prepare()</ref></computeroutput> and allows the backend to open files, establish network connections, etc.</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1a16f875498206f2315670fb6b68f62add" kindref="member">cleanup()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="125" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="100" bodyend="201"/>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1ConnectionManager_1a3c6df98351b30307a7283fe2a3dbdf42" compoundref="connection__manager_8h" startline="819" endline="822">nest::ConnectionManager::get_device_connected</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" compoundref="logging_8h" startline="54">nest::M_INFO</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1ab749a6c23d67d844c35d65754c1612bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::pre_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>pre_run_hook</name>
        <qualifiedname>nest::StimulationBackendMPI::pre_run_hook</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1ae80e46a9ccd188561dca8b46b290a69d">pre_run_hook</reimplements>
        <briefdescription>
<para>Initialize global backend-specific data structures. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called on each backend right at the very beginning of <computeroutput><ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref></computeroutput>. It used for getting the data in order to update the stimulation devices. The update of the device are made only if necessary and repeated at the beginning of every single call to run in a prepare-run-run-...-run-run-cleanup sequence.</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1a091f0160a127210605a58a686dff754a" kindref="member">post_run_hook()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="127" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="204" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a091f0160a127210605a58a686dff754a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::post_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>post_run_hook</name>
        <qualifiedname>nest::StimulationBackendMPI::post_run_hook</qualifiedname>
        <reimplements refid="classnest_1_1StimulationBackend_1ad4361d6651dd23ddca0caaef5e8ef593">post_run_hook</reimplements>
        <briefdescription>
<para>Clean up the backend at the end of a Run. </para>
        </briefdescription>
        <detaileddescription>
<para>This is called right before <computeroutput><ref refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" kindref="member">SimulationManager::run()</ref></computeroutput> terminates. It allows the backend to indicate that the run is ending.</para>
<para><simplesect kind="see"><para><ref refid="classnest_1_1StimulationBackendMPI_1ab749a6c23d67d844c35d65754c1612bf" kindref="member">pre_run_hook()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="129" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="242" bodyend="254"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a8bd04117ec9d75fc4b6e10192848c039" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::get_port</definition>
        <argsstring>(StimulationDevice *device, std::string *port_name)</argsstring>
        <name>get_port</name>
        <qualifiedname>nest::StimulationBackendMPI::get_port</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
<para>Getting the port name for the MPI connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>: input device for finding the file with the port </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: result of the port name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="153" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="286" bodyend="289"/>
        <references refid="classnest_1_1StimulationDevice_1a616090703a892ad9c77539a2d4ab22d0" compoundref="stimulation__device_8cpp" startline="85" endline="88">nest::StimulationDevice::get_label</references>
        <references refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" compoundref="node_8h" startline="972" endline="975">nest::Node::get_node_id</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1ad9f07bc17e1b324c915eda7c7db6a8e6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::get_port</definition>
        <argsstring>(index index_node, const std::string &amp;label, std::string *port_name)</argsstring>
        <name>get_port</name>
        <qualifiedname>nest::StimulationBackendMPI::get_port</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>index_node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="154" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="292" bodyend="325"/>
        <references refid="classnest_1_1IOManager_1a51e836794c1c8c93e91e3d7da09bc659" compoundref="io__manager_8h" startline="145" endline="148">nest::IOManager::get_data_path</references>
        <references refid="classnest_1_1IOManager_1a5eda33427b6d2c6f82a60522cfec712a" compoundref="io__manager_8h" startline="151" endline="154">nest::IOManager::get_data_prefix</references>
        <references refid="classnest_1_1KernelManager_1abbcfa9636c48be572ae900cd57958a2f" compoundref="kernel__manager_8h" startline="253">nest::KernelManager::io_manager</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a1b20186c9b0321c6dc1b2dbbc68f8fba" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int *, double * &gt;</type>
        <definition>std::pair&lt; int *, double * &gt; nest::StimulationBackendMPI::receive_spike_train</definition>
        <argsstring>(const MPI_Comm &amp;comm, std::vector&lt; int &gt; &amp;device_id)</argsstring>
        <name>receive_spike_train</name>
        <qualifiedname>nest::StimulationBackendMPI::receive_spike_train</qualifiedname>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>device_id</declname>
        </param>
        <briefdescription>
<para>MPI communication for receiving the data before each run. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used only by the master thread. The allocation of this function is cleaned by the function clean_memory_input_data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: the MPI communicator for send and receive message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>: the list of IDs which needs to be updated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pair( size of data by device, the continuous array with all the data for the device ) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="162" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="328" bodyend="350"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a9871ce874b65ddefe64a766efe5cd26c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::update_device</definition>
        <argsstring>(int *array_index, std::vector&lt; int &gt; &amp;devices_id, std::pair&lt; int *, double * &gt; data)</argsstring>
        <name>update_device</name>
        <qualifiedname>nest::StimulationBackendMPI::update_device</qualifiedname>
        <param>
          <type>int *</type>
          <declname>array_index</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>devices_id</declname>
        </param>
        <param>
          <type>std::pair&lt; int *, double * &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Update all the devices with the data received. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array_index</parametername>
</parameternamelist>
<parameterdescription>
<para>: number of devices by thread </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>devices_id</parametername>
</parameternamelist>
<parameterdescription>
<para>: the devices&apos; ID ordered by thread </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>: the data received for updating all the devices </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="169" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="353" bodyend="395"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1StimulationBackendMPI_1a912cf7a6ba905d1ff97ea1ee7a511e2a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StimulationBackendMPI::clean_memory_input_data</definition>
        <argsstring>(std::vector&lt; std::pair&lt; int *, double * &gt; &gt; &amp;data)</argsstring>
        <name>clean_memory_input_data</name>
        <qualifiedname>nest::StimulationBackendMPI::clean_memory_input_data</qualifiedname>
        <param>
          <type>std::vector&lt; std::pair&lt; int *, double * &gt; &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>clean all the memory allocated for the updating device. </para>
        </briefdescription>
        <detaileddescription>
<para>The function is used only by the master thread <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="174" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.cpp" bodystart="398" bodyend="416"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple input backend MPI implementation. </para>
    </briefdescription>
    <detaileddescription>
<para>Communication protocol diagram: <image type="html" name="MPI_backend_protocol_of_communication.svg"></image>
 General state machine diagram of NEST: <image type="html" name="MPI_backend_state_Nest.svg"></image>
 Example of state machine diagram for the communication with NEST: <image type="html" name="MPI_backend_example_state_machine_communication_with_Nest.svg"></image>
 </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::StimulationBackend</label>
        <link refid="classnest_1_1StimulationBackend"/>
      </node>
      <node id="1">
        <label>nest::StimulationBackendMPI</label>
        <link refid="classnest_1_1StimulationBackendMPI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::StimulationBackend</label>
        <link refid="classnest_1_1StimulationBackend"/>
      </node>
      <node id="1">
        <label>nest::StimulationBackendMPI</label>
        <link refid="classnest_1_1StimulationBackendMPI"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" line="100" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/stimulation_backend_mpi.h" bodystart="101" bodyend="175"/>
    <listofallmembers>
      <member refid="classnest_1_1StimulationBackendMPI_1a912cf7a6ba905d1ff97ea1ee7a511e2a" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>clean_memory_input_data</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a16f875498206f2315670fb6b68f62add" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>cleanup</name></member>
      <member refid="classnest_1_1StimulationBackend_1a6e3d3d53318fff1bd55c2b9d828232f5" prot="public" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>clear</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1aaa0ae693e0f048042edae8c729d1e66a" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>comm_map</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1abc4d718df6d1f94c0cbdb736218c4abb" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>commMap_</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a5c92cb6ef0f99ffd33b56095bb3c98ac" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>device_map</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1af2b76ce6edfcc52ac86eb3e1e048d273" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>devices_</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a56c15b58587a99e1bcc813b97bed72b9" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>disenroll</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1ac3af465f99360719a66c93e44a40a4bd" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>enroll</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a5ff1a357f603a09bb89cb03f067c3d49" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>enrolled_</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a2dd500cfc39496adee2500586a9b7851" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>finalize</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a8bd04117ec9d75fc4b6e10192848c039" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>get_port</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1ad9f07bc17e1b324c915eda7c7db6a8e6" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>get_port</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1aa58ceaab209d05794d8d073c90df9260" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>initialize</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a091f0160a127210605a58a686dff754a" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>post_run_hook</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1ab749a6c23d67d844c35d65754c1612bf" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1ac083c50fc8f38d7b7dbb0ccb9fea04bd" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>prepare</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a121a9b8c97ee0d3ba2b23148f76f2008" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>prepared_</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a1b20186c9b0321c6dc1b2dbbc68f8fba" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>receive_spike_train</name></member>
      <member refid="classnest_1_1StimulationBackend_1af7e29a01e07656215981cbed2ac7aaa6" prot="public" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>StimulationBackend</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1aca51f8dce4035466449ffb54b1509a07" prot="public" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>StimulationBackendMPI</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a9871ce874b65ddefe64a766efe5cd26c" prot="private" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>update_device</name></member>
      <member refid="classnest_1_1StimulationBackend_1aa49db24f8776ed4ce51159a99904d4ce" prot="public" virt="virtual"><scope>nest::StimulationBackendMPI</scope><name>~StimulationBackend</name></member>
      <member refid="classnest_1_1StimulationBackendMPI_1a506a4a4d1210deab5121f2b59fa4388b" prot="public" virt="non-virtual"><scope>nest::StimulationBackendMPI</scope><name>~StimulationBackendMPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
