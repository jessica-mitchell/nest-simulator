<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="dictstack_8h" kind="file" language="C++">
    <compoundname>dictstack.h</compoundname>
    <includes local="no">list</includes>
    <includes local="no">typeinfo</includes>
    <includes refid="dictdatum_8h" local="yes">dictdatum.h</includes>
    <includes refid="sliexceptions_8h" local="yes">sliexceptions.h</includes>
    <includedby refid="dictstack_8cc" local="yes">dictstack.cc</includedby>
    <includedby refid="interpret_8cc" local="yes">interpret.cc</includedby>
    <includedby refid="oosupport_8cc" local="yes">oosupport.cc</includedby>
    <includedby refid="sli__io_8cc" local="yes">sli_io.cc</includedby>
    <includedby refid="sliactions_8cc" local="yes">sliactions.cc</includedby>
    <includedby refid="slicontrol_8cc" local="yes">slicontrol.cc</includedby>
    <includedby refid="slidict_8cc" local="yes">slidict.cc</includedby>
    <incdepgraph>
      <node id="30">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>dictdatum.h</label>
        <link refid="dictdatum_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dictstack.h</label>
        <link refid="dictstack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>lockptrdatum.h</label>
        <link refid="lockptrdatum_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="23">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="16">
        <label>config.h</label>
      </node>
      <node id="26">
        <label>cstddef</label>
      </node>
      <node id="9">
        <label>deque</label>
      </node>
      <node id="15">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>list</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="31">
        <label>memory</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="3">
        <label>typeinfo</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>dictstack.cc</label>
        <link refid="dictstack_8cc"/>
      </node>
      <node id="1">
        <label>dictstack.h</label>
        <link refid="dictstack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>interpret.cc</label>
        <link refid="interpret_8cc"/>
      </node>
      <node id="4">
        <label>oosupport.cc</label>
        <link refid="oosupport_8cc"/>
      </node>
      <node id="5">
        <label>sli_io.cc</label>
        <link refid="sli__io_8cc"/>
      </node>
      <node id="6">
        <label>sliactions.cc</label>
        <link refid="sliactions_8cc"/>
      </node>
      <node id="7">
        <label>slicontrol.cc</label>
        <link refid="slicontrol_8cc"/>
      </node>
      <node id="8">
        <label>slidict.cc</label>
        <link refid="slidict_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classDictionaryStack" prot="public">DictionaryStack</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dictstack_8h_1a331e158c6f2ef11dd49b6584e7d549a8" prot="public" static="no">
        <name>DICTSTACK_CACHE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>The macro DICTSTACK_CACHE switches on two caches: </para>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>cache_, global cache for the dictionary stack</para>
</listitem><listitem><para>basecache_, a cache for the system dictionary These caches are direct lookup table with one entry per name. They work as follows: If a name is looked up, it is looked up in the cache. If the cache does not have an entry, the dictionary stack is searched and the name/token combination is added to the cache. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/dictstack.h" line="66" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/dictstack.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>dictstack.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTIONARYSTACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DICTIONARYSTACK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>SLI&apos;s<sp/>dictionary<sp/>stack</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>sli:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictdatum_8h" kindref="compound">dictdatum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sliexceptions_8h" kindref="compound">sliexceptions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment">Problems:</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">-<sp/>is<sp/>it<sp/>better<sp/>to<sp/>uses<sp/>dictionaries<sp/>as<sp/>references<sp/>to<sp/>common</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/>objects<sp/>like<sp/>in<sp/>PS.<sp/>What<sp/>is<sp/>the<sp/>exact<sp/>meaning<sp/>of<sp/>undef<sp/>and</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>where<sp/>in<sp/>our<sp/>current<sp/>situation<sp/>(read<sp/>RedBook).</highlight></codeline>
<codeline lineno="45"><highlight class="comment">-<sp/>more<sp/>efficient<sp/>implementation<sp/>exploiting</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/>the<sp/>name<sp/>ids<sp/>(documented<sp/>elsewhere).</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>History:</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>(1)<sp/>using<sp/>list&lt;Dictionary&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MD,<sp/>23.6.1,<sp/>Freiburg</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>(0)<sp/>first<sp/>version<sp/>(single<sp/>dictionary)</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MOG,<sp/>MD,<sp/>June<sp/>1997,<sp/>Freiburg</highlight></codeline>
<codeline lineno="53"><highlight class="comment">**************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="dictstack_8h_1a331e158c6f2ef11dd49b6584e7d549a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DICTSTACK_CACHE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classDictionaryStack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="classDictionaryStack_1ad617373d228d2df82fdcffe8a526091f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/><ref refid="classDictionaryStack_1ad617373d228d2df82fdcffe8a526091f" kindref="member">VoidToken</ref>;</highlight></codeline>
<codeline lineno="73" refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" refkind="member"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="74" refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>Token*<sp/>&gt;<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>;</highlight></codeline>
<codeline lineno="77" refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>const<sp/>Token*<sp/>&gt;<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>=<sp/><ref refid="classToken" kindref="compound">Token</ref>()<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1abc2ff8614f82019ea906a62eb8d76ac1" kindref="member">~DictionaryStack</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&gt;=<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.resize(<sp/><ref refid="className_1a2666638a472f84ae7adc6ef78619c982" kindref="member">Name::num_handles</ref>()<sp/>+<sp/>100,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>[<sp/>key<sp/>]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" kindref="member">basecache_token</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&gt;=<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>.resize(<sp/><ref refid="className_1a2666638a472f84ae7adc6ef78619c982" kindref="member">Name::num_handles</ref>()<sp/>+<sp/>100,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>[<sp/>key<sp/>]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" kindref="member">clear_token_from_cache</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>[<sp/>key<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classDictionaryStack_1a2b786bde0d5a369765cb7184d8b39fe0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a2b786bde0d5a369765cb7184d8b39fe0" kindref="member">clear_token_from_basecache</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>[<sp/>key<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classDictionaryStack_1a892a08eff00f92879170fe0133848b89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a892a08eff00f92879170fe0133848b89" kindref="member">clear_dict_from_cache</ref>(<sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref><sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>TokenMap::iterator<sp/>i<sp/>=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>-&gt;begin();<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>-&gt;end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" kindref="member">clear_token_from_cache</ref>(<sp/>i-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classDictionaryStack_1a0349130b1d40ec53973434a9f437ce5e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a0349130b1d40ec53973434a9f437ce5e" kindref="member">clear_cache</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cache_size<sp/>=<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.size();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cache_size;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>[<sp/>i<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="163" refid="classDictionaryStack_1a9647f3edd0f806cdef4e1452aaaac480" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a9647f3edd0f806cdef4e1452aaaac480" kindref="member">lookup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" kindref="member">lookup2</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classUndefinedName" kindref="compound">UndefinedName</ref>&amp;<sp/>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ad617373d228d2df82fdcffe8a526091f" kindref="member">VoidToken</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="176" refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" kindref="member">lookup2</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>=<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>[<sp/>key<sp/>];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::const_iterator<sp/>i<sp/>=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TokenMap::const_iterator<sp/>where<sp/>=<sp/>(<sp/>*i<sp/>)-&gt;find(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>where<sp/>!=<sp/>(<sp/>*i<sp/>)-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>where-&gt;second;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classUndefinedName" kindref="compound">UndefinedName</ref>(<sp/>n.<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>()<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;</highlight></codeline>
<codeline lineno="212" refid="classDictionaryStack_1a8581db76ab8f676ec4677cf666e7cf91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a8581db76ab8f676ec4677cf666e7cf91" kindref="member">baselookup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)<sp/></highlight><highlight class="comment">//<sp/>lookup<sp/>in<sp/>a<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>=<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>[<sp/>key<sp/>];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>TokenMap::const_iterator<sp/>where<sp/>=<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;find(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>where<sp/>!=<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" kindref="member">basecache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>basecache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>where-&gt;second;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ad617373d228d2df82fdcffe8a526091f" kindref="member">VoidToken</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classDictionaryStack_1a7d92859ff56dd8ff8bd6cc084142476c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a7d92859ff56dd8ff8bd6cc084142476c" kindref="member">known</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>=<sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>[<sp/>key<sp/>];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::const_iterator<sp/>i(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end()<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TokenMap::const_iterator<sp/>where<sp/>=<sp/>(<sp/>*i<sp/>)-&gt;find(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>where<sp/>!=<sp/>(<sp/>*i<sp/>)-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classDictionaryStack_1a2788ee691c8872c2b586fbf98f3433ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a2788ee691c8872c2b586fbf98f3433ab" kindref="member">baseknown</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)<sp/></highlight><highlight class="comment">//<sp/>lookup<sp/>in<sp/>a<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">Name::handle_t</ref><sp/>key<sp/>=<sp/>n.<ref refid="className_1a7e3458f794f8a041d79172e2da29d6ce" kindref="member">toIndex</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>key<sp/>&lt;<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>.size()<sp/>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>*<sp/>result<sp/>=<sp/><ref refid="classDictionaryStack_1a35b10bfe715de21c763d288dacdd1e5e" kindref="member">basecache_</ref>[<sp/>key<sp/>];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>TokenMap::const_iterator<sp/>where<sp/>=<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;find(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>where<sp/>!=<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;end()<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" kindref="member">basecache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>basecache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>where-&gt;second<sp/>)<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>def<sp/>and<sp/>def_move<sp/>operate<sp/>on<sp/>the<sp/>top<sp/>level<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>undef<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>the<sp/>dictionary<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a059fd306e6b5880bd7f292ccb18a60ce" kindref="member">def</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ad1cb0f7217c63f0b5ef32f86a2903cfc" kindref="member">undef</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a07607d88ed5c9e539f4173fb6342be06" kindref="member">basedef</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">def_move</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a5baf5097495a26a297a62fa66b8fe93d" kindref="member">set_basedict</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1aafd0651e94ff35dfbf6862be6e87364e" kindref="member">basedef_move</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ad4eb8703d1963c570ae0607886d83275" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>Dictionary<sp/>is<sp/>always<sp/>wrapped<sp/>in<sp/>a<sp/>Token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1aa29e38886d0158d4cd2254753b38d0f3" kindref="member">top</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">push</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">push</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ad5af8e81a3d1d2d73ae5ddf007d173a3" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a3e10c9a812a39de9cf03e57ab2a9d7ae" kindref="member">toArray</ref>(<sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>is<sp/>efficient<sp/>for<sp/>interaction<sp/>with<sp/>operand<sp/>and<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stack,<sp/>but<sp/>can<sp/>not<sp/>be<sp/>implemented<sp/>in<sp/>this<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>pop_move(Token<sp/>&amp;)<sp/>const;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>push_move(const<sp/>Token<sp/>&amp;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>dictionaries<sp/>currently<sp/>on<sp/>the<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1ab137abf2543962afa801918b55b32d6e" kindref="member">size</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>info<sp/>for<sp/>debugging<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calls<sp/>info(ostream&amp;)<sp/>for<sp/>all<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1acfd66b8fe261db057215a9aae38192bf" kindref="member">info</ref>(<sp/>std::ostream&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a026e89ff56b7e0e3da0421f65d86090b" kindref="member">top_info</ref>(<sp/>std::ostream&amp;<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>calls<sp/>info<sp/>of<sp/>top<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;<sp/><ref refid="classDictionaryStack_1a720ff11c55b3df6502b739067051deb3" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classDictionaryStack_1a059fd306e6b5880bd7f292ccb18a60ce" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a059fd306e6b5880bd7f292ccb18a60ce" kindref="member">DictionaryStack::def</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">//<sp/>insert<sp/>(n,t)<sp/>in<sp/>top<sp/>level<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dictionary<sp/>stack<sp/>must<sp/>contain<sp/>at<sp/>least<sp/>one<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VoidToken<sp/>is<sp/>an<sp/>illegal<sp/>value<sp/>for<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>(<sp/>*<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)-&gt;insert(<sp/>n,<sp/>t<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>(<sp/>**<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)[<sp/>n<sp/>]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a337f9b52f8ab3049301b7647bdc3903f" kindref="member">DictionaryStack::def_move</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>(n,t)<sp/>in<sp/>top<sp/>level<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>stack<sp/>must<sp/>contain<sp/>at<sp/>least<sp/>one<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>VoidToken<sp/>is<sp/>an<sp/>illegal<sp/>value<sp/>for<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>def_move<sp/>returns<sp/>t<sp/>as<sp/>the<sp/>VoidToken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear_token_from_cache(n);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" kindref="member">cache_token</ref>(<sp/>n,<sp/>&amp;(<sp/>(<sp/>*<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)-&gt;insert_move(<sp/>n,<sp/>t<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>(<sp/>*<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)-&gt;insert_move(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/dictstack.h"/>
  </compounddef>
</doxygen>
