<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classRaiseagainFunction" kind="class" language="C++" prot="public">
    <compoundname>RaiseagainFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="slicontrol_8h" local="no">slicontrol.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRaiseagainFunction_1a085e448e1c45b21c3e7e0faceaaca7c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RaiseagainFunction::RaiseagainFunction</definition>
        <argsstring>()</argsstring>
        <name>RaiseagainFunction</name>
        <qualifiedname>RaiseagainFunction::RaiseagainFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="304" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classRaiseagainFunction_1a8decaba7f4756abf4f1cb879796ddf36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void RaiseagainFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>RaiseagainFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: raiseagain - re-raise the last error </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: raiseagain</para>
<para>Description: raiseagain re-raises a previously raised error. This is useful if an error handler cannot cope with a particular error (e.g. a signal) and wants to pass it to an upper level handler. Thus, nestet error handlers are possible.</para>
<para>Author: Gewaltig</para>
<para>Remarks: not part of PostScript</para>
<para>References: See the Red Book for PostScript&apos;s error handling facilities</para>
<para>SeeAlso: raiseerror, stop, stopped, errordict </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="307" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.cc" bodystart="1240" bodyend="1244"/>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="group__SLIError_1gaf0e0e8a833e50337078b8dd48df80a53" compoundref="interpret_8cc" startline="718" endline="734">SLIInterpreter::raiseagain</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>RaiseagainFunction</label>
        <link refid="classRaiseagainFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>RaiseagainFunction</label>
        <link refid="classRaiseagainFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" line="301" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/slicontrol.h" bodystart="302" bodyend="308"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>RaiseagainFunction</scope><name>backtrace</name></member>
      <member refid="classRaiseagainFunction_1a8decaba7f4756abf4f1cb879796ddf36" prot="public" virt="virtual"><scope>RaiseagainFunction</scope><name>execute</name></member>
      <member refid="classRaiseagainFunction_1a085e448e1c45b21c3e7e0faceaaca7c6" prot="public" virt="non-virtual"><scope>RaiseagainFunction</scope><name>RaiseagainFunction</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>RaiseagainFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>RaiseagainFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
