<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="secondary__event_8h" kind="file" language="C++">
    <compoundname>secondary_event.h</compoundname>
    <includes local="no">set</includes>
    <includedby refid="connector__model_8h" local="yes">connector_model.h</includedby>
    <includedby refid="event__delivery__manager_8h" local="yes">event_delivery_manager.h</includedby>
    <includedby refid="node_8h" local="yes">node.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>set</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="43">
        <label>kernel_manager.cpp</label>
        <link refid="kernel__manager_8cpp"/>
      </node>
      <node id="99">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>sparse_node_array.cpp</label>
        <link refid="sparse__node__array_8cpp"/>
      </node>
      <node id="38">
        <label>delay_checker.cpp</label>
        <link refid="delay__checker_8cpp"/>
      </node>
      <node id="19">
        <label>archiving_node.cpp</label>
        <link refid="archiving__node_8cpp"/>
      </node>
      <node id="6">
        <label>connection.h</label>
        <link refid="connection_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>parameter.cpp</label>
        <link refid="parameter_8cpp"/>
      </node>
      <node id="11">
        <label>connection_manager_impl.h</label>
        <link refid="connection__manager__impl_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>ring_buffer_impl.h</label>
        <link refid="ring__buffer__impl_8h"/>
      </node>
      <node id="12">
        <label>event_delivery_manager.cpp</label>
        <link refid="event__delivery__manager_8cpp"/>
      </node>
      <node id="48">
        <label>mpi_manager.cpp</label>
        <link refid="mpi__manager_8cpp"/>
      </node>
      <node id="78">
        <label>target_identifier.h</label>
        <link refid="target__identifier_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>layer.cpp</label>
        <link refid="layer_8cpp"/>
      </node>
      <node id="13">
        <label>event_delivery_manager_impl.h</label>
        <link refid="event__delivery__manager__impl_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>mpi_manager_impl.h</label>
        <link refid="mpi__manager__impl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>simulation_manager.cpp</label>
        <link refid="simulation__manager_8cpp"/>
      </node>
      <node id="72">
        <label>slice_ring_buffer.cpp</label>
        <link refid="slice__ring__buffer_8cpp"/>
      </node>
      <node id="50">
        <label>nest.cpp</label>
        <link refid="nest_8cpp"/>
      </node>
      <node id="63">
        <label>node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="16">
        <label>source_table.cpp</label>
        <link refid="source__table_8cpp"/>
      </node>
      <node id="93">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>recording_backend_mpi.cpp</label>
        <link refid="recording__backend__mpi_8cpp"/>
      </node>
      <node id="101">
        <label>structural_plasticity_node.h</label>
        <link refid="structural__plasticity__node_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>structural_plasticity_node.cpp</label>
        <link refid="structural__plasticity__node_8cpp"/>
      </node>
      <node id="96">
        <label>stimulation_backend_mpi.h</label>
        <link refid="stimulation__backend__mpi_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>clopath_archiving_node.h</label>
        <link refid="clopath__archiving__node_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>model_manager_impl.h</label>
        <link refid="model__manager__impl_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>model_manager.cpp</label>
        <link refid="model__manager_8cpp"/>
      </node>
      <node id="36">
        <label>connector_model_impl.h</label>
        <link refid="connector__model__impl_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>target_table.cpp</label>
        <link refid="target__table_8cpp"/>
      </node>
      <node id="35">
        <label>connector_base_impl.h</label>
        <link refid="connector__base__impl_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>urbanczik_archiving_node.h</label>
        <link refid="urbanczik__archiving__node_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>free_layer.h</label>
        <link refid="free__layer_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>target_table_devices.cpp</label>
        <link refid="target__table__devices_8cpp"/>
      </node>
      <node id="51">
        <label>node_collection.cpp</label>
        <link refid="node__collection_8cpp"/>
      </node>
      <node id="97">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>proxynode.cpp</label>
        <link refid="proxynode_8cpp"/>
      </node>
      <node id="18">
        <label>neststartup.cpp</label>
        <link refid="neststartup_8cpp"/>
      </node>
      <node id="94">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>device.cpp</label>
        <link refid="device_8cpp"/>
      </node>
      <node id="4">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>connection_creator_impl.h</label>
        <link refid="connection__creator__impl_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>io_manager.cpp</label>
        <link refid="io__manager_8cpp"/>
      </node>
      <node id="85">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>recording_device.h</label>
        <link refid="recording__device_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>music_manager.cpp</label>
        <link refid="music__manager_8cpp"/>
      </node>
      <node id="34">
        <label>layer_impl.h</label>
        <link refid="layer__impl_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>urbanczik_archiving_node_impl.h</label>
        <link refid="urbanczik__archiving__node__impl_8h"/>
      </node>
      <node id="55">
        <label>recording_backend_ascii.cpp</label>
        <link refid="recording__backend__ascii_8cpp"/>
      </node>
      <node id="9">
        <label>connection_manager.cpp</label>
        <link refid="connection__manager_8cpp"/>
      </node>
      <node id="1">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>recording_backend_memory.cpp</label>
        <link refid="recording__backend__memory_8cpp"/>
      </node>
      <node id="3">
        <label>common_synapse_properties.cpp</label>
        <link refid="common__synapse__properties_8cpp"/>
      </node>
      <node id="46">
        <label>node_manager.cpp</label>
        <link refid="node__manager_8cpp"/>
      </node>
      <node id="77">
        <label>synaptic_element.cpp</label>
        <link refid="synaptic__element_8cpp"/>
      </node>
      <node id="100">
        <label>proxynode.h</label>
        <link refid="proxynode_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>slice_ring_buffer.h</label>
        <link refid="slice__ring__buffer_8h"/>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>io_manager_impl.h</label>
        <link refid="io__manager__impl_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>spatial.cpp</label>
        <link refid="spatial_8cpp"/>
      </node>
      <node id="33">
        <label>grid_layer.h</label>
        <link refid="grid__layer_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>deprecation_warning.cpp</label>
        <link refid="deprecation__warning_8cpp"/>
      </node>
      <node id="74">
        <label>stimulation_backend_mpi.cpp</label>
        <link refid="stimulation__backend__mpi_8cpp"/>
      </node>
      <node id="69">
        <label>ring_buffer.cpp</label>
        <link refid="ring__buffer_8cpp"/>
      </node>
      <node id="47">
        <label>modelrange_manager.cpp</label>
        <link refid="modelrange__manager_8cpp"/>
      </node>
      <node id="17">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>recording_backend_sionlib.cpp</label>
        <link refid="recording__backend__sionlib_8cpp"/>
      </node>
      <node id="5">
        <label>common_properties_hom_w.h</label>
        <link refid="common__properties__hom__w_8h"/>
      </node>
      <node id="53">
        <label>vp_manager_impl.h</label>
        <link refid="vp__manager__impl_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>genericmodel_impl.h</label>
        <link refid="genericmodel__impl_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>random_manager.cpp</label>
        <link refid="random__manager_8cpp"/>
      </node>
      <node id="75">
        <label>stimulation_device.cpp</label>
        <link refid="stimulation__device_8cpp"/>
      </node>
      <node id="92">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>pseudo_recording_device.h</label>
        <link refid="pseudo__recording__device_8h"/>
      </node>
      <node id="98">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="20">
        <label>clopath_archiving_node.cpp</label>
        <link refid="clopath__archiving__node_8cpp"/>
      </node>
      <node id="40">
        <label>event.cpp</label>
        <link refid="event_8cpp"/>
      </node>
      <node id="84">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>conn_parameter.cpp</label>
        <link refid="conn__parameter_8cpp"/>
      </node>
      <node id="68">
        <label>ring_buffer.h</label>
        <link refid="ring__buffer_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>sp_manager.cpp</label>
        <link refid="sp__manager_8cpp"/>
      </node>
      <node id="21">
        <label>conn_builder.cpp</label>
        <link refid="conn__builder_8cpp"/>
      </node>
      <node id="14">
        <label>nestmodule.cpp</label>
        <link refid="nestmodule_8cpp"/>
      </node>
      <node id="22">
        <label>conn_builder_impl.h</label>
        <link refid="conn__builder__impl_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>connection_creator.cpp</label>
        <link refid="connection__creator_8cpp"/>
      </node>
      <node id="82">
        <label>connector_model.cpp</label>
        <link refid="connector__model_8cpp"/>
      </node>
      <node id="67">
        <label>recording_backend_screen.cpp</label>
        <link refid="recording__backend__screen_8cpp"/>
      </node>
      <node id="30">
        <label>spatial.h</label>
        <link refid="spatial_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>vp_manager.cpp</label>
        <link refid="vp__manager_8cpp"/>
      </node>
      <node id="62">
        <label>nest_impl.h</label>
        <link refid="nest__impl_8h"/>
      </node>
      <node id="24">
        <label>connection_creator.h</label>
        <link refid="connection__creator_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>archiving_node.h</label>
        <link refid="archiving__node_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>recording_device.cpp</label>
        <link refid="recording__device_8cpp"/>
      </node>
      <node id="2">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>target_table_devices_impl.h</label>
        <link refid="target__table__devices__impl_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classnest_1_1_secondary_event" prot="public">nest::SecondaryEvent</innerclass>
    <innerclass refid="classnest_1_1_data_secondary_event" prot="public">nest::DataSecondaryEvent</innerclass>
    <innerclass refid="unionnest_1_1_data_secondary_event_1_1_coeffarray_begin" prot="private">nest::DataSecondaryEvent::CoeffarrayBegin</innerclass>
    <innerclass refid="unionnest_1_1_data_secondary_event_1_1_coeffarray_end" prot="private">nest::DataSecondaryEvent::CoeffarrayEnd</innerclass>
    <innerclass refid="classnest_1_1_gap_junction_event" prot="public">nest::GapJunctionEvent</innerclass>
    <innerclass refid="classnest_1_1_instantaneous_rate_connection_event" prot="public">nest::InstantaneousRateConnectionEvent</innerclass>
    <innerclass refid="classnest_1_1_delayed_rate_connection_event" prot="public">nest::DelayedRateConnectionEvent</innerclass>
    <innerclass refid="classnest_1_1_diffusion_connection_event" prot="public">nest::DiffusionConnectionEvent</innerclass>
    <innernamespace refid="namespacenest">nest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>secondary_event.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SECONDARY_EVENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SECONDARY_EVENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>c++<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>includes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classnest_1_1_secondary_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_secondary_event" kindref="compound">SecondaryEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_event" kindref="compound">Event</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classnest_1_1_secondary_event_1abc08cdd9aa7ef8ce98f86ac745fd7231" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_secondary_event" kindref="compound">SecondaryEvent</ref>*<sp/><ref refid="classnest_1_1_secondary_event_1abc08cdd9aa7ef8ce98f86ac745fd7231" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classnest_1_1_secondary_event_1a94981d28268bf2a0c63e9f37b74f05fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_secondary_event_1a94981d28268bf2a0c63e9f37b74f05fe" kindref="member">add_syn_id</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref><sp/>synid<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classnest_1_1_secondary_event_1a3f6c1179457aca98bbc84b2fe4ba21e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_secondary_event_1a3f6c1179457aca98bbc84b2fe4ba21e3" kindref="member">size</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57" refid="classnest_1_1_secondary_event_1a3e8f284d97cb8537bdeb4698709583fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/><ref refid="classnest_1_1_secondary_event_1a3e8f284d97cb8537bdeb4698709583fb" kindref="member">operator&lt;&lt;</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58" refid="classnest_1_1_secondary_event_1af02313204f43c0b5e4a63e41ee72cb16" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/><ref refid="classnest_1_1_secondary_event_1af02313204f43c0b5e4a63e41ee72cb16" kindref="member">operator&gt;&gt;</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classnest_1_1_secondary_event_1a30246f896d5a978f0aeaa857afa3ecd7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>synindex<sp/>&gt;&amp;<sp/><ref refid="classnest_1_1_secondary_event_1a30246f896d5a978f0aeaa857afa3ecd7" kindref="member">get_supported_syn_ids</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classnest_1_1_secondary_event_1a73b8f4bbb93704afdaafc5dd25af6025" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_secondary_event_1a73b8f4bbb93704afdaafc5dd25af6025" kindref="member">reset_supported_syn_ids</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespacenest_1a62667dd4a252f51759809504f3369e91" refkind="member"><highlight class="normal"><ref refid="namespacenest_1a62667dd4a252f51759809504f3369e91" kindref="member">number_of_uints_covered</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_uints<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num_uints<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>T<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>num_uints<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_uints;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespacenest_1a822a71bff2d3332a54a997e62d0a0929" refkind="member"><highlight class="normal"><ref refid="namespacenest_1a822a71bff2d3332a54a997e62d0a0929" kindref="member">write_to_comm_buffer</ref>(<sp/>T<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>aliasing<sp/>problem<sp/>here,<sp/>since<sp/>cast<sp/>to<sp/>char*<sp/>invalidate<sp/>strict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aliasing<sp/>assumptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;<ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_uints<sp/>=<sp/>number_of_uints_covered&lt;<sp/>T<sp/>&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left_to_copy<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>T<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_uints;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>&amp;(<sp/>*(<sp/>pos<sp/>+<sp/>i<sp/>)<sp/>),<sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>+<sp/>i<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>),<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">std::min</ref>(<sp/>left_to_copy,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>left_to_copy<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pos<sp/>+=<sp/>num_uints;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="namespacenest_1a97f1da1a1028f8e11e47b2069b5071ae" refkind="member"><highlight class="normal"><ref refid="namespacenest_1a97f1da1a1028f8e11e47b2069b5071ae" kindref="member">read_from_comm_buffer</ref>(<sp/>T&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>no<sp/>aliasing<sp/>problem<sp/>here,<sp/>since<sp/>cast<sp/>to<sp/>char*<sp/>invalidate<sp/>strict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aliasing<sp/>assumptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>&amp;<ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_uints<sp/>=<sp/>number_of_uints_covered&lt;<sp/>T<sp/>&gt;();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left_to_copy<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>T<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_uints;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>+<sp/>i<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>),<sp/>&amp;(<sp/>*(<sp/>pos<sp/>+<sp/>i<sp/>)<sp/>),<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">std::min</ref>(<sp/>left_to_copy,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>left_to_copy<sp/>-=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>pos<sp/>+=<sp/>num_uints;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sub</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="162" refid="classnest_1_1_data_secondary_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_secondary_event" kindref="compound">SecondaryEvent</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>synindex<sp/>&gt;<sp/>supported_syn_ids_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>coeff_length_;<sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>coeffarray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">CoeffarrayBegin</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator<sp/>as_uint;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>DataType<sp/>&gt;::iterator<sp/>as_DataType;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>CoeffarrayBegin()<sp/>{};<sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>provide<sp/>default<sp/>constructor<sp/>due<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-trivial<sp/>constructors<sp/>of<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}<sp/>coeffarray_begin_;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">CoeffarrayEnd</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator<sp/>as_uint;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>DataType<sp/>&gt;::iterator<sp/>as_DataType;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>CoeffarrayEnd()<sp/>{};<sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>provide<sp/>default<sp/>constructor<sp/>due<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-trivial<sp/>constructors<sp/>of<sp/>iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}<sp/>coeffarray_end_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classnest_1_1_data_secondary_event_1ac806b4c51bc1abcf7e1b321f7b0c14d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1ac806b4c51bc1abcf7e1b321f7b0c14d0" kindref="member">add_syn_id</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref><sp/>synid<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_v_p_manager_1afbe0b686ed8bd6ee420e58cb17fa8272" kindref="member">VPManager::assert_single_threaded</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>supported_syn_ids_.insert(<sp/>synid<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;<sp/>synindex<sp/>&gt;&amp;</highlight></codeline>
<codeline lineno="206" refid="classnest_1_1_data_secondary_event_1a3f969c724dcb8fbc60085946a8bd331f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a3f969c724dcb8fbc60085946a8bd331f" kindref="member">get_supported_syn_ids</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>supported_syn_ids_;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classnest_1_1_data_secondary_event_1a607e44ee7366048f270f75ec2fafa759" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a607e44ee7366048f270f75ec2fafa759" kindref="member">reset_supported_syn_ids</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="220"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>supported_syn_ids_.clear();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="classnest_1_1_data_secondary_event_1a3640d11d4d2359909f612263eda76492" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a3640d11d4d2359909f612263eda76492" kindref="member">set_coeff_length</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>coeff_length<sp/>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnest_1_1_v_p_manager_1afbe0b686ed8bd6ee420e58cb17fa8272" kindref="member">VPManager::assert_single_threaded</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>coeff_length_<sp/>=<sp/>coeff_length;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classnest_1_1_data_secondary_event_1a74fb39a1de88a532ab1afa32403cf22b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a74fb39a1de88a532ab1afa32403cf22b" kindref="member">set_coeffarray</ref>(<sp/>std::vector&lt;<sp/>DataType<sp/>&gt;&amp;<sp/>ca<sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffarray_begin_.as_DataType<sp/>=<sp/>ca.begin();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffarray_end_.as_DataType<sp/>=<sp/>ca.end();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>coeff_length_<sp/>==<sp/>ca.size()<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classnest_1_1_data_secondary_event_1a9765de5a91ec491cf36b2f0d62905cd9" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a9765de5a91ec491cf36b2f0d62905cd9" kindref="member">operator&lt;&lt;</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>synid<sp/>can<sp/>be<sp/>skipped<sp/>here<sp/>as<sp/>it<sp/>is<sp/>stored<sp/>in<sp/>a<sp/>static<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generating<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>coeffarray<sp/>is<sp/>too<sp/>time<sp/>consuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore<sp/>we<sp/>save<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>beginning+end<sp/>of<sp/>the<sp/>coeffarray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffarray_begin_.as_uint<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>coeff_length_<sp/>*<sp/>number_of_uints_covered&lt;<sp/>DataType<sp/>&gt;();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>coeffarray_end_.as_uint<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;</highlight></codeline>
<codeline lineno="266" refid="classnest_1_1_data_secondary_event_1a9e7cdfd530eeb6a4d5de6f413738fc9f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a9e7cdfd530eeb6a4d5de6f413738fc9f" kindref="member">operator&gt;&gt;</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>coeffarray_begin_.as_DataType;<sp/>it<sp/>!=<sp/>coeffarray_end_.as_DataType;<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>the<sp/>static_cast<sp/>here<sp/>as<sp/>the<sp/>size<sp/>of<sp/>a<sp/>stand-alone<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>std::vector<sp/>entry<sp/>may<sp/>differ<sp/>(e.g.<sp/>for<sp/>std::vector&lt;<sp/>bool<sp/>&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1a822a71bff2d3332a54a997e62d0a0929" kindref="member">write_to_comm_buffer</ref>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DataType<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>*it<sp/>),<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classnest_1_1_data_secondary_event_1a4e33890927207c0bc089167f249ea032" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a4e33890927207c0bc089167f249ea032" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="279"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>number_of_uints_covered&lt;<sp/>synindex<sp/>&gt;();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>number_of_uints_covered&lt;<sp/>index<sp/>&gt;();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>number_of_uints_covered&lt;<sp/>DataType<sp/>&gt;()<sp/>*<sp/>coeff_length_;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;</highlight></codeline>
<codeline lineno="288" refid="classnest_1_1_data_secondary_event_1af6a54b0d949686c59430037619a3fd0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1af6a54b0d949686c59430037619a3fd0f" kindref="member">begin</ref>()</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coeffarray_begin_.as_uint;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;</highlight></codeline>
<codeline lineno="294" refid="classnest_1_1_data_secondary_event_1a9a6eb7c7fa472cae253f224a4a8e642b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_data_secondary_event_1a9a6eb7c7fa472cae253f224a4a8e642b" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coeffarray_end_.as_uint;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="classnest_1_1_data_secondary_event_1abb2817c593793852b8063b090dc469d6" refkind="member"><highlight class="normal"><sp/><sp/>DataType<sp/><ref refid="classnest_1_1_data_secondary_event_1abb2817c593793852b8063b090dc469d6" kindref="member">get_coeffvalue</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classnest_1_1_gap_junction_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_gap_junction_event" kindref="compound">GapJunctionEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent</ref>&lt;<sp/>double,<sp/>GapJunctionEvent<sp/>&gt;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310" refid="classnest_1_1_gap_junction_event_1a0f7f591552bce7ecc6ca1404130305d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_gap_junction_event_1a0f7f591552bce7ecc6ca1404130305d2" kindref="member">GapJunctionEvent</ref>()</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_gap_junction_event_1a6ffd954dc3a30a3f0cc58a73787ec368" kindref="member">operator()</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_gap_junction_event" kindref="compound">GapJunctionEvent</ref>*<sp/><ref refid="classnest_1_1_gap_junction_event_1a3e00564c566bf206aa77e2f80001c2a2" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">};</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classnest_1_1_instantaneous_rate_connection_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_instantaneous_rate_connection_event" kindref="compound">InstantaneousRateConnectionEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent</ref>&lt;<sp/>double,<sp/>InstantaneousRateConnectionEvent<sp/>&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326" refid="classnest_1_1_instantaneous_rate_connection_event_1a23601464ded967537d8780d2767fef52" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event_1a23601464ded967537d8780d2767fef52" kindref="member">InstantaneousRateConnectionEvent</ref>()</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event_1a474eee8e70b66474ce69613312467895" kindref="member">operator()</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event" kindref="compound">InstantaneousRateConnectionEvent</ref>*<sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event_1a92d3d351ea9f940a727793eedeac47be" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classnest_1_1_delayed_rate_connection_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_delayed_rate_connection_event" kindref="compound">DelayedRateConnectionEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent</ref>&lt;<sp/>double,<sp/>DelayedRateConnectionEvent<sp/>&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342" refid="classnest_1_1_delayed_rate_connection_event_1ac89e0ce4099c5bb3927787e573c7756d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_delayed_rate_connection_event_1ac89e0ce4099c5bb3927787e573c7756d" kindref="member">DelayedRateConnectionEvent</ref>()</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_delayed_rate_connection_event_1a1eb689558cf6085a58bba77aadab8d1d" kindref="member">operator()</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_delayed_rate_connection_event" kindref="compound">DelayedRateConnectionEvent</ref>*<sp/><ref refid="classnest_1_1_delayed_rate_connection_event_1ab7820172999828da5580eccd6ffddb4b" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classnest_1_1_diffusion_connection_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnest_1_1_diffusion_connection_event" kindref="compound">DiffusionConnectionEvent</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent</ref>&lt;<sp/>double,<sp/>DiffusionConnectionEvent<sp/>&gt;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>drift<sp/>factor<sp/>of<sp/>the<sp/>corresponding<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/>drift_factor_;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>diffusion<sp/>factor<sp/>of<sp/>the<sp/>corresponding<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/>diffusion_factor_;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363" refid="classnest_1_1_diffusion_connection_event_1a5e30b8c34830ec5252cfab2a7551b563" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_diffusion_connection_event_1a5e30b8c34830ec5252cfab2a7551b563" kindref="member">DiffusionConnectionEvent</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_diffusion_connection_event_1aa6b84f5b3136a7131f078c1cfab8a9f5" kindref="member">operator()</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_diffusion_connection_event" kindref="compound">DiffusionConnectionEvent</ref>*<sp/><ref refid="classnest_1_1_diffusion_connection_event_1a2fa10441f1da02e5a977d8b19b4c4eeb" kindref="member">clone</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="classnest_1_1_diffusion_connection_event_1a5924eeb045c9b11aa7a48d42bc7f4567" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_diffusion_connection_event_1a5924eeb045c9b11aa7a48d42bc7f4567" kindref="member">set_diffusion_factor</ref>(<sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="372"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>diffusion_factor_<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="classnest_1_1_diffusion_connection_event_1a89ade076741bc3b5374ff6c078601e7a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnest_1_1_diffusion_connection_event_1a89ade076741bc3b5374ff6c078601e7a" kindref="member">set_drift_factor</ref>(<sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="378"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>drift_factor_<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/><ref refid="classnest_1_1_diffusion_connection_event_1a8bbcb0bfd18fbbb8202001251466b4a8" kindref="member">get_drift_factor</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref><sp/><ref refid="classnest_1_1_diffusion_connection_event_1ae588bce807ad2459d85b9af42ec2b396" kindref="member">get_diffusion_factor</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">};</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sub</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DataType</highlight></codeline>
<codeline lineno="388" refid="classnest_1_1_data_secondary_event_1abb2817c593793852b8063b090dc469d6" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_data_secondary_event_1abb2817c593793852b8063b090dc469d6" kindref="member">DataSecondaryEvent&lt; DataType, Subclass &gt;::get_coeffvalue</ref>(<sp/>std::vector&lt;<sp/>unsigned<sp/>int<sp/>&gt;::iterator&amp;<sp/>pos<sp/>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>DataType<sp/>elem;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="namespacenest_1a97f1da1a1028f8e11e47b2069b5071ae" kindref="member">read_from_comm_buffer</ref>(<sp/>elem,<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sub</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">std::set&lt;<sp/>synindex<sp/>&gt;<sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent&lt; DataType, Subclass &gt;::supported_syn_ids_</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Sub</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>&gt;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_data_secondary_event" kindref="compound">DataSecondaryEvent&lt; DataType, Subclass &gt;::coeff_length_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_gap_junction_event" kindref="compound">GapJunctionEvent</ref>*</highlight></codeline>
<codeline lineno="402" refid="classnest_1_1_gap_junction_event_1a3e00564c566bf206aa77e2f80001c2a2" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_gap_junction_event_1a3e00564c566bf206aa77e2f80001c2a2" kindref="member">GapJunctionEvent::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_gap_junction_event_1a0f7f591552bce7ecc6ca1404130305d2" kindref="member">GapJunctionEvent</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event" kindref="compound">InstantaneousRateConnectionEvent</ref>*</highlight></codeline>
<codeline lineno="408" refid="classnest_1_1_instantaneous_rate_connection_event_1a92d3d351ea9f940a727793eedeac47be" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_instantaneous_rate_connection_event_1a92d3d351ea9f940a727793eedeac47be" kindref="member">InstantaneousRateConnectionEvent::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="409"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_instantaneous_rate_connection_event_1a23601464ded967537d8780d2767fef52" kindref="member">InstantaneousRateConnectionEvent</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_delayed_rate_connection_event" kindref="compound">DelayedRateConnectionEvent</ref>*</highlight></codeline>
<codeline lineno="414" refid="classnest_1_1_delayed_rate_connection_event_1ab7820172999828da5580eccd6ffddb4b" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_delayed_rate_connection_event_1ab7820172999828da5580eccd6ffddb4b" kindref="member">DelayedRateConnectionEvent::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_delayed_rate_connection_event_1ac89e0ce4099c5bb3927787e573c7756d" kindref="member">DelayedRateConnectionEvent</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_diffusion_connection_event" kindref="compound">DiffusionConnectionEvent</ref>*</highlight></codeline>
<codeline lineno="420" refid="classnest_1_1_diffusion_connection_event_1a2fa10441f1da02e5a977d8b19b4c4eeb" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_diffusion_connection_event_1a2fa10441f1da02e5a977d8b19b4c4eeb" kindref="member">DiffusionConnectionEvent::clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classnest_1_1_diffusion_connection_event_1a5e30b8c34830ec5252cfab2a7551b563" kindref="member">DiffusionConnectionEvent</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref></highlight></codeline>
<codeline lineno="426" refid="classnest_1_1_diffusion_connection_event_1a8bbcb0bfd18fbbb8202001251466b4a8" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_diffusion_connection_event_1a8bbcb0bfd18fbbb8202001251466b4a8" kindref="member">DiffusionConnectionEvent::get_drift_factor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>drift_factor_;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1aa26400f4ac119288a43af512d0ec5a0d" kindref="member">weight</ref></highlight></codeline>
<codeline lineno="432" refid="classnest_1_1_diffusion_connection_event_1ae588bce807ad2459d85b9af42ec2b396" refkind="member"><highlight class="normal"><ref refid="classnest_1_1_diffusion_connection_event_1ae588bce807ad2459d85b9af42ec2b396" kindref="member">DiffusionConnectionEvent::get_diffusion_factor</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diffusion_factor_;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#ifndef<sp/>SECONDARY_EVENT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="nestkernel/secondary_event.h"/>
  </compounddef>
</doxygen>
