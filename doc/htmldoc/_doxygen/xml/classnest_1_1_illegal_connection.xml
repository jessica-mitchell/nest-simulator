<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_illegal_connection" kind="class" language="C++" prot="public">
    <compoundname>nest::IllegalConnection</compoundname>
    <basecompoundref refid="classnest_1_1_kernel_exception" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_illegal_connection_1a89ff3aa4eb0c64cdaa895ba03f24a6f4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::IllegalConnection::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/exceptions.h" line="445" column="15" bodyfile="nestkernel/exceptions.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_illegal_connection_1a450b80d31521c1124e44915a21e64abb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::IllegalConnection::IllegalConnection</definition>
        <argsstring>()</argsstring>
        <name>IllegalConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/exceptions.h" line="426" column="3" bodyfile="nestkernel/exceptions.h" bodystart="426" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_illegal_connection_1afa2b8fecae4e9edde608c40904d141ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::IllegalConnection::IllegalConnection</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>IllegalConnection</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/exceptions.h" line="432" column="3" bodyfile="nestkernel/exceptions.h" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_illegal_connection_1a214d065145abb06e0cefb65366d273df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::IllegalConnection::~IllegalConnection</definition>
        <argsstring>() override</argsstring>
        <name>~IllegalConnection</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/exceptions.h" line="438" column="3" bodyfile="nestkernel/exceptions.h" bodystart="438" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_illegal_connection_1adfcc55c9658b07aea2a22c80fcc6c343" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::IllegalConnection::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/exceptions.h" line="442" column="15" bodyfile="nestkernel/exceptions.cpp" bodystart="183" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>To be thrown if a connection is not possible. This exception is e.g. thrown if a connection was attempted with an unsupported <ref refid="classnest_1_1_event" kindref="compound">Event</ref> type. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::IllegalConnection</label>
        <link refid="classnest_1_1_illegal_connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1_kernel_exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::IllegalConnection</label>
        <link refid="classnest_1_1_illegal_connection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1_kernel_exception"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/exceptions.h" line="423" column="1" bodyfile="nestkernel/exceptions.h" bodystart="424" bodyend="446"/>
    <listofallmembers>
      <member refid="classnest_1_1_illegal_connection_1a450b80d31521c1124e44915a21e64abb" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>IllegalConnection</name></member>
      <member refid="classnest_1_1_illegal_connection_1afa2b8fecae4e9edde608c40904d141ed" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>IllegalConnection</name></member>
      <member refid="classnest_1_1_kernel_exception_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>KernelException</name></member>
      <member refid="classnest_1_1_kernel_exception_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>KernelException</name></member>
      <member refid="classnest_1_1_kernel_exception_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>KernelException</name></member>
      <member refid="classnest_1_1_illegal_connection_1adfcc55c9658b07aea2a22c80fcc6c343" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>message</name></member>
      <member refid="classnest_1_1_illegal_connection_1a89ff3aa4eb0c64cdaa895ba03f24a6f4" prot="private" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>msg_</name></member>
      <member refid="classnest_1_1_illegal_connection_1a214d065145abb06e0cefb65366d273df" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>~IllegalConnection</name></member>
      <member refid="classnest_1_1_kernel_exception_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::IllegalConnection</scope><name>~KernelException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
