<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1NodeCollectionComposite" kind="class" language="C++" prot="public">
    <compoundname>nest::NodeCollectionComposite</compoundname>
    <basecompoundref refid="classnest_1_1NodeCollection" prot="public" virt="non-virtual">nest::NodeCollection</basecompoundref>
    <includes refid="node__collection_8h" local="no">node_collection.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1NodeCollectionComposite_1af51984c097badaedaf49424fd9bf9653" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class nc_const_iterator</definition>
        <argsstring></argsstring>
        <name>nc_const_iterator</name>
        <qualifiedname>nest::NodeCollectionComposite::nc_const_iterator</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1nc__const__iterator" kindref="compound">nc_const_iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="524" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref> &gt;</type>
        <definition>std::vector&lt; NodeCollectionPrimitive &gt; nest::NodeCollectionComposite::parts_</definition>
        <argsstring></argsstring>
        <name>parts_</name>
        <qualifiedname>nest::NodeCollectionComposite::parts_</qualifiedname>
        <briefdescription>
<para>Vector of primitives. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="527" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="527" bodyend="-1"/>
        <referencedby refid="classnest_1_1nc__const__iterator_1a9eeb7b86dc05b4280acf6e29bc2af306" compoundref="node__collection_8cpp" startline="96" endline="126">nest::nc_const_iterator::composite_update_indices_</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ab15dcd28e57637c600ea7fd568876c3c" compoundref="node__collection_8h" startline="961" endline="964">get_metadata</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a74861480c52ee29bd5ceceac750affff" compoundref="node__collection_8cpp" startline="985" endline="989">has_proxies</referencedby>
        <referencedby refid="classnest_1_1nc__const__iterator_1ad4a0991d2234c80f72834153ff7639b2" compoundref="node__collection_8cpp" startline="73" endline="93">nest::nc_const_iterator::nc_const_iterator</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1adfbf2ac5d4518b3c16f29e9149f95acb" compoundref="node__collection_8cpp" startline="537" endline="552">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1nc__const__iterator_1a4e6c5c727d55c7197afe2e8ce5b60f77" compoundref="node__collection_8h" startline="638" endline="690">nest::nc_const_iterator::operator*</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad747aad8ec312607e4bc8782ca539fa2" compoundref="node__collection_8h" startline="899" endline="918">operator==</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ab3c51ceb184c802ea79817513067aabb" compoundref="node__collection_8h" startline="952" endline="958">set_metadata</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <qualifiedname>nest::NodeCollectionComposite::size_</qualifiedname>
        <briefdescription>
<para>Total number of node IDs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="528" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="528" bodyend="-1"/>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1afdfdc4501591bd917549747cfa56b9d9" compoundref="node__collection_8cpp" startline="565" endline="590">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad747aad8ec312607e4bc8782ca539fa2" compoundref="node__collection_8h" startline="899" endline="918">operator==</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::step_</definition>
        <argsstring></argsstring>
        <name>step_</name>
        <qualifiedname>nest::NodeCollectionComposite::step_</qualifiedname>
        <briefdescription>
<para>Step length, set when slicing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="529" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="529" bodyend="-1"/>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" compoundref="node__collection_8cpp" startline="767" endline="791">local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" compoundref="node__collection_8cpp" startline="794" endline="819">MPI_local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a486a189ff78ec7e4c3333bb3bb408006" compoundref="node__collection_8h" startline="946" endline="949">step</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::start_part_</definition>
        <argsstring></argsstring>
        <name>start_part_</name>
        <qualifiedname>nest::NodeCollectionComposite::start_part_</qualifiedname>
        <briefdescription>
<para>Primitive to start at, set when slicing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="530" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="530" bodyend="-1"/>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" compoundref="node__collection_8cpp" startline="767" endline="791">local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" compoundref="node__collection_8cpp" startline="794" endline="819">MPI_local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::start_offset_</definition>
        <argsstring></argsstring>
        <name>start_offset_</name>
        <qualifiedname>nest::NodeCollectionComposite::start_offset_</qualifiedname>
        <briefdescription>
<para>Element to start at, set when slicing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="531" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="531" bodyend="-1"/>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" compoundref="node__collection_8cpp" startline="767" endline="791">local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" compoundref="node__collection_8cpp" startline="794" endline="819">MPI_local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::end_part_</definition>
        <argsstring></argsstring>
        <name>end_part_</name>
        <qualifiedname>nest::NodeCollectionComposite::end_part_</qualifiedname>
        <briefdescription>
<para>Primitive or one past the primitive to end at, set when slicing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="532" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="532" bodyend="-1"/>
        <referencedby refid="classnest_1_1nc__const__iterator_1a9eeb7b86dc05b4280acf6e29bc2af306" compoundref="node__collection_8cpp" startline="96" endline="126">nest::nc_const_iterator::composite_update_indices_</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1nc__const__iterator_1a4e6c5c727d55c7197afe2e8ce5b60f77" compoundref="node__collection_8h" startline="638" endline="690">nest::nc_const_iterator::operator*</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::end_offset_</definition>
        <argsstring></argsstring>
        <name>end_offset_</name>
        <qualifiedname>nest::NodeCollectionComposite::end_offset_</qualifiedname>
        <briefdescription>
<para>One past the element to end at, set when slicing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="533" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="533" bodyend="-1"/>
        <referencedby refid="classnest_1_1nc__const__iterator_1a9eeb7b86dc05b4280acf6e29bc2af306" compoundref="node__collection_8cpp" startline="96" endline="126">nest::nc_const_iterator::composite_update_indices_</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1nc__const__iterator_1a4e6c5c727d55c7197afe2e8ce5b60f77" compoundref="node__collection_8h" startline="638" endline="690">nest::nc_const_iterator::operator*</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a3975bbd78253a4b3949a18546c855e2a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::NodeCollectionComposite::merge_parts</definition>
        <argsstring>(std::vector&lt; NodeCollectionPrimitive &gt; &amp;parts) const</argsstring>
        <name>merge_parts</name>
        <qualifiedname>nest::NodeCollectionComposite::merge_parts</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref> &gt; &amp;</type>
          <declname>parts</declname>
        </param>
        <briefdescription>
<para>Goes through the vector of primitives, merging as much as possible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parts</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of primitives to be merged. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="540" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="862" bodyend="886"/>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1adfbf2ac5d4518b3c16f29e9149f95acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::NodeCollectionComposite::NodeCollectionComposite</definition>
        <argsstring>(const NodeCollectionPrimitive &amp;, size_t, size_t, size_t)</argsstring>
        <name>NodeCollectionComposite</name>
        <qualifiedname>nest::NodeCollectionComposite::NodeCollectionComposite</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref> &amp;</type>
          <defname>primitive</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>start</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>end</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>step</defname>
        </param>
        <briefdescription>
<para>Create a composite from a primitive, with boundaries and step length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>primitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Primitive to be converted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in the primitive to begin at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in the primitive, one past the node to end at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>Length to step in the primitive. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="551" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="537" bodyend="552"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a397815257c20061cd31edfac16a3ce99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::NodeCollectionComposite::NodeCollectionComposite</definition>
        <argsstring>(const NodeCollectionComposite &amp;)</argsstring>
        <name>NodeCollectionComposite</name>
        <qualifiedname>nest::NodeCollectionComposite::NodeCollectionComposite</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1NodeCollectionComposite" kindref="compound">NodeCollectionComposite</ref> &amp;</type>
          <defname>comp</defname>
        </param>
        <briefdescription>
<para>Composite copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para>Composite to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="558" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="554" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::NodeCollectionComposite::NodeCollectionComposite</definition>
        <argsstring>(const NodeCollectionComposite &amp;, size_t, size_t, size_t)</argsstring>
        <name>NodeCollectionComposite</name>
        <qualifiedname>nest::NodeCollectionComposite::NodeCollectionComposite</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1NodeCollectionComposite" kindref="compound">NodeCollectionComposite</ref> &amp;</type>
          <defname>composite</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>start</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>end</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>step</defname>
        </param>
        <briefdescription>
<para>Creates a new composite from another, with boundaries and step length. </para>
        </briefdescription>
        <detaileddescription>
<para>This constructor is used only when slicing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>composite</parametername>
</parameternamelist>
<parameterdescription>
<para>Composite to slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the composite to begin at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the composite one past the node to end at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>Length to step in the composite. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="569" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="592" bodyend="648"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1nc__const__iterator_1a894a5de6768ab2e64ef51ec7ff1b200f" compoundref="node__collection_8h" startline="747" endline="751">nest::nc_const_iterator::get_current_part_offset</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" compoundref="node__collection_8h" startline="528">size_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1afdfdc4501591bd917549747cfa56b9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::NodeCollectionComposite::NodeCollectionComposite</definition>
        <argsstring>(const std::vector&lt; NodeCollectionPrimitive &gt; &amp;)</argsstring>
        <name>NodeCollectionComposite</name>
        <qualifiedname>nest::NodeCollectionComposite::NodeCollectionComposite</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref> &gt; &amp;</type>
          <defname>parts</defname>
        </param>
        <briefdescription>
<para>Create a composite from a vector of primitives. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parts</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of primitives. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="576" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="565" bodyend="590"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="namespacenest_1a6e284cd8809e0b35d66727f2b8880680">nest::primitiveSort</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" compoundref="node__collection_8h" startline="528">size_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::NodeCollectionComposite::print_me</definition>
        <argsstring>(std::ostream &amp;) const override</argsstring>
        <name>print_me</name>
        <qualifiedname>nest::NodeCollectionComposite::print_me</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ac51897b80c4fda2ef7326457c891936b">print_me</reimplements>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
<para>Print out the contents of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> in a pretty and informative way. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="578" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="992" bodyend="1086"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1Model_1a44497c5d485772c2c527fbc2cac1bfdd" compoundref="model_8h" startline="254" endline="257">nest::Model::get_name</references>
        <references refid="classnest_1_1ModelManager_1a8058f85d46bd4af4c2f726be59aa269b" compoundref="model__manager_8h" startline="286" endline="290">nest::ModelManager::get_node_model</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1NodeIDTriple_1a890f806916886ba009958e02dd081b87" compoundref="node__collection_8h" startline="80">nest::NodeIDTriple::model_id</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1NodeIDTriple_1ac783113c4714d40b0ba050ebd6ae48c8" compoundref="node__collection_8h" startline="79">nest::NodeIDTriple::node_id</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::NodeCollectionComposite::operator[]</definition>
        <argsstring>(const size_t) const override</argsstring>
        <name>operator[]</name>
        <qualifiedname>nest::NodeCollectionComposite::operator[]</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a502cfba765cec504e14d04ef66704b78">operator[]</reimplements>
        <param>
          <type>const</type>
        </param>
        <briefdescription>
<para>Get the node ID in the specified index in the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a node ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="580" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="869" bodyend="895"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        <definition>NodeCollectionPTR nest::NodeCollectionComposite::operator+</definition>
        <argsstring>(NodeCollectionPTR rhs) const override</argsstring>
        <name>operator+</name>
        <qualifiedname>nest::NodeCollectionComposite::operator+</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ae01887046fa8cc3f3a99c55f4bd4f602">operator+</reimplements>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Addition operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Joins this composite with another <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. The resulting <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> is sorted and merged, and converted to a primitive if possible.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> to add to this composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> pointer to either a primitive or a composite. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="592" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="651" bodyend="733"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1ab15dcd28e57637c600ea7fd568876c3c" compoundref="node__collection_8h" startline="961" endline="964">get_metadata</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a3975bbd78253a4b3949a18546c855e2a" compoundref="node__collection_8cpp" startline="862" endline="886">merge_parts</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="namespacenest_1a6e284cd8809e0b35d66727f2b8880680">nest::primitiveSort</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <references refid="classnest_1_1NodeCollection_1adb932309733fdb13dc14c6fa82ec6f7c" compoundref="node__collection_8cpp" startline="266" endline="269">nest::NodeCollection::valid</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a2f23fd18dffa2ab06dfbbf728b0dc26a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        <definition>NodeCollectionPTR nest::NodeCollectionComposite::operator+</definition>
        <argsstring>(const NodeCollectionPrimitive &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>nest::NodeCollectionComposite::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1NodeCollectionPrimitive" kindref="compound">NodeCollectionPrimitive</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="593" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="736" bodyend="764"/>
        <references refid="classnest_1_1NodeCollectionPrimitive_1a0326b6ac03236ebc06bb87a88c921399" compoundref="node__collection_8h" startline="832" endline="835">nest::NodeCollectionPrimitive::get_metadata</references>
        <references refid="classnest_1_1NodeCollectionComposite_1ab15dcd28e57637c600ea7fd568876c3c" compoundref="node__collection_8h" startline="961" endline="964">get_metadata</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a3975bbd78253a4b3949a18546c855e2a" compoundref="node__collection_8cpp" startline="862" endline="886">merge_parts</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="namespacenest_1a6e284cd8809e0b35d66727f2b8880680">nest::primitiveSort</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ad747aad8ec312607e4bc8782ca539fa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::NodeCollectionComposite::operator==</definition>
        <argsstring>(const NodeCollectionPTR rhs) const override</argsstring>
        <name>operator==</name>
        <qualifiedname>nest::NodeCollectionComposite::operator==</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1afeb48bca3d5a550bb9a299c91d9b8631">operator==</reimplements>
        <param>
          <type>const <ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="594" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="899" bodyend="918"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" compoundref="node__collection_8h" startline="528">size_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1NodeCollection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">const_iterator</ref></type>
        <definition>NodeCollectionComposite::const_iterator nest::NodeCollectionComposite::begin</definition>
        <argsstring>(NodeCollectionPTR=NodeCollectionPTR(nullptr)) const override</argsstring>
        <name>begin</name>
        <qualifiedname>nest::NodeCollectionComposite::begin</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1abf07fcbde67213640c5483c4a403f98c">begin</reimplements>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defval><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref>(nullptr)</defval>
        </param>
        <briefdescription>
<para>Method to get an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="596" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="921" bodyend="924"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" compoundref="node__collection_8h" startline="869" endline="895">operator[]</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a35c866c0e2eb4bf0d8475f99de17c773" compoundref="node__collection_8cpp" startline="822" endline="831">to_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1NodeCollection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">const_iterator</ref></type>
        <definition>NodeCollectionComposite::const_iterator nest::NodeCollectionComposite::local_begin</definition>
        <argsstring>(NodeCollectionPTR=NodeCollectionPTR(nullptr)) const override</argsstring>
        <name>local_begin</name>
        <qualifiedname>nest::NodeCollectionComposite::local_begin</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ad90668fbeaefd6e8776586d30b4e42aa">local_begin</reimplements>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defval><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref>(nullptr)</defval>
        </param>
        <briefdescription>
<para>Method to get an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>, in a parallel context. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="597" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="767" bodyend="791"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1nc__const__iterator_1a894a5de6768ab2e64ef51ec7ff1b200f" compoundref="node__collection_8h" startline="747" endline="751">nest::nc_const_iterator::get_current_part_offset</references>
        <references refid="classnest_1_1VPManager_1a8ddd2beb1aea2c9385b93ad4b842a2cb" compoundref="vp__manager__impl_8h" startline="55" endline="58">nest::VPManager::get_num_virtual_processes</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a847b957940c17b0a9c912facf1996f3c" compoundref="vp__manager__impl_8h" startline="43" endline="46">nest::VPManager::node_id_to_vp</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <references refid="classnest_1_1VPManager_1aa3d11af1445df6d186a4be6a5bbd5b3f" compoundref="vp__manager__impl_8h" startline="67" endline="70">nest::VPManager::thread_to_vp</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1NodeCollection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">const_iterator</ref></type>
        <definition>NodeCollectionComposite::const_iterator nest::NodeCollectionComposite::MPI_local_begin</definition>
        <argsstring>(NodeCollectionPTR=NodeCollectionPTR(nullptr)) const override</argsstring>
        <name>MPI_local_begin</name>
        <qualifiedname>nest::NodeCollectionComposite::MPI_local_begin</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1abf47c514428fa0f84689504753210dac">MPI_local_begin</reimplements>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defval><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref>(nullptr)</defval>
        </param>
        <briefdescription>
<para>Method to get an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an iterator representing the beginning of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>, in an MPI-parallel context. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="598" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="794" bodyend="819"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1nc__const__iterator_1a894a5de6768ab2e64ef51ec7ff1b200f" compoundref="node__collection_8h" startline="747" endline="751">nest::nc_const_iterator::get_current_part_offset</references>
        <references refid="classnest_1_1MPIManager_1a496c51140dd2f76db937357bb70ac565" compoundref="mpi__manager_8h" startline="513" endline="516">nest::MPIManager::get_num_processes</references>
        <references refid="classnest_1_1MPIManager_1a1fbad26739451a698618a1407b85124f" compoundref="mpi__manager__impl_8h" startline="39" endline="42">nest::MPIManager::get_process_id_of_vp</references>
        <references refid="classnest_1_1MPIManager_1a6fa640ce78eda75f8304879ff396ab78" compoundref="mpi__manager_8h" startline="525" endline="528">nest::MPIManager::get_rank</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1NodeCollection_1a5d04609b236213bac6efa5372a5cbb42" kindref="member">const_iterator</ref></type>
        <definition>NodeCollectionComposite::const_iterator nest::NodeCollectionComposite::end</definition>
        <argsstring>(NodeCollectionPTR=NodeCollectionPTR(nullptr)) const override</argsstring>
        <name>end</name>
        <qualifiedname>nest::NodeCollectionComposite::end</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a51eca62c54656ff2734d6cb5a0e483b5">end</reimplements>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defval><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref>(nullptr)</defval>
        </param>
        <briefdescription>
<para>Method to get an iterator representing the end of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of element NC that iterator points to</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an iterator representing the end of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>, taking offset into account </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="599" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="927" bodyend="937"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <referencedby refid="classnest_1_1nc__const__iterator_1a9eeb7b86dc05b4280acf6e29bc2af306" compoundref="node__collection_8cpp" startline="96" endline="126">nest::nc_const_iterator::composite_update_indices_</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" compoundref="node__collection_8cpp" startline="767" endline="791">local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" compoundref="node__collection_8cpp" startline="794" endline="819">MPI_local_begin</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" compoundref="node__collection_8cpp" startline="992" endline="1086">print_me</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a3ce7324e418545024e0437812491205e" compoundref="node__collection_8cpp" startline="834" endline="859">slice</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a35c866c0e2eb4bf0d8475f99de17c773" compoundref="node__collection_8cpp" startline="822" endline="831">to_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a35c866c0e2eb4bf0d8475f99de17c773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref></type>
        <definition>ArrayDatum nest::NodeCollectionComposite::to_array</definition>
        <argsstring>() const override</argsstring>
        <name>to_array</name>
        <qualifiedname>nest::NodeCollectionComposite::to_array</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a679f6c266ee4ecd5d1ccddec3fbe1a74">to_array</reimplements>
        <briefdescription>
<para>Returns an ArrayDatum filled with node IDs from the composite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="602" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="822" bodyend="831"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>nest::NodeCollectionComposite::size</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ae03394582431b592a1329009113d5d51">size</reimplements>
        <briefdescription>
<para>Returns total number of node IDs in the composite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="605" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="940" bodyend="943"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" compoundref="node__collection_8h" startline="528">size_</references>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" compoundref="node__collection_8cpp" startline="889" endline="936">contains</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" compoundref="node__collection_8cpp" startline="939" endline="982">find</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" compoundref="node__collection_8cpp" startline="592" endline="648">NodeCollectionComposite</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a3ce7324e418545024e0437812491205e" compoundref="node__collection_8cpp" startline="834" endline="859">slice</referencedby>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a35c866c0e2eb4bf0d8475f99de17c773" compoundref="node__collection_8cpp" startline="822" endline="831">to_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a486a189ff78ec7e4c3333bb3bb408006" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t nest::NodeCollectionComposite::step</definition>
        <argsstring>() const override</argsstring>
        <name>step</name>
        <qualifiedname>nest::NodeCollectionComposite::step</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a0667870543f9c93d54bf38074e508889">step</reimplements>
        <briefdescription>
<para>Returns the step between node IDs in the composite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="608" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="946" bodyend="949"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a3ce7324e418545024e0437812491205e" compoundref="node__collection_8cpp" startline="834" endline="859">slice</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::NodeCollectionComposite::contains</definition>
        <argsstring>(index node_id) const override</argsstring>
        <name>contains</name>
        <qualifiedname>nest::NodeCollectionComposite::contains</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ad7635ed62df3bfaf654211b7e8f677f0">contains</reimplements>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
<para>Check if the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> contains a specified node ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node ID to see if exists in the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> contains the node ID, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="610" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="889" bodyend="936"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a3ce7324e418545024e0437812491205e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
        <definition>NodeCollectionPTR nest::NodeCollectionComposite::slice</definition>
        <argsstring>(size_t start, size_t end, size_t step=1) const override</argsstring>
        <name>slice</name>
        <qualifiedname>nest::NodeCollectionComposite::slice</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a5fea3ad07ecd7ee522ba789b50862eb7">slice</reimplements>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>step</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Slices the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> to the boundaries, with an optional step parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the boundaries being specified are inclusive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> to start at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>One past the index of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> to stop at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of places between node IDs to skip. Defaults to 1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> pointer to the new, sliced <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="611" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="834" bodyend="859"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a486a189ff78ec7e4c3333bb3bb408006" compoundref="node__collection_8h" startline="946" endline="949">step</references>
        <references refid="classnest_1_1NodeCollection_1adb932309733fdb13dc14c6fa82ec6f7c" compoundref="node__collection_8cpp" startline="266" endline="269">nest::NodeCollection::valid</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ab3c51ceb184c802ea79817513067aabb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::NodeCollectionComposite::set_metadata</definition>
        <argsstring>(NodeCollectionMetadataPTR) override</argsstring>
        <name>set_metadata</name>
        <qualifiedname>nest::NodeCollectionComposite::set_metadata</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a64459a3e2385a9203abd33ccb3929c0f">set_metadata</reimplements>
        <param>
          <type><ref refid="namespacenest_1a79929df00838099cddde8593fcbd9efe" kindref="member">NodeCollectionMetadataPTR</ref></type>
        </param>
        <briefdescription>
<para>Sets the metadata of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>meta</parametername>
</parameternamelist>
<parameterdescription>
<para>A Metadata pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="613" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="952" bodyend="958"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ab15dcd28e57637c600ea7fd568876c3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a79929df00838099cddde8593fcbd9efe" kindref="member">NodeCollectionMetadataPTR</ref></type>
        <definition>NodeCollectionMetadataPTR nest::NodeCollectionComposite::get_metadata</definition>
        <argsstring>() const override</argsstring>
        <name>get_metadata</name>
        <qualifiedname>nest::NodeCollectionComposite::get_metadata</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1aba46b54dcc6a61e6357d3978d463c6a1">get_metadata</reimplements>
        <briefdescription>
<para>Gets the metadata of the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Metadata pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="615" column="29" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="961" bodyend="964"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <referencedby refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" compoundref="node__collection_8cpp" startline="651" endline="733">operator+</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ac9fcd9713904687bb55f0aa04d3191c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::NodeCollectionComposite::is_range</definition>
        <argsstring>() const override</argsstring>
        <name>is_range</name>
        <qualifiedname>nest::NodeCollectionComposite::is_range</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a15053e02c1951f76f797730666861d35">is_range</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="617" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="967" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1ab1c447e6c0c8004ec1b3e4564d5dd7df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::NodeCollectionComposite::empty</definition>
        <argsstring>() const override</argsstring>
        <name>empty</name>
        <qualifiedname>nest::NodeCollectionComposite::empty</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1a6ceaf7ec37849ef7652b1268b5c84ef8">empty</reimplements>
        <briefdescription>
<para>Checks if the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> has no elements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> is empty, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="618" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="973" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long nest::NodeCollectionComposite::find</definition>
        <argsstring>(const index) const override</argsstring>
        <name>find</name>
        <qualifiedname>nest::NodeCollectionComposite::find</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1ae829046948e5618f4d39ace2873be0be">find</reimplements>
        <param>
          <type>const</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns index of node with given node ID in <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Index of node with given node ID; -1 if node not in <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="620" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="939" bodyend="982"/>
        <references refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" compoundref="node__collection_8h" startline="921" endline="924">begin</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" compoundref="node__collection_8h" startline="927" endline="937">end</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" compoundref="node__collection_8h" startline="533">end_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" compoundref="node__collection_8h" startline="532">end_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" compoundref="node__collection_8h" startline="940" endline="943">size</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" compoundref="node__collection_8h" startline="531">start_offset_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" compoundref="node__collection_8h" startline="530">start_part_</references>
        <references refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" compoundref="node__collection_8h" startline="529">step_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1NodeCollectionComposite_1a74861480c52ee29bd5ceceac750affff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool nest::NodeCollectionComposite::has_proxies</definition>
        <argsstring>() const override</argsstring>
        <name>has_proxies</name>
        <qualifiedname>nest::NodeCollectionComposite::has_proxies</qualifiedname>
        <reimplements refid="classnest_1_1NodeCollection_1addfa5a2ab61eef2d38e4783ff6c8d285">has_proxies</reimplements>
        <briefdescription>
<para>Returns whether the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> contains any nodes with proxies or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if any nodes in the <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> has proxies, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="622" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.cpp" bodystart="985" bodyend="989"/>
        <references refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" compoundref="node__collection_8h" startline="527">parts_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Subclass for the composite <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> type. </para>
    </briefdescription>
    <detaileddescription>
<para>The composite type contains a collection of primitives which are not contiguous and homogeneous with each other. If the composite is sliced, it also holds information about what index to start at, one past the index to end at, and the step. The endpoint is one past the last valid node. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::NodeCollection</label>
        <link refid="classnest_1_1NodeCollection"/>
      </node>
      <node id="1">
        <label>nest::NodeCollectionComposite</label>
        <link refid="classnest_1_1NodeCollectionComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::NodeCollection</label>
        <link refid="classnest_1_1NodeCollection"/>
      </node>
      <node id="1">
        <label>nest::NodeCollectionComposite</label>
        <link refid="classnest_1_1NodeCollectionComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" line="522" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/node_collection.h" bodystart="523" bodyend="623"/>
    <listofallmembers>
      <member refid="classnest_1_1NodeCollectionComposite_1a21cb441d1685b69d7f2f568aeaca5b6e" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>begin</name></member>
      <member refid="classnest_1_1NodeCollection_1a5d04609b236213bac6efa5372a5cbb42" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>const_iterator</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ad08329abe6aeacfc00c42c0408cdfc3f" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>contains</name></member>
      <member refid="classnest_1_1NodeCollection_1a932abae77aca0346af2c5a3981d4e16e" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create</name></member>
      <member refid="classnest_1_1NodeCollection_1ac4160a17e0e0fdc38db8c477cf59bbfe" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create</name></member>
      <member refid="classnest_1_1NodeCollection_1a400fc4f9da79150c3d902d1d045d95d6" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create</name></member>
      <member refid="classnest_1_1NodeCollection_1af981dda792f7a447b5b49e6a8ad90d2c" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create</name></member>
      <member refid="classnest_1_1NodeCollection_1a003b11f18919e0bd64cde5fc746ad371" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create_</name></member>
      <member refid="classnest_1_1NodeCollection_1a2db8eb2c7ad39de9852f1bf563328a76" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>create_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ab1c447e6c0c8004ec1b3e4564d5dd7df" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>empty</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a1a07c19cccfdb8622b54557b899ff8df" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>end</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a50e78dfd559464289a34cbb0b461725f" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>end_offset_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a8c178dcf21d205e6ace114a5753565b2" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>end_part_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a032a030306e6d1f4e06107fbecefdd9f" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>find</name></member>
      <member refid="classnest_1_1NodeCollection_1ab5d5b3687f26500ad6106d4d4eeba15a" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>fingerprint_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ab15dcd28e57637c600ea7fd568876c3c" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>get_metadata</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a74861480c52ee29bd5ceceac750affff" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ac9fcd9713904687bb55f0aa04d3191c3" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>is_range</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a0833458d4219b876ba8809d621f9f704" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>local_begin</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a3975bbd78253a4b3949a18546c855e2a" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>merge_parts</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a4808e92924f8a202414f78ce5c9d603d" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>MPI_local_begin</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1af51984c097badaedaf49424fd9bf9653" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>nc_const_iterator</name></member>
      <member refid="classnest_1_1NodeCollection_1ae29b034a0d1cda526d76b352dc5be027" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>NodeCollection</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1adfbf2ac5d4518b3c16f29e9149f95acb" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>NodeCollectionComposite</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a397815257c20061cd31edfac16a3ce99" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>NodeCollectionComposite</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a7a8f575dedc5858d43ebea513aadb5f4" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>NodeCollectionComposite</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1afdfdc4501591bd917549747cfa56b9d9" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>NodeCollectionComposite</name></member>
      <member refid="classnest_1_1NodeCollection_1ab20b171713e27f9b7429e09db6f0e7a5" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>operator!=</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a389b48eccc1d773cb1240987ce97f799" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>operator+</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a2f23fd18dffa2ab06dfbbf728b0dc26a" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>operator+</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ad747aad8ec312607e4bc8782ca539fa2" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>operator==</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a23c22481f80229c80d18daa5d6cf4e9f" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>operator[]</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1aceb770ed4b1fea6ca40c9a006235b551" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>parts_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a0e3adf6b5bc35aa1ce5331c23b6f0b1c" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>print_me</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1ab3c51ceb184c802ea79817513067aabb" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>set_metadata</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a1e260655d6d01212c82ce9dbe3389d8d" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>size</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a665397b0cb3f84cb6a5da4760deeabb1" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>size_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a3ce7324e418545024e0437812491205e" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>slice</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a5fa580e2807ffc4d23be51f880cf3687" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>start_offset_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a6f21e6d36b3289b547df54833397d527" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>start_part_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a486a189ff78ec7e4c3333bb3bb408006" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>step</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a0b2eea28a77662de01bfc2c227578315" prot="private" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>step_</name></member>
      <member refid="classnest_1_1NodeCollectionComposite_1a35c866c0e2eb4bf0d8475f99de17c773" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>to_array</name></member>
      <member refid="classnest_1_1NodeCollection_1adb932309733fdb13dc14c6fa82ec6f7c" prot="public" virt="non-virtual"><scope>nest::NodeCollectionComposite</scope><name>valid</name></member>
      <member refid="classnest_1_1NodeCollection_1ad2fd7c36b215859c8d6fb1717f5bebd9" prot="public" virt="virtual"><scope>nest::NodeCollectionComposite</scope><name>~NodeCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
