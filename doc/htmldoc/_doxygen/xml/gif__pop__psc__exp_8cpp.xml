<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="gif__pop__psc__exp_8cpp" kind="file" language="C++">
    <compoundname>gif_pop_psc_exp.cpp</compoundname>
    <includes refid="gif__pop__psc__exp_8h" local="yes">gif_pop_psc_exp.h</includes>
    <includes local="yes">compose.hpp</includes>
    <includes refid="universal__data__logger__impl_8h" local="yes">universal_data_logger_impl.h</includes>
    <includes refid="dict__util_8h" local="yes">dict_util.h</includes>
    <incdepgraph>
      <node id="76">
        <label>list</label>
      </node>
      <node id="127">
        <label>namedatum.h</label>
      </node>
      <node id="2">
        <label>gif_pop_psc_exp.h</label>
        <link refid="gif__pop__psc__exp_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>genericmodel.h</label>
        <link refid="genericmodel_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>target_table_devices.h</label>
        <link refid="target__table__devices_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="42">
        <label>ntree.h</label>
        <link refid="ntree_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>random_generators.h</label>
        <link refid="random__generators_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>arraydatum.h</label>
      </node>
      <node id="27">
        <label>nest_types.h</label>
        <link refid="nest__types_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>mpi_manager_impl.h</label>
        <link refid="mpi__manager__impl_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>model_manager.h</label>
        <link refid="model__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>connection_manager.h</label>
        <link refid="connection__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>gif_pop_psc_exp.cpp</label>
        <link refid="gif__pop__psc__exp_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>universal_data_logger.h</label>
        <link refid="universal__data__logger_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>per_thread_bool_indicator.h</label>
        <link refid="per__thread__bool__indicator_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>source_table.h</label>
        <link refid="source__table_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>stdint.h</label>
      </node>
      <node id="52">
        <label>nest_names.h</label>
        <link refid="nest__names_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>deprecation_warning.h</label>
        <link refid="deprecation__warning_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>stimulation_backend.h</label>
        <link refid="stimulation__backend_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>music_manager.h</label>
        <link refid="music__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>source_table_position.h</label>
        <link refid="source__table__position_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dictutils.h</label>
      </node>
      <node id="12">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>vp_manager.h</label>
        <link refid="vp__manager_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="46">
        <label>position.h</label>
        <link refid="position_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>stdexcept</label>
      </node>
      <node id="97">
        <label>numeric</label>
      </node>
      <node id="17">
        <label>exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="129">
        <label>dict_util.h</label>
        <link refid="dict__util_8h"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>map</label>
      </node>
      <node id="124">
        <label>growth_curve.h</label>
        <link refid="growth__curve_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>generic_factory.h</label>
        <link refid="generic__factory_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>nest_time.h</label>
        <link refid="nest__time_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>aggregatedatum.h</label>
      </node>
      <node id="63">
        <label>dict.h</label>
      </node>
      <node id="8">
        <label>connection_id.h</label>
        <link refid="connection__id_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>source.h</label>
        <link refid="source_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cfloat</label>
      </node>
      <node id="35">
        <label>target.h</label>
        <link refid="target_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>nestmodule.h</label>
        <link refid="nestmodule_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ostream</label>
      </node>
      <node id="108">
        <label>device_node.h</label>
        <link refid="device__node_8h"/>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>static_assert.h</label>
        <link refid="static__assert_8h"/>
      </node>
      <node id="83">
        <label>connector_base.h</label>
        <link refid="connector__base_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>slitype.h</label>
      </node>
      <node id="103">
        <label>io_manager.h</label>
        <link refid="io__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>common_synapse_properties.h</label>
        <link refid="common__synapse__properties_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>nest_datums.h</label>
        <link refid="nest__datums_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>allocator.h</label>
      </node>
      <node id="89">
        <label>connection_label.h</label>
        <link refid="connection__label_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>node.h</label>
        <link refid="node_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>random_manager.h</label>
        <link refid="random__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>enum_bitfield.h</label>
        <link refid="enum__bitfield_8h"/>
      </node>
      <node id="72">
        <label>histentry.h</label>
        <link refid="histentry_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>random</label>
      </node>
      <node id="66">
        <label>slimodule.h</label>
      </node>
      <node id="51">
        <label>parameter.h</label>
        <link refid="parameter_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>secondary_event.h</label>
        <link refid="secondary__event_8h"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>bitset</label>
      </node>
      <node id="54">
        <label>ctime</label>
      </node>
      <node id="50">
        <label>token.h</label>
      </node>
      <node id="92">
        <label>nest_timeconverter.h</label>
        <link refid="nest__timeconverter_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>unistd.h</label>
      </node>
      <node id="34">
        <label>spike_data.h</label>
        <link refid="spike__data_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="64">
        <label>sharedptrdatum.h</label>
      </node>
      <node id="85">
        <label>block_vector.h</label>
        <link refid="block__vector_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>new</label>
      </node>
      <node id="98">
        <label>target_data.h</label>
        <link refid="target__data_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>kernel_manager.h</label>
        <link refid="kernel__manager_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>utility</label>
      </node>
      <node id="47">
        <label>array</label>
      </node>
      <node id="48">
        <label>sstream</label>
      </node>
      <node id="128">
        <label>universal_data_logger_impl.h</label>
        <link refid="universal__data__logger__impl_8h"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>vp_manager_impl.h</label>
        <link refid="vp__manager__impl_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>slifunction.h</label>
      </node>
      <node id="107">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>randutils.hpp</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="121">
        <label>simulation_manager.h</label>
        <link refid="simulation__manager_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>node_manager.h</label>
        <link refid="node__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>dictdatum.h</label>
      </node>
      <node id="80">
        <label>sys/time.h</label>
      </node>
      <node id="38">
        <label>manager_interface.h</label>
        <link refid="manager__interface_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>name.h</label>
      </node>
      <node id="53">
        <label>node_collection.h</label>
        <link refid="node__collection_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>cstddef</label>
      </node>
      <node id="70">
        <label>deque</label>
      </node>
      <node id="106">
        <label>stimulation_device.h</label>
        <link refid="stimulation__device_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>target_table.h</label>
        <link refid="target__table_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>climits</label>
      </node>
      <node id="115">
        <label>modelrange_manager.h</label>
        <link refid="modelrange__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nest.h</label>
        <link refid="nest_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>model.h</label>
        <link refid="model_8h"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>sliexceptions.h</label>
      </node>
      <node id="109">
        <label>logging_manager.h</label>
        <link refid="logging__manager_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>conn_parameter.h</label>
        <link refid="conn__parameter_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>event_delivery_manager.h</label>
        <link refid="event__delivery__manager_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>sparse_node_array.h</label>
        <link refid="sparse__node__array_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>ring_buffer.h</label>
        <link refid="ring__buffer_8h"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>growth_curve_factory.h</label>
        <link refid="growth__curve__factory_8h"/>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>modelrange.h</label>
        <link refid="modelrange_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>vector_util.h</label>
        <link refid="vector__util_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>type_traits</label>
      </node>
      <node id="122">
        <label>sp_manager.h</label>
        <link refid="sp__manager_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>set</label>
      </node>
      <node id="26">
        <label>config.h</label>
      </node>
      <node id="81">
        <label>conn_builder.h</label>
        <link refid="conn__builder_8h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="95">
        <label>mpi_manager.h</label>
        <link refid="mpi__manager_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>recordables_map.h</label>
        <link refid="recordables__map_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="88">
        <label>connector_model.h</label>
        <link refid="connector__model_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>recording_backend.h</label>
        <link refid="recording__backend_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>memory</label>
      </node>
      <node id="91">
        <label>spikecounter.h</label>
        <link refid="spikecounter_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>initializer_list</label>
      </node>
      <node id="6">
        <label>logging.h</label>
        <link refid="logging_8h"/>
      </node>
      <node id="25">
        <label>numerics.h</label>
        <link refid="numerics_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>compose.hpp</label>
      </node>
      <node id="84">
        <label>sort.h</label>
        <link refid="sort_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>stopwatch.h</label>
        <link refid="stopwatch_8h"/>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>gif_pop_psc_exp.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Point<sp/>process<sp/>population<sp/>model<sp/>with<sp/>exponential<sp/>postsynaptic<sp/>currents<sp/>and</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>adaptation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>[1]:<sp/>Line<sp/>numbers<sp/>in<sp/>comments<sp/>refer<sp/>to<sp/>the<sp/>algorithm<sp/>pseudocode<sp/>in</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Figures<sp/>11<sp/>and<sp/>12<sp/>of<sp/>the<sp/>paper</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schwalger<sp/>T,<sp/>Deger<sp/>M,<sp/>Gerstner<sp/>W<sp/>(2017)</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Towards<sp/>a<sp/>theory<sp/>of<sp/>cortical<sp/>columns:<sp/>From<sp/>spiking<sp/>neurons<sp/>to</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interacting<sp/>neural<sp/>populations<sp/>of<sp/>finite<sp/>size.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLoS<sp/>Comput<sp/>Biol<sp/>13(4):<sp/>e1005507.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>https://doi.org/10.1371/journal.pcbi.1005507<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gif__pop__psc__exp_8h" kindref="compound">gif_pop_psc_exp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;compose.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universal__data__logger__impl_8h" kindref="compound">universal_data_logger_impl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>libnestutil:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict__util_8h" kindref="compound">dict_util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GSL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenest" kindref="compound">nest</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Recordables<sp/>map</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">RecordablesMap&lt;<sp/>gif_pop_psc_exp<sp/>&gt;<sp/>gif_pop_psc_exp::recordablesMap_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Override<sp/>the<sp/>create()<sp/>method<sp/>with<sp/>one<sp/>call<sp/>to<sp/>RecordablesMap::insert_()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>quantity<sp/>to<sp/>be<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="classnest_1_1RecordablesMap_1a303b1d32c8f72ab936b4afe76bca9588" kindref="member">RecordablesMap&lt; gif_pop_psc_exp &gt;::create</ref>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>standard<sp/>names<sp/>wherever<sp/>you<sp/>can<sp/>for<sp/>consistency!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>&amp;gif_pop_psc_exp::get_V_m_<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a0831fde7002233a4ec0eb6dda514ad1c" kindref="member">names::n_events</ref>,<sp/>&amp;gif_pop_psc_exp::get_n_events_<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1ab4885c08406c6657512d18d90899c9b6" kindref="member">names::E_sfa</ref>,<sp/>&amp;gif_pop_psc_exp::get_E_sfa_<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a864c769c713eae9512eddf03407f2bfd" kindref="member">names::mean</ref>,<sp/>&amp;gif_pop_psc_exp::get_mean_<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1a9c596028f558cf48501b584dd42eadf1" kindref="member">names::I_syn_ex</ref>,<sp/>&amp;gif_pop_psc_exp::get_I_syn_ex_<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>insert_(<sp/><ref refid="namespacenest_1_1names_1aee5bbb4717ac48a01072fad3c125b51a" kindref="member">names::I_syn_in</ref>,<sp/>&amp;gif_pop_psc_exp::get_I_syn_in_<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Default<sp/>constructors<sp/>defining<sp/>default<sp/>parameters<sp/>and<sp/>state</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">nest::gif_pop_psc_exp::Parameters_::Parameters_()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>:<sp/>N_(<sp/>100<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>,<sp/>tau_m_(<sp/>20.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>,<sp/>c_m_(<sp/>250.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>,<sp/>t_ref_(<sp/>4.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>,<sp/>lambda_0_(<sp/>10.<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1/s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>,<sp/>Delta_V_(<sp/>2.<sp/>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>,<sp/>len_kernel_(<sp/>-1<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>,<sp/>I_e_(<sp/>0.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>,<sp/>V_reset_(<sp/>0.<sp/>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>,<sp/>V_T_star_(<sp/>15.<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>,<sp/>E_L_(<sp/>0.<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>,<sp/>tau_syn_ex_(<sp/>3.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>,<sp/>tau_syn_in_(<sp/>6.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>,<sp/>BinoRand_(<sp/>true<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>tau_sfa_.clear();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>q_sfa_.clear();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>tau_sfa_.push_back(<sp/>300.0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>q_sfa_.push_back(<sp/>0.5<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">nest::gif_pop_psc_exp::State_::State_()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>:<sp/>y0_(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>,<sp/>I_syn_ex_(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>,<sp/>I_syn_in_(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>,<sp/>V_m_(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>,<sp/>n_expect_(<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>,<sp/>theta_hat_(<sp/>0.0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>value<sp/>has<sp/>no<sp/>effect<sp/>for<sp/>theta_hat_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>,<sp/>n_spikes_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>,<sp/>initialized_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>Parameter<sp/>and<sp/>state<sp/>extractions<sp/>and<sp/>manipulation<sp/>functions</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">nest::gif_pop_psc_exp::Parameters_::get(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>def&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1a7e1197379d5f600d9f80af2d88c09a" kindref="member">names::N</ref>,<sp/>N_<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a4184920b44194d822ee5f09a8151d1b6" kindref="member">names::tau_m</ref>,<sp/>tau_m_<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">names::C_m</ref>,<sp/>c_m_<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae36167224b93a95c202c7d089604ec25" kindref="member">names::lambda_0</ref>,<sp/>lambda_0_<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ad13c087cdb164bf7c65d2ab9d4ded033" kindref="member">names::Delta_V</ref>,<sp/>Delta_V_<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>def&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1aec6474c26a14e130f88e430fb26dd4ec" kindref="member">names::len_kernel</ref>,<sp/>len_kernel_<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">names::I_e</ref>,<sp/>I_e_<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae466464230497db944b00698c29e8dfd" kindref="member">names::V_reset</ref>,<sp/>V_reset_<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a68dff674e342dea64d14e24ba6dd5cb5" kindref="member">names::V_T_star</ref>,<sp/>V_T_star_<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">names::E_L</ref>,<sp/>E_L_<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a7971c19aa06d9537038659f874a43458" kindref="member">names::t_ref</ref>,<sp/>t_ref_<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a305ab08238308dbd82aeeaa1fd7e67d0" kindref="member">names::tau_syn_ex</ref>,<sp/>tau_syn_ex_<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab12dee2ee1f5c6e86eaaad11b28d4de0" kindref="member">names::tau_syn_in</ref>,<sp/>tau_syn_in_<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>def&lt;<sp/>bool<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="stringliteral">&quot;BinoRand&quot;</highlight><highlight class="normal">,<sp/>BinoRand_<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>tau_sfa_list_ad(<sp/>tau_sfa_<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>def&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a477c3427996157e2dea8aa1e8375f83e" kindref="member">names::tau_sfa</ref>,<sp/>tau_sfa_list_ad<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>ArrayDatum<sp/>q_sfa_list_ad(<sp/>q_sfa_<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>def&lt;<sp/>ArrayDatum<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab77bcec7e6ce41ce049b1832c6af6265" kindref="member">names::q_sfa</ref>,<sp/>q_sfa_list_ad<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">nest::gif_pop_psc_exp::Parameters_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/>Node*<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1a7e1197379d5f600d9f80af2d88c09a" kindref="member">names::N</ref>,<sp/>N_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a4184920b44194d822ee5f09a8151d1b6" kindref="member">names::tau_m</ref>,<sp/>tau_m_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a465e2a59112ec07d0880cc387cf14605" kindref="member">names::C_m</ref>,<sp/>c_m_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae36167224b93a95c202c7d089604ec25" kindref="member">names::lambda_0</ref>,<sp/>lambda_0_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ad13c087cdb164bf7c65d2ab9d4ded033" kindref="member">names::Delta_V</ref>,<sp/>Delta_V_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1aec6474c26a14e130f88e430fb26dd4ec" kindref="member">names::len_kernel</ref>,<sp/>len_kernel_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a1500f039b069c0f37a1fa697a7e12720" kindref="member">names::I_e</ref>,<sp/>I_e_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae466464230497db944b00698c29e8dfd" kindref="member">names::V_reset</ref>,<sp/>V_reset_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a68dff674e342dea64d14e24ba6dd5cb5" kindref="member">names::V_T_star</ref>,<sp/>V_T_star_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ae4fc44021e7d0f49bf400219797605ba" kindref="member">names::E_L</ref>,<sp/>E_L_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a7971c19aa06d9537038659f874a43458" kindref="member">names::t_ref</ref>,<sp/>t_ref_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a305ab08238308dbd82aeeaa1fd7e67d0" kindref="member">names::tau_syn_ex</ref>,<sp/>tau_syn_ex_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab12dee2ee1f5c6e86eaaad11b28d4de0" kindref="member">names::tau_syn_in</ref>,<sp/>tau_syn_in_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>bool<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="stringliteral">&quot;BinoRand&quot;</highlight><highlight class="normal">,<sp/>BinoRand_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>updateValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a477c3427996157e2dea8aa1e8375f83e" kindref="member">names::tau_sfa</ref>,<sp/>tau_sfa_<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>updateValue&lt;<sp/>std::vector&lt;<sp/>double<sp/>&gt;<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab77bcec7e6ce41ce049b1832c6af6265" kindref="member">names::q_sfa</ref>,<sp/>q_sfa_<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tau_sfa_.size()<sp/>!=<sp/>q_sfa_.size()<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String::compose(<sp/></highlight><highlight class="stringliteral">&quot;&apos;tau_sfa&apos;<sp/>and<sp/>&apos;q_sfa&apos;<sp/>need<sp/>to<sp/>have<sp/>the<sp/>same<sp/>dimension.\nSize<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tau_sfa:<sp/>%1\nSize<sp/>of<sp/>q_sfa:<sp/>%2&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau_sfa_.size(),</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_sfa_.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>c_m_<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Capacitance<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tau_m_<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>membrane<sp/>time<sp/>constants<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tau_syn_ex_<sp/>&lt;=<sp/>0<sp/>or<sp/>tau_syn_in_<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>synaptic<sp/>time<sp/>constants<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tau_sfa_.size();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tau_sfa_[<sp/>i<sp/>]<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>time<sp/>constants<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>N_<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>neurons<sp/>must<sp/>be<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lambda_0_<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;lambda_0<sp/>must<sp/>be<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Delta_V_<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Delta_V<sp/>must<sp/>be<sp/>strictly<sp/>positive.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>t_ref_<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Absolute<sp/>refractory<sp/>period<sp/>cannot<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">nest::gif_pop_psc_exp::State_::get(<sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>V_m_<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filtered<sp/>version<sp/>of<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>def&lt;<sp/>long<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a0831fde7002233a4ec0eb6dda514ad1c" kindref="member">names::n_events</ref>,<sp/>n_spikes_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>generated<sp/>spikes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1ab4885c08406c6657512d18d90899c9b6" kindref="member">names::E_sfa</ref>,<sp/>theta_hat_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Adaptive<sp/>threshold<sp/>potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a864c769c713eae9512eddf03407f2bfd" kindref="member">names::mean</ref>,<sp/>n_expect_<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a9c596028f558cf48501b584dd42eadf1" kindref="member">names::I_syn_ex</ref>,<sp/>I_syn_ex_<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>def&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1aee5bbb4717ac48a01072fad3c125b51a" kindref="member">names::I_syn_in</ref>,<sp/>I_syn_in_<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">nest::gif_pop_psc_exp::State_::set(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryDatum&amp;<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Parameters_&amp;,<sp/>Node*<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a3f8f18f4ef86f476071bb895080175cc" kindref="member">names::V_m</ref>,<sp/>V_m_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1a9c596028f558cf48501b584dd42eadf1" kindref="member">names::I_syn_ex</ref>,<sp/>I_syn_ex_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>updateValueParam&lt;<sp/>double<sp/>&gt;(<sp/><ref refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5" kindref="member">d</ref>,<sp/><ref refid="namespacenest_1_1names_1aee5bbb4717ac48a01072fad3c125b51a" kindref="member">names::I_syn_in</ref>,<sp/>I_syn_in_,<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>vectors<sp/>of<sp/>the<sp/>state<sp/>should<sp/>be<sp/>initialized<sp/>with<sp/>new<sp/>parameter<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">nest::gif_pop_psc_exp::Buffers_::Buffers_(<sp/>gif_pop_psc_exp&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>:<sp/>logger_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">nest::gif_pop_psc_exp::Buffers_::Buffers_(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffers_&amp;,<sp/>gif_pop_psc_exp&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>:<sp/>logger_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>Default<sp/>and<sp/>copy<sp/>constructor<sp/>for<sp/>node</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">nest::gif_pop_psc_exp::gif_pop_psc_exp()</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>:<sp/>Node()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>,<sp/>P_()</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>,<sp/>S_()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>,<sp/>B_(<sp/>*this<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>recordablesMap_.create();</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">nest::gif_pop_psc_exp::gif_pop_psc_exp(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gif_pop_psc_exp&amp;<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>:<sp/>Node(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref><sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>,<sp/>P_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.P_<sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>,<sp/>S_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.S_<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>,<sp/>B_(<sp/><ref refid="namespacenest_1_1names_1ab8bd20749b72ff569db09b8bc17ad319" kindref="member">n</ref>.B_,<sp/>*this<sp/>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>Node<sp/>initialization<sp/>functions</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>----------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">nest::gif_pop_psc_exp::init_buffers_()</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>B_.ex_spikes_.clear();<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>B_.in_spikes_.clear();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>B_.currents_.clear();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>B_.logger_.reset();</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">nest::gif_pop_psc_exp::pre_run_hook()</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>P_.tau_sfa_.size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>constant<sp/>array<sp/>should<sp/>not<sp/>be<sp/>empty.<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>P_.q_sfa_.size()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BadProperty(<sp/></highlight><highlight class="stringliteral">&quot;Adaptation<sp/>value<sp/>array<sp/>should<sp/>not<sp/>be<sp/>empty.<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>B_.logger_.init();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>V_.h_<sp/>=<sp/>Time::get_resolution().get_ms();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>V_.rng_<sp/>=<sp/><ref refid="namespacenest_1a0f1b44a02fc7b34260b4edea0fee204f" kindref="member">get_vp_specific_rng</ref>(<sp/>get_thread()<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>V_.min_double_<sp/>=<sp/><ref refid="namespacenest_1_1names_1a9e18240ceefb12b7db55fc1ce75582e6" kindref="member">std::numeric_limits&lt; double &gt;::min</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>V_.R_<sp/>=<sp/>P_.tau_m_<sp/>/<sp/>P_.c_m_;<sp/></highlight><highlight class="comment">//<sp/>membrane<sp/>resistance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>membrane<sp/>integration<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>V_.P22_<sp/>=<sp/>std::exp(<sp/>-V_.h_<sp/>/<sp/>P_.tau_m_<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>V_.P20_<sp/>=<sp/>P_.tau_m_<sp/>/<sp/>P_.c_m_<sp/>*<sp/>(<sp/>1<sp/>-<sp/>V_.P22_<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>constants<sp/>needed<sp/>for<sp/>integrating<sp/>exponential<sp/>pscs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>V_.P11_ex_<sp/>=<sp/>std::exp(<sp/>-V_.h_<sp/>/<sp/>P_.tau_syn_ex_<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>V_.P11_in_<sp/>=<sp/>std::exp(<sp/>-V_.h_<sp/>/<sp/>P_.tau_syn_in_<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initializing<sp/>internal<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>not<sp/>S_.initialized_<sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relaxation<sp/>time<sp/>of<sp/>refractory<sp/>kernel.<sp/>This<sp/>sets<sp/>the<sp/>length<sp/>of<sp/>the<sp/>spike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>history<sp/>buffer<sp/>n_<sp/>and<sp/>other<sp/>internal<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>P_.len_kernel_<sp/>&lt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>value<sp/>smaller<sp/>than<sp/>one<sp/>signals<sp/>that<sp/>the<sp/>kernel<sp/>length<sp/>is<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>automatically<sp/>chosen<sp/>based<sp/>on<sp/>the<sp/>remaining<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_.len_kernel_<sp/>=<sp/>get_history_size();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.k_ref_<sp/>=<sp/>Time(<sp/>Time::ms(<sp/>(<sp/>P_.t_ref_<sp/>)<sp/>)<sp/>).get_steps();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>state<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.lambda_free_<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.n_.clear();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.m_.clear();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.v_.clear();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.u_.clear();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.lambda_.clear();</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.theta_.clear();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.theta_tld_.clear();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Procedure<sp/>InitPopulations,<sp/>see<sp/>Fig.<sp/>11<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>P_.len_kernel_;<sp/>++k<sp/>)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.n_.push_back(<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.m_.push_back(<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.v_.push_back(<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.u_.push_back(<sp/>0<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.lambda_.push_back(<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_tmp<sp/>=<sp/>adaptation_kernel(<sp/>P_.len_kernel_<sp/>-<sp/>k<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.theta_.push_back(<sp/>theta_tmp<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>4<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.theta_tld_.push_back(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_.Delta_V_<sp/>*<sp/>(<sp/>1.<sp/>-<sp/>std::exp(<sp/>-theta_tmp<sp/>/<sp/>P_.Delta_V_<sp/>)<sp/>)<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>P_.N_<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>5<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.n_[<sp/>P_.len_kernel_<sp/>-<sp/>1<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>P_.N_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>InitPopulations,<sp/>line<sp/>7<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.m_[<sp/>P_.len_kernel_<sp/>-<sp/>1<sp/>]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>P_.N_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>InitPopulations,<sp/>line<sp/>7<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>InitPopulations,<sp/>line<sp/>8<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.x_<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.z_<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.k0_<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>rotating<sp/>index<sp/>has<sp/>to<sp/>start<sp/>at<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lines<sp/>9-10<sp/>of<sp/>[1]:<sp/>Variables<sp/>y<sp/>(and<sp/>h)<sp/>are<sp/>initialized<sp/>with<sp/>other<sp/>State</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>adaptation<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.g_.clear();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.Q30_.clear();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.Q30K_.clear();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>P_.tau_sfa_.size();<sp/>++k<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>by<sp/>tau_sfa<sp/>here<sp/>because<sp/>[1]<sp/>defines<sp/>J<sp/>as<sp/>product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>J<sp/>and<sp/>tau_sfa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.Q30K_.push_back(<sp/>P_.q_sfa_[<sp/>k<sp/>]<sp/>*<sp/>P_.tau_sfa_[<sp/>k<sp/>]<sp/>*<sp/>std::exp(<sp/>-V_.h_<sp/>*<sp/>P_.len_kernel_<sp/>/<sp/>P_.tau_sfa_[<sp/>k<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.Q30_.push_back(<sp/>std::exp(<sp/>-V_.h_<sp/>/<sp/>P_.tau_sfa_[<sp/>k<sp/>]<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.g_.push_back(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.initialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>Update<sp/>and<sp/>spike<sp/>handling<sp/>functions</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">nest::gif_pop_psc_exp::escrate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a02ff20012561603c598107af2b48b440" kindref="member">x</ref><sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P_.lambda_0_<sp/>*<sp/>std::exp(<sp/><ref refid="namespacenest_1_1names_1a02ff20012561603c598107af2b48b440" kindref="member">x</ref><sp/>/<sp/>P_.Delta_V_<sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">nest::gif_pop_psc_exp::draw_poisson(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_expect_<sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>Poisson<sp/>random<sp/>number<sp/>of<sp/>spikes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>n_expect_<sp/>is<sp/>too<sp/>large,<sp/>the<sp/>random<sp/>numbers<sp/>might<sp/>get<sp/>bad.<sp/>So<sp/>we<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>N_<sp/>in<sp/>case<sp/>of<sp/>excessive<sp/>rates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n_t_;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_expect_<sp/>&gt;<sp/>P_.N_<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/>P_.N_;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_expect_<sp/>&gt;<sp/>V_.min_double_<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>probability<sp/>of<sp/>any<sp/>spike<sp/>at<sp/>all<sp/>(1-exp(-lambda))<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indistinguishable<sp/>from<sp/>that<sp/>of<sp/>one<sp/>spike<sp/>(lambda<sp/>*<sp/>exp(-lambda)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>draw<sp/>a<sp/>Bernoulli<sp/>random<sp/>number<sp/>instead<sp/>of<sp/>Poisson.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>1.<sp/>-<sp/>(<sp/>n_expect_<sp/>+<sp/>1.<sp/>)<sp/>*<sp/>std::exp(<sp/>-n_expect_<sp/>)<sp/>&gt;<sp/>V_.min_double_<sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>poisson_distribution::param_type<sp/>param(<sp/>n_expect_<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/>V_.poisson_dist_(<sp/>V_.rng_,<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>V_.rng_-&gt;drand()<sp/>&lt;<sp/>n_expect_<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>number<sp/>of<sp/>spikes<sp/>exceeds<sp/>N,<sp/>we<sp/>clip<sp/>it<sp/>to<sp/>prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>runaway<sp/>activity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_t_<sp/>&gt;<sp/>P_.N_<sp/>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/>P_.N_;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>the<sp/>number<sp/>of<sp/>spikes<sp/>is<sp/>negative,<sp/>we<sp/>clip<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>problems<sp/>downstream.<sp/>This<sp/>should<sp/>not<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>n_t_<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>n_t_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_t_;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">nest::gif_pop_psc_exp::draw_binomial(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n_expect_<sp/>)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_bino_<sp/>=<sp/>n_expect_<sp/>/<sp/>P_.N_;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p_bino_<sp/>&gt;=<sp/>1.<sp/>)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P_.N_;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p_bino_<sp/>&lt;=<sp/>0.<sp/>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>binomial_distribution::param_type<sp/>param(<sp/>P_.N_,<sp/>p_bino_<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V_.bino_dist_(<sp/>V_.rng_,<sp/>param<sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>V_.bino_dist_(<sp/>V_.rng_<sp/>);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">nest::gif_pop_psc_exp::adaptation_kernel(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>computes<sp/>the<sp/>value<sp/>of<sp/>the<sp/>sum<sp/>of<sp/>exponentials<sp/>adaptation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>kernel<sp/>at<sp/>a<sp/>time<sp/>lag<sp/>given<sp/>by<sp/>k<sp/>time<sp/>steps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>below<sp/>Eq.<sp/>(87)<sp/>of<sp/>[1].<sp/>There<sp/>is<sp/>no<sp/>division<sp/>by<sp/>tau<sp/>here<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>theta_tmp<sp/>must<sp/>be<sp/>in<sp/>units<sp/>voltage<sp/>just<sp/>as<sp/>q_sfa_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_tmp<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>P_.tau_sfa_.size();<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>theta_tmp<sp/>+=<sp/>P_.q_sfa_[<sp/>j<sp/>]<sp/>*<sp/>std::exp(<sp/>-k<sp/>*<sp/>V_.h_<sp/>/<sp/>P_.tau_sfa_[<sp/>j<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theta_tmp;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">nest::gif_pop_psc_exp::get_history_size()</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>automatically<sp/>determines<sp/>a<sp/>suitable<sp/>history<sp/>kernel<sp/>size,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>[1],<sp/>Eq.<sp/>(86)<sp/>and<sp/>Fig<sp/>11,<sp/>Procedure<sp/>GetHistoryLength.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmax<sp/>=<sp/>20000.;<sp/></highlight><highlight class="comment">//<sp/>ms,<sp/>maximum<sp/>automatic<sp/>kernel<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>tmax<sp/>/<sp/>V_.h_;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kmin<sp/>=<sp/>5<sp/>*<sp/>P_.tau_m_<sp/>/<sp/>V_.h_;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>adaptation_kernel(<sp/>k<sp/>)<sp/>/<sp/>P_.Delta_V_<sp/>&lt;<sp/>0.1<sp/>)<sp/>and<sp/>k<sp/>&gt;<sp/>kmin<sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>*<sp/>V_.h_<sp/>&lt;=<sp/>P_.t_ref_<sp/>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(<sp/>int<sp/>)<sp/>(<sp/>P_.t_ref_<sp/>/<sp/>V_.h_<sp/>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">nest::gif_pop_psc_exp::update(<sp/>Time<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e" kindref="member">origin</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>to<sp/>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lag<sp/>=<sp/>from;<sp/>lag<sp/>&lt;<sp/>to;<sp/>++lag<sp/>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>update<sp/>routine,<sp/>see<sp/>Fig.<sp/>11<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_tot_;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>membrane<sp/>and<sp/>synapse<sp/>update<sp/>method<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tot_<sp/>=<sp/>(<sp/>P_.I_e_<sp/>+<sp/>S_.y0_<sp/>)<sp/>*<sp/>V_.P20_<sp/>+<sp/>P_.E_L_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>6<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>input<sp/>spikes<sp/>from<sp/>the<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>getting<sp/>spike<sp/>numbers<sp/>weighted<sp/>with<sp/>synaptic<sp/>weights<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>[1]<sp/>uses<sp/>A(t),<sp/>which<sp/>implies<sp/>division<sp/>by<sp/>J,<sp/>N<sp/>and<sp/>dt,<sp/>which<sp/>we<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>know<sp/>here<sp/>(e.g.<sp/>J<sp/>is<sp/>stored<sp/>externally<sp/>to<sp/>the<sp/>model<sp/>in<sp/>NEST).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>these<sp/>rescalings<sp/>are<sp/>undone<sp/>below,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>quantities<sp/>used<sp/>here<sp/>are<sp/>equivalent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JNA_ex<sp/>=<sp/>B_.ex_spikes_.get_value(<sp/>lag<sp/>)<sp/>/<sp/>V_.h_;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JNA_in<sp/>=<sp/>B_.in_spikes_.get_value(<sp/>lag<sp/>)<sp/>/<sp/>V_.h_;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rescale<sp/>inputs<sp/>to<sp/>voltage<sp/>scale<sp/>used<sp/>in<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>JNA_ex<sp/>*=<sp/>P_.tau_syn_ex_<sp/>/<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>JNA_in<sp/>*=<sp/>P_.tau_syn_in_<sp/>/<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translate<sp/>synaptic<sp/>currents<sp/>into<sp/>[1]&apos;s<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JNy_ex<sp/>=<sp/>S_.I_syn_ex_<sp/>/<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>JNy_in<sp/>=<sp/>S_.I_syn_in_<sp/>/<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>membrane<sp/>update<sp/>(line<sp/>10<sp/>of<sp/>[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_ex_tmpvar<sp/>=<sp/>(<sp/>P_.tau_syn_ex_<sp/>*<sp/>V_.P11_ex_<sp/>*<sp/>(<sp/>JNy_ex<sp/>-<sp/>JNA_ex<sp/>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>V_.P22_<sp/>*<sp/>(<sp/>P_.tau_syn_ex_<sp/>*<sp/>JNy_ex<sp/>-<sp/>P_.tau_m_<sp/>*<sp/>JNA_ex<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_in_tmpvar<sp/>=<sp/>(<sp/>P_.tau_syn_in_<sp/>*<sp/>V_.P11_in_<sp/>*<sp/>(<sp/>JNy_in<sp/>-<sp/>JNA_in<sp/>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>V_.P22_<sp/>*<sp/>(<sp/>P_.tau_syn_in_<sp/>*<sp/>JNy_in<sp/>-<sp/>P_.tau_m_<sp/>*<sp/>JNA_in<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_ex<sp/>=<sp/>P_.tau_m_<sp/>*<sp/>(<sp/>JNA_ex<sp/>+<sp/>h_ex_tmpvar<sp/>/<sp/>(<sp/>P_.tau_syn_ex_<sp/>-<sp/>P_.tau_m_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h_in<sp/>=<sp/>P_.tau_m_<sp/>*<sp/>(<sp/>JNA_in<sp/>+<sp/>h_in_tmpvar<sp/>/<sp/>(<sp/>P_.tau_syn_in_<sp/>-<sp/>P_.tau_m_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>h_tot_<sp/>+=<sp/>h_ex<sp/>+<sp/>h_in;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>EPSCs<sp/>&amp;<sp/>IPSCs<sp/>(line<sp/>11<sp/>of<sp/>[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>JNy_ex<sp/>=<sp/>JNA_ex<sp/>+<sp/>(<sp/>JNy_ex<sp/>-<sp/>JNA_ex<sp/>)<sp/>*<sp/>V_.P11_ex_;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>JNy_in<sp/>=<sp/>JNA_in<sp/>+<sp/>(<sp/>JNy_in<sp/>-<sp/>JNA_in<sp/>)<sp/>*<sp/>V_.P11_in_;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>updated<sp/>currents,<sp/>translated<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.I_syn_ex_<sp/>=<sp/>JNy_ex<sp/>*<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.I_syn_in_<sp/>=<sp/>JNy_in<sp/>*<sp/>P_.c_m_;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>new<sp/>input<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.y0_<sp/>=<sp/>B_.currents_.get_value(<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>procedure<sp/>update<sp/>population,<sp/>see<sp/>Fig.<sp/>12<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>W_<sp/>=<sp/>0,<sp/>X_<sp/>=<sp/>0,<sp/>Y_<sp/>=<sp/>0,<sp/>Z_<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>2<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.theta_hat_<sp/>=<sp/>P_.V_T_star_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>2,<sp/>initialize<sp/>theta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.V_m_<sp/>=<sp/>(<sp/>S_.V_m_<sp/>-<sp/>P_.E_L_<sp/>)<sp/>*<sp/>V_.P22_<sp/>+<sp/>h_tot_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>3<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>free<sp/>adaptation<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>P_.tau_sfa_.size();<sp/>++j<sp/>)<sp/></highlight><highlight class="comment">//<sp/>line<sp/>4<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g_j_tmp<sp/>=<sp/>(<sp/>1.<sp/>-<sp/>V_.Q30_[<sp/>j<sp/>]<sp/>)<sp/>*<sp/>V_.n_[<sp/>V_.k0_<sp/>]<sp/>/<sp/>(<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>P_.N_<sp/>)<sp/>*<sp/>V_.h_<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.g_[<sp/>j<sp/>]<sp/>=<sp/>V_.g_[<sp/>j<sp/>]<sp/>*<sp/>V_.Q30_[<sp/>j<sp/>]<sp/>+<sp/>g_j_tmp;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>5<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S_.theta_hat_<sp/>+=<sp/>V_.Q30K_[<sp/>j<sp/>]<sp/>*<sp/>V_.g_[<sp/>j<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>6<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>free<sp/>escape<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda_tld<sp/>=<sp/>escrate(<sp/>S_.V_m_<sp/>-<sp/>S_.theta_hat_<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>8<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_free<sp/>=<sp/>1<sp/>-<sp/>std::exp(<sp/>-0.0005<sp/>*<sp/>(<sp/>V_.lambda_free_<sp/>+<sp/>lambda_tld<sp/>)<sp/>*<sp/>V_.h_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>9<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.lambda_free_<sp/>=<sp/>lambda_tld;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.theta_hat_<sp/>-=<sp/>V_.n_[<sp/>0<sp/>]<sp/>*<sp/>V_.theta_tld_[<sp/>0<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_marked<sp/>=<sp/>0;<sp/>k_marked<sp/>&lt;<sp/>P_.len_kernel_;<sp/>++k_marked<sp/>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>X_<sp/>+=<sp/>V_.m_[<sp/>k_marked<sp/>];<sp/></highlight><highlight class="comment">//<sp/>line<sp/>12<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>a<sp/>local<sp/>theta_hat<sp/>to<sp/>reserve<sp/>S_.theta_hat_<sp/>for<sp/>the<sp/>free<sp/>threshold,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>a<sp/>recordable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_hat_<sp/>=<sp/>S_.theta_hat_;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>13<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_marked<sp/>=<sp/>0;<sp/>k_marked<sp/>&lt;<sp/>P_.len_kernel_<sp/>-<sp/>V_.k_ref_;<sp/>++k_marked<sp/>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>(<sp/>V_.k0_<sp/>+<sp/>k_marked<sp/>)<sp/>%<sp/>P_.len_kernel_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>14<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aba6f313f967dc8c05de3a362b4f53bf4" kindref="member">theta</ref><sp/>=<sp/>V_.theta_[<sp/>k_marked<sp/>]<sp/>+<sp/>theta_hat_;<sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>theta_hat_<sp/>+=<sp/>V_.n_[<sp/>k<sp/>]<sp/>*<sp/>V_.theta_tld_[<sp/>k_marked<sp/>];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.u_[<sp/>k<sp/>]<sp/>=<sp/>(<sp/>V_.u_[<sp/>k<sp/>]<sp/>-<sp/>P_.E_L_<sp/>)<sp/>*<sp/>V_.P22_<sp/>+<sp/>h_tot_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lambda_tld<sp/>=<sp/>escrate(<sp/>V_.u_[<sp/>k<sp/>]<sp/>-<sp/><ref refid="namespacenest_1_1names_1aba6f313f967dc8c05de3a362b4f53bf4" kindref="member">theta</ref><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_lambda_<sp/>=<sp/>0.0005<sp/>*<sp/>(<sp/>lambda_tld<sp/>+<sp/>V_.lambda_[<sp/>k<sp/>]<sp/>)<sp/>*<sp/>V_.h_;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>P_lambda_<sp/>&gt;<sp/>0.01<sp/>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P_lambda_<sp/>=<sp/>1.<sp/>-<sp/>std::exp(<sp/>-P_lambda_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>20<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.lambda_[<sp/>k<sp/>]<sp/>=<sp/>lambda_tld;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>21<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Y_<sp/>+=<sp/>P_lambda_<sp/>*<sp/>V_.v_[<sp/>k<sp/>];<sp/></highlight><highlight class="comment">//<sp/>line<sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Z_<sp/>+=<sp/>V_.v_[<sp/>k<sp/>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W_<sp/>+=<sp/>P_lambda_<sp/>*<sp/>V_.m_[<sp/>k<sp/>];<sp/></highlight><highlight class="comment">//<sp/>line<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ompl<sp/>=<sp/>(<sp/>1.<sp/>-<sp/>P_lambda_<sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.v_[<sp/>k<sp/>]<sp/>=<sp/>ompl<sp/>*<sp/>ompl<sp/>*<sp/>V_.v_[<sp/>k<sp/>]<sp/>+<sp/>P_lambda_<sp/>*<sp/>V_.m_[<sp/>k<sp/>];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V_.m_[<sp/>k<sp/>]<sp/>=<sp/>ompl<sp/>*<sp/>V_.m_[<sp/>k<sp/>];<sp/></highlight><highlight class="comment">//<sp/>line<sp/>26<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>27<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>P_Lambda_;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<sp/>Z_<sp/>+<sp/>V_.z_<sp/>)<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_Lambda_<sp/>=<sp/>(<sp/>Y_<sp/>+<sp/>P_free<sp/>*<sp/>V_.z_<sp/>)<sp/>/<sp/>(<sp/>Z_<sp/>+<sp/>V_.z_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>28<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>P_Lambda_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>compute<sp/>expected<sp/>number<sp/>of<sp/>spikes<sp/>and<sp/>draw<sp/>a<sp/>random<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>S_.n_expect_<sp/>=<sp/>W_<sp/>+<sp/>P_free<sp/>*<sp/>V_.x_<sp/>+<sp/>P_Lambda_<sp/>*<sp/>(<sp/>P_.N_<sp/>-<sp/>X_<sp/>-<sp/>V_.x_<sp/>);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>P_.BinoRand_<sp/>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S_.n_spikes_<sp/>=<sp/>draw_binomial(<sp/>S_.n_expect_<sp/>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S_.n_spikes_<sp/>=<sp/>draw_poisson(<sp/>S_.n_expect_<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>31<sp/>of<sp/>[1]:<sp/>update<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ompf<sp/>=<sp/>(<sp/>1<sp/>-<sp/>P_free<sp/>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.z_<sp/>=<sp/>ompf<sp/>*<sp/>ompf<sp/>*<sp/>V_.z_<sp/>+<sp/>V_.x_<sp/>*<sp/>P_free<sp/>+<sp/>V_.v_[<sp/>V_.k0_<sp/>];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>32<sp/>of<sp/>[1]:<sp/>update<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.x_<sp/>=<sp/>V_.x_<sp/>*<sp/>ompf<sp/>+<sp/>V_.m_[<sp/>V_.k0_<sp/>];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.n_[<sp/>V_.k0_<sp/>]<sp/>=<sp/>S_.n_spikes_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>33<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.m_[<sp/>V_.k0_<sp/>]<sp/>=<sp/>S_.n_spikes_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.v_[<sp/>V_.k0_<sp/>]<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.u_[<sp/>V_.k0_<sp/>]<sp/>=<sp/>P_.V_reset_;<sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.lambda_[<sp/>V_.k0_<sp/>]<sp/>=<sp/>0.;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>procedure<sp/>update<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>in<sp/>Fig<sp/>11<sp/>of<sp/>[1],<sp/>main<sp/>update<sp/>procedure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>rotating<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>V_.k0_<sp/>=<sp/>(<sp/>V_.k0_<sp/>+<sp/>1<sp/>)<sp/>%<sp/>P_.len_kernel_;<sp/></highlight><highlight class="comment">//<sp/>line<sp/>17<sp/>of<sp/>[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>main<sp/>update<sp/>routine,<sp/>Fig.<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Voltage<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.logger_.record_data(<sp/><ref refid="namespacenest_1_1names_1af7c5ec484317563ecbd2133c7a59043e" kindref="member">origin</ref>.get_steps()<sp/>+<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>if<sp/>S_.n_spikes_&gt;0,<sp/>generate<sp/>spike<sp/>and<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>number<sp/>as<sp/>the<sp/>multiplicity<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>S_.n_spikes_<sp/>&gt;<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Are<sp/>there<sp/>any<sp/>spikes?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SpikeEvent*<sp/>se;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>se<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SpikeEvent;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>se-&gt;set_multiplicity(<sp/>S_.n_spikes_<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().event_delivery_manager.send(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*se,<sp/>lag<sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">gif_pop_psc_exp::handle(<sp/>SpikeEvent&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_delay_steps()<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight()<sp/>*<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_multiplicity();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.ex_spikes_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>B_.in_spikes_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">nest::gif_pop_psc_exp::handle(<sp/>CurrentEvent&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>assert(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_delay_steps()<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>=<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_current();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>=<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_weight();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>weighted<sp/>current;<sp/>HEP<sp/>2002-10-04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>B_.currents_.add_value(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref>.get_rel_delivery_steps(<sp/><ref refid="namespacenest_1_1names_1aadba2f0b7a68681ccc21276c77dc8b19" kindref="member">kernel</ref>().simulation_manager.get_slice_origin()<sp/>),<sp/><ref refid="namespacenest_1_1names_1a3f66df55023653633c5e24abdadda690" kindref="member">w</ref><sp/>*<sp/><ref refid="namespacenest_1_1names_1aa1557d817741767a3ce099d6d7778501" kindref="member">c</ref><sp/>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal">nest::gif_pop_psc_exp::handle(<sp/>DataLoggingRequest&amp;<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>)</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>B_.logger_.handle(<sp/><ref refid="namespacenumerics_1acd42d3be907c55f5a5eabeb4c595b976" kindref="member">e</ref><sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>HAVE_GSL<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/gif_pop_psc_exp.cpp"/>
  </compounddef>
</doxygen>
