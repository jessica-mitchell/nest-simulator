<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_grid_mask" kind="class" language="C++" prot="public">
    <compoundname>nest::GridMask</compoundname>
    <basecompoundref refid="classnest_1_1_abstract_mask" prot="public" virt="non-virtual">nest::AbstractMask</basecompoundref>
    <includes refid="grid__mask_8h" local="no">grid_mask.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1_grid_mask_1a5905c6619160ee51388d87dcde34076e" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::GridMask&lt; D &gt;::upper_left_</definition>
        <argsstring></argsstring>
        <name>upper_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="108" column="12" bodyfile="nestkernel/grid_mask.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_grid_mask_1a4ce53b906ce2ff6205e40360dd6aa429" prot="protected" static="no" mutable="no">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::GridMask&lt; D &gt;::lower_right_</definition>
        <argsstring></argsstring>
        <name>lower_right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="109" column="12" bodyfile="nestkernel/grid_mask.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_grid_mask_1abaa1e423d9f353cef0b303213655e965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GridMask&lt; D &gt;::GridMask</definition>
        <argsstring>(const DictionaryDatum &amp;d)</argsstring>
        <name>GridMask</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parameters: shape - size in grid coordinates (length 2 for 2D layers or length 3 for 3D layers) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="54" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="113" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a5318647a517d6e10a043b148654ca7d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::GridMask&lt; D &gt;::inside</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;) const override</argsstring>
        <name>inside</name>
        <reimplements refid="classnest_1_1_abstract_mask_1a6576b96fe48031acfee534e60fc064ce">inside</reimplements>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if point is inside mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="57" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a2584f552d4a364e99b095535cd391a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::GridMask&lt; D &gt;::set_anchor</definition>
        <argsstring>(const Position&lt; D, int &gt; &amp;)</argsstring>
        <name>set_anchor</name>
        <param>
          <type>const <ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt; &amp;</type>
          <defname>anchor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="62" column="8" bodyfile="nestkernel/grid_mask.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1af8df2c0800ca19015228aa0d2640f83e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>DictionaryDatum</type>
        <definition>DictionaryDatum nest::GridMask&lt; D &gt;::get_dict</definition>
        <argsstring>() const override</argsstring>
        <name>get_dict</name>
        <reimplements refid="classnest_1_1_abstract_mask_1afaa2c932fb8581e1417eddc784754a94">get_dict</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a dictionary with the definition for this mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="64" column="19" bodyfile="nestkernel/grid_mask.h" bodystart="147" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a7b2996c056a502f8169d9f3d674ff039" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_grid_mask" kindref="compound">GridMask</ref>&lt; D &gt; *</type>
        <definition>GridMask&lt; D &gt;* nest::GridMask&lt; D &gt;::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="67" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1ae5c48a629ce41fe225b6af109d61b30f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> *</type>
        <definition>AbstractMask* nest::GridMask&lt; D &gt;::intersect_mask</definition>
        <argsstring>(const AbstractMask &amp;) const override</argsstring>
        <name>intersect_mask</name>
        <reimplements refid="classnest_1_1_abstract_mask_1a5121551bc7fbcaacd71345726db56ec5">intersect_mask</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the intersection of this mask with another. Masks must have the same dimension <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="78" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1add92f3d77eaab12f0233d0b63b60f37a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> *</type>
        <definition>AbstractMask* nest::GridMask&lt; D &gt;::union_mask</definition>
        <argsstring>(const AbstractMask &amp;) const override</argsstring>
        <name>union_mask</name>
        <reimplements refid="classnest_1_1_abstract_mask_1a090d38b233591056609d0cf9b0d99ab7">union_mask</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the union of this mask with another. Masks must have the same dimension. <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="84" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a140b4309130706eb12dc07ccf13632d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> *</type>
        <definition>AbstractMask* nest::GridMask&lt; D &gt;::minus_mask</definition>
        <argsstring>(const AbstractMask &amp;) const override</argsstring>
        <name>minus_mask</name>
        <reimplements refid="classnest_1_1_abstract_mask_1abac67e0b2297650220534cc8e74a67a0">minus_mask</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1_abstract_mask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the difference of this mask and another. Masks must have the same dimension. <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="90" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a8d2e843c40d1a05ad042105dfde91137" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::GridMask&lt; D &gt;::get_upper_left</definition>
        <argsstring>() const</argsstring>
        <name>get_upper_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="96" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a4b77557e29daea27ad41d3a6cc9b5afd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_position" kindref="compound">Position</ref>&lt; D, int &gt;</type>
        <definition>Position&lt; D, int &gt; nest::GridMask&lt; D &gt;::get_lower_right</definition>
        <argsstring>() const</argsstring>
        <name>get_lower_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="102" column="3" bodyfile="nestkernel/grid_mask.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1ad0a2ac61cc8b18e863c6f35fff54ac57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Name</type>
        <definition>Name nest::GridMask&lt; 2 &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="133" column="10" bodyfile="nestkernel/grid_mask.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_grid_mask_1a0ccee41c3311f240eba0c0b9bf6d93a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Name</type>
        <definition>Name nest::GridMask&lt; 3 &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="140" column="10" bodyfile="nestkernel/grid_mask.h" bodystart="140" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnest_1_1_grid_mask_1af8efef36c9a815fdd9dc571f9808333d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Name</type>
        <definition>static Name nest::GridMask&lt; D &gt;::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the name of this mask type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/grid_mask.h" line="75" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classnest_1_1_mask" kindref="compound">Mask</ref> defined in terms of grid points rather than spacial coordinates. Only suitable for grid layers. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1_abstract_mask"/>
      </node>
      <node id="1">
        <label>nest::GridMask&lt; D &gt;</label>
        <link refid="classnest_1_1_grid_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>nest::Position&lt; D, T &gt;</label>
        <link refid="classnest_1_1_position"/>
      </node>
      <node id="3">
        <label>nest::Position&lt; D, int &gt;</label>
        <link refid="classnest_1_1_position"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; D, int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1_abstract_mask"/>
      </node>
      <node id="1">
        <label>nest::GridMask&lt; D &gt;</label>
        <link refid="classnest_1_1_grid_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#lower_right_</edgelabel>
          <edgelabel>#upper_left_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/grid_mask.h" line="46" column="1" bodyfile="nestkernel/grid_mask.h" bodystart="47" bodyend="110"/>
    <listofallmembers>
      <member refid="classnest_1_1_grid_mask_1a7b2996c056a502f8169d9f3d674ff039" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>clone</name></member>
      <member refid="classnest_1_1_grid_mask_1af8df2c0800ca19015228aa0d2640f83e" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>get_dict</name></member>
      <member refid="classnest_1_1_grid_mask_1a4b77557e29daea27ad41d3a6cc9b5afd" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>get_lower_right</name></member>
      <member refid="classnest_1_1_grid_mask_1af8efef36c9a815fdd9dc571f9808333d" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_grid_mask_1ad0a2ac61cc8b18e863c6f35fff54ac57" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_grid_mask_1a0ccee41c3311f240eba0c0b9bf6d93a8" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>get_name</name></member>
      <member refid="classnest_1_1_grid_mask_1a8d2e843c40d1a05ad042105dfde91137" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>get_upper_left</name></member>
      <member refid="classnest_1_1_grid_mask_1abaa1e423d9f353cef0b303213655e965" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>GridMask</name></member>
      <member refid="classnest_1_1_grid_mask_1a5318647a517d6e10a043b148654ca7d6" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>inside</name></member>
      <member refid="classnest_1_1_grid_mask_1ae5c48a629ce41fe225b6af109d61b30f" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>intersect_mask</name></member>
      <member refid="classnest_1_1_grid_mask_1a4ce53b906ce2ff6205e40360dd6aa429" prot="protected" virt="non-virtual"><scope>nest::GridMask</scope><name>lower_right_</name></member>
      <member refid="classnest_1_1_grid_mask_1a140b4309130706eb12dc07ccf13632d7" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>minus_mask</name></member>
      <member refid="classnest_1_1_grid_mask_1a2584f552d4a364e99b095535cd391a3a" prot="public" virt="non-virtual"><scope>nest::GridMask</scope><name>set_anchor</name></member>
      <member refid="classnest_1_1_grid_mask_1add92f3d77eaab12f0233d0b63b60f37a" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>union_mask</name></member>
      <member refid="classnest_1_1_grid_mask_1a5905c6619160ee51388d87dcde34076e" prot="protected" virt="non-virtual"><scope>nest::GridMask</scope><name>upper_left_</name></member>
      <member refid="classnest_1_1_abstract_mask_1a5933f9f222c335b21f90ef55c1caa430" prot="public" virt="virtual"><scope>nest::GridMask</scope><name>~AbstractMask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
