<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1ConnectionManager" kind="class" language="C++" prot="public">
    <compoundname>nest::ConnectionManager</compoundname>
    <basecompoundref refid="classnest_1_1ManagerInterface" prot="public" virt="non-virtual">nest::ManagerInterface</basecompoundref>
    <includes refid="connection__manager_8h" local="no">connection_manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610" prot="public" static="no" strong="no">
        <type></type>
        <name>ConnectionType</name>
        <qualifiedname>nest::ConnectionManager::ConnectionType</qualifiedname>
        <enumvalue id="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610ad00d494fd623af0e51b1b3b2cf447384" prot="public">
          <name>CONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610adbbce589f2b024525ff08b3f2701b253" prot="public">
          <name>CONNECT_FROM_DEVICE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610a2eea30660d09d0de9cb453132b7b14e6" prot="public">
          <name>CONNECT_TO_DEVICE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610a690fef92f99675616df1560392b420f8" prot="public">
          <name>NO_CONNECTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref> type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="70" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="71" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1ConnectionManager_1a630a7fe19e19ffa310ad17522b70878e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class SimulationManager</definition>
        <argsstring></argsstring>
        <name>SimulationManager</name>
        <qualifiedname>nest::ConnectionManager::SimulationManager</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1SimulationManager" kindref="compound">SimulationManager</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="65" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a66194774f828bbabf7d8c22e468ee6b7" prot="public" static="no" mutable="no">
        <type><ref refid="classnest_1_1Stopwatch" kindref="compound">Stopwatch</ref></type>
        <definition>Stopwatch nest::ConnectionManager::sw_construction_connect</definition>
        <argsstring></argsstring>
        <name>sw_construction_connect</name>
        <qualifiedname>nest::ConnectionManager::sw_construction_connect</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="408" column="13" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="408" bodyend="-1"/>
        <referencedby refid="classnest_1_1NestModule_1_1Connect__g__g__D__DFunction_1a1f97500f608374fd37eeaedfb8f24786" compoundref="nestmodule_8cpp" startline="922" endline="940">nest::NestModule::Connect_g_g_D_DFunction::execute</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1Connect__g__g__D__aFunction_1aa741899d36690af567ee03811ec6ba6e" compoundref="nestmodule_8cpp" startline="943" endline="967">nest::NestModule::Connect_g_g_D_aFunction::execute</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1ConnectLayers__g__g__DFunction_1ab0557c28442c2601fb6da5ebed659344" compoundref="nestmodule_8cpp" startline="2685" endline="2701">nest::NestModule::ConnectLayers_g_g_DFunction::execute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="classnest_1_1ConnectorBase" kindref="compound">ConnectorBase</ref> * &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; ConnectorBase* &gt; &gt; nest::ConnectionManager::connections_</definition>
        <argsstring></argsstring>
        <name>connections_</name>
        <qualifiedname>nest::ConnectionManager::connections_</qualifiedname>
        <briefdescription>
<para>A structure to hold the <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref> objects which in turn hold the connection information. </para>
        </briefdescription>
        <detaileddescription>
<para>Corresponds to a three dimensional structure: threads|synapses|connections </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="545" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="545" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a6a01c2fb98684250820184439034af7d" compoundref="connection__manager_8h" startline="771" endline="774">get_num_connections_</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1af756929ae281f12df3f395778207f1b6" compoundref="connection__manager_8h" startline="813" endline="816">get_target_node_id</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1aa4cf70c04f3993412ea928313a29b29a" compoundref="connection__manager_8h" startline="825" endline="832">send</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a9d4d94383f51c20182969117ad43f0d5" compoundref="connection__manager_8h" startline="843" endline="849">set_source_has_more_targets</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1SourceTable" kindref="compound">SourceTable</ref></type>
        <definition>SourceTable nest::ConnectionManager::source_table_</definition>
        <argsstring></argsstring>
        <name>source_table_</name>
        <qualifiedname>nest::ConnectionManager::source_table_</qualifiedname>
        <briefdescription>
<para>A structure to hold the node IDs of presynaptic neurons during postsynaptic connection creation, before the connection information has been transferred to the presynaptic side. </para>
        </briefdescription>
        <detaileddescription>
<para>Internally arranged in a 3d structure: threads|synapses|node IDs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="553" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="553" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a7f6b0c0c8ba2248ec530438ff56a29f0" compoundref="connection__manager_8h" startline="653" endline="659">clean_source_table</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1abb7f1fdbcba9a1b2d67ebfdb28250160" compoundref="connection__manager_8h" startline="858" endline="861">clear_compressed_spike_data_map</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a8d6d8762799a09dff63b1113545d86a1" compoundref="connection__manager_8h" startline="662" endline="668">clear_source_table</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a6e6a71cb780307b44a72a053037535de" compoundref="connection__manager_8h" startline="749" endline="756">get_next_target_data</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1aad101bf62f3cedecd89c38b1c756a2f8" compoundref="connection__manager_8h" startline="777" endline="780">get_source_node_id</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a5c99a2b3039275d1c595ad602f8e0885" compoundref="connection__manager_8h" startline="677" endline="680">is_source_table_cleared</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a72cc51766e2587d82850590d5cb423db" compoundref="connection__manager_8h" startline="707" endline="710">no_targets_to_process</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1ab5370350364d70612b51ff75843f09b3" compoundref="connection__manager_8h" startline="695" endline="698">reject_last_target_data</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a92128e48714ee59e21d5d744486598a5" compoundref="connection__manager_8h" startline="713" endline="716">reset_source_table_entry_point</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1ac7738820d617ad9c911ab5740447aa5f" compoundref="connection__manager_8h" startline="719" endline="722">restore_source_table_entry_point</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" compoundref="connection__manager_8h" startline="835" endline="840">restructure_connection_tables</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1ab574046af21302553e4282e9bc3bb839" compoundref="connection__manager_8h" startline="701" endline="704">save_source_table_entry_point</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a8fa616b7a33af0e3fa7071238507f75d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; <ref refid="classnest_1_1SpikeData" kindref="compound">SpikeData</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; SpikeData &gt; &gt; &gt; nest::ConnectionManager::compressed_spike_data_</definition>
        <argsstring></argsstring>
        <name>compressed_spike_data_</name>
        <qualifiedname>nest::ConnectionManager::compressed_spike_data_</qualifiedname>
        <briefdescription>
<para>A structure to hold &quot;unpacked&quot; spikes on the postsynaptic side if spike compression is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para>Internally arranged in a 3d structure: synapses|sources|spike data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="560" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="560" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1af19370bb7e9945157e9af4c89b3d8b8a" compoundref="connection__manager_8h" startline="852" endline="855">get_compressed_spike_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1af9aeb3eb8125ed5cd414541de1eb1ee4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; nest::ConnectionManager::secondary_recv_buffer_pos_</definition>
        <argsstring></argsstring>
        <name>secondary_recv_buffer_pos_</name>
        <qualifiedname>nest::ConnectionManager::secondary_recv_buffer_pos_</qualifiedname>
        <briefdescription>
<para>Stores absolute position in receive buffer of secondary events. </para>
        </briefdescription>
        <detaileddescription>
<para>structure: threads|synapses|position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="566" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="566" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a49fc9b9c2fdbfac802bdf440dc172d22" compoundref="connection__manager_8h" startline="765" endline="768">get_secondary_recv_buffer_position</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a16254804fc3c63f33a1d7b5d220021dc" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref>, size_t &gt;</type>
        <definition>std::map&lt; index, size_t &gt; nest::ConnectionManager::buffer_pos_of_source_node_id_syn_id_</definition>
        <argsstring></argsstring>
        <name>buffer_pos_of_source_node_id_syn_id_</name>
        <qualifiedname>nest::ConnectionManager::buffer_pos_of_source_node_id_syn_id_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="568" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1TargetTable" kindref="compound">TargetTable</ref></type>
        <definition>TargetTable nest::ConnectionManager::target_table_</definition>
        <argsstring></argsstring>
        <name>target_table_</name>
        <qualifiedname>nest::ConnectionManager::target_table_</qualifiedname>
        <briefdescription>
<para>A structure to hold the information about targets for each neuron on the presynaptic side. </para>
        </briefdescription>
        <detaileddescription>
<para>Internally arranged in a 3d structure: threads|localnodes|targets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="575" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="575" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a0ae6d51f023edf647d62319a161fe66c" compoundref="connection__manager_8h" startline="743" endline="746">add_target</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a0cfb6daf412d75b2dafc09bab819a3b1" compoundref="connection__manager_8h" startline="731" endline="734">get_remote_targets_of_local_node</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a024b7baa6a5dec791de66996f0a245b9" compoundref="connection__manager_8h" startline="759" endline="762">get_secondary_send_buffer_positions</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1ac45e1f5b8cf6a5a40ec328ea0f3df5cb" compoundref="connection__manager_8h" startline="725" endline="728">prepare_target_table</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" compoundref="connection__manager_8h" startline="835" endline="840">restructure_connection_tables</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1TargetTableDevices" kindref="compound">TargetTableDevices</ref></type>
        <definition>TargetTableDevices nest::ConnectionManager::target_table_devices_</definition>
        <argsstring></argsstring>
        <name>target_table_devices_</name>
        <qualifiedname>nest::ConnectionManager::target_table_devices_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="577" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="577" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a3c6df98351b30307a7283fe2a3dbdf42" compoundref="connection__manager_8h" startline="819" endline="822">get_device_connected</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a8ac8d6d68a9cde77289adee0f18bb03c" compoundref="connection__manager_8h" startline="683" endline="686">resize_target_table_devices_to_number_of_neurons</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a7c615b8040991ef941ed79f1da616e62" compoundref="connection__manager_8h" startline="689" endline="692">resize_target_table_devices_to_number_of_synapse_types</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a97481546e161d8ac38d29da43914f5bf" compoundref="connection__manager__impl_8h" startline="66" endline="69">send_from_device</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a33f3b39e92b74e442a3d7b708a4da9a1" compoundref="connection__manager__impl_8h" startline="54" endline="57">send_to_devices</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a0cf4c08656a0a7517f960cf1cafc9e4b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1DelayChecker" kindref="compound">DelayChecker</ref> &gt;</type>
        <definition>std::vector&lt; DelayChecker &gt; nest::ConnectionManager::delay_checkers_</definition>
        <argsstring></argsstring>
        <name>delay_checkers_</name>
        <qualifiedname>nest::ConnectionManager::delay_checkers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="579" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a0840641c0fc859a166e19769b648adf1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; size_t &gt; &gt; nest::ConnectionManager::num_connections_</definition>
        <argsstring></argsstring>
        <name>num_connections_</name>
        <qualifiedname>nest::ConnectionManager::num_connections_</qualifiedname>
        <briefdescription>
<para>A structure to count the number of synapses of a specific type. </para>
        </briefdescription>
        <detaileddescription>
<para>Arranged in a 2d structure: threads|synapsetypes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="585" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1af41015f9e5991b865353150024559109" prot="private" static="no" mutable="no">
        <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref></type>
        <definition>DictionaryDatum nest::ConnectionManager::connruledict_</definition>
        <argsstring></argsstring>
        <name>connruledict_</name>
        <qualifiedname>nest::ConnectionManager::connruledict_</qualifiedname>
        <briefdescription>
<para><ref refid="classDictionary" kindref="compound">Dictionary</ref> for connection rules. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="587" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="587" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a0fe3b21a49179d12a2c7fec5346cfc3a" compoundref="connection__manager__impl_8h" startline="43" endline="51">register_conn_builder</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a71579f9db00c8c3a995f4956036c001d" compoundref="connection__manager_8h" startline="635" endline="638">valid_connection_rule</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a6efcfb0fe9a1ca0e427c44410ae693ca" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnest_1_1GenericConnBuilderFactory" kindref="compound">GenericConnBuilderFactory</ref> * &gt;</type>
        <definition>std::vector&lt; GenericConnBuilderFactory* &gt; nest::ConnectionManager::connbuilder_factories_</definition>
        <argsstring></argsstring>
        <name>connbuilder_factories_</name>
        <qualifiedname>nest::ConnectionManager::connbuilder_factories_</qualifiedname>
        <briefdescription>
<para><ref refid="classnest_1_1ConnBuilder" kindref="compound">ConnBuilder</ref> factories, indexed by connruledict_ elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="590" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="590" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a0fe3b21a49179d12a2c7fec5346cfc3a" compoundref="connection__manager__impl_8h" startline="43" endline="51">register_conn_builder</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a9c7a1289a47ffa09024d22503041e298" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::ConnectionManager::min_delay_</definition>
        <argsstring></argsstring>
        <name>min_delay_</name>
        <qualifiedname>nest::ConnectionManager::min_delay_</qualifiedname>
        <briefdescription>
<para>Value of the smallest delay in the network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="592" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="592" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">get_min_delay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a78fb1133abe9595a36ecc2ada3165094" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::ConnectionManager::max_delay_</definition>
        <argsstring></argsstring>
        <name>max_delay_</name>
        <qualifiedname>nest::ConnectionManager::max_delay_</qualifiedname>
        <briefdescription>
<para>Value of the largest delay in the network in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="594" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="594" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" compoundref="connection__manager_8h" startline="647" endline="650">get_max_delay</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1aff1ad5dd0e38cc4dfc0824726869c682" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::keep_source_table_</definition>
        <argsstring></argsstring>
        <name>keep_source_table_</name>
        <qualifiedname>nest::ConnectionManager::keep_source_table_</qualifiedname>
        <briefdescription>
<para>Whether to keep source table after connection setup is complete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="597" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="597" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a7f6b0c0c8ba2248ec530438ff56a29f0" compoundref="connection__manager_8h" startline="653" endline="659">clean_source_table</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a8d6d8762799a09dff63b1113545d86a1" compoundref="connection__manager_8h" startline="662" endline="668">clear_source_table</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a9c2cc2a65db2f3127cac1f9e87c4013b" compoundref="connection__manager_8h" startline="671" endline="674">get_keep_source_table</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a5f01435a200b4dd2d94e889024058573" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::connections_have_changed_</definition>
        <argsstring></argsstring>
        <name>connections_have_changed_</name>
        <qualifiedname>nest::ConnectionManager::connections_have_changed_</qualifiedname>
        <briefdescription>
<para>True if new connections have been created since startup or last call to simulate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="601" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="601" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a5b30bf975871a4394bcebd9e677c4c8c" compoundref="connection__manager_8h" startline="737" endline="740">connections_have_changed</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1ab44482fb59fd93aecf21015935134879" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_connections_has_been_called_</definition>
        <argsstring></argsstring>
        <name>get_connections_has_been_called_</name>
        <qualifiedname>nest::ConnectionManager::get_connections_has_been_called_</qualifiedname>
        <briefdescription>
<para>true if GetConnections has been called. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="604" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a12e83697eae4fc161341ce621dea92cd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::sort_connections_by_source_</definition>
        <argsstring></argsstring>
        <name>sort_connections_by_source_</name>
        <qualifiedname>nest::ConnectionManager::sort_connections_by_source_</qualifiedname>
        <briefdescription>
<para>Whether to sort connections by source node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="607" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="607" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a5bb5c7c10d785adab6ce6355ec8b59d8" compoundref="connection__manager_8h" startline="795" endline="798">get_sort_connections_by_source</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a2a697782b7c4b0f90b083c738a1e16d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::use_compressed_spikes_</definition>
        <argsstring></argsstring>
        <name>use_compressed_spikes_</name>
        <qualifiedname>nest::ConnectionManager::use_compressed_spikes_</qualifiedname>
        <briefdescription>
<para>Whether to use spike compression; if a neuron has targets on multiple threads of a process, this switch makes sure that only a single packet is sent to the process instead of one packet per target thread; requires sort_connections_by_source_ = true; for more details see the discussion and sketch in <ulink url="https://github.com/nest/nest-simulator/pull/1338">https://github.com/nest/nest-simulator/pull/1338</ulink>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="615" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="615" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a89ece61ab9b21dd3001e0096414cabbd" compoundref="connection__manager_8h" startline="801" endline="804">use_compressed_spikes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1aafbbe49d9702b5333d6246a3c8a4ccec" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::has_primary_connections_</definition>
        <argsstring></argsstring>
        <name>has_primary_connections_</name>
        <qualifiedname>nest::ConnectionManager::has_primary_connections_</qualifiedname>
        <briefdescription>
<para>Whether primary connections (spikes) exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="618" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="618" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a9e4157472a06f656acf385482e1076d3" compoundref="connection__manager_8h" startline="783" endline="786">has_primary_connections</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1a2a24d66858291eaeffeaa51071896cda" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1PerThreadBoolIndicator" kindref="compound">PerThreadBoolIndicator</ref></type>
        <definition>PerThreadBoolIndicator nest::ConnectionManager::check_primary_connections_</definition>
        <argsstring></argsstring>
        <name>check_primary_connections_</name>
        <qualifiedname>nest::ConnectionManager::check_primary_connections_</qualifiedname>
        <briefdescription>
<para>Check for primary connections (spikes) on each thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="621" column="26" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1ac87b5903245da7dc5a97a83a0a9dd337" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::secondary_connections_exist_</definition>
        <argsstring></argsstring>
        <name>secondary_connections_exist_</name>
        <qualifiedname>nest::ConnectionManager::secondary_connections_exist_</qualifiedname>
        <briefdescription>
<para>Whether secondary connections (e.g., gap junctions) exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="624" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="624" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a5becb115b1c13104297a06e52c4ff8e2" compoundref="connection__manager_8h" startline="789" endline="792">secondary_connections_exist</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1ad7a765be8ae016a9b59d9d7c3e872016" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1PerThreadBoolIndicator" kindref="compound">PerThreadBoolIndicator</ref></type>
        <definition>PerThreadBoolIndicator nest::ConnectionManager::check_secondary_connections_</definition>
        <argsstring></argsstring>
        <name>check_secondary_connections_</name>
        <qualifiedname>nest::ConnectionManager::check_secondary_connections_</qualifiedname>
        <briefdescription>
<para>Check for secondary connections (e.g., gap junctions) on each thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="627" column="26" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectionManager_1ab9a6d94398e5276021567b8862b9542e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::ConnectionManager::stdp_eps_</definition>
        <argsstring></argsstring>
        <name>stdp_eps_</name>
        <qualifiedname>nest::ConnectionManager::stdp_eps_</qualifiedname>
        <briefdescription>
<para>Maximum distance between (double) spike times in STDP that is still considered 0. </para>
        </briefdescription>
        <detaileddescription>
<para>See issue #894 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="631" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="631" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectionManager_1a23712fd1cbe62b5a0b447b49894d181f" compoundref="connection__manager_8h" startline="807" endline="810">get_stdp_eps</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ade81fa94b66593d08c5a7f3eab1519e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectionManager::ConnectionManager</definition>
        <argsstring>()</argsstring>
        <name>ConnectionManager</name>
        <qualifiedname>nest::ConnectionManager::ConnectionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="78" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="63" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ab2b44ecf02b391848a5d2760676b1fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectionManager::~ConnectionManager</definition>
        <argsstring>() override</argsstring>
        <name>~ConnectionManager</name>
        <qualifiedname>nest::ConnectionManager::~ConnectionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="79" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a95e1aed37d7c704e322fea89ac9dc705" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <qualifiedname>nest::ConnectionManager::initialize</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79">initialize</reimplements>
        <briefdescription>
<para>Prepare manager for operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, the manager should be completely initialized and &quot;ready for action&quot;.</para>
<para><simplesect kind="note"><para>Initialization of any given manager may depend on other managers having been initialized before. <ref refid="classnest_1_1KernelManager_1aa731562f03c98d8fa67f1d530056ede2" kindref="member">KernelManager::initialize()</ref> is responsible for calling the initialization routines on the specific managers in correct order.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1ConnectionManager_1a6a6d1b63381ca974f610f04e042b0ff2" kindref="member">finalize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="81" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="92" bodyend="128"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a6a6d1b63381ca974f610f04e042b0ff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <qualifiedname>nest::ConnectionManager::finalize</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606">finalize</reimplements>
        <briefdescription>
<para>Take down manager after operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, all dynamic data structures created by the manager shall be deallocated and containers emptied. Plain variables need not be reset.</para>
<para><simplesect kind="note"><para>Finalization of any given manager may depend on other managers not having been finalized yet. <ref refid="classnest_1_1KernelManager_1a9e1cccd4670b1da1f68208afb5e6622f" kindref="member">KernelManager::finalize()</ref> is responsible for calling the initialization routines on the specific managers in correct order, i.e., the opposite order of <ref refid="classnest_1_1ConnectionManager_1a95e1aed37d7c704e322fea89ac9dc705" kindref="member">initialize()</ref> calls.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1ConnectionManager_1a95e1aed37d7c704e322fea89ac9dc705" kindref="member">initialize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="82" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5ff7c49e14b799dfc160e679ae8e4d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::change_number_of_threads</definition>
        <argsstring>() override</argsstring>
        <name>change_number_of_threads</name>
        <qualifiedname>nest::ConnectionManager::change_number_of_threads</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0">change_number_of_threads</reimplements>
        <briefdescription>
<para>Change the number of threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Many data structures within the different managers depend on the number of threads. This function is called on each manager upon a change of that number and allows the manager to re-allocate data structures accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a38567f7aefd520dae214065ed1816f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::ConnectionManager::set_status</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193">set_status</reimplements>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="84" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="150" bodyend="184"/>
        <references refid="namespacenest_1_1names_1aa3e3462bd28a2521ec2a04eadf663cee" compoundref="nest__names_8h" startline="280">nest::names::keep_source_table</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a378131705c36a50754331d6fc45c7a1d" compoundref="nest__names_8h" startline="303">nest::names::max_delay</references>
        <references refid="namespacenest_1_1names_1a7dfd661e5c3035f7f99d8b25fb079661" compoundref="nest__names_8h" startline="311">nest::names::min_delay</references>
        <references refid="namespacenest_1_1names_1a0d0762168b38048c6d9c4954dc12bfe8" compoundref="nest__names_8h" startline="441">nest::names::sort_connections_by_source</references>
        <references refid="namespacenest_1_1names_1abff83ab362912c32f83a4d016eb0e747" compoundref="nest__names_8h" startline="582">nest::names::use_compressed_spikes</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aede87b403fb22979e3f81b4fe546a3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) override</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::ConnectionManager::get_status</qualifiedname>
        <reimplements refid="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80">get_status</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>dict</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="85" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="193" bodyend="213"/>
        <references refid="namespacenest_1_1names_1aee3d464e876830a32b7bdea82cf0e358" compoundref="nest__names_8h" startline="126">nest::names::connection_rules</references>
        <references refid="namespacenest_1_1names_1aa3e3462bd28a2521ec2a04eadf663cee" compoundref="nest__names_8h" startline="280">nest::names::keep_source_table</references>
        <references refid="namespacenest_1_1names_1a378131705c36a50754331d6fc45c7a1d" compoundref="nest__names_8h" startline="303">nest::names::max_delay</references>
        <references refid="namespacenest_1_1names_1a7dfd661e5c3035f7f99d8b25fb079661" compoundref="nest__names_8h" startline="311">nest::names::min_delay</references>
        <references refid="namespacenest_1_1names_1af98e8363d9517b835f0c1531b2132e1c" compoundref="nest__names_8h" startline="342">nest::names::num_connections</references>
        <references refid="namespacenest_1_1names_1a0d0762168b38048c6d9c4954dc12bfe8" compoundref="nest__names_8h" startline="441">nest::names::sort_connections_by_source</references>
        <references refid="namespacenest_1_1names_1a4295977c8835ed58693b840e5152db69" compoundref="nest__names_8h" startline="564">nest::names::time_construction_connect</references>
        <references refid="namespacenest_1_1names_1abff83ab362912c32f83a4d016eb0e747" compoundref="nest__names_8h" startline="582">nest::names::use_compressed_spikes</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a71579f9db00c8c3a995f4956036c001d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::valid_connection_rule</definition>
        <argsstring>(std::string)</argsstring>
        <name>valid_connection_rule</name>
        <qualifiedname>nest::ConnectionManager::valid_connection_rule</qualifiedname>
        <param>
          <type>std::string</type>
          <defname>rule_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="87" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="635" bodyend="638"/>
        <references refid="classnest_1_1ConnectionManager_1af41015f9e5991b865353150024559109" compoundref="connection__manager_8h" startline="587">connruledict_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a4a305862071d9332c29fc4e675ada3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::compute_target_data_buffer_size</definition>
        <argsstring>()</argsstring>
        <name>compute_target_data_buffer_size</name>
        <qualifiedname>nest::ConnectionManager::compute_target_data_buffer_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="89" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1318" bodyend="1348"/>
        <references refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" compoundref="mpi__manager_8cpp" startline="1061" endline="1063">nest::MPIManager::communicate</references>
        <references refid="classnest_1_1MPIManager_1a496c51140dd2f76db937357bb70ac565" compoundref="mpi__manager_8h" startline="513" endline="516">nest::MPIManager::get_num_processes</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1MPIManager_1a6fa640ce78eda75f8304879ff396ab78" compoundref="mpi__manager_8h" startline="525" endline="528">nest::MPIManager::get_rank</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1MPIManager_1a73df0e7d6e7d2a93bc02860ada5d3b40" compoundref="mpi__manager_8h" startline="577" endline="592">nest::MPIManager::set_buffer_size_target_data</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a8b0dbf28a53e184b2f2c6e988e656435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::compute_compressed_secondary_recv_buffer_positions</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>compute_compressed_secondary_recv_buffer_positions</name>
        <qualifiedname>nest::ConnectionManager::compute_compressed_secondary_recv_buffer_positions</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="90" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1351" bodyend="1388"/>
        <references refid="classnest_1_1MPIManager_1aae0ed1a42dfe4326ef1e6ab33411f6a9" compoundref="mpi__manager__impl_8h" startline="97" endline="100">nest::MPIManager::get_process_id_of_node_id</references>
        <references refid="classnest_1_1MPIManager_1a07e2b31026ad12cab3e3e782e18524ae" compoundref="mpi__manager_8h" startline="481" endline="484">nest::MPIManager::get_recv_displacement_secondary_events_in_int</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a57a2748ae9ff0b986e6c8769ea2b4f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::collect_compressed_spike_data</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>collect_compressed_spike_data</name>
        <qualifiedname>nest::ConnectionManager::collect_compressed_spike_data</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="91" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1636" bodyend="1654"/>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1abb7f1fdbcba9a1b2d67ebfdb28250160" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::clear_compressed_spike_data_map</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>clear_compressed_spike_data_map</name>
        <qualifiedname>nest::ConnectionManager::clear_compressed_spike_data_map</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="92" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="858" bodyend="861"/>
        <references refid="classnest_1_1SourceTable_1aac62088810dbb1d9020e01fd34676e0f" compoundref="source__table_8h" startline="496" endline="502">nest::SourceTable::clear_compressed_spike_data_map</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a0fe3b21a49179d12a2c7fec5346cfc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classnest_1_1ConnBuilder" kindref="compound">ConnBuilder</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::ConnectionManager::register_conn_builder</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>register_conn_builder</name>
        <qualifiedname>nest::ConnectionManager::register_conn_builder</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Add a connectivity rule, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>the respective <ref refid="classnest_1_1ConnBuilderFactory" kindref="compound">ConnBuilderFactory</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="98" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager_impl.h" bodystart="43" bodyend="51"/>
        <references refid="classnest_1_1ConnectionManager_1a6efcfb0fe9a1ca0e427c44410ae693ca" compoundref="connection__manager_8h" startline="590">connbuilder_factories_</references>
        <references refid="classnest_1_1ConnectionManager_1af41015f9e5991b865353150024559109" compoundref="connection__manager_8h" startline="587">connruledict_</references>
        <referencedby refid="classnest_1_1NestModule_1a246da59f22b9398cc08e13bfc2355ae8" compoundref="nestmodule_8cpp" startline="2910" endline="3110">nest::NestModule::init</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a7724037fd623d6100e44b3ca7c0d737d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1ConnBuilder" kindref="compound">ConnBuilder</ref> *</type>
        <definition>nest::ConnBuilder * nest::ConnectionManager::get_conn_builder</definition>
        <argsstring>(const std::string &amp;name, NodeCollectionPTR sources, NodeCollectionPTR targets, const DictionaryDatum &amp;conn_spec, const std::vector&lt; DictionaryDatum &gt; &amp;syn_specs)</argsstring>
        <name>get_conn_builder</name>
        <qualifiedname>nest::ConnectionManager::get_conn_builder</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>sources</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>targets</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>conn_spec</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &gt; &amp;</type>
          <declname>syn_specs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="100" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="364" bodyend="372"/>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a719414132e35d4b6ffa6c2a636df92eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect</definition>
        <argsstring>(NodeCollectionPTR, NodeCollectionPTR, const DictionaryDatum &amp;, const std::vector&lt; DictionaryDatum &gt; &amp;)</argsstring>
        <name>connect</name>
        <qualifiedname>nest::ConnectionManager::connect</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>sources</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <defname>targets</defname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>conn_spec</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &gt; &amp;</type>
          <defname>syn_specs</defname>
        </param>
        <briefdescription>
<para>Create connections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="109" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="384" bodyend="433"/>
        <references refid="logging_8h_1a91f6a947f0219a1ffb76f912c65cba95" compoundref="logging_8h" startline="34">ALL_ENTRIES_ACCESSED</references>
        <references refid="classnest_1_1ConnBuilder_1a54828d7220c7a68e98b83529e0405208" compoundref="conn__builder_8cpp" startline="204" endline="263">nest::ConnBuilder::connect</references>
        <references refid="namespacenest_1_1names_1a99674d96982c345dc5b6d462681b0d2c" compoundref="nest__names_8h" startline="422">nest::names::rule</references>
        <referencedby refid="namespacenest_1af6ec6494018607109b78df691ed06e6d" compoundref="nest_8cpp" startline="182" endline="188">nest::connect</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1a9406f2b55a5fdbb556a8c5642e150967" compoundref="connection__creator__impl_8h" startline="73" endline="111">nest::ConnectionCreator::connect_to_target_</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1Connect__g__g__D__DFunction_1a1f97500f608374fd37eeaedfb8f24786" compoundref="nestmodule_8cpp" startline="922" endline="940">nest::NestModule::Connect_g_g_D_DFunction::execute</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1Connect__g__g__D__aFunction_1aa741899d36690af567ee03811ec6ba6e" compoundref="nestmodule_8cpp" startline="943" endline="967">nest::NestModule::Connect_g_g_D_aFunction::execute</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1aa17ea21863e869441d8eb30ec68115f1" compoundref="connection__creator__impl_8h" startline="342" endline="635">nest::ConnectionCreator::fixed_indegree_</referencedby>
        <referencedby refid="classnest_1_1ConnectionCreator_1aed574cbd0e3449ff398d4679033fb0f5" compoundref="connection__creator__impl_8h" startline="640" endline="788">nest::ConnectionCreator::fixed_outdegree_</referencedby>
        <referencedby refid="classnest_1_1ConnBuilder_1a3edb34cd9b903094a46df238bb26cfb9" compoundref="conn__builder_8cpp" startline="319" endline="370">nest::ConnBuilder::single_connect_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a0594fd0c611ae17f9ebe921d0153e60a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect</definition>
        <argsstring>(TokenArray, TokenArray, const DictionaryDatum &amp;)</argsstring>
        <name>connect</name>
        <qualifiedname>nest::ConnectionManager::connect</qualifiedname>
        <param>
          <type><ref refid="classTokenArray" kindref="compound">TokenArray</ref></type>
          <defname>sources</defname>
        </param>
        <param>
          <type><ref refid="classTokenArray" kindref="compound">TokenArray</ref></type>
          <defname>targets</defname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <defname>syn_spec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="111" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="436" bodyend="458"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</references>
        <references refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a56bc5dea621d7713c57bdea7b7d0ecd4" compoundref="nest__names_8h" startline="314">nest::names::model</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a246f15c815e9ef17e6f18e9e9c58a1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect</definition>
        <argsstring>(const index snode_id, Node *target, thread target_thread, const synindex syn_id, const DictionaryDatum &amp;params, const double delay=numerics::nan, const double weight=numerics::nan)</argsstring>
        <name>connect</name>
        <qualifiedname>nest::ConnectionManager::connect</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>target_thread</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
          <defval><ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
          <defval><ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref></defval>
        </param>
        <briefdescription>
<para>Connect two nodes. </para>
        </briefdescription>
        <detaileddescription>
<para>The source node is defined by its global ID. The target node is defined by the node. The connection is established on the thread/process that owns the target node.</para>
<para>The parameters delay and weight have the default value <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref>. <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref> is a special value, which describes double values that are not a number. If delay or weight is omitted in a connect call, <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref> indicates this and weight/delay are set only, if they are valid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snode_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node ID of the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to target <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_thread</parametername>
</parameternamelist>
<parameterdescription>
<para>Thread that hosts the target node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The synapse model to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> dictionary to configure the synapse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay of the connection (in ms). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of the connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="132" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="495" bodyend="523"/>
        <references refid="classnest_1_1ModelManager_1ac0f410c34344596285d9d3e886a80148" compoundref="model__manager_8h" startline="319" endline="325">nest::ModelManager::assert_valid_syn_id</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1acc34cde58d51aec7495e813c76b48d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::connect</definition>
        <argsstring>(const index snode_id, const index target, const DictionaryDatum &amp;params, const synindex syn_id)</argsstring>
        <name>connect</name>
        <qualifiedname>nest::ConnectionManager::connect</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
<para>Connect two nodes. </para>
        </briefdescription>
        <detaileddescription>
<para>The source and target nodes are defined by their global ID. The connection is established on the thread/process that owns the target node.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snode_id</parametername>
</parameternamelist>
<parameterdescription>
<para>node ID of the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>node ID of the target <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> dictionary to configure the synapse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The synapse model to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="150" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="527" bodyend="565"/>
        <references refid="classnest_1_1ModelManager_1ac0f410c34344596285d9d3e886a80148" compoundref="model__manager_8h" startline="319" endline="325">nest::ModelManager::assert_valid_syn_id</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a4f5d4769f422431b7560df35af23867a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect_arrays</definition>
        <argsstring>(long *sources, long *targets, double *weights, double *delays, std::vector&lt; std::string &gt; &amp;p_keys, double *p_values, size_t n, std::string syn_model)</argsstring>
        <name>connect_arrays</name>
        <qualifiedname>nest::ConnectionManager::connect_arrays</qualifiedname>
        <param>
          <type>long *</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>delays</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>p_keys</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p_values</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>syn_model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="152" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="568" bodyend="740"/>
        <references refid="logging_8h_1a91f6a947f0219a1ffb76f912c65cba95" compoundref="logging_8h" startline="34">ALL_ENTRIES_ACCESSED</references>
        <references refid="namespacenest_1af6ec6494018607109b78df691ed06e6d" compoundref="nest_8cpp" startline="182" endline="188">nest::connect</references>
        <references refid="classnest_1_1ModelManager_1a4ee6b18a6bad6d272e07d838a2af7f1a" compoundref="model__manager_8cpp" startline="394" endline="410">nest::ModelManager::get_connector_defaults</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" compoundref="numerics_8cpp" startline="88">numerics::nan</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">Name::toString</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="namespacenest_1a09866d06afe4905d1c363ac9e4306d1c" compoundref="nest_8cpp" startline="191" endline="201">nest::connect_arrays</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a94262293e4f3635724ff15bba58b690f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>nest::index nest::ConnectionManager::find_connection</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index snode_id, const index tnode_id)</argsstring>
        <name>find_connection</name>
        <qualifiedname>nest::ConnectionManager::find_connection</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>tnode_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="161" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="837" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::disconnect</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index snode_id, const index tnode_id)</argsstring>
        <name>disconnect</name>
        <qualifiedname>nest::ConnectionManager::disconnect</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>snode_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>tnode_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="163" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="862" bodyend="881"/>
        <references refid="namespacenest_1a32bdd353a98ed7e8fc719f244afa157c" compoundref="nest__types_8h" startline="138">nest::invalid_synindex</references>
        <referencedby refid="classnest_1_1SPManager_1ae2c3831a343dd28da33c87fed976b2a9" compoundref="sp__manager_8cpp" startline="533" endline="562">nest::SPManager::delete_synapse</referencedby>
        <referencedby refid="classnest_1_1SPManager_1ae5b9af1301a59e2ccde8633c203e34a3" compoundref="sp__manager_8cpp" startline="215" endline="252">nest::SPManager::disconnect</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aef56ff34a0321cb40e4a13b5e3743323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610" kindref="member">ConnectionType</ref></type>
        <definition>nest::ConnectionManager::ConnectionType nest::ConnectionManager::connection_required</definition>
        <argsstring>(Node *&amp;source, Node *&amp;target, thread tid)</argsstring>
        <name>connection_required</name>
        <qualifiedname>nest::ConnectionManager::connection_required</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *&amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *&amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Check whether a connection between the given source and target nodes can be established on the given thread with id tid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The type of connection as ConnectionType if the connection should be made, <ref refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610a690fef92f99675616df1560392b420f8" kindref="member">ConnectionType::NO_CONNECTION</ref> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="172" column="18" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1391" bodyend="1480"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="classnest_1_1VPManager_1a7fec83282e1abdf3097ec5e9df6ee637" compoundref="vp__manager__impl_8h" startline="61" endline="64">nest::VPManager::is_local_vp</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1VPManager_1a847b957940c17b0a9c912facf1996f3c" compoundref="vp__manager__impl_8h" startline="43" endline="46">nest::VPManager::node_id_to_vp</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <references refid="classnest_1_1VPManager_1a58ddc7ca0a301790ffe71f5a9c795de7" compoundref="vp__manager__impl_8h" startline="49" endline="52">nest::VPManager::vp_to_thread</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a1906487a726e8f4bb4e65fe5868e4825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref></type>
        <definition>DictionaryDatum nest::ConnectionManager::get_synapse_status</definition>
        <argsstring>(const index source_node_id, const index target_node_id, const thread tid, const synindex syn_id, const index lcid) const</argsstring>
        <name>get_synapse_status</name>
        <qualifiedname>nest::ConnectionManager::get_synapse_status</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="175" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="216" bodyend="257"/>
        <references refid="classnest_1_1ModelManager_1ac0f410c34344596285d9d3e886a80148" compoundref="model__manager_8h" startline="319" endline="325">nest::ModelManager::assert_valid_syn_id</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <references refid="namespacenest_1_1names_1a3a5d4f3df0d8b12adeeec1813f7321ca" compoundref="nest__names_8h" startline="369">nest::names::port</references>
        <references refid="namespacenest_1_1names_1a1a7afd3c7c58dc8b2987d85b9ddd708b" compoundref="nest__names_8h" startline="442">nest::names::source</references>
        <references refid="namespacenest_1_1names_1a35594b2b96e4067b0e364e6403de588a" compoundref="nest__names_8h" startline="458">nest::names::synapse_id</references>
        <references refid="namespacenest_1_1names_1a482b795ea4c2dce1771b281f0be8ea32" compoundref="nest__names_8h" startline="460">nest::names::synapse_model</references>
        <references refid="namespacenest_1_1names_1ae35c2a4bc1016b87f1d8b52b01a2fd6c" compoundref="nest__names_8h" startline="480">nest::names::target_thread</references>
        <referencedby refid="classnest_1_1Layer_1ac1b9a1c8651f3eefae09c200e00974af" compoundref="layer__impl_8h" startline="300" endline="351">nest::Layer&lt; D &gt;::dump_connections</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1GetStatus__CFunction_1a019df3486184f89f785c075a2bc841b1" compoundref="nestmodule_8cpp" startline="533" endline="548">nest::NestModule::GetStatus_CFunction::execute</referencedby>
        <referencedby refid="classnest_1_1NestModule_1_1GetStatus__aFunction_1a814b0feefc3465c7f07f07e62657225b" compoundref="nestmodule_8cpp" startline="552" endline="573">nest::NestModule::GetStatus_aFunction::execute</referencedby>
        <referencedby refid="namespacenest_1ab62942f739d1f2d4833471d1c54f4400" compoundref="nest_8cpp" startline="154" endline="161">nest::get_connection_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a9b5dd166871f9902c15de576936dca8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::set_synapse_status</definition>
        <argsstring>(const index source_node_id, const index target_node_id, const thread tid, const synindex syn_id, const index lcid, const DictionaryDatum &amp;dict)</argsstring>
        <name>set_synapse_status</name>
        <qualifiedname>nest::ConnectionManager::set_synapse_status</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>target_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="182" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="260" bodyend="307"/>
        <references refid="classnest_1_1ModelManager_1ac0f410c34344596285d9d3e886a80148" compoundref="model__manager_8h" startline="319" endline="325">nest::ModelManager::assert_valid_syn_id</references>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="299" endline="303">nest::ModelManager::get_connection_model</references>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <referencedby refid="classnest_1_1NestModule_1_1SetStatus__aaFunction_1a25499a2a027120acd64b555a89bbd16a" compoundref="nestmodule_8cpp" startline="394" endline="444">nest::NestModule::SetStatus_aaFunction::execute</referencedby>
        <referencedby refid="namespacenest_1a66727cbf2db54d042cb6dac04cf2a816" compoundref="nest_8cpp" startline="133" endline="151">nest::set_connection_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a42095f521521f147812163a8b98ee96f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="arraydatum_8h_1ae28f9f22dee7553c3f044e7f48e4f314" kindref="member">ArrayDatum</ref></type>
        <definition>ArrayDatum nest::ConnectionManager::get_connections</definition>
        <argsstring>(const DictionaryDatum &amp;params)</argsstring>
        <name>get_connections</name>
        <qualifiedname>nest::ConnectionManager::get_connections</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Return connections between pairs of neurons. </para>
        </briefdescription>
        <detaileddescription>
<para>The params dictionary can have the following entries: &apos;source&apos; a token array with node IDs of source neurons. &apos;target&apos; a token array with node IDs of target neuron. If either of these does not exist, all neuron are used for the respective entry. &apos;synapse_model&apos; name of the synapse model, or all synapse models are searched. &apos;synapse_label&apos; label (long) of the synapse, or all synapses are searched. The function then iterates all entries in source and collects the connection IDs to all neurons in target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="203" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="946" bodyend="1015"/>
        <references refid="classToken_1a397db8062278fec3e786aa62f9d9baf8" compoundref="token_8h" startline="348" endline="351">Token::empty</references>
        <references refid="namespacenest_1af07409401611ae3fa1c2558cd0f014ea" compoundref="nest_8cpp" startline="204" endline="213">nest::get_connections</references>
        <references refid="classnest_1_1ModelManager_1a6b4dd572130a87b4819be5b8abd45bd9" compoundref="model__manager_8h" startline="312" endline="316">nest::ModelManager::get_num_connection_models</references>
        <references refid="classnest_1_1ModelManager_1a5da676347a1deaa1a434d3d6a95532d0" compoundref="model__manager_8cpp" startline="383" endline="391">nest::ModelManager::get_synapse_model_id</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="className_1a8ee5a44599eb7a686ee64c343e0c8e18" compoundref="name_8h" startline="118" endline="122">Name::lookup</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1a4feb2ae20c19197830bf57c5e7247560" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::simulation_manager</references>
        <references refid="namespacenest_1_1names_1a1a7afd3c7c58dc8b2987d85b9ddd708b" compoundref="nest__names_8h" startline="442">nest::names::source</references>
        <references refid="namespacenest_1_1names_1ae563034004aea3f7d91553886c46b1f5" compoundref="nest__names_8h" startline="459">nest::names::synapse_label</references>
        <references refid="namespacenest_1_1names_1a482b795ea4c2dce1771b281f0be8ea32" compoundref="nest__names_8h" startline="460">nest::names::synapse_model</references>
        <references refid="namespacenest_1_1names_1a83d2632e91d15673db6f7990fcdfe232" compoundref="nest__names_8h" startline="479">nest::names::target</references>
        <references refid="namespacenest_1aa69a20373c241553ae8038c0fa56e37a" compoundref="connection__label_8h" startline="41">nest::UNLABELED_CONNECTION</references>
        <references refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1Layer_1ac1b9a1c8651f3eefae09c200e00974af" compoundref="layer__impl_8h" startline="300" endline="351">nest::Layer&lt; D &gt;::dump_connections</referencedby>
        <referencedby refid="namespacenest_1af07409401611ae3fa1c2558cd0f014ea" compoundref="nest_8cpp" startline="204" endline="213">nest::get_connections</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aa02010a909e00e2a88ac9d5e51533e4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::get_connections</definition>
        <argsstring>(std::deque&lt; ConnectionID &gt; &amp;connectome, NodeCollectionPTR source, NodeCollectionPTR target, synindex syn_id, long synapse_label) const</argsstring>
        <name>get_connections</name>
        <qualifiedname>nest::ConnectionManager::get_connections</qualifiedname>
        <param>
          <type>std::deque&lt; <ref refid="classnest_1_1ConnectionID" kindref="compound">ConnectionID</ref> &gt; &amp;</type>
          <declname>connectome</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>long</type>
          <declname>synapse_label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="205" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1057" bodyend="1239"/>
        <references refid="connection__manager_8cpp_1a68830334f5a59c071357012c06b58f66" compoundref="connection__manager_8cpp" startline="1020" endline="1029">extend_connectome</references>
        <references refid="classnest_1_1ConnectorBase_1af0bba36ebeed4b6ba93b1667a96275b0">nest::ConnectorBase::get_connection</references>
        <references refid="classnest_1_1ConnectorBase_1a86589add3fa38b1c1c37982a1663c3a4">nest::ConnectorBase::get_connection_with_specified_targets</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1ConnectorBase_1abbdfcab73f32165ded037f7bd7651a58">nest::ConnectorBase::size</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a60a983ed4638ecc02e7e3f0c73474e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::ConnectionManager::get_num_connections</definition>
        <argsstring>() const</argsstring>
        <name>get_num_connections</name>
        <qualifiedname>nest::ConnectionManager::get_num_connections</qualifiedname>
        <briefdescription>
<para>Returns the number of connections in the network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="214" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="916" bodyend="928"/>
        <referencedby refid="classnest_1_1ModelManager_1a4ee6b18a6bad6d272e07d838a2af7f1a" compoundref="model__manager_8cpp" startline="394" endline="410">nest::ModelManager::get_connector_defaults</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ac62b33a788aeb12b0408ad6af4592576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::ConnectionManager::get_num_connections</definition>
        <argsstring>(const synindex syn_id) const</argsstring>
        <name>get_num_connections</name>
        <qualifiedname>nest::ConnectionManager::get_num_connections</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
<para>Returns the number of connections of this synapse type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="219" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="931" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a7cc5104fcceb1b875d22ae6c9f0c2018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::get_sources</definition>
        <argsstring>(const std::vector&lt; index &gt; &amp;targets, const index syn_id, std::vector&lt; std::vector&lt; index &gt; &gt; &amp;sources)</argsstring>
        <name>get_sources</name>
        <qualifiedname>nest::ConnectionManager::get_sources</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt; &amp;</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="222" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1256" bodyend="1273"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SPManager_1a3f7183684e5410096b01044c13da7f80" compoundref="sp__manager_8cpp" startline="575" endline="621">nest::SPManager::delete_synapses_from_post</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a6798d923ce597300f380d3e8bd864ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::get_targets</definition>
        <argsstring>(const std::vector&lt; index &gt; &amp;sources, const index syn_id, const std::string &amp;post_synaptic_element, std::vector&lt; std::vector&lt; index &gt; &gt; &amp;targets)</argsstring>
        <name>get_targets</name>
        <qualifiedname>nest::ConnectionManager::get_targets</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>post_synaptic_element</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &gt; &amp;</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="224" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1276" bodyend="1298"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SPManager_1a135b22e6cd3f6888480ceb0ef2ef9706" compoundref="sp__manager_8cpp" startline="476" endline="519">nest::SPManager::delete_synapses_from_pre</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a0cfb6daf412d75b2dafc09bab819a3b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classnest_1_1Target" kindref="compound">Target</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Target &gt; &amp; nest::ConnectionManager::get_remote_targets_of_local_node</definition>
        <argsstring>(const thread tid, const index lid) const</argsstring>
        <name>get_remote_targets_of_local_node</name>
        <qualifiedname>nest::ConnectionManager::get_remote_targets_of_local_node</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="229" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="731" bodyend="734"/>
        <references refid="classnest_1_1TargetTable_1aa6fd385f8ce64bcb2e0b88c7f8091176" compoundref="target__table_8h" startline="115" endline="118">nest::TargetTable::get_targets</references>
        <references refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" compoundref="connection__manager_8h" startline="575">target_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a72294da04cb238f288aa5f9d1f7386ed" compoundref="event__delivery__manager__impl_8h" startline="123" endline="139">nest::EventDeliveryManager::send_off_grid_remote</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0a6bec5fc67fcee1df2e08b46f7110f7" compoundref="event__delivery__manager__impl_8h" startline="104" endline="120">nest::EventDeliveryManager::send_remote</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1af756929ae281f12df3f395778207f1b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::ConnectionManager::get_target_node_id</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index lcid) const</argsstring>
        <name>get_target_node_id</name>
        <qualifiedname>nest::ConnectionManager::get_target_node_id</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="231" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="813" bodyend="816"/>
        <references refid="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" compoundref="connection__manager_8h" startline="545">connections_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a3c6df98351b30307a7283fe2a3dbdf42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_device_connected</definition>
        <argsstring>(thread tid, index lcid) const</argsstring>
        <name>get_device_connected</name>
        <qualifiedname>nest::ConnectionManager::get_device_connected</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="233" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="819" bodyend="822"/>
        <references refid="classnest_1_1TargetTableDevices_1a99e986592b99cc3dfceafa870ee0e678" compoundref="target__table__devices_8h" startline="250" endline="265">nest::TargetTableDevices::is_device_connected</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
        <referencedby refid="classnest_1_1StimulationBackendMPI_1ac083c50fc8f38d7b7dbb0ccb9fea04bd" compoundref="stimulation__backend__mpi_8cpp" startline="100" endline="201">nest::StimulationBackendMPI::prepare</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a831fe8bbe7a7f042a2add7c25a6c7906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::trigger_update_weight</definition>
        <argsstring>(const long vt_node_id, const std::vector&lt; spikecounter &gt; &amp;dopa_spikes, const double t_trig)</argsstring>
        <name>trigger_update_weight</name>
        <qualifiedname>nest::ConnectionManager::trigger_update_weight</qualifiedname>
        <param>
          <type>const long</type>
          <declname>vt_node_id</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1spikecounter" kindref="compound">spikecounter</ref> &gt; &amp;</type>
          <declname>dopa_spikes</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>t_trig</declname>
        </param>
        <briefdescription>
<para>Triggered by volume transmitter in update. </para>
        </briefdescription>
        <detaileddescription>
<para>Triggeres updates for all connectors of dopamine synapses that are registered with the volume transmitter with node_id vt_node_id. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="240" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="884" bodyend="899"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1volume__transmitter_1a82b242f2aa00edebf8d09404deba98f7" compoundref="volume__transmitter_8cpp" startline="96" endline="130">nest::volume_transmitter::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::ConnectionManager::get_min_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_min_delay</name>
        <qualifiedname>nest::ConnectionManager::get_min_delay</qualifiedname>
        <briefdescription>
<para>Return minimal connection delay, which is precomputed by <ref refid="classnest_1_1ConnectionManager_1adb41052adde337156940c1cccb0dd157" kindref="member">update_delay_extrema_()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="246" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="641" bodyend="644"/>
        <references refid="classnest_1_1ConnectionManager_1a9c7a1289a47ffa09024d22503041e298" compoundref="connection__manager_8h" startline="592">min_delay_</references>
        <referencedby refid="classnest_1_1SimulationManager_1a367e0a54fd85196fe34d543960d43110" compoundref="simulation__manager_8cpp" startline="1065" endline="1096">nest::SimulationManager::advance_time_</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1afd253171e8f64e64ff5cd672b4ba1799" compoundref="delay__checker_8cpp" startline="184" endline="246">nest::DelayChecker::assert_two_valid_delays_steps</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1a4a0e6ca8d78a66919f2688e286bf66cb" compoundref="delay__checker_8cpp" startline="121" endline="181">nest::DelayChecker::assert_valid_delay_ms</referencedby>
        <referencedby refid="classnest_1_1correlomatrix__detector_1a84891b0d4ab3820b9777fe9fb1b9dda9" compoundref="correlomatrix__detector_8cpp" startline="289" endline="390">nest::correlomatrix_detector::handle</referencedby>
        <referencedby refid="classnest_1_1correlospinmatrix__detector_1a07028b46a5ee0b25290b33f945c3f096" compoundref="correlospinmatrix__detector_8cpp" startline="299" endline="480">nest::correlospinmatrix_detector::handle</referencedby>
        <referencedby refid="classnest_1_1rate__neuron__ipn_1a24c8070cea942180acbad89588f0ce54" compoundref="rate__neuron__ipn__impl_8h" startline="216" endline="236">nest::rate_neuron_ipn&lt; TNonlinearities &gt;::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1rate__neuron__opn_1af361f439c50e86c8d8e291a515aa6eb4" compoundref="rate__neuron__opn__impl_8h" startline="200" endline="220">nest::rate_neuron_opn&lt; TNonlinearities &gt;::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1rate__transformer__node_1a4e3b162d550952eddd43cc6175e37473" compoundref="rate__transformer__node__impl_8h" startline="153" endline="164">nest::rate_transformer_node&lt; TNonlinearities &gt;::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0c223a5656aa437fb3f358230e2834c2" compoundref="event__delivery__manager_8cpp" startline="198" endline="228">nest::EventDeliveryManager::init_moduli</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" compoundref="simulation__manager_8cpp" startline="434" endline="497">nest::SimulationManager::prepare</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a180dd269cf5fbbd9be531222867d711c" compoundref="ring__buffer_8cpp" startline="31" endline="38">nest::RingBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1MultRBuffer_1ad3d43fd5d1125f012b4deaca40744c46" compoundref="ring__buffer_8cpp" startline="55" endline="62">nest::MultRBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1ListRingBuffer_1a1cad599eada80719aed5f06e7164fd59" compoundref="ring__buffer_8cpp" startline="78" endline="85">nest::ListRingBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1MultiChannelInputBuffer_1a7352dba1532287331ac88d27790df9ee" compoundref="ring__buffer__impl_8h" startline="37" endline="44">nest::MultiChannelInputBuffer&lt; num_channels &gt;::resize</referencedby>
        <referencedby refid="classnest_1_1step__rate__generator_1a3e1950f9a332db79103df7636483c9aa" compoundref="step__rate__generator_8cpp" startline="274" endline="328">nest::step_rate_generator::update</referencedby>
        <referencedby refid="classnest_1_1SimulationManager_1a4ad2ea77edb56fb13176de0932bac835" compoundref="simulation__manager_8cpp" startline="763" endline="1062">nest::SimulationManager::update_</referencedby>
        <referencedby refid="classnest_1_1rate__neuron__ipn_1a2ba90a0d2806a0379cbd1e11388abd08" compoundref="rate__neuron__ipn__impl_8h" startline="268" endline="395">nest::rate_neuron_ipn&lt; TNonlinearities &gt;::update_</referencedby>
        <referencedby refid="classnest_1_1rate__neuron__opn_1aa8f19c2d41620fedcbe60467f3300f04" compoundref="rate__neuron__opn__impl_8h" startline="244" endline="368">nest::rate_neuron_opn&lt; TNonlinearities &gt;::update_</referencedby>
        <referencedby refid="classnest_1_1rate__transformer__node_1a56f655c73fcf14082776b6650e21d420" compoundref="rate__transformer__node__impl_8h" startline="179" endline="263">nest::rate_transformer_node&lt; TNonlinearities &gt;::update_</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a18e210cef727c0b93605fa3dcd941a28" compoundref="event__delivery__manager_8cpp" startline="239" endline="263">nest::EventDeliveryManager::update_moduli</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
        <definition>delay nest::ConnectionManager::get_max_delay</definition>
        <argsstring>() const</argsstring>
        <name>get_max_delay</name>
        <qualifiedname>nest::ConnectionManager::get_max_delay</qualifiedname>
        <briefdescription>
<para>Return maximal connection delay, which is precomputed by <ref refid="classnest_1_1ConnectionManager_1adb41052adde337156940c1cccb0dd157" kindref="member">update_delay_extrema_()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="252" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="647" bodyend="650"/>
        <references refid="classnest_1_1ConnectionManager_1a78fb1133abe9595a36ecc2ada3165094" compoundref="connection__manager_8h" startline="594">max_delay_</references>
        <referencedby refid="classnest_1_1DelayChecker_1afd253171e8f64e64ff5cd672b4ba1799" compoundref="delay__checker_8cpp" startline="184" endline="246">nest::DelayChecker::assert_two_valid_delays_steps</referencedby>
        <referencedby refid="classnest_1_1DelayChecker_1a4a0e6ca8d78a66919f2688e286bf66cb" compoundref="delay__checker_8cpp" startline="121" endline="181">nest::DelayChecker::assert_valid_delay_ms</referencedby>
        <referencedby refid="classnest_1_1ClopathArchivingNode_1ab23d55dd18a84bf26d975ddcea62fca9" compoundref="clopath__archiving__node_8cpp" startline="65" endline="82">nest::ClopathArchivingNode::init_clopath_buffers</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0c223a5656aa437fb3f358230e2834c2" compoundref="event__delivery__manager_8cpp" startline="198" endline="228">nest::EventDeliveryManager::init_moduli</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a180dd269cf5fbbd9be531222867d711c" compoundref="ring__buffer_8cpp" startline="31" endline="38">nest::RingBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1MultRBuffer_1ad3d43fd5d1125f012b4deaca40744c46" compoundref="ring__buffer_8cpp" startline="55" endline="62">nest::MultRBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1ListRingBuffer_1a1cad599eada80719aed5f06e7164fd59" compoundref="ring__buffer_8cpp" startline="78" endline="85">nest::ListRingBuffer::resize</referencedby>
        <referencedby refid="classnest_1_1MultiChannelInputBuffer_1a7352dba1532287331ac88d27790df9ee" compoundref="ring__buffer__impl_8h" startline="37" endline="44">nest::MultiChannelInputBuffer&lt; num_channels &gt;::resize</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a18e210cef727c0b93605fa3dcd941a28" compoundref="event__delivery__manager_8cpp" startline="239" endline="263">nest::EventDeliveryManager::update_moduli</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a0a1653bb70ca11e329d10e6355be549e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_user_set_delay_extrema</definition>
        <argsstring>() const</argsstring>
        <name>get_user_set_delay_extrema</name>
        <qualifiedname>nest::ConnectionManager::get_user_set_delay_extrema</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="254" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="350" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aa4cf70c04f3993412ea928313a29b29a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::send</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index lcid, const std::vector&lt; ConnectorModel * &gt; &amp;cm, Event &amp;e)</argsstring>
        <name>send</name>
        <qualifiedname>nest::ConnectionManager::send</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> * &gt; &amp;</type>
          <declname>cm</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="257" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="825" bodyend="832"/>
        <references refid="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" compoundref="connection__manager_8h" startline="545">connections_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1aba9898648e890ea2ac369891420259d9" compoundref="event__delivery__manager_8cpp" startline="574" endline="660">nest::EventDeliveryManager::deliver_events_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a33f3b39e92b74e442a3d7b708a4da9a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::send_to_devices</definition>
        <argsstring>(const thread tid, const index source_node_id, Event &amp;e)</argsstring>
        <name>send_to_devices</name>
        <qualifiedname>nest::ConnectionManager::send_to_devices</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Send event e to all device targets of source source_node_id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="262" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager_impl.h" bodystart="54" bodyend="57"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1TargetTableDevices_1a83ca4950e9427381cdde2d7984056b20" compoundref="target__table__devices__impl_8h" startline="76" endline="91">nest::TargetTableDevices::send_to_device</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a5e4b094adb9d2d4780566a91be4fe3ec" compoundref="event__delivery__manager__impl_8h" startline="67" endline="93">nest::EventDeliveryManager::send</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a8737cdbec8c0111d2bce0bf7e8d324a2" compoundref="event__delivery__manager__impl_8h" startline="142" endline="174">nest::EventDeliveryManager::send_secondary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ad2ac475fde6e791711a2ed8c00bbb71b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::send_to_devices</definition>
        <argsstring>(const thread tid, const index source_node_id, SecondaryEvent &amp;e)</argsstring>
        <name>send_to_devices</name>
        <qualifiedname>nest::ConnectionManager::send_to_devices</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>source_node_id</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="263" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager_impl.h" bodystart="60" bodyend="63"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1TargetTableDevices_1a83ca4950e9427381cdde2d7984056b20" compoundref="target__table__devices__impl_8h" startline="76" endline="91">nest::TargetTableDevices::send_to_device</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a97481546e161d8ac38d29da43914f5bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::send_from_device</definition>
        <argsstring>(const thread tid, const index ldid, Event &amp;e)</argsstring>
        <name>send_from_device</name>
        <qualifiedname>nest::ConnectionManager::send_from_device</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>ldid</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Send event e to all targets of source device ldid (local device id) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="268" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager_impl.h" bodystart="66" bodyend="69"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1TargetTableDevices_1a01f89b16e9db817588032ae7ac0d19d3" compoundref="target__table__devices_8h" startline="233" endline="247">nest::TargetTableDevices::send_from_device</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1ad8c20f2ee5dea459b38de6063e63aee3" compoundref="event__delivery__manager__impl_8h" startline="37" endline="45">nest::EventDeliveryManager::send_local_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1af322463684d9d9a6fe45c5e47602864f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::send_local</definition>
        <argsstring>(thread t, Node &amp;source, Event &amp;e)</argsstring>
        <name>send_local</name>
        <qualifiedname>nest::ConnectionManager::send_local</qualifiedname>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Send event e to all targets of node source on thread t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="273" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a38c4581862f4bbc6e43c83daaa2453a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::calibrate</definition>
        <argsstring>(const TimeConverter &amp;)</argsstring>
        <name>calibrate</name>
        <qualifiedname>nest::ConnectionManager::calibrate</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> &amp;</type>
          <defname>tc</defname>
        </param>
        <briefdescription>
<para>Resize the structures for the <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref> objects if necessary. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should be called after number of threads, min_delay, max_delay, and time representation have been changed in the scheduler. The <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> is used to convert times from the old to the new representation. It is also forwarding the calibration request to all <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="283" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="375" bodyend="381"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1SimulationManager_1a8e68ef9b61dd3e17a09829333503b6ac" compoundref="simulation__manager_8cpp" startline="116" endline="395">nest::SimulationManager::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a13545535bee9810548166d5d8606cbfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1DelayChecker" kindref="compound">DelayChecker</ref> &amp;</type>
        <definition>nest::DelayChecker &amp; nest::ConnectionManager::get_delay_checker</definition>
        <argsstring>()</argsstring>
        <name>get_delay_checker</name>
        <qualifiedname>nest::ConnectionManager::get_delay_checker</qualifiedname>
        <briefdescription>
<para>Returns the delay checker for the current thread. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="288" column="16" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="187" bodyend="190"/>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a55662c78049406c5119cd0c81e6de812" compoundref="connector__model__impl_8h" startline="185" endline="256">nest::GenericConnectorModel&lt; ConnectionT &gt;::add_connection</referencedby>
        <referencedby refid="classnest_1_1GenericConnectorModel_1aa02f22324265fc3bbb1447322c97aa9a" compoundref="connector__model__impl_8h" startline="107" endline="131">nest::GenericConnectorModel&lt; ConnectionT &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1cont__delay__synapse_1a59e07e30f11187a58471fe22fb86e194" compoundref="cont__delay__synapse__impl_8h" startline="60" endline="91">nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1Connection_1aede706c57e428cfe0831f17fa439f4fe" compoundref="connection_8h" startline="355" endline="364">nest::Connection&lt; targetidentifierT &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a20dcb39b4807eb02c6d55d737f4afa83" compoundref="connector__model__impl_8h" startline="135" endline="174">nest::GenericConnectorModel&lt; ConnectionT &gt;::used_default_delay</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a7f6b0c0c8ba2248ec530438ff56a29f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::clean_source_table</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>clean_source_table</name>
        <qualifiedname>nest::ConnectionManager::clean_source_table</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Removes processed entries from source table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="291" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="653" bodyend="659"/>
        <references refid="classnest_1_1SourceTable_1ac038d1355e698abb17e3e74a66a8b7e6" compoundref="source__table_8cpp" startline="112" endline="155">nest::SourceTable::clean</references>
        <references refid="classnest_1_1ConnectionManager_1aff1ad5dd0e38cc4dfc0824726869c682" compoundref="connection__manager_8h" startline="597">keep_source_table_</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a8d6d8762799a09dff63b1113545d86a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::clear_source_table</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>clear_source_table</name>
        <qualifiedname>nest::ConnectionManager::clear_source_table</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Clears all entries in source table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="294" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="662" bodyend="668"/>
        <references refid="classnest_1_1SourceTable_1a27bdf608ea88eb4afc2309654fee35a1" compoundref="source__table_8h" startline="317" endline="325">nest::SourceTable::clear</references>
        <references refid="classnest_1_1ConnectionManager_1aff1ad5dd0e38cc4dfc0824726869c682" compoundref="connection__manager_8h" startline="597">keep_source_table_</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a9c2cc2a65db2f3127cac1f9e87c4013b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_keep_source_table</definition>
        <argsstring>() const</argsstring>
        <name>get_keep_source_table</name>
        <qualifiedname>nest::ConnectionManager::get_keep_source_table</qualifiedname>
        <briefdescription>
<para>Returns true if source table is kept after building network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="297" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="671" bodyend="674"/>
        <references refid="classnest_1_1ConnectionManager_1aff1ad5dd0e38cc4dfc0824726869c682" compoundref="connection__manager_8h" startline="597">keep_source_table_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5c99a2b3039275d1c595ad602f8e0885" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::is_source_table_cleared</definition>
        <argsstring>() const</argsstring>
        <name>is_source_table_cleared</name>
        <qualifiedname>nest::ConnectionManager::is_source_table_cleared</qualifiedname>
        <briefdescription>
<para>Returns true if source table was cleared. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="300" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="677" bodyend="680"/>
        <references refid="classnest_1_1SourceTable_1aa88eeb6c1c6a285878b6559f2a7ae636" compoundref="source__table_8cpp" startline="86" endline="89">nest::SourceTable::is_cleared</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ac45e1f5b8cf6a5a40ec328ea0f3df5cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::prepare_target_table</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>prepare_target_table</name>
        <qualifiedname>nest::ConnectionManager::prepare_target_table</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="302" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="725" bodyend="728"/>
        <references refid="classnest_1_1TargetTable_1ab2b10c675f23dfc38f8922f61b521127" compoundref="target__table_8cpp" startline="53" endline="68">nest::TargetTable::prepare</references>
        <references refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" compoundref="connection__manager_8h" startline="575">target_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a8ac8d6d68a9cde77289adee0f18bb03c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::resize_target_table_devices_to_number_of_neurons</definition>
        <argsstring>()</argsstring>
        <name>resize_target_table_devices_to_number_of_neurons</name>
        <qualifiedname>nest::ConnectionManager::resize_target_table_devices_to_number_of_neurons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="304" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="683" bodyend="686"/>
        <references refid="classnest_1_1TargetTableDevices_1aa43b68ae856da1355976d98dc4ff2664" compoundref="target__table__devices_8cpp" startline="77" endline="86">nest::TargetTableDevices::resize_to_number_of_neurons</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
        <referencedby refid="classnest_1_1NodeManager_1a8e6c4a313d6bf3d30f0d0ef111567575" compoundref="node__manager_8cpp" startline="105" endline="183">nest::NodeManager::add_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a7c615b8040991ef941ed79f1da616e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::resize_target_table_devices_to_number_of_synapse_types</definition>
        <argsstring>()</argsstring>
        <name>resize_target_table_devices_to_number_of_synapse_types</name>
        <qualifiedname>nest::ConnectionManager::resize_target_table_devices_to_number_of_synapse_types</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="306" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="689" bodyend="692"/>
        <references refid="classnest_1_1TargetTableDevices_1ae9fa721651b8a36af760da0ec4c62270" compoundref="target__table__devices_8cpp" startline="89" endline="105">nest::TargetTableDevices::resize_to_number_of_synapse_types</references>
        <references refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" compoundref="connection__manager_8h" startline="577">target_table_devices_</references>
        <referencedby refid="classnest_1_1NodeManager_1a8e6c4a313d6bf3d30f0d0ef111567575" compoundref="node__manager_8cpp" startline="105" endline="183">nest::NodeManager::add_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a6e6a71cb780307b44a72a053037535de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_next_target_data</definition>
        <argsstring>(const thread tid, const thread rank_start, const thread rank_end, thread &amp;target_rank, TargetData &amp;next_target_data)</argsstring>
        <name>get_next_target_data</name>
        <qualifiedname>nest::ConnectionManager::get_next_target_data</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank_start</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>rank_end</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref> &amp;</type>
          <declname>target_rank</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1TargetData" kindref="compound">TargetData</ref> &amp;</type>
          <declname>next_target_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="308" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="749" bodyend="756"/>
        <references refid="classnest_1_1SourceTable_1ac7f8bae3617bf28a6995058adfae00fd" compoundref="source__table_8cpp" startline="384" endline="449">nest::SourceTable::get_next_target_data</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0ef552ea0836e10de6ed2d44816a155f" compoundref="event__delivery__manager_8cpp" startline="735" endline="812">nest::EventDeliveryManager::collocate_target_data_buffers_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ab5370350364d70612b51ff75843f09b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::reject_last_target_data</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>reject_last_target_data</name>
        <qualifiedname>nest::ConnectionManager::reject_last_target_data</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="314" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="695" bodyend="698"/>
        <references refid="classnest_1_1SourceTable_1abe85f527077c45ca1ff2912b5268bf1b" compoundref="source__table_8h" startline="328" endline="339">nest::SourceTable::reject_last_target_data</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0ef552ea0836e10de6ed2d44816a155f" compoundref="event__delivery__manager_8cpp" startline="735" endline="812">nest::EventDeliveryManager::collocate_target_data_buffers_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ab574046af21302553e4282e9bc3bb839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::save_source_table_entry_point</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>save_source_table_entry_point</name>
        <qualifiedname>nest::ConnectionManager::save_source_table_entry_point</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="316" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="701" bodyend="704"/>
        <references refid="classnest_1_1SourceTable_1a64c0475fbb8798086a3397725045d5e8" compoundref="source__table_8h" startline="342" endline="366">nest::SourceTable::save_entry_point</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0ef552ea0836e10de6ed2d44816a155f" compoundref="event__delivery__manager_8cpp" startline="735" endline="812">nest::EventDeliveryManager::collocate_target_data_buffers_</referencedby>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a92128e48714ee59e21d5d744486598a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::reset_source_table_entry_point</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>reset_source_table_entry_point</name>
        <qualifiedname>nest::ConnectionManager::reset_source_table_entry_point</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="318" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="713" bodyend="716"/>
        <references refid="classnest_1_1SourceTable_1a40ed9782abd6c3ee75d1317172cd2f5d" compoundref="source__table_8h" startline="376" endline="400">nest::SourceTable::reset_entry_point</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ac7738820d617ad9c911ab5740447aa5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::restore_source_table_entry_point</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>restore_source_table_entry_point</name>
        <qualifiedname>nest::ConnectionManager::restore_source_table_entry_point</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="320" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="719" bodyend="722"/>
        <references refid="classnest_1_1SourceTable_1ac2dfaa479a812347eabc1733afcb05a5" compoundref="source__table_8h" startline="369" endline="373">nest::SourceTable::restore_entry_point</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1afdf89d8b5bd8a4b64d46d6f5c294e5c1" compoundref="event__delivery__manager_8cpp" startline="663" endline="732">nest::EventDeliveryManager::gather_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a0ae6d51f023edf647d62319a161fe66c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::add_target</definition>
        <argsstring>(const thread tid, const thread target_rank, const TargetData &amp;target_data)</argsstring>
        <name>add_target</name>
        <qualifiedname>nest::ConnectionManager::add_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>target_rank</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1TargetData" kindref="compound">TargetData</ref> &amp;</type>
          <declname>target_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="322" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="743" bodyend="746"/>
        <references refid="classnest_1_1TargetTable_1ad19a4c20b88fb930687b5b29a526d71c" compoundref="target__table_8cpp" startline="87" endline="110">nest::TargetTable::add_target</references>
        <references refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" compoundref="connection__manager_8h" startline="575">target_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a74794a506a31d2a674d0d4ebfa383a2c" compoundref="event__delivery__manager_8cpp" startline="826" endline="863">nest::EventDeliveryManager::distribute_target_data_buffers_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5bb5c7c10d785adab6ce6355ec8b59d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::get_sort_connections_by_source</definition>
        <argsstring>() const</argsstring>
        <name>get_sort_connections_by_source</name>
        <qualifiedname>nest::ConnectionManager::get_sort_connections_by_source</qualifiedname>
        <briefdescription>
<para>Return sort_connections_by_source_, which indicates whether connections_ and source_table_ should be sorted according to source node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="329" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="795" bodyend="798"/>
        <references refid="classnest_1_1ConnectionManager_1a12e83697eae4fc161341ce621dea92cd" compoundref="connection__manager_8h" startline="607">sort_connections_by_source_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a89ece61ab9b21dd3001e0096414cabbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::use_compressed_spikes</definition>
        <argsstring>() const</argsstring>
        <name>use_compressed_spikes</name>
        <qualifiedname>nest::ConnectionManager::use_compressed_spikes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="331" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="801" bodyend="804"/>
        <references refid="classnest_1_1ConnectionManager_1a2a697782b7c4b0f90b083c738a1e16d0" compoundref="connection__manager_8h" startline="615">use_compressed_spikes_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1aba9898648e890ea2ac369891420259d9" compoundref="event__delivery__manager_8cpp" startline="574" endline="660">nest::EventDeliveryManager::deliver_events_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ae24f61147ce5ba965b04a07f6beda83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::sort_connections</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>sort_connections</name>
        <qualifiedname>nest::ConnectionManager::sort_connections</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Sorts connections in the presynaptic infrastructure by increasing source node ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="337" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1301" bodyend="1315"/>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1acdc6d59644cf4450445a384e4ca9af85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::remove_disabled_connections</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>remove_disabled_connections</name>
        <qualifiedname>nest::ConnectionManager::remove_disabled_connections</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Removes disabled connections (of structural plasticity) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="342" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1563" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5b30bf975871a4394bcebd9e677c4c8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::connections_have_changed</definition>
        <argsstring>() const</argsstring>
        <name>connections_have_changed</name>
        <qualifiedname>nest::ConnectionManager::connections_have_changed</qualifiedname>
        <briefdescription>
<para>Returns true if connection information needs to be communicated. </para>
        </briefdescription>
        <detaileddescription>
<para>False otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="348" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="737" bodyend="740"/>
        <references refid="classnest_1_1ConnectionManager_1a5f01435a200b4dd2d94e889024058573" compoundref="connection__manager_8h" startline="601">connections_have_changed_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a364992a5aca6c29407e9ed0d97ec766b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::set_connections_have_changed</definition>
        <argsstring>()</argsstring>
        <name>set_connections_have_changed</name>
        <qualifiedname>nest::ConnectionManager::set_connections_have_changed</qualifiedname>
        <briefdescription>
<para>Sets flag indicating whether connection information needs to be communicated to true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="354" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1612" bodyend="1626"/>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaacd7f6853f3c5659533a75bc712c3b" compoundref="logging_8h" startline="57">nest::M_WARNING</references>
        <referencedby refid="namespacenest_1a33bd25216b470958f2f7000bdf6eedf9" compoundref="spatial_8cpp" startline="405" endline="418">nest::connect_layers</referencedby>
        <referencedby refid="classnest_1_1SPManager_1af9961e9c3f1968bb1ff558a540d53923" compoundref="sp__manager_8cpp" startline="264" endline="322">nest::SPManager::disconnect</referencedby>
        <referencedby refid="classnest_1_1SPManager_1a6c5563d7088a144d3b630e4ed8faee3b" compoundref="sp__manager_8cpp" startline="341" endline="417">nest::SPManager::update_structural_plasticity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aff0901b4652d3a6eb85d252f432739af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::unset_connections_have_changed</definition>
        <argsstring>()</argsstring>
        <name>unset_connections_have_changed</name>
        <qualifiedname>nest::ConnectionManager::unset_connections_have_changed</qualifiedname>
        <briefdescription>
<para>Sets flag indicating whether connection information needs to be communicated to false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="360" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1629" bodyend="1632"/>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::restructure_connection_tables</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>restructure_connection_tables</name>
        <qualifiedname>nest::ConnectionManager::restructure_connection_tables</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Deletes <ref refid="classnest_1_1TargetTable" kindref="compound">TargetTable</ref> and resets processed flags of <ref refid="classnest_1_1SourceTable" kindref="compound">SourceTable</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function must be called if connections are created after connections have been communicated previously. It basically restores the connection infrastructure to a state where all information only exists on the postsynaptic side. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="369" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="835" bodyend="840"/>
        <references refid="classnest_1_1TargetTable_1a1d6992013e99c3286879a12f44f309a6" compoundref="target__table_8h" startline="128" endline="132">nest::TargetTable::clear</references>
        <references refid="classnest_1_1SourceTable_1aa88eeb6c1c6a285878b6559f2a7ae636" compoundref="source__table_8cpp" startline="86" endline="89">nest::SourceTable::is_cleared</references>
        <references refid="classnest_1_1SourceTable_1a633f97bbf39389143a0e2996cd10e01b" compoundref="source__table_8h" startline="403" endline="412">nest::SourceTable::reset_processed_flags</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <references refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" compoundref="connection__manager_8h" startline="575">target_table_</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a9d4d94383f51c20182969117ad43f0d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::set_source_has_more_targets</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index lcid, const bool more_targets)</argsstring>
        <name>set_source_has_more_targets</name>
        <qualifiedname>nest::ConnectionManager::set_source_has_more_targets</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>more_targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="372" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="843" bodyend="849"/>
        <references refid="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" compoundref="connection__manager_8h" startline="545">connections_</references>
        <referencedby refid="classnest_1_1SourceTable_1ac7f8bae3617bf28a6995058adfae00fd" compoundref="source__table_8cpp" startline="384" endline="449">nest::SourceTable::get_next_target_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a72cc51766e2587d82850590d5cb423db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::no_targets_to_process</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>no_targets_to_process</name>
        <qualifiedname>nest::ConnectionManager::no_targets_to_process</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="374" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="707" bodyend="710"/>
        <references refid="classnest_1_1SourceTable_1a57247c92a5f430b24d74286089222ac9" compoundref="source__table_8h" startline="415" endline="420">nest::SourceTable::no_targets_to_process</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a0ef552ea0836e10de6ed2d44816a155f" compoundref="event__delivery__manager_8cpp" startline="735" endline="812">nest::EventDeliveryManager::collocate_target_data_buffers_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a024b7baa6a5dec791de66996f0a245b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; size_t &gt; &amp;</type>
        <definition>const std::vector&lt; size_t &gt; &amp; nest::ConnectionManager::get_secondary_send_buffer_positions</definition>
        <argsstring>(const thread tid, const index lid, const synindex syn_id) const</argsstring>
        <name>get_secondary_send_buffer_positions</name>
        <qualifiedname>nest::ConnectionManager::get_secondary_send_buffer_positions</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="377" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="759" bodyend="762"/>
        <references refid="classnest_1_1TargetTable_1a05c036cf6d0375ec15ce1776df762e25" compoundref="target__table_8h" startline="121" endline="125">nest::TargetTable::get_secondary_send_buffer_positions</references>
        <references refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" compoundref="connection__manager_8h" startline="575">target_table_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a8737cdbec8c0111d2bce0bf7e8d324a2" compoundref="event__delivery__manager__impl_8h" startline="142" endline="174">nest::EventDeliveryManager::send_secondary</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a49fc9b9c2fdbfac802bdf440dc172d22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::ConnectionManager::get_secondary_recv_buffer_position</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index lcid) const</argsstring>
        <name>get_secondary_recv_buffer_position</name>
        <qualifiedname>nest::ConnectionManager::get_secondary_recv_buffer_position</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
<para>Returns read position in MPI receive buffer for secondary connections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="382" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="765" bodyend="768"/>
        <references refid="classnest_1_1ConnectionManager_1af9aeb3eb8125ed5cd414541de1eb1ee4" compoundref="connection__manager_8h" startline="566">secondary_recv_buffer_pos_</references>
        <referencedby refid="classnest_1_1SourceTable_1a427e9d3941f3d9f61ee1515d8b1c6521" compoundref="source__table_8cpp" startline="316" endline="381">nest::SourceTable::populate_target_data_fields_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a47d174cc3f78508f825c44806b4bf247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::deliver_secondary_events</definition>
        <argsstring>(const thread tid, const bool called_from_wfr_update, std::vector&lt; unsigned int &gt; &amp;recv_buffer)</argsstring>
        <name>deliver_secondary_events</name>
        <qualifiedname>nest::ConnectionManager::deliver_secondary_events</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>called_from_wfr_update</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned int &gt; &amp;</type>
          <declname>recv_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="384" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1512" bodyend="1554"/>
        <references refid="classnest_1_1ModelManager_1aea052fc6150494e8e66ebdbe1127b876" compoundref="model__manager_8h" startline="306" endline="309">nest::ModelManager::get_connection_models</references>
        <references refid="classnest_1_1MPIManager_1afddda2f5cf3f1ac9f1c252719b62ebd5" compoundref="mpi__manager_8h" startline="506" endline="510">nest::MPIManager::get_done_marker_position_in_secondary_events_recv_buffer</references>
        <references refid="classnest_1_1MPIManager_1a496c51140dd2f76db937357bb70ac565" compoundref="mpi__manager_8h" startline="513" endline="516">nest::MPIManager::get_num_processes</references>
        <references refid="classnest_1_1ModelManager_1a4de0bb9d981c92958e0d52b1ff3e7dea" compoundref="model__manager_8h" startline="328" endline="332">nest::ModelManager::get_secondary_event_prototype</references>
        <references refid="classnest_1_1SimulationManager_1ad9a019b2da1005769418e4896fb43ec3" compoundref="simulation__manager_8h" startline="236" endline="239">nest::SimulationManager::get_slice_origin</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1Event_1a47c5bdb5473b5b8971b2a077aec754e0" compoundref="event_8h" startline="948" endline="955">nest::Event::set_stamp</references>
        <references refid="classnest_1_1KernelManager_1a4feb2ae20c19197830bf57c5e7247560" compoundref="kernel__manager_8h" startline="245">nest::KernelManager::simulation_manager</references>
        <references refid="classnest_1_1SecondaryEvent_1a3f6c1179457aca98bbc84b2fe4ba21e3">nest::SecondaryEvent::size</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1a23401736e55713e86c6f4b55805d8105" compoundref="event__delivery__manager_8cpp" startline="312" endline="316">nest::EventDeliveryManager::deliver_secondary_events</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5af006c2effaaa723d63c89e791606b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::compress_secondary_send_buffer_pos</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>compress_secondary_send_buffer_pos</name>
        <qualifiedname>nest::ConnectionManager::compress_secondary_send_buffer_pos</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="388" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1557" bodyend="1560"/>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ad424a6e28fe6a4b7f2b8c2363d38352e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::resize_connections</definition>
        <argsstring>()</argsstring>
        <name>resize_connections</name>
        <qualifiedname>nest::ConnectionManager::resize_connections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="390" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1583" bodyend="1597"/>
        <references refid="classnest_1_1VPManager_1afbe0b686ed8bd6ee420e58cb17fa8272" compoundref="vp__manager_8cpp" startline="172" endline="177">nest::VPManager::assert_single_threaded</references>
        <references refid="classnest_1_1ModelManager_1a6b4dd572130a87b4819be5b8abd45bd9" compoundref="model__manager_8h" startline="312" endline="316">nest::ModelManager::get_num_connection_models</references>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
        <referencedby refid="classnest_1_1ModelManager_1afdca64fbdcc8897ed6e25a8e534b482e" compoundref="model__manager_8cpp" startline="265" endline="287">nest::ModelManager::copy_connection_model_</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1aa8a2fe6be154cbb0768bf71942387520" compoundref="model__manager_8cpp" startline="546" endline="571">nest::ModelManager::register_connection_model_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ada2a71610370c6802f330191a06e7815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::sync_has_primary_connections</definition>
        <argsstring>()</argsstring>
        <name>sync_has_primary_connections</name>
        <qualifiedname>nest::ConnectionManager::sync_has_primary_connections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="392" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1600" bodyend="1603"/>
        <references refid="classnest_1_1MPIManager_1a3a49dc7c95b5a7e8daadb0480cae3c4c" compoundref="mpi__manager_8h" startline="723" endline="726">nest::MPIManager::any_true</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a87618f444ba424475cf5dcc434bde8af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::check_secondary_connections_exist</definition>
        <argsstring>()</argsstring>
        <name>check_secondary_connections_exist</name>
        <qualifiedname>nest::ConnectionManager::check_secondary_connections_exist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="394" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1606" bodyend="1609"/>
        <references refid="classnest_1_1MPIManager_1a3a49dc7c95b5a7e8daadb0480cae3c4c" compoundref="mpi__manager_8h" startline="723" endline="726">nest::MPIManager::any_true</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <referencedby refid="classnest_1_1SimulationManager_1aa457cadae541547d8d82bda9b1925ab0" compoundref="simulation__manager_8cpp" startline="676" endline="754">nest::SimulationManager::update_connection_infrastructure</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a9e4157472a06f656acf385482e1076d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::has_primary_connections</definition>
        <argsstring>() const</argsstring>
        <name>has_primary_connections</name>
        <qualifiedname>nest::ConnectionManager::has_primary_connections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="396" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="783" bodyend="786"/>
        <references refid="classnest_1_1ConnectionManager_1aafbbe49d9702b5333d6246a3c8a4ccec" compoundref="connection__manager_8h" startline="618">has_primary_connections_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5becb115b1c13104297a06e52c4ff8e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectionManager::secondary_connections_exist</definition>
        <argsstring>() const</argsstring>
        <name>secondary_connections_exist</name>
        <qualifiedname>nest::ConnectionManager::secondary_connections_exist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="398" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="789" bodyend="792"/>
        <references refid="classnest_1_1ConnectionManager_1ac87b5903245da7dc5a97a83a0a9dd337" compoundref="connection__manager_8h" startline="624">secondary_connections_exist_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aad101bf62f3cedecd89c38b1c756a2f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
        <definition>index nest::ConnectionManager::get_source_node_id</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index lcid)</argsstring>
        <name>get_source_node_id</name>
        <qualifiedname>nest::ConnectionManager::get_source_node_id</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lcid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="400" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="777" bodyend="780"/>
        <references refid="classnest_1_1SourceTable_1ad0dc55ce4b7c808d7d61df8f97d2ff03" compoundref="source__table_8cpp" startline="158" endline="165">nest::SourceTable::get_node_id</references>
        <references refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" compoundref="connection__manager_8h" startline="553">source_table_</references>
        <referencedby refid="classnest_1_1Event_1aaf68e08591d41518b70181862a6b4877" compoundref="event_8cpp" startline="56" endline="68">nest::Event::retrieve_sender_node_id_from_source_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a23712fd1cbe62b5a0b447b49894d181f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::ConnectionManager::get_stdp_eps</definition>
        <argsstring>() const</argsstring>
        <name>get_stdp_eps</name>
        <qualifiedname>nest::ConnectionManager::get_stdp_eps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="402" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="807" bodyend="810"/>
        <references refid="classnest_1_1ConnectionManager_1ab9a6d94398e5276021567b8862b9542e" compoundref="connection__manager_8h" startline="631">stdp_eps_</references>
        <referencedby refid="classnest_1_1ArchivingNode_1a17dd209382eae47cbb5f02b88fbb997a" compoundref="archiving__node_8cpp" startline="153" endline="178">nest::ArchivingNode::get_history</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5f6137160880e15f4d05c5b9f42dd0c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::set_stdp_eps</definition>
        <argsstring>(const double stdp_eps)</argsstring>
        <name>set_stdp_eps</name>
        <qualifiedname>nest::ConnectionManager::set_stdp_eps</qualifiedname>
        <param>
          <type>const double</type>
          <declname>stdp_eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="404" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1483" bodyend="1507"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72ac918263c6420db964adbf3a3375cf9ee" compoundref="logging_8h" startline="54">nest::M_INFO</references>
        <referencedby refid="classnest_1_1NestModule_1_1SetStdpEps__dFunction_1a6e26173d5f6015daf50cfdba893d846c" compoundref="nestmodule_8cpp" startline="1716" endline="1725">nest::NestModule::SetStdpEps_dFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1af19370bb7e9945157e9af4c89b3d8b8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classnest_1_1SpikeData" kindref="compound">SpikeData</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; SpikeData &gt; &amp; nest::ConnectionManager::get_compressed_spike_data</definition>
        <argsstring>(const synindex syn_id, const index idx)</argsstring>
        <name>get_compressed_spike_data</name>
        <qualifiedname>nest::ConnectionManager::get_compressed_spike_data</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="410" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="852" bodyend="855"/>
        <references refid="classnest_1_1ConnectionManager_1a8fa616b7a33af0e3fa7071238507f75d" compoundref="connection__manager_8h" startline="560">compressed_spike_data_</references>
        <referencedby refid="classnest_1_1EventDeliveryManager_1aba9898648e890ea2ac369891420259d9" compoundref="event__delivery__manager_8cpp" startline="574" endline="660">nest::EventDeliveryManager::deliver_events_</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1ab7b70a03df8e44f34b72415e42138459" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::ConnectionManager::get_num_target_data</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_num_target_data</name>
        <qualifiedname>nest::ConnectionManager::get_num_target_data</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="413" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="902" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a6a01c2fb98684250820184439034af7d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::ConnectionManager::get_num_connections_</definition>
        <argsstring>(const thread tid, const synindex syn_id) const</argsstring>
        <name>get_num_connections_</name>
        <qualifiedname>nest::ConnectionManager::get_num_connections_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="415" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="771" bodyend="774"/>
        <references refid="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" compoundref="connection__manager_8h" startline="545">connections_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a42d9e236f58179ada7e7e77de0ee1ce5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::get_source_node_ids_</definition>
        <argsstring>(const thread tid, const synindex syn_id, const index tnode_id, std::vector&lt; index &gt; &amp;sources)</argsstring>
        <name>get_source_node_ids_</name>
        <qualifiedname>nest::ConnectionManager::get_source_node_ids_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>tnode_id</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="418" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1242" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a5a764e628f02ad0ed9cd088428ec9c84" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::split_to_neuron_device_vectors_</definition>
        <argsstring>(const thread tid, NodeCollectionPTR nodecollection, std::vector&lt; index &gt; &amp;neuron_node_ids, std::vector&lt; index &gt; &amp;device_node_ids) const</argsstring>
        <name>split_to_neuron_device_vectors_</name>
        <qualifiedname>nest::ConnectionManager::split_to_neuron_device_vectors_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1accbbbd2c49375cc6c2edd964cccda54e" kindref="member">NodeCollectionPTR</ref></type>
          <declname>nodecollection</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>neuron_node_ids</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref> &gt; &amp;</type>
          <declname>device_node_ids</declname>
        </param>
        <briefdescription>
<para>Splits a <ref refid="classTokenArray" kindref="compound">TokenArray</ref> of node IDs to two vectors containing node IDs of neurons and node IDs of devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="424" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="1032" bodyend="1054"/>
        <references refid="classnest_1_1NodeManager_1a166690647e1a88d96c67e83c4c72fa19" compoundref="node__manager_8cpp" startline="422" endline="434">nest::NodeManager::get_node_or_proxy</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1adb41052adde337156940c1cccb0dd157" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::update_delay_extrema_</definition>
        <argsstring>()</argsstring>
        <name>update_delay_extrema_</name>
        <qualifiedname>nest::ConnectionManager::update_delay_extrema_</qualifiedname>
        <briefdescription>
<para>Update delay extrema to current values. </para>
        </briefdescription>
        <detaileddescription>
<para>Static since it only operates in static variables. This allows it to be called from const-method <ref refid="classnest_1_1ConnectionManager_1aede87b403fb22979e3f81b4fe546a3ad" kindref="member">get_status()</ref> as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="435" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="461" bodyend="491"/>
        <references refid="classnest_1_1MPIManager_1a58b6aff1f3e00bf84e886cce814bb708" compoundref="mpi__manager_8cpp" startline="1061" endline="1063">nest::MPIManager::communicate</references>
        <references refid="classnest_1_1MPIManager_1a6fa640ce78eda75f8304879ff396ab78" compoundref="mpi__manager_8h" startline="525" endline="528">nest::MPIManager::get_rank</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="classnest_1_1Time_1afedb0e4fbf5d521e50573f2180016568" compoundref="nest__time_8h" startline="526" endline="540">nest::Time::get_steps</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1Time_1acb1c377c4d654c34797f9fef4c02250a" compoundref="nest__time_8h" startline="454" endline="457">nest::Time::pos_inf</references>
        <referencedby refid="classnest_1_1SimulationManager_1add7dd58374edc381ef64ee6197d24620" compoundref="simulation__manager_8cpp" startline="434" endline="497">nest::SimulationManager::prepare</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a1daef49b8fa81d3c402aeea866b4835a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>const nest::Time nest::ConnectionManager::get_min_delay_time_</definition>
        <argsstring>() const</argsstring>
        <name>get_min_delay_time_</name>
        <qualifiedname>nest::ConnectionManager::get_min_delay_time_</qualifiedname>
        <briefdescription>
<para>This method queries and finds the minimum delay of all local connections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="441" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="322" bodyend="333"/>
        <references refid="classnest_1_1Time_1acb1c377c4d654c34797f9fef4c02250a" compoundref="nest__time_8h" startline="454" endline="457">nest::Time::pos_inf</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a649c22cf8e4dd6eebfe6db96b12dd853" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classnest_1_1Time" kindref="compound">Time</ref></type>
        <definition>const nest::Time nest::ConnectionManager::get_max_delay_time_</definition>
        <argsstring>() const</argsstring>
        <name>get_max_delay_time_</name>
        <qualifiedname>nest::ConnectionManager::get_max_delay_time_</qualifiedname>
        <briefdescription>
<para>This method queries and finds the maximum delay of all local connections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="447" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="336" bodyend="347"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a4cf2d976777b5f79e5ec8d6d624ec876" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::delete_connections_</definition>
        <argsstring>()</argsstring>
        <name>delete_connections_</name>
        <qualifiedname>nest::ConnectionManager::delete_connections_</qualifiedname>
        <briefdescription>
<para>Deletes all connections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="452" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="310" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a199080ea2054e8a1f9282c6201eec278" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect_</definition>
        <argsstring>(Node &amp;source, Node &amp;target, const index s_node_id, const thread tid, const synindex syn_id, const DictionaryDatum &amp;params, const double delay=numerics::nan, const double weight=numerics::nan)</argsstring>
        <name>connect_</name>
        <qualifiedname>nest::ConnectionManager::connect_</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>s_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
          <defval><ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
          <defval><ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref></defval>
        </param>
        <briefdescription>
<para>connect_ is used to establish a connection between a sender and receiving node which both have proxies. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters delay and weight have the default value <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref>. <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref> is a special value, which describes double values that are not a number. If delay or weight is omitted in an connect call, <ref refid="namespacenumerics_1a2022d0d7fddab66c66e86321c316aa11" kindref="member">numerics::nan</ref> indicates this and weight/delay are set only, if they are valid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the receiving <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node ID of the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread of the target node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The synapse model to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters for the connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The delay of the connection (optional). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the connection (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="473" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="743" bodyend="786"/>
        <references refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75">nest::ConnectorModel::add_connection</references>
        <references refid="classnest_1_1ModelManager_1ac65a8ccf171c8e4fcbe96d214887389b" compoundref="model__manager_8cpp" startline="421" endline="426">nest::ModelManager::connector_requires_clopath_archiving</references>
        <references refid="classnest_1_1ModelManager_1a9265877967e222222a0110c18544b98f" compoundref="model__manager_8cpp" startline="429" endline="434">nest::ModelManager::connector_requires_urbanczik_archiving</references>
        <references refid="classnest_1_1ModelManager_1a328a98e2391f07ffdcd31a986982f826" compoundref="model__manager_8h" startline="299" endline="303">nest::ModelManager::get_connection_model</references>
        <references refid="classnest_1_1ConnectorModel_1a89c5c4799f7d82cabc071a3dbd16190a" compoundref="connector__model_8h" startline="116" endline="119">nest::ConnectorModel::is_primary</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a3558ff4918f9a1a561a11f65ae757c76" compoundref="kernel__manager_8h" startline="250">nest::KernelManager::model_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1aa5710ab323a532a27a3bab6d7e0157e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect_to_device_</definition>
        <argsstring>(Node &amp;source, Node &amp;target, const index s_node_id, const thread tid, const synindex syn_id, const DictionaryDatum &amp;params, const double delay=NAN, const double weight=NAN)</argsstring>
        <name>connect_to_device_</name>
        <qualifiedname>nest::ConnectionManager::connect_to_device_</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>s_node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
          <defval>NAN</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
          <defval>NAN</defval>
        </param>
        <briefdescription>
<para>connect_to_device_ is used to establish a connection between a sender and receiving node if the sender has proxies, and the receiver does not. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters delay and weight have the default value NAN. NAN is a special value in cmath, which describes double values that are not a number. If delay or weight is omitted in an connect call, NAN indicates this and weight/delay are set only, if they are valid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the receiving <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node ID of the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread of the target node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The synapse model to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters for the connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The delay of the connection (optional). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the connection (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="500" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="789" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a6402a1c2012d07ae43e862f6215a43c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::connect_from_device_</definition>
        <argsstring>(Node &amp;source, Node &amp;target, const thread tid, const synindex syn_id, const DictionaryDatum &amp;params, const double delay=NAN, const double weight=NAN)</argsstring>
        <name>connect_from_device_</name>
        <qualifiedname>nest::ConnectionManager::connect_from_device_</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
          <defval>NAN</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
          <defval>NAN</defval>
        </param>
        <briefdescription>
<para>connect_from_device_ is used to establish a connection between a sender and receiving node if the sender does not have proxies. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters delay and weight have the default value NAN. NAN is a special value in cmath, which describes double values that are not a number. If delay or weight is omitted in an connect call, NAN indicates this and weight/delay are set only, if they are valid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the receiving <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s_node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node ID of the sending <ref refid="classnest_1_1Node" kindref="compound">Node</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>The thread of the target node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The synapse model to use. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters for the connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The delay of the connection (optional). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>The weight of the connection (optional). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="527" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="805" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectionManager_1a785e13b8c24a23dfe161fb50df4ce94f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::ConnectionManager::increase_connection_count</definition>
        <argsstring>(const thread tid, const synindex syn_id)</argsstring>
        <name>increase_connection_count</name>
        <qualifiedname>nest::ConnectionManager::increase_connection_count</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
<para>Increases the connection count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="538" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.cpp" bodystart="820" bodyend="834"/>
        <references refid="namespacenest_1af8e95aa79bdb397135f1436a4dcf7414" compoundref="nest__types_8h" startline="100">nest::MAX_LCID</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::ConnectionManager</label>
        <link refid="classnest_1_1ConnectionManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>Datum</label>
        <link refid="classDatum"/>
        <childnode refid="12" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="14">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="12">
        <label>SLIType</label>
        <link refid="classSLIType"/>
        <childnode refid="13" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>defaultaction</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>TypedDatum&lt; slt &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>lockPTR&lt; D &gt;</label>
        <link refid="classlockPTR"/>
      </node>
      <node id="9">
        <label>lockPTR&lt; D &gt;</label>
        <link refid="classlockPTR"/>
      </node>
      <node id="15">
        <label>lockPTRDatum&lt; D, slt &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>lockPTRDatum&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::ConnectionManager</label>
        <link refid="classnest_1_1ConnectionManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>sw_construction_connect</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>source_table_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>target_table_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>target_table_devices_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>connruledict_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>check_primary_connections_</edgelabel>
          <edgelabel>check_secondary_connections_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="5">
        <label>nest::PerThreadBoolIndicator</label>
        <link refid="classnest_1_1PerThreadBoolIndicator"/>
      </node>
      <node id="4">
        <label>nest::SourceTable</label>
        <link refid="classnest_1_1SourceTable"/>
        <childnode refid="5" relation="usage">
          <edgelabel>is_cleared_</edgelabel>
          <edgelabel>saved_entry_point_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::Stopwatch</label>
        <link refid="classnest_1_1Stopwatch"/>
      </node>
      <node id="6">
        <label>nest::TargetTable</label>
        <link refid="classnest_1_1TargetTable"/>
      </node>
      <node id="7">
        <label>nest::TargetTableDevices</label>
        <link refid="classnest_1_1TargetTableDevices"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" line="63" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection_manager.h" bodystart="64" bodyend="632"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnectionManager_1a0ae6d51f023edf647d62319a161fe66c" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>add_target</name></member>
      <member refid="classnest_1_1ConnectionManager_1a16254804fc3c63f33a1d7b5d220021dc" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>buffer_pos_of_source_node_id_syn_id_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a38c4581862f4bbc6e43c83daaa2453a2" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>calibrate</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5ff7c49e14b799dfc160e679ae8e4d54" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>change_number_of_threads</name></member>
      <member refid="classnest_1_1ConnectionManager_1a2a24d66858291eaeffeaa51071896cda" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>check_primary_connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1ad7a765be8ae016a9b59d9d7c3e872016" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>check_secondary_connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a87618f444ba424475cf5dcc434bde8af" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>check_secondary_connections_exist</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7f6b0c0c8ba2248ec530438ff56a29f0" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>clean_source_table</name></member>
      <member refid="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>cleanup</name></member>
      <member refid="classnest_1_1ConnectionManager_1abb7f1fdbcba9a1b2d67ebfdb28250160" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>clear_compressed_spike_data_map</name></member>
      <member refid="classnest_1_1ConnectionManager_1a8d6d8762799a09dff63b1113545d86a1" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>clear_source_table</name></member>
      <member refid="classnest_1_1ConnectionManager_1a57a2748ae9ff0b986e6c8769ea2b4f06" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>collect_compressed_spike_data</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5af006c2effaaa723d63c89e791606b1" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>compress_secondary_send_buffer_pos</name></member>
      <member refid="classnest_1_1ConnectionManager_1a8fa616b7a33af0e3fa7071238507f75d" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>compressed_spike_data_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a8b0dbf28a53e184b2f2c6e988e656435" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>compute_compressed_secondary_recv_buffer_positions</name></member>
      <member refid="classnest_1_1ConnectionManager_1a4a305862071d9332c29fc4e675ada3f3" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>compute_target_data_buffer_size</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6efcfb0fe9a1ca0e427c44410ae693ca" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connbuilder_factories_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a719414132e35d4b6ffa6c2a636df92eb" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0594fd0c611ae17f9ebe921d0153e60a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect</name></member>
      <member refid="classnest_1_1ConnectionManager_1a246f15c815e9ef17e6f18e9e9c58a1fd" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect</name></member>
      <member refid="classnest_1_1ConnectionManager_1acc34cde58d51aec7495e813c76b48d32" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610ad00d494fd623af0e51b1b3b2cf447384" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>CONNECT</name></member>
      <member refid="classnest_1_1ConnectionManager_1a199080ea2054e8a1f9282c6201eec278" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a4f5d4769f422431b7560df35af23867a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect_arrays</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610adbbce589f2b024525ff08b3f2701b253" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>CONNECT_FROM_DEVICE</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6402a1c2012d07ae43e862f6215a43c3" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect_from_device_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610a2eea30660d09d0de9cb453132b7b14e6" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>CONNECT_TO_DEVICE</name></member>
      <member refid="classnest_1_1ConnectionManager_1aa5710ab323a532a27a3bab6d7e0157e0" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connect_to_device_</name></member>
      <member refid="classnest_1_1ConnectionManager_1aef56ff34a0321cb40e4a13b5e3743323" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connection_required</name></member>
      <member refid="classnest_1_1ConnectionManager_1ade81fa94b66593d08c5a7f3eab1519e2" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>ConnectionManager</name></member>
      <member refid="classnest_1_1ConnectionManager_1a891084d77a6f4ae258c483126a0ab529" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5b30bf975871a4394bcebd9e677c4c8c" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connections_have_changed</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5f01435a200b4dd2d94e889024058573" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connections_have_changed_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>ConnectionType</name></member>
      <member refid="classnest_1_1ConnectionManager_1af41015f9e5991b865353150024559109" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>connruledict_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0cf4c08656a0a7517f960cf1cafc9e4b" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>delay_checkers_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a4cf2d976777b5f79e5ec8d6d624ec876" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>delete_connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a47d174cc3f78508f825c44806b4bf247" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>deliver_secondary_events</name></member>
      <member refid="classnest_1_1ConnectionManager_1aa8f45ec27217524c07048f4c6601b146" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>disconnect</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6a6d1b63381ca974f610f04e042b0ff2" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>finalize</name></member>
      <member refid="classnest_1_1ConnectionManager_1a94262293e4f3635724ff15bba58b690f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>find_connection</name></member>
      <member refid="classnest_1_1ConnectionManager_1af19370bb7e9945157e9af4c89b3d8b8a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_compressed_spike_data</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7724037fd623d6100e44b3ca7c0d737d" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_conn_builder</name></member>
      <member refid="classnest_1_1ConnectionManager_1a42095f521521f147812163a8b98ee96f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1aa02010a909e00e2a88ac9d5e51533e4a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab44482fb59fd93aecf21015935134879" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_connections_has_been_called_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a13545535bee9810548166d5d8606cbfc" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_delay_checker</name></member>
      <member refid="classnest_1_1ConnectionManager_1a3c6df98351b30307a7283fe2a3dbdf42" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_device_connected</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9c2cc2a65db2f3127cac1f9e87c4013b" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_keep_source_table</name></member>
      <member refid="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_max_delay</name></member>
      <member refid="classnest_1_1ConnectionManager_1a649c22cf8e4dd6eebfe6db96b12dd853" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_max_delay_time_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_min_delay</name></member>
      <member refid="classnest_1_1ConnectionManager_1a1daef49b8fa81d3c402aeea866b4835a" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_min_delay_time_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6e6a71cb780307b44a72a053037535de" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_next_target_data</name></member>
      <member refid="classnest_1_1ConnectionManager_1a60a983ed4638ecc02e7e3f0c73474e94" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_num_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1ac62b33a788aeb12b0408ad6af4592576" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_num_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6a01c2fb98684250820184439034af7d" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_num_connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab7b70a03df8e44f34b72415e42138459" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_num_target_data</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0cfb6daf412d75b2dafc09bab819a3b1" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_remote_targets_of_local_node</name></member>
      <member refid="classnest_1_1ConnectionManager_1a49fc9b9c2fdbfac802bdf440dc172d22" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_secondary_recv_buffer_position</name></member>
      <member refid="classnest_1_1ConnectionManager_1a024b7baa6a5dec791de66996f0a245b9" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_secondary_send_buffer_positions</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5bb5c7c10d785adab6ce6355ec8b59d8" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_sort_connections_by_source</name></member>
      <member refid="classnest_1_1ConnectionManager_1aad101bf62f3cedecd89c38b1c756a2f8" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_source_node_id</name></member>
      <member refid="classnest_1_1ConnectionManager_1a42d9e236f58179ada7e7e77de0ee1ce5" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_source_node_ids_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7cc5104fcceb1b875d22ae6c9f0c2018" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_sources</name></member>
      <member refid="classnest_1_1ConnectionManager_1aede87b403fb22979e3f81b4fe546a3ad" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>get_status</name></member>
      <member refid="classnest_1_1ConnectionManager_1a23712fd1cbe62b5a0b447b49894d181f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_stdp_eps</name></member>
      <member refid="classnest_1_1ConnectionManager_1a1906487a726e8f4bb4e65fe5868e4825" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_synapse_status</name></member>
      <member refid="classnest_1_1ConnectionManager_1af756929ae281f12df3f395778207f1b6" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_target_node_id</name></member>
      <member refid="classnest_1_1ConnectionManager_1a6798d923ce597300f380d3e8bd864ba4" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_targets</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0a1653bb70ca11e329d10e6355be549e" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>get_user_set_delay_extrema</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9e4157472a06f656acf385482e1076d3" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>has_primary_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1aafbbe49d9702b5333d6246a3c8a4ccec" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>has_primary_connections_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a785e13b8c24a23dfe161fb50df4ce94f" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>increase_connection_count</name></member>
      <member refid="classnest_1_1ConnectionManager_1a95e1aed37d7c704e322fea89ac9dc705" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>initialize</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5c99a2b3039275d1c595ad602f8e0885" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>is_source_table_cleared</name></member>
      <member refid="classnest_1_1ConnectionManager_1aff1ad5dd0e38cc4dfc0824726869c682" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>keep_source_table_</name></member>
      <member refid="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ConnectionManager_1a78fb1133abe9595a36ecc2ada3165094" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>max_delay_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9c7a1289a47ffa09024d22503041e298" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>min_delay_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7e693e6fd53d9d845742d1e53d86e610a690fef92f99675616df1560392b420f8" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>NO_CONNECTION</name></member>
      <member refid="classnest_1_1ConnectionManager_1a72cc51766e2587d82850590d5cb423db" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>no_targets_to_process</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0840641c0fc859a166e19769b648adf1" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>num_connections_</name></member>
      <member refid="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>operator=</name></member>
      <member refid="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>prepare</name></member>
      <member refid="classnest_1_1ConnectionManager_1ac45e1f5b8cf6a5a40ec328ea0f3df5cb" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>prepare_target_table</name></member>
      <member refid="classnest_1_1ConnectionManager_1a0fe3b21a49179d12a2c7fec5346cfc3a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>register_conn_builder</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab5370350364d70612b51ff75843f09b3" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>reject_last_target_data</name></member>
      <member refid="classnest_1_1ConnectionManager_1acdc6d59644cf4450445a384e4ca9af85" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>remove_disabled_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1a92128e48714ee59e21d5d744486598a5" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>reset_source_table_entry_point</name></member>
      <member refid="classnest_1_1ConnectionManager_1ad424a6e28fe6a4b7f2b8c2363d38352e" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>resize_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1a8ac8d6d68a9cde77289adee0f18bb03c" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>resize_target_table_devices_to_number_of_neurons</name></member>
      <member refid="classnest_1_1ConnectionManager_1a7c615b8040991ef941ed79f1da616e62" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>resize_target_table_devices_to_number_of_synapse_types</name></member>
      <member refid="classnest_1_1ConnectionManager_1ac7738820d617ad9c911ab5740447aa5f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>restore_source_table_entry_point</name></member>
      <member refid="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>restructure_connection_tables</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab574046af21302553e4282e9bc3bb839" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>save_source_table_entry_point</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5becb115b1c13104297a06e52c4ff8e2" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>secondary_connections_exist</name></member>
      <member refid="classnest_1_1ConnectionManager_1ac87b5903245da7dc5a97a83a0a9dd337" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>secondary_connections_exist_</name></member>
      <member refid="classnest_1_1ConnectionManager_1af9aeb3eb8125ed5cd414541de1eb1ee4" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>secondary_recv_buffer_pos_</name></member>
      <member refid="classnest_1_1ConnectionManager_1aa4cf70c04f3993412ea928313a29b29a" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>send</name></member>
      <member refid="classnest_1_1ConnectionManager_1a97481546e161d8ac38d29da43914f5bf" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>send_from_device</name></member>
      <member refid="classnest_1_1ConnectionManager_1af322463684d9d9a6fe45c5e47602864f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>send_local</name></member>
      <member refid="classnest_1_1ConnectionManager_1a33f3b39e92b74e442a3d7b708a4da9a1" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>send_to_devices</name></member>
      <member refid="classnest_1_1ConnectionManager_1ad2ac475fde6e791711a2ed8c00bbb71b" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>send_to_devices</name></member>
      <member refid="classnest_1_1ConnectionManager_1a364992a5aca6c29407e9ed0d97ec766b" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>set_connections_have_changed</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9d4d94383f51c20182969117ad43f0d5" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1ConnectionManager_1a38567f7aefd520dae214065ed1816f98" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>set_status</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5f6137160880e15f4d05c5b9f42dd0c0" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>set_stdp_eps</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9b5dd166871f9902c15de576936dca8f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>set_synapse_status</name></member>
      <member refid="classnest_1_1ConnectionManager_1a630a7fe19e19ffa310ad17522b70878e" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>SimulationManager</name></member>
      <member refid="classnest_1_1ConnectionManager_1ae24f61147ce5ba965b04a07f6beda83f" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>sort_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1a12e83697eae4fc161341ce621dea92cd" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>sort_connections_by_source_</name></member>
      <member refid="classnest_1_1ConnectionManager_1affe5d11d6eba3194383e20c22333fd47" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>source_table_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a5a764e628f02ad0ed9cd088428ec9c84" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>split_to_neuron_device_vectors_</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab9a6d94398e5276021567b8862b9542e" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>stdp_eps_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a66194774f828bbabf7d8c22e468ee6b7" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>sw_construction_connect</name></member>
      <member refid="classnest_1_1ConnectionManager_1ada2a71610370c6802f330191a06e7815" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>sync_has_primary_connections</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9b26d39afa156f974081bd098aef6631" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>target_table_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a9aa3c902d4dffe08db34d67fa85fe782" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>target_table_devices_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a831fe8bbe7a7f042a2add7c25a6c7906" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1ConnectionManager_1aff0901b4652d3a6eb85d252f432739af" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>unset_connections_have_changed</name></member>
      <member refid="classnest_1_1ConnectionManager_1adb41052adde337156940c1cccb0dd157" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>update_delay_extrema_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a89ece61ab9b21dd3001e0096414cabbd" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>use_compressed_spikes</name></member>
      <member refid="classnest_1_1ConnectionManager_1a2a697782b7c4b0f90b083c738a1e16d0" prot="private" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>use_compressed_spikes_</name></member>
      <member refid="classnest_1_1ConnectionManager_1a71579f9db00c8c3a995f4956036c001d" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>valid_connection_rule</name></member>
      <member refid="classnest_1_1ConnectionManager_1ab2b44ecf02b391848a5d2760676b1fe3" prot="public" virt="non-virtual"><scope>nest::ConnectionManager</scope><name>~ConnectionManager</name></member>
      <member refid="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" virt="virtual"><scope>nest::ConnectionManager</scope><name>~ManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
