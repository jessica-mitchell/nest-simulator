<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_synaptic_element" kind="class" language="C++" prot="public">
    <compoundname>nest::SynapticElement</compoundname>
    <includes refid="synaptic__element_8h" local="no">synaptic_element.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a1a837bafa28fdf9237fdb0f6e968a4df" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SynapticElement::z_</definition>
        <argsstring></argsstring>
        <name>z_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="264" column="10" bodyfile="nestkernel/synaptic_element.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a53ba1f45b32e37eeefa03e11caef731f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SynapticElement::z_t_</definition>
        <argsstring></argsstring>
        <name>z_t_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="266" column="10" bodyfile="nestkernel/synaptic_element.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a64d386c09fc78ecdc559aa2398310dfd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int nest::SynapticElement::z_connected_</definition>
        <argsstring></argsstring>
        <name>z_connected_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="268" column="7" bodyfile="nestkernel/synaptic_element.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a96dca4c53da372dfef5948913fadf800" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::SynapticElement::continuous_</definition>
        <argsstring></argsstring>
        <name>continuous_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="271" column="8" bodyfile="nestkernel/synaptic_element.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a036b9d8e8ba978110de3466c7c365cf4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SynapticElement::growth_rate_</definition>
        <argsstring></argsstring>
        <name>growth_rate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="274" column="10" bodyfile="nestkernel/synaptic_element.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1add28d95cbe49fbf708c92215986c72c0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::SynapticElement::tau_vacant_</definition>
        <argsstring></argsstring>
        <name>tau_vacant_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="276" column="10" bodyfile="nestkernel/synaptic_element.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_synaptic_element_1a48508cc77009d5c5d7b52758db0f6874" prot="private" static="no" mutable="no">
        <type><ref refid="classnest_1_1_growth_curve" kindref="compound">GrowthCurve</ref> *</type>
        <definition>GrowthCurve* nest::SynapticElement::growth_curve_</definition>
        <argsstring></argsstring>
        <name>growth_curve_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="278" column="15" bodyfile="nestkernel/synaptic_element.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a087c3c04d743580dd27ce2f6a5f9828e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::SynapticElement::SynapticElement</definition>
        <argsstring>()</argsstring>
        <name>SynapticElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para>Destructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="118" column="3" bodyfile="nestkernel/synaptic_element.cpp" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a1a57404bbeec3fd2a3a9df273286f923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::SynapticElement::SynapticElement</definition>
        <argsstring>(const SynapticElement &amp;se)</argsstring>
        <name>SynapticElement</name>
        <param>
          <type>const <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> &amp;</type>
          <declname>se</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>se</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
copy assignment operator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="125" column="3" bodyfile="nestkernel/synaptic_element.cpp" bodystart="55" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a8839cb0442b52e9fc5846e6e87360700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> &amp;</type>
        <definition>nest::SynapticElement &amp; nest::SynapticElement::operator=</definition>
        <argsstring>(const SynapticElement &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="132" column="19" bodyfile="nestkernel/synaptic_element.cpp" bodystart="71" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1ad03172b59274fb0fa3c2a937bf083eee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::SynapticElement::~SynapticElement</definition>
        <argsstring>()</argsstring>
        <name>~SynapticElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="138" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a015325dc4bf3df2de54b520018e43407" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::get</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get</name>
        <param>
          <type>DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store current values in a dictionary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>to write data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="148" column="8" bodyfile="nestkernel/synaptic_element.cpp" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a1d87050277d99ac2b2929fba12cb2f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::set</definition>
        <argsstring>(const DictionaryDatum &amp;d)</argsstring>
        <name>set</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set values from a dictionary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>to take data from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="155" column="8" bodyfile="nestkernel/synaptic_element.cpp" bodystart="116" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a50199f8735079a513aba8050e7efaeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::update</definition>
        <argsstring>(double t, double t_minus, double Ca_minus, double tau_Ca)</argsstring>
        <name>update</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ca_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau_Ca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="166" column="8" bodyfile="nestkernel/synaptic_element.cpp" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a89b08d21c4b768ad82b5eedd11b0e044" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int nest::SynapticElement::get_z_vacant</definition>
        <argsstring>() const</argsstring>
        <name>get_z_vacant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="177" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a5a78607c42e1a88431c213166c0d4d6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int nest::SynapticElement::get_z_connected</definition>
        <argsstring>() const</argsstring>
        <name>get_z_connected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="185" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a6a8d8793b181468bb92e3e5c630c2313" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::SynapticElement::get_tau_vacant</definition>
        <argsstring>() const</argsstring>
        <name>get_tau_vacant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="193" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a15b4aab50c2335953a7164b70a080d13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::connect</definition>
        <argsstring>(int n)</argsstring>
        <name>connect</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="202" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="202" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1ae0c90f0c8f7c665bba9b25dffc7bcee0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::set_growth_curve</definition>
        <argsstring>(GrowthCurve &amp;g)</argsstring>
        <name>set_growth_curve</name>
        <param>
          <type><ref refid="classnest_1_1_growth_curve" kindref="compound">GrowthCurve</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="215" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="215" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1ac5522c9e3e5706344e9869e5dd81fc52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::SynapticElement::get_growth_rate</definition>
        <argsstring>() const</argsstring>
        <name>get_growth_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="228" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a242d39f2fbb13c1e4a5842a75386fc13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::set_z</definition>
        <argsstring>(const double z_new)</argsstring>
        <name>set_z</name>
        <param>
          <type>const double</type>
          <declname>z_new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="234" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a99c504897e5636d79fa377aeff546d35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::SynapticElement::get_z</definition>
        <argsstring>() const</argsstring>
        <name>get_z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="239" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a64b0978d61ce7e20b6e58558f5cb295f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::SynapticElement::decay_z_vacant</definition>
        <argsstring>()</argsstring>
        <name>decay_z_vacant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduce the amount of vacant synaptic elements by a factor of tau_vacant_ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="248" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="248" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_synaptic_element_1a184811edefff0a56a1201f0e988dd0b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::SynapticElement::continuous</definition>
        <argsstring>() const</argsstring>
        <name>continuous</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/synaptic_element.h" line="257" column="3" bodyfile="nestkernel/synaptic_element.h" bodystart="257" bodyend="260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Synaptic element of a node (axonal bouton or dendritic spine) for the purposes of structural plasticity. The synaptic elements represent connection points between two neurons that grow according to a homeostatic growth rule. Basically, the dynamics of the number of synaptic elements is driven by the average electrical activity of the neuron (indirectly measured through the Calcium concentration of the node). The probability of two neurons creating a new synapse between them, depends on the number of available synaptic elements of each neuron. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::SynapticElement</label>
        <link refid="classnest_1_1_synaptic_element"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/synaptic_element.h" line="110" column="1" bodyfile="nestkernel/synaptic_element.h" bodystart="111" bodyend="279"/>
    <listofallmembers>
      <member refid="classnest_1_1_synaptic_element_1a15b4aab50c2335953a7164b70a080d13" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>connect</name></member>
      <member refid="classnest_1_1_synaptic_element_1a184811edefff0a56a1201f0e988dd0b1" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>continuous</name></member>
      <member refid="classnest_1_1_synaptic_element_1a96dca4c53da372dfef5948913fadf800" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>continuous_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a64b0978d61ce7e20b6e58558f5cb295f" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>decay_z_vacant</name></member>
      <member refid="classnest_1_1_synaptic_element_1a015325dc4bf3df2de54b520018e43407" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get</name></member>
      <member refid="classnest_1_1_synaptic_element_1ac5522c9e3e5706344e9869e5dd81fc52" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get_growth_rate</name></member>
      <member refid="classnest_1_1_synaptic_element_1a6a8d8793b181468bb92e3e5c630c2313" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get_tau_vacant</name></member>
      <member refid="classnest_1_1_synaptic_element_1a99c504897e5636d79fa377aeff546d35" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get_z</name></member>
      <member refid="classnest_1_1_synaptic_element_1a5a78607c42e1a88431c213166c0d4d6c" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get_z_connected</name></member>
      <member refid="classnest_1_1_synaptic_element_1a89b08d21c4b768ad82b5eedd11b0e044" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>get_z_vacant</name></member>
      <member refid="classnest_1_1_synaptic_element_1a48508cc77009d5c5d7b52758db0f6874" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>growth_curve_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a036b9d8e8ba978110de3466c7c365cf4" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>growth_rate_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a8839cb0442b52e9fc5846e6e87360700" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>operator=</name></member>
      <member refid="classnest_1_1_synaptic_element_1a1d87050277d99ac2b2929fba12cb2f34" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>set</name></member>
      <member refid="classnest_1_1_synaptic_element_1ae0c90f0c8f7c665bba9b25dffc7bcee0" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>set_growth_curve</name></member>
      <member refid="classnest_1_1_synaptic_element_1a242d39f2fbb13c1e4a5842a75386fc13" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>set_z</name></member>
      <member refid="classnest_1_1_synaptic_element_1a087c3c04d743580dd27ce2f6a5f9828e" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>SynapticElement</name></member>
      <member refid="classnest_1_1_synaptic_element_1a1a57404bbeec3fd2a3a9df273286f923" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>SynapticElement</name></member>
      <member refid="classnest_1_1_synaptic_element_1add28d95cbe49fbf708c92215986c72c0" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>tau_vacant_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a50199f8735079a513aba8050e7efaeb2" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>update</name></member>
      <member refid="classnest_1_1_synaptic_element_1a1a837bafa28fdf9237fdb0f6e968a4df" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>z_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a64d386c09fc78ecdc559aa2398310dfd" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>z_connected_</name></member>
      <member refid="classnest_1_1_synaptic_element_1a53ba1f45b32e37eeefa03e11caef731f" prot="private" virt="non-virtual"><scope>nest::SynapticElement</scope><name>z_t_</name></member>
      <member refid="classnest_1_1_synaptic_element_1ad03172b59274fb0fa3c2a937bf083eee" prot="public" virt="non-virtual"><scope>nest::SynapticElement</scope><name>~SynapticElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
