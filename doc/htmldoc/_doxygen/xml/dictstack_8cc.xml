<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="dictstack_8cc" kind="file" language="C++">
    <compoundname>dictstack.cc</compoundname>
    <includes refid="dictstack_8h" local="yes">dictstack.h</includes>
    <incdepgraph>
      <node id="31">
        <label>lockptr.h</label>
        <link refid="lockptr_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>datum.h</label>
        <link refid="datum_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>dictdatum.h</label>
        <link refid="dictdatum_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>dictstack.cc</label>
        <link refid="dictstack_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>dictstack.h</label>
        <link refid="dictstack_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>interpret.h</label>
        <link refid="interpret_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>lockptrdatum.h</label>
        <link refid="lockptrdatum_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>name.h</label>
        <link refid="name_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>sliactions.h</label>
        <link refid="sliactions_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>slibuiltins.h</label>
        <link refid="slibuiltins_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>sliexceptions.h</label>
        <link refid="sliexceptions_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>slifunction.h</label>
        <link refid="slifunction_8h"/>
      </node>
      <node id="24">
        <label>slimodule.h</label>
        <link refid="slimodule_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>slitype.h</label>
        <link refid="slitype_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>tarrayobj.h</label>
        <link refid="tarrayobj_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>token.h</label>
        <link refid="token_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tokenarray.h</label>
        <link refid="tokenarray_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tokenstack.h</label>
        <link refid="tokenstack_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>algorithm</label>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="17">
        <label>config.h</label>
      </node>
      <node id="27">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>deque</label>
      </node>
      <node id="16">
        <label>iomanip</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>list</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="4">
        <label>typeinfo</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>dictstack.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NEST.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004<sp/>The<sp/>NEST<sp/>Initiative</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>NEST<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>NEST.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dictstack_8h" kindref="compound">dictstack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classDictionaryStack_1a33397786a7c6e4decd5cb87b2b8f8ac7" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a33397786a7c6e4decd5cb87b2b8f8ac7" kindref="member">DictionaryStack::DictionaryStack</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>:<sp/>VoidToken(<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classDictionaryStack_1af38f50abb5fe2cba12beda850326c8d1" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a33397786a7c6e4decd5cb87b2b8f8ac7" kindref="member">DictionaryStack::DictionaryStack</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;<sp/>ds<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>:<sp/>VoidToken(<sp/>ds.VoidToken<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>,<sp/>d(<sp/>ds.d<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classDictionaryStack_1abc2ff8614f82019ea906a62eb8d76ac1" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1abc2ff8614f82019ea906a62eb8d76ac1" kindref="member">DictionaryStack::~DictionaryStack</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>clear<sp/>the<sp/>dictionary<sp/>before<sp/>we<sp/>delete<sp/>it,<sp/>otherwise<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>references<sp/>will<sp/>prevent<sp/>proper<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::iterator<sp/>i<sp/>=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end();<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*i<sp/>)-&gt;clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classDictionaryStack_1ad1cb0f7217c63f0b5ef32f86a2903cfc" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1ad1cb0f7217c63f0b5ef32f86a2903cfc" kindref="member">DictionaryStack::undef</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_erased<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>num_erased<sp/>+=<sp/>(<sp/>*it<sp/>)-&gt;erase(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>num_erased<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classUndefinedName" kindref="compound">UndefinedName</ref>(<sp/>n.<ref refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" kindref="member">toString</ref>()<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" kindref="member">clear_token_from_cache</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a2b786bde0d5a369765cb7184d8b39fe0" kindref="member">clear_token_from_basecache</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classDictionaryStack_1a07607d88ed5c9e539f4173fb6342be06" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a07607d88ed5c9e539f4173fb6342be06" kindref="member">DictionaryStack::basedef</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>insert<sp/>(n,t)<sp/>in<sp/>bottom<sp/>level<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dictionary<sp/>stack<sp/>must<sp/>contain<sp/>at<sp/>least<sp/>one<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VoidToken<sp/>is<sp/>an<sp/>illegal<sp/>value<sp/>for<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" kindref="member">clear_token_from_cache</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" kindref="member">basecache_token</ref>(<sp/>n,<sp/>&amp;(<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;insert(<sp/>n,<sp/>t<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>(<sp/>*base_<sp/>)[<sp/>n<sp/>]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classDictionaryStack_1aafd0651e94ff35dfbf6862be6e87364e" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1aafd0651e94ff35dfbf6862be6e87364e" kindref="member">DictionaryStack::basedef_move</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="className" kindref="compound">Name</ref>&amp;<sp/>n,<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" kindref="member">clear_token_from_cache</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" kindref="member">basecache_token</ref>(<sp/>n,<sp/>&amp;(<sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;insert_move(<sp/>n,<sp/>t<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref>-&gt;insert_move(<sp/>n,<sp/>t<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classDictionaryStack_1ad4eb8703d1963c570ae0607886d83275" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1ad4eb8703d1963c570ae0607886d83275" kindref="member">DictionaryStack::pop</ref>()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>top<sp/>dictionary<sp/>from<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>dictionary<sp/>stack<sp/>must<sp/>contain<sp/>at<sp/>least<sp/>one<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a892a08eff00f92879170fe0133848b89" kindref="member">clear_dict_from_cache</ref>(<sp/>*(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>(<sp/>*(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)<sp/>)-&gt;remove_dictstack_reference();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.pop_front();</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classDictionaryStack_1ad5af8e81a3d1d2d73ae5ddf007d173a3" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1ad5af8e81a3d1d2d73ae5ddf007d173a3" kindref="member">DictionaryStack::clear</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.erase(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin(),<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end()<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a0349130b1d40ec53973434a9f437ce5e" kindref="member">clear_cache</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classDictionaryStack_1aa29e38886d0158d4cd2254753b38d0f3" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1aa29e38886d0158d4cd2254753b38d0f3" kindref="member">DictionaryStack::top</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>top<sp/>level<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>move<sp/>it<sp/>into<sp/>Token<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>should<sp/>throw<sp/>an<sp/>exception<sp/>if<sp/>it<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>*<sp/>dd<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref>(<sp/>*(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="classToken" kindref="compound">Token</ref><sp/>dt(<sp/>dd<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>t.<ref refid="classToken_1a2f61f1702fa6214de27ccff368df11f5" kindref="member">move</ref>(<sp/>dt<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classDictionaryStack_1a3e10c9a812a39de9cf03e57ab2a9d7ae" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a3e10c9a812a39de9cf03e57ab2a9d7ae" kindref="member">DictionaryStack::toArray</ref>(<sp/><ref refid="classTokenArray" kindref="compound">TokenArray</ref>&amp;<sp/>ta<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>top<sp/>level<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>move<sp/>it<sp/>into<sp/>Token<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>should<sp/>throw<sp/>an<sp/>exception<sp/>if<sp/>it<sp/>fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>ta.<ref refid="classTokenArray_1a7a37ecbd9269ae8eae313a78158a0415" kindref="member">erase</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::const_reverse_iterator<sp/>i(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.rbegin()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.rend()<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ta.<ref refid="classTokenArray_1acbf2202157ead1bb583c43a8465b3876" kindref="member">push_back</ref>(<sp/>(<sp/>*i<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classDictionaryStack_1ab5dec846d4918ad71932a0b6ce312d19" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">DictionaryStack::push</ref>(<sp/><ref refid="classToken" kindref="compound">Token</ref>&amp;<sp/>d<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>*<sp/>dd<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.datum()<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>assert(<sp/>dd<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">push</ref>(<sp/>*dd<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1aa5c86944e162f4d0c10319a81cbd564b" kindref="member">DictionaryStack::push</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classlockPTRDatum" kindref="compound">DictionaryDatum</ref>&amp;<sp/>pd<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extract<sp/>Dictionary<sp/>from<sp/>Token<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>push<sp/>it<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>non<sp/>dictionary<sp/>datum<sp/>at<sp/>this<sp/>point<sp/>is<sp/>a<sp/>program<sp/>bug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>pd-&gt;add_dictstack_reference();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>call<sp/>will<sp/>remove<sp/>all<sp/>names<sp/>in<sp/>the<sp/>dict<sp/>from<sp/>the<sp/>name<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a892a08eff00f92879170fe0133848b89" kindref="member">clear_dict_from_cache</ref>(<sp/>pd<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.push_front(<sp/>pd<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classDictionaryStack_1a5baf5097495a26a297a62fa66b8fe93d" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a5baf5097495a26a297a62fa66b8fe93d" kindref="member">DictionaryStack::set_basedict</ref>()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classDictionaryStack_1a32bb9771f517b509cf88f8493d275abb" kindref="member">base_</ref><sp/>=<sp/>*(<sp/>--<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.end()<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>base<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classDictionaryStack_1ab137abf2543962afa801918b55b32d6e" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1ab137abf2543962afa801918b55b32d6e" kindref="member">DictionaryStack::size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>number<sp/>of<sp/>dictionaries<sp/>on<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.size();</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classDictionaryStack_1acfd66b8fe261db057215a9aae38192bf" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1acfd66b8fe261db057215a9aae38192bf" kindref="member">DictionaryStack::info</ref>(<sp/>std::ostream&amp;<sp/>o<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="200"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for_each(d.rbegin(),<sp/>d.rend(),<sp/>bind_2nd(mem_fun(&amp;Dictionary::info),o));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>std::list&lt;<sp/>DictionaryDatum<sp/>&gt;::const_reverse_iterator<sp/>i(<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.rbegin()<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DictionaryStack::info&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>!=<sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.rend()<sp/>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>(<sp/>*i<sp/>)-&gt;info(<sp/>o<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classDictionaryStack_1a026e89ff56b7e0e3da0421f65d86090b" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a026e89ff56b7e0e3da0421f65d86090b" kindref="member">DictionaryStack::top_info</ref>(<sp/>std::ostream&amp;<sp/>o<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="216"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>(<sp/>*<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>.begin()<sp/>)-&gt;<ref refid="classDictionaryStack_1acfd66b8fe261db057215a9aae38192bf" kindref="member">info</ref>(<sp/>o<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;</highlight></codeline>
<codeline lineno="221" refid="classDictionaryStack_1a720ff11c55b3df6502b739067051deb3" refkind="member"><highlight class="normal"><ref refid="classDictionaryStack_1a720ff11c55b3df6502b739067051deb3" kindref="member">DictionaryStack::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classDictionaryStack" kindref="compound">DictionaryStack</ref>&amp;<sp/>ds<sp/>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>&amp;ds<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref><sp/>=<sp/>ds.<ref refid="classDictionaryStack_1a6427e0a155882246e80120466784be7b" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DICTSTACK_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref><sp/>=<sp/>ds.<ref refid="classDictionaryStack_1a3e1e606f746a01e8711bfd5f821bd2c4" kindref="member">cache_</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/dictstack.cc"/>
  </compounddef>
</doxygen>
