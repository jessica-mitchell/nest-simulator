<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1AbstractMask" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::AbstractMask</compoundname>
    <derivedcompoundref refid="classnest_1_1GridMask" prot="public" virt="non-virtual">nest::GridMask&lt; D &gt;</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1Mask" prot="public" virt="non-virtual">nest::Mask&lt; D &gt;</derivedcompoundref>
    <includes refid="mask_8h" local="no">mask.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1AbstractMask_1a5933f9f222c335b21f90ef55c1caa430" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::AbstractMask::~AbstractMask</definition>
        <argsstring>()</argsstring>
        <name>~AbstractMask</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="58" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AbstractMask_1a6576b96fe48031acfee534e60fc064ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool nest::AbstractMask::inside</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;) const =0</argsstring>
        <name>inside</name>
        <reimplementedby refid="classnest_1_1GridMask_1a5318647a517d6e10a043b148654ca7d6">inside</reimplementedby>
        <reimplementedby refid="classnest_1_1Mask_1a8f5f7b1b18f31e4a927705b536c05a72">inside</reimplementedby>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if point is inside mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="65" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AbstractMask_1afaa2c932fb8581e1417eddc784754a94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>DictionaryDatum</type>
        <definition>virtual DictionaryDatum nest::AbstractMask::get_dict</definition>
        <argsstring>() const</argsstring>
        <name>get_dict</name>
        <reimplementedby refid="classnest_1_1AnchoredMask_1a42dbfeed6de00b9ba25426fa6be4bdfa">get_dict</reimplementedby>
        <reimplementedby refid="classnest_1_1GridMask_1af8df2c0800ca19015228aa0d2640f83e">get_dict</reimplementedby>
        <reimplementedby refid="classnest_1_1BoxMask_1a76e6a22e7dae694f5fc51728e0cc14cf">get_dict</reimplementedby>
        <reimplementedby refid="classnest_1_1BallMask_1a2350c9669f42bfb9e8a74c256cd0ebaf">get_dict</reimplementedby>
        <reimplementedby refid="classnest_1_1EllipseMask_1a8d6841133f95384364d6dd5838f027b7">get_dict</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a dictionary with the definition for this mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="71" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AbstractMask_1a5121551bc7fbcaacd71345726db56ec5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> *</type>
        <definition>virtual AbstractMask* nest::AbstractMask::intersect_mask</definition>
        <argsstring>(const AbstractMask &amp;other) const =0</argsstring>
        <name>intersect_mask</name>
        <reimplementedby refid="classnest_1_1GridMask_1ae5c48a629ce41fe225b6af109d61b30f">intersect_mask</reimplementedby>
        <reimplementedby refid="classnest_1_1Mask_1a26c865ca83050e6dff23c56ef880f702">intersect_mask</reimplementedby>
        <param>
          <type>const <ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create the intersection of this mask with another. </para>
        </briefdescription>
        <detaileddescription>
<para>Masks must have the same dimension <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="81" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AbstractMask_1a090d38b233591056609d0cf9b0d99ab7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> *</type>
        <definition>virtual AbstractMask* nest::AbstractMask::union_mask</definition>
        <argsstring>(const AbstractMask &amp;other) const =0</argsstring>
        <name>union_mask</name>
        <reimplementedby refid="classnest_1_1GridMask_1add92f3d77eaab12f0233d0b63b60f37a">union_mask</reimplementedby>
        <reimplementedby refid="classnest_1_1Mask_1ae6318d1bdb788014d3ab08b25c8cc240">union_mask</reimplementedby>
        <param>
          <type>const <ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create the union of this mask with another. </para>
        </briefdescription>
        <detaileddescription>
<para>Masks must have the same dimension. <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="88" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AbstractMask_1abac67e0b2297650220534cc8e74a67a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> *</type>
        <definition>virtual AbstractMask* nest::AbstractMask::minus_mask</definition>
        <argsstring>(const AbstractMask &amp;other) const =0</argsstring>
        <name>minus_mask</name>
        <reimplementedby refid="classnest_1_1GridMask_1a140b4309130706eb12dc07ccf13632d7">minus_mask</reimplementedby>
        <reimplementedby refid="classnest_1_1Mask_1ac19b409451836f97eeb0c884009ef6a2">minus_mask</reimplementedby>
        <param>
          <type>const <ref refid="classnest_1_1AbstractMask" kindref="compound">AbstractMask</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create the difference of this mask and another. </para>
        </briefdescription>
        <detaileddescription>
<para>Masks must have the same dimension. <simplesect kind="return"><para>a new dynamically allocated mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="95" column="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract base class for masks with unspecified dimension. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>nest::DifferenceMask&lt; D &gt;</label>
        <link refid="classnest_1_1DifferenceMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::BoxMask&lt; D &gt;</label>
        <link refid="classnest_1_1BoxMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::AnchoredMask&lt; D &gt;</label>
        <link refid="classnest_1_1AnchoredMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>nest::UnionMask&lt; D &gt;</label>
        <link refid="classnest_1_1UnionMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>nest::EllipseMask&lt; D &gt;</label>
        <link refid="classnest_1_1EllipseMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>nest::IntersectionMask&lt; D &gt;</label>
        <link refid="classnest_1_1IntersectionMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1AbstractMask"/>
      </node>
      <node id="4">
        <label>nest::AllMask&lt; D &gt;</label>
        <link refid="classnest_1_1AllMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::BallMask&lt; D &gt;</label>
        <link refid="classnest_1_1BallMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::Mask&lt; D &gt;</label>
        <link refid="classnest_1_1Mask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::ConverseMask&lt; D &gt;</label>
        <link refid="classnest_1_1ConverseMask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::GridMask&lt; D &gt;</label>
        <link refid="classnest_1_1GridMask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1AbstractMask"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="52" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="53" bodyend="96"/>
    <listofallmembers>
      <member refid="classnest_1_1AbstractMask_1afaa2c932fb8581e1417eddc784754a94" prot="public" virt="virtual"><scope>nest::AbstractMask</scope><name>get_dict</name></member>
      <member refid="classnest_1_1AbstractMask_1a6576b96fe48031acfee534e60fc064ce" prot="public" virt="pure-virtual"><scope>nest::AbstractMask</scope><name>inside</name></member>
      <member refid="classnest_1_1AbstractMask_1a5121551bc7fbcaacd71345726db56ec5" prot="public" virt="pure-virtual"><scope>nest::AbstractMask</scope><name>intersect_mask</name></member>
      <member refid="classnest_1_1AbstractMask_1abac67e0b2297650220534cc8e74a67a0" prot="public" virt="pure-virtual"><scope>nest::AbstractMask</scope><name>minus_mask</name></member>
      <member refid="classnest_1_1AbstractMask_1a090d38b233591056609d0cf9b0d99ab7" prot="public" virt="pure-virtual"><scope>nest::AbstractMask</scope><name>union_mask</name></member>
      <member refid="classnest_1_1AbstractMask_1a5933f9f222c335b21f90ef55c1caa430" prot="public" virt="virtual"><scope>nest::AbstractMask</scope><name>~AbstractMask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
