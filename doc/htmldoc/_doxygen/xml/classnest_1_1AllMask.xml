<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1AllMask" kind="class" language="C++" prot="public">
    <compoundname>nest::AllMask</compoundname>
    <basecompoundref refid="classnest_1_1Mask" prot="public" virt="non-virtual">nest::Mask&lt; D &gt;</basecompoundref>
    <includes refid="mask_8h" local="no">mask.h</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1AllMask_1a11696d13c5e080717ff3381682ec5158" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::AllMask&lt; D &gt;::~AllMask</definition>
        <argsstring>()</argsstring>
        <name>~AllMask</name>
        <qualifiedname>nest::AllMask::~AllMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="159" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AllMask_1a4606012a8c4d7a7a446bc1dec921d029" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::AllMask&lt; D &gt;::inside</definition>
        <argsstring>(const Position&lt; D &gt; &amp;) const</argsstring>
        <name>inside</name>
        <qualifiedname>nest::AllMask::inside</qualifiedname>
        <reimplements refid="classnest_1_1Mask_1a43d1949f739d9bc932e2aadb25d573de">inside</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1Position" kindref="compound">Position</ref>&lt; D &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true always for this mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="169" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AllMask_1a87a56059638111c957236e7f78114673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::AllMask&lt; D &gt;::inside</definition>
        <argsstring>(const Box&lt; D &gt; &amp;) const</argsstring>
        <name>inside</name>
        <qualifiedname>nest::AllMask::inside</qualifiedname>
        <reimplements refid="classnest_1_1Mask_1a4ca07f89ca3d3139c2903137a642c114">inside</reimplements>
        <param>
          <type>const <ref refid="structnest_1_1Box" kindref="compound">Box</ref>&lt; D &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true always for this mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="178" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AllMask_1a3daa987b04b77eb7807fbe2d5f6f7731" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::AllMask&lt; D &gt;::outside</definition>
        <argsstring>(const Box&lt; D &gt; &amp;) const</argsstring>
        <name>outside</name>
        <qualifiedname>nest::AllMask::outside</qualifiedname>
        <reimplements refid="classnest_1_1Mask_1a7b0e35f7bed34d2b143d322caad7b40d">outside</reimplements>
        <param>
          <type>const <ref refid="structnest_1_1Box" kindref="compound">Box</ref>&lt; D &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false always for this mask </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="187" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AllMask_1adf8d6d11eeee0855aaf2598fc1f618e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structnest_1_1Box" kindref="compound">Box</ref>&lt; D &gt;</type>
        <definition>Box&lt; D &gt; nest::AllMask&lt; D &gt;::get_bbox</definition>
        <argsstring>() const</argsstring>
        <name>get_bbox</name>
        <qualifiedname>nest::AllMask::get_bbox</qualifiedname>
        <reimplements refid="classnest_1_1Mask_1a5762fcaec01449570b208b4de6923295">get_bbox</reimplements>
        <briefdescription>
<para>The whole mask is inside (i.e., false everywhere outside) the bounding box. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bounding box </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="193" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1AllMask_1a1990204f42f5fa6d137776d13eca9abb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref>&lt; D &gt; *</type>
        <definition>Mask&lt; D &gt; * nest::AllMask&lt; D &gt;::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <qualifiedname>nest::AllMask::clone</qualifiedname>
        <reimplements refid="classnest_1_1Mask_1a4bfa9f8914c202616c3227fc5321ed23">clone</reimplements>
        <briefdescription>
<para>Clone method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>dynamically allocated copy of mask object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="200" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="200" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classnest_1_1Mask" kindref="compound">Mask</ref> which covers all of space. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1AbstractMask"/>
      </node>
      <node id="1">
        <label>nest::AllMask&lt; D &gt;</label>
        <link refid="classnest_1_1AllMask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Mask&lt; D &gt;</label>
        <link refid="classnest_1_1Mask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>nest::AbstractMask</label>
        <link refid="classnest_1_1AbstractMask"/>
      </node>
      <node id="1">
        <label>nest::AllMask&lt; D &gt;</label>
        <link refid="classnest_1_1AllMask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Mask&lt; D &gt;</label>
        <link refid="classnest_1_1Mask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" line="156" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/mask.h" bodystart="157" bodyend="204"/>
    <listofallmembers>
      <member refid="classnest_1_1AllMask_1a1990204f42f5fa6d137776d13eca9abb" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>clone</name></member>
      <member refid="classnest_1_1AllMask_1adf8d6d11eeee0855aaf2598fc1f618e8" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>get_bbox</name></member>
      <member refid="classnest_1_1AbstractMask_1afaa2c932fb8581e1417eddc784754a94" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>get_dict</name></member>
      <member refid="classnest_1_1AllMask_1a4606012a8c4d7a7a446bc1dec921d029" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>inside</name></member>
      <member refid="classnest_1_1AllMask_1a87a56059638111c957236e7f78114673" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>inside</name></member>
      <member refid="classnest_1_1Mask_1a8f5f7b1b18f31e4a927705b536c05a72" prot="public" virt="virtual" ambiguityscope="nest::Mask::"><scope>nest::AllMask</scope><name>inside</name></member>
      <member refid="classnest_1_1Mask_1a26c865ca83050e6dff23c56ef880f702" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>intersect_mask</name></member>
      <member refid="classnest_1_1Mask_1ac19b409451836f97eeb0c884009ef6a2" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>minus_mask</name></member>
      <member refid="classnest_1_1AllMask_1a3daa987b04b77eb7807fbe2d5f6f7731" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>outside</name></member>
      <member refid="classnest_1_1Mask_1ae6318d1bdb788014d3ab08b25c8cc240" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>union_mask</name></member>
      <member refid="classnest_1_1AbstractMask_1a5933f9f222c335b21f90ef55c1caa430" prot="public" virt="virtual"><scope>nest::AllMask</scope><name>~AbstractMask</name></member>
      <member refid="classnest_1_1AllMask_1a11696d13c5e080717ff3381682ec5158" prot="public" virt="non-virtual"><scope>nest::AllMask</scope><name>~AllMask</name></member>
      <member refid="classnest_1_1Mask_1a4361fce7b927c7b0f8f4f7e1384bb00f" prot="public" virt="non-virtual"><scope>nest::AllMask</scope><name>~Mask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
