<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1NestModule_1_1Take__g__aFunction" kind="class" language="C++" prot="public">
    <compoundname>nest::NestModule::Take_g_aFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
    <includes refid="nestmodule_8h" local="no">nestmodule.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1NestModule_1_1Take__g__aFunction_1a7b2e4ba67e806572605212c9c5b9c434" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::NestModule::Take_g_aFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>nest::NestModule::Take_g_aFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: nest::Take_g_a - slice a <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: nc array Take_g_a -&gt; <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref></para>
<para>Parameters: nc - <ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref> to be sliced array - array of the form [start stop step]</para>
<para>Description: Slice a <computeroutput><ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref></computeroutput> using pythonic slicing conventions:<itemizedlist>
<listitem><para>Include elements from and including <computeroutput>start</computeroutput> to but excluding <computeroutput>stop</computeroutput>.</para>
</listitem><listitem><para><computeroutput>step</computeroutput> is the step length in the slice and must be positive.</para>
</listitem><listitem><para>Negative values for <computeroutput>start</computeroutput> and <computeroutput>stop</computeroutput> count from the end of the <computeroutput><ref refid="classnest_1_1NodeCollection" kindref="compound">NodeCollection</ref></computeroutput>, i.e., -1 is the last element. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" line="520" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.cpp" bodystart="1594" bodyend="1632"/>
        <references refid="classSLIInterpreter_1a4bd843d0ad15faf88185a1ae885f8852" compoundref="interpret_8h" startline="905" endline="911">SLIInterpreter::assert_stack_load</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a585f38fb0ed122da90489eccbfd7a187" compoundref="tokenstack_8h" startline="62" endline="65">TokenStack::push</references>
        <references refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" compoundref="tokenarray_8h" startline="159" endline="162">TokenArray::size</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>nest::NestModule::Take_g_aFunction</label>
        <link refid="classnest_1_1NestModule_1_1Take__g__aFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="1">
        <label>nest::NestModule::Take_g_aFunction</label>
        <link refid="classnest_1_1NestModule_1_1Take__g__aFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" line="518" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/nestmodule.h" bodystart="519" bodyend="521"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>nest::NestModule::Take_g_aFunction</scope><name>backtrace</name></member>
      <member refid="classnest_1_1NestModule_1_1Take__g__aFunction_1a7b2e4ba67e806572605212c9c5b9c434" prot="private" virt="virtual"><scope>nest::NestModule::Take_g_aFunction</scope><name>execute</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>nest::NestModule::Take_g_aFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>nest::NestModule::Take_g_aFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
