<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1DSSpikeEvent" kind="class" language="C++" prot="public">
    <compoundname>nest::DSSpikeEvent</compoundname>
    <basecompoundref refid="classnest_1_1SpikeEvent" prot="public" virt="non-virtual">nest::SpikeEvent</basecompoundref>
    <includes refid="event_8h" local="no">event.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1DSSpikeEvent_1a0dd8578cd487f98857dcd627b718f53c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::DSSpikeEvent::operator()</definition>
        <argsstring>() override</argsstring>
        <name>operator()</name>
        <qualifiedname>nest::DSSpikeEvent::operator()</qualifiedname>
        <reimplements refid="classnest_1_1SpikeEvent_1a912766fd2f87c61e2ac70b723278043b">operator()</reimplements>
        <briefdescription>
<para>Deliver the event to receiver. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator calls the handler for the specific event type at the receiver. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/event.h" line="501" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/event.cpp" bodystart="89" bodyend="92"/>
        <references refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" compoundref="node_8cpp" startline="483" endline="486">nest::Node::event_hook</references>
        <references refid="classnest_1_1Event_1ac23f2f4beb8407a1cb01560a316268fd" compoundref="event_8h" startline="326">nest::Event::sender_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&quot;Callback request event&quot; for use in <ref refid="classnest_1_1Device" kindref="compound">Device</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Some Nodes want to perform a function on an event for each of their targets. An example is the <ref refid="classnest_1_1poisson__generator" kindref="compound">poisson_generator</ref> which needs to draw a random number for each target. The <ref refid="classnest_1_1DSSpikeEvent" kindref="compound">DSSpikeEvent</ref>, DirectSendingSpikeEvent, calls sender-&gt;event_hook(*this) in its operator() function instead of calling receiver-&gt;handle(). The default implementation of <ref refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" kindref="member">Node::event_hook()</ref> just calls target-&gt;handle(DSSpikeEvent&amp;). Any reimplementation must also execute this call. Otherwise the event will not be delivered. If needed, target-&gt;handle(DSSpikeEvent&amp;) may be called more than once.</para>
<para><simplesect kind="note"><para>Callback events must only be sent via <ref refid="classnest_1_1static__synapse" kindref="compound">static_synapse</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::DSSpikeEvent</label>
        <link refid="classnest_1_1DSSpikeEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::Event</label>
        <link refid="classnest_1_1Event"/>
      </node>
      <node id="2">
        <label>nest::SpikeEvent</label>
        <link refid="classnest_1_1SpikeEvent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::DSSpikeEvent</label>
        <link refid="classnest_1_1DSSpikeEvent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="3">
        <label>nest::Event</label>
        <link refid="classnest_1_1Event"/>
        <childnode refid="4" relation="usage">
          <edgelabel>sender_spike_data_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>receiver_</edgelabel>
          <edgelabel>sender_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>stamp_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="6" relation="usage">
          <edgelabel>deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>nest::SpikeData</label>
        <link refid="classnest_1_1SpikeData"/>
      </node>
      <node id="2">
        <label>nest::SpikeEvent</label>
        <link refid="classnest_1_1SpikeEvent"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>nest::Time</label>
        <link refid="classnest_1_1Time"/>
        <childnode refid="8" relation="usage">
          <edgelabel>LIM_MAX</edgelabel>
          <edgelabel>LIM_MIN</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>LIM_POS_INF</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>LIM_NEG_INF</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>nest::Time::Limit</label>
        <link refid="structnest_1_1Time_1_1Limit"/>
      </node>
      <node id="10">
        <label>nest::Time::LimitNegInf</label>
        <link refid="structnest_1_1Time_1_1LimitNegInf"/>
      </node>
      <node id="9">
        <label>nest::Time::LimitPosInf</label>
        <link refid="structnest_1_1Time_1_1LimitPosInf"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/event.h" line="498" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/event.h" bodystart="499" bodyend="502"/>
    <listofallmembers>
      <member refid="classnest_1_1SpikeEvent_1a5e3ecd77ccc01ac8fa28134ad4bfecea" prot="public" virt="virtual"><scope>nest::DSSpikeEvent</scope><name>clone</name></member>
      <member refid="classnest_1_1Event_1a206e330b6cbc6e93887fc21908d4df43" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>d_</name></member>
      <member refid="classnest_1_1Event_1a5fd02c2d20b0caf43899f563d419e0bd" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>Event</name></member>
      <member refid="classnest_1_1Event_1a7f3dc0d0bb05d4f98ad2bf13cc67b940" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1SpikeEvent_1aa42007ca40102dba9b4e9b1284be5a7a" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_multiplicity</name></member>
      <member refid="classnest_1_1Event_1ad2fcc703a758e0dba77c00385cb5041c" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_offset</name></member>
      <member refid="classnest_1_1Event_1a583d84f37d575fbc7f2ab711fb494b66" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_port</name></member>
      <member refid="classnest_1_1Event_1a8c1d83bbbebd23bb85b7ba3dd743d38c" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_receiver</name></member>
      <member refid="classnest_1_1Event_1aaa1bfdd94c07c6a94547086f8139a960" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_receiver_node_id</name></member>
      <member refid="classnest_1_1Event_1a4802a116b9b4e4f3ffcd71a7cfb1729e" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_rel_delivery_steps</name></member>
      <member refid="classnest_1_1Event_1a54709441635d23d80acd9d18eb869856" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_rport</name></member>
      <member refid="classnest_1_1Event_1aca5d7f11547cb61848956360d656ccfc" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_sender</name></member>
      <member refid="classnest_1_1Event_1a32291607d1143c5c7ade223a12ddd54e" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_sender_node_id</name></member>
      <member refid="classnest_1_1Event_1a02f02f11531fefd932a1ac9c0c0891d0" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_stamp</name></member>
      <member refid="classnest_1_1Event_1abf2d6610c35bd35cf67910f5c39b7cc4" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>get_weight</name></member>
      <member refid="classnest_1_1Event_1aa1d8adc602682b70876729e830956dce" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>is_valid</name></member>
      <member refid="classnest_1_1SpikeEvent_1a99b5154aa0b9d53206ab501bf97d9d8c" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>multiplicity_</name></member>
      <member refid="classnest_1_1Event_1afd698f1dc0985f25ac821060e060c64b" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>offset_</name></member>
      <member refid="classnest_1_1DSSpikeEvent_1a0dd8578cd487f98857dcd627b718f53c" prot="public" virt="virtual"><scope>nest::DSSpikeEvent</scope><name>operator()</name></member>
      <member refid="classnest_1_1Event_1a8515d7a39d4f3c8ba47bde7bcfdf80a7" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>p_</name></member>
      <member refid="classnest_1_1Event_1aba7585287096e9d1189007fa60244eef" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>receiver_</name></member>
      <member refid="classnest_1_1Event_1acf9f5b244e87b4d2d83b0a67463b76f6" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>receiver_is_valid</name></member>
      <member refid="classnest_1_1Event_1aaf68e08591d41518b70181862a6b4877" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>retrieve_sender_node_id_from_source_table</name></member>
      <member refid="classnest_1_1Event_1aaff33b6ca47aa351962509ba81ac7ed7" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>rp_</name></member>
      <member refid="classnest_1_1Event_1ac23f2f4beb8407a1cb01560a316268fd" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>sender_</name></member>
      <member refid="classnest_1_1Event_1a43ca356032fe29a848b9d72f7a43eafd" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>sender_is_valid</name></member>
      <member refid="classnest_1_1Event_1a7221735e8c788ee4a730f7ba6595483b" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>sender_node_id_</name></member>
      <member refid="classnest_1_1Event_1af6213aa38ebec48b1fc8be9e00a62d1c" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>sender_spike_data_</name></member>
      <member refid="classnest_1_1Event_1ae662ecac352f57893c104563dd53c7fe" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Event_1a488b68c43fe5d4d29d87d2578487264d" prot="public" virt="virtual"><scope>nest::DSSpikeEvent</scope><name>set_diffusion_factor</name></member>
      <member refid="classnest_1_1Event_1a956496d418cf58ca78925a22dfe2e21d" prot="public" virt="virtual"><scope>nest::DSSpikeEvent</scope><name>set_drift_factor</name></member>
      <member refid="classnest_1_1SpikeEvent_1a819b5dd1687ab5f6baea8f69a2b9f6ff" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_multiplicity</name></member>
      <member refid="classnest_1_1Event_1a950cfc88c56d3098f1445dcc2b6f4805" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_offset</name></member>
      <member refid="classnest_1_1Event_1a934d28b25e817dd9ed45fbbab3436288" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_port</name></member>
      <member refid="classnest_1_1Event_1a16234c886ae93c42bf120bf77abece30" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_receiver</name></member>
      <member refid="classnest_1_1Event_1aeac7ec4158ac45bf8e503ee04888d367" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_rport</name></member>
      <member refid="classnest_1_1Event_1a63cf602cb38d901021bbe9096f161850" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_sender</name></member>
      <member refid="classnest_1_1Event_1a7ba2a5690a5345624a8ed57c7633cc03" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_sender_node_id</name></member>
      <member refid="classnest_1_1Event_1a5bb763582d2d6a09987d1d91a0646b05" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_sender_node_id_info</name></member>
      <member refid="classnest_1_1Event_1a47c5bdb5473b5b8971b2a077aec754e0" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_stamp</name></member>
      <member refid="classnest_1_1Event_1ab5269d296a67598c7d6cbb9117756de0" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>set_weight</name></member>
      <member refid="classnest_1_1SpikeEvent_1a3841f872abe7f6a9e9e4770c1a3cbc14" prot="public" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>SpikeEvent</name></member>
      <member refid="classnest_1_1Event_1a8ccecfeabf8f8a5bc3166dd3408f8295" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>stamp_</name></member>
      <member refid="classnest_1_1Event_1af35dca186785c4b12995f35d2b51a3de" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>stamp_steps_</name></member>
      <member refid="classnest_1_1Event_1a2e85d3a413ae97d1dbf9cf6dbd791259" prot="protected" virt="non-virtual"><scope>nest::DSSpikeEvent</scope><name>w_</name></member>
      <member refid="classnest_1_1Event_1af3f85780e2fab06dd2d934bf965dd142" prot="public" virt="virtual"><scope>nest::DSSpikeEvent</scope><name>~Event</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
