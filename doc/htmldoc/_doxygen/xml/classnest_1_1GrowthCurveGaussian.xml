<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1GrowthCurveGaussian" kind="class" language="C++" prot="public">
    <compoundname>nest::GrowthCurveGaussian</compoundname>
    <basecompoundref refid="classnest_1_1GrowthCurve" prot="public" virt="non-virtual">nest::GrowthCurve</basecompoundref>
    <includes refid="growth__curve_8h" local="no">growth_curve.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1GrowthCurveGaussian_1a9fc2221bbb181a1f2bd3d33710c90470" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::GrowthCurveGaussian::eta_</definition>
        <argsstring></argsstring>
        <name>eta_</name>
        <qualifiedname>nest::GrowthCurveGaussian::eta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="228" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GrowthCurveGaussian_1afe45e9c4e8db5da7e87fcaf8b1e0e83e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::GrowthCurveGaussian::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <qualifiedname>nest::GrowthCurveGaussian::eps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="229" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1GrowthCurveGaussian_1a341c52be3c548d564d465c9d070de073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GrowthCurveGaussian::GrowthCurveGaussian</definition>
        <argsstring>()</argsstring>
        <name>GrowthCurveGaussian</name>
        <qualifiedname>nest::GrowthCurveGaussian::GrowthCurveGaussian</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="221" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.cpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GrowthCurveGaussian_1a0074dc9af167a1e30baf3bbda8792164" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GrowthCurveGaussian::get</definition>
        <argsstring>(DictionaryDatum &amp;d) const override</argsstring>
        <name>get</name>
        <qualifiedname>nest::GrowthCurveGaussian::get</qualifiedname>
        <reimplements refid="classnest_1_1GrowthCurve_1a3b9b23c1e48cae4d991a4d41111913c8">get</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="222" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.cpp" bodystart="91" bodyend="96"/>
        <references refid="namespacenest_1_1names_1a93f0bba37a729b98d346a2e41e663ef1" compoundref="nest__names_8h" startline="192">nest::names::eps</references>
        <references refid="namespacenest_1_1names_1a339532b58f592adde7a6a0efb47de893" compoundref="nest__names_8h" startline="194">nest::names::eta</references>
        <references refid="namespacenest_1_1names_1a264522567de232090134cda541935ccd" compoundref="nest__names_8h" startline="241">nest::names::growth_curve</references>
        <references refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">Name::toString</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GrowthCurveGaussian_1a25e4b2dfec7ddcc62eeb379144a60028" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GrowthCurveGaussian::set</definition>
        <argsstring>(const DictionaryDatum &amp;d) override</argsstring>
        <name>set</name>
        <qualifiedname>nest::GrowthCurveGaussian::set</qualifiedname>
        <reimplements refid="classnest_1_1GrowthCurve_1ac27f37fb936c8459c3f84cd62d37e0b0">set</reimplements>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="223" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.cpp" bodystart="99" bodyend="103"/>
        <references refid="namespacenest_1_1names_1a93f0bba37a729b98d346a2e41e663ef1" compoundref="nest__names_8h" startline="192">nest::names::eps</references>
        <references refid="namespacenest_1_1names_1a339532b58f592adde7a6a0efb47de893" compoundref="nest__names_8h" startline="194">nest::names::eta</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GrowthCurveGaussian_1ad5a1755fa2f5bb097dcd57319a7cb84d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double nest::GrowthCurveGaussian::update</definition>
        <argsstring>(double t, double t_minus, double Ca_minus, double z, double tau_Ca, double growth_rate) const override</argsstring>
        <name>update</name>
        <qualifiedname>nest::GrowthCurveGaussian::update</qualifiedname>
        <reimplements refid="classnest_1_1GrowthCurve_1ae3d68489019d017df33bc0d03c10377e">update</reimplements>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ca_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau_Ca</declname>
        </param>
        <param>
          <type>double</type>
          <declname>growth_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="225" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.cpp" bodystart="106" bodyend="130"/>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: growth_curve_gaussian - Gaussian version of a growth curve </para>
    </briefdescription>
    <detaileddescription>
<para>Description: This class represents a Gaussian growth rule for the number of synaptic elements inside a neuron. The creation and deletion of synaptic elements when structural plasticity is enabled, allows the dynamic rewiring of the network during the simulation. This type of growth curve uses a forward Euler integration method to update the number of synaptic elements: dz/dt = nu (2 * e^(- ((Ca(t) - xi)/z)^2 ) - 1) where xi = (eta + eps)/2, zeta = (eps - eta)/2 * sqrt(ln(2))), eta is the minimum calcium concentration required for any synaptic element to be created, eps is the target mean calcium concentration in the neuron and nu is the growth rate in elements/ms. The growth rate nu is defined in the <ref refid="classnest_1_1SynapticElement" kindref="compound">SynapticElement</ref> class.</para>
<para>Parameters: eta double - Minimum amount of calcium concentration that the neuron needs to start creating synaptic elements. eta can have a negative value, making the growth curve move its maximum to the left. For example, if eta=-0.5 and eps=0.5 [Ca2+], the maximum growth rate (elements/ms) will be achieved at 0.0 [Ca2+]. If eta=0.0 [Ca2+] and eps=0.5 [Ca2+] the maximum growth rate will be achieved at 0.25 [Ca2+] while at 0.0 [Ca+2] no new elements will be created.</para>
<para>eps double - The target calcium concentration that the neuron should look to achieve by creating or deleting synaptic elements. It should always be a positive value. It is important to note that the calcium concentration is linearly proportional to the firing rate. This is because dCa/dt = - Ca(t)/tau_Ca<itemizedlist>
<listitem><para>beta_Ca if the neuron fires and dCa/dt = - Ca(t)/tau_Ca otherwise, where tau_Ca is the calcium concentration decay constant and beta_Ca is the calcium intake constant (see <ref refid="classnest_1_1SynapticElement" kindref="compound">SynapticElement</ref> class). This means that eps can also be seen as the desired firing rate that the neuron should achieve. For example, an eps = 0.05 [Ca2+] with tau_Ca = 10000.0 and beta_Ca = 0.001 for a synaptic element means a desired firing rate of 5Hz.</para>
</listitem></itemizedlist>
</para>
<para>nu double - Growth rate in elements/ms. The growth rate nu is defined in the <ref refid="classnest_1_1SynapticElement" kindref="compound">SynapticElement</ref> class. Can be negative.</para>
<para>References: [1] Butz, Markus, Florentin Wörgötter, and Arjen van Ooyen. &quot;Activity-dependent structural plasticity.&quot; Brain research reviews 60.2 (2009): 287-305.</para>
<para>[2] Butz, Markus, and Arjen van Ooyen. &quot;A simple rule for dendritic spine
 and axonal bouton formation can account for cortical reorganization after
 focal retinal lesions.&quot; PLoS Comput Biol 9.10 (2013): e1003259.</para>
<para>FirstVersion: July 2013</para>
<para>Author: Mikael Naveau</para>
<para>SeeAlso: <ref refid="classnest_1_1SynapticElement" kindref="compound">SynapticElement</ref>, <ref refid="classnest_1_1SPManager" kindref="compound">SPManager</ref>, <ref refid="classnest_1_1SPBuilder" kindref="compound">SPBuilder</ref>, <ref refid="classnest_1_1GrowthCurveLinear" kindref="compound">GrowthCurveLinear</ref>, <ref refid="classnest_1_1GrowthCurveGaussian" kindref="compound">GrowthCurveGaussian</ref></para>
<para>Uses a forward Euler integration method to update the number of synaptic elements: dz/dt = nu (2 * e^(- ((Ca(t) - xi)/zeta)^2 ) - 1) where xi = (eta + eps)/2, zeta = (eps - eta)/2 * sqrt(ln(2))), eta is the minimum calcium concentration required for any synaptic element to be created, eps is the target mean calcium concentration in the neuron and nu is the growth rate. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::GrowthCurve</label>
        <link refid="classnest_1_1GrowthCurve"/>
      </node>
      <node id="1">
        <label>nest::GrowthCurveGaussian</label>
        <link refid="classnest_1_1GrowthCurveGaussian"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="2">
        <label>nest::GrowthCurve</label>
        <link refid="classnest_1_1GrowthCurve"/>
        <childnode refid="3" relation="usage">
          <edgelabel>name_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::GrowthCurveGaussian</label>
        <link refid="classnest_1_1GrowthCurveGaussian"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" line="218" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/growth_curve.h" bodystart="219" bodyend="230"/>
    <listofallmembers>
      <member refid="classnest_1_1GrowthCurveGaussian_1afe45e9c4e8db5da7e87fcaf8b1e0e83e" prot="private" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>eps_</name></member>
      <member refid="classnest_1_1GrowthCurveGaussian_1a9fc2221bbb181a1f2bd3d33710c90470" prot="private" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>eta_</name></member>
      <member refid="classnest_1_1GrowthCurveGaussian_1a0074dc9af167a1e30baf3bbda8792164" prot="public" virt="virtual"><scope>nest::GrowthCurveGaussian</scope><name>get</name></member>
      <member refid="classnest_1_1GrowthCurve_1ac528d7e793ac059a3e0758ed07ed2dd5" prot="public" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>get_name</name></member>
      <member refid="classnest_1_1GrowthCurve_1a599bd5a9b419b9ca8ab1f636c419a2aa" prot="protected" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>GrowthCurve</name></member>
      <member refid="classnest_1_1GrowthCurveGaussian_1a341c52be3c548d564d465c9d070de073" prot="public" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>GrowthCurveGaussian</name></member>
      <member refid="classnest_1_1GrowthCurve_1a17cb398e284418d7af9e7200e4ea635a" prot="public" virt="virtual"><scope>nest::GrowthCurveGaussian</scope><name>is</name></member>
      <member refid="classnest_1_1GrowthCurve_1ad6302586f0c3aae4a740893376e36f4c" prot="protected" virt="non-virtual"><scope>nest::GrowthCurveGaussian</scope><name>name_</name></member>
      <member refid="classnest_1_1GrowthCurveGaussian_1a25e4b2dfec7ddcc62eeb379144a60028" prot="public" virt="virtual"><scope>nest::GrowthCurveGaussian</scope><name>set</name></member>
      <member refid="classnest_1_1GrowthCurveGaussian_1ad5a1755fa2f5bb097dcd57319a7cb84d" prot="public" virt="virtual"><scope>nest::GrowthCurveGaussian</scope><name>update</name></member>
      <member refid="classnest_1_1GrowthCurve_1a5a70201493263078a9e05bca5bab2d28" prot="public" virt="virtual"><scope>nest::GrowthCurveGaussian</scope><name>~GrowthCurve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
