<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classFunctionDatum" kind="class" language="C++" prot="public">
    <compoundname>FunctionDatum</compoundname>
    <basecompoundref refid="classTypedDatum" prot="public" virt="non-virtual">TypedDatum&lt; &amp;SLIInterpreter::Functiontype &gt;</basecompoundref>
    <includes refid="functiondatum_8h" local="no">functiondatum.h</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classFunctionDatum_1afc60156bef208e5f2b0e52e79f367749" prot="private" static="yes" mutable="no">
        <type><ref refid="classsli_1_1pool" kindref="compound">sli::pool</ref></type>
        <definition>sli::pool FunctionDatum::memory</definition>
        <argsstring></argsstring>
        <name>memory</name>
        <qualifiedname>FunctionDatum::memory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="48" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="48" bodyend="-1"/>
        <referencedby refid="classFunctionDatum_1aae90509c3cf23aee07b4bd659462f4b7" compoundref="functiondatum_8h" startline="167" endline="179">operator delete</referencedby>
        <referencedby refid="classFunctionDatum_1a8ab7d0d501cc8c6f6157a7ead6a292d8" compoundref="functiondatum_8h" startline="157" endline="164">operator new</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" prot="private" static="no" mutable="no">
        <type><ref refid="className" kindref="compound">Name</ref></type>
        <definition>Name FunctionDatum::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>FunctionDatum::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="50" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" compoundref="functiondatum_8h" startline="104" endline="115">execute</referencedby>
        <referencedby refid="classFunctionDatum_1ad88df509baf6b1236fa250c916cf5eae" compoundref="functiondatum_8h" startline="149" endline="152">getname</referencedby>
        <referencedby refid="classFunctionDatum_1a8caa18578d9c3c3b35e18b2c3140c94f" compoundref="functiondatum_8h" startline="130" endline="134">info</referencedby>
        <referencedby refid="classFunctionDatum_1aacff06cee927addef47c003fa96a19a0" compoundref="functiondatum_8h" startline="72" endline="78">operator=</referencedby>
        <referencedby refid="classFunctionDatum_1af0789d22a959624ff4160ee6a2ffbf0e" compoundref="functiondatum_8h" startline="118" endline="121">print</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classFunctionDatum_1aa6814ab6a007db26560d91389d736106" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string FunctionDatum::deprecation_info_</definition>
        <argsstring></argsstring>
        <name>deprecation_info_</name>
        <qualifiedname>FunctionDatum::deprecation_info_</qualifiedname>
        <briefdescription>
<para>If not empty string, it should contain string with version for which feature is deprecated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="55" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" compoundref="functiondatum_8h" startline="104" endline="115">execute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classFunctionDatum_1a1a034a9bbbf47a10747e440c7bdccfa3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool FunctionDatum::deprecation_warning_issued_</definition>
        <argsstring></argsstring>
        <name>deprecation_warning_issued_</name>
        <qualifiedname>FunctionDatum::deprecation_warning_issued_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="56" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="56" bodyend="-1"/>
        <referencedby refid="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" compoundref="functiondatum_8h" startline="104" endline="115">execute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classFunctionDatum_1abe5a7a0a91a503931ede587269af5c95" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
        <definition>Datum * FunctionDatum::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>FunctionDatum::clone</qualifiedname>
        <reimplements refid="classDatum_1ab06887e171572f71a041209053b1a0ff">clone</reimplements>
        <briefdescription>
<para>Virtual copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this function to lazily copy a datum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="59" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1a94aeda1bb6da71d006956fc4ff886776" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classDatum" kindref="compound">Datum</ref> *</type>
        <definition>Datum * FunctionDatum::get_ptr</definition>
        <argsstring>() override</argsstring>
        <name>get_ptr</name>
        <qualifiedname>FunctionDatum::get_ptr</qualifiedname>
        <reimplements refid="classDatum_1af968bcf24fef60342dcc5d374b8cd54e">get_ptr</reimplements>
        <briefdescription>
<para>Returns a reference counted pointer to the datum, or a new pointer, if the type does not support reference counting. </para>
        </briefdescription>
        <detaileddescription>
<para>The prefix const indicates that the pointer should be trated as const because changes affect all other references as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="65" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="65" bodyend="69"/>
        <references refid="classDatum_1a8a547bad7564cd6e79fd9b1a245c9e8b" compoundref="datum_8h" startline="100" endline="103">Datum::addReference</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1aacff06cee927addef47c003fa96a19a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSLIFunction" kindref="compound">SLIFunction</ref> const &amp;</type>
        <definition>SLIFunction const  &amp; FunctionDatum::operator=</definition>
        <argsstring>(SLIFunction const &amp;f)</argsstring>
        <name>operator=</name>
        <qualifiedname>FunctionDatum::operator=</qualifiedname>
        <param>
          <type><ref refid="classSLIFunction" kindref="compound">SLIFunction</ref> const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="72" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="72" bodyend="78"/>
        <references refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" compoundref="datum_8h" startline="64">Datum::action</references>
        <references refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" compoundref="functiondatum_8h" startline="50">name</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classFunctionDatum_1a7a9f8425846ec06c6258f5f37d593ad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FunctionDatum::FunctionDatum</definition>
        <argsstring>(FunctionDatum const &amp;fd)</argsstring>
        <name>FunctionDatum</name>
        <qualifiedname>FunctionDatum::FunctionDatum</qualifiedname>
        <param>
          <type><ref refid="classFunctionDatum" kindref="compound">FunctionDatum</ref> const &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="81" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="81" bodyend="88"/>
        <references refid="classDatum_1a46325ecc6d02cc01c26366b57423d9f4" compoundref="datum_8h" startline="128" endline="131">Datum::set_executable</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1a33ff30b816aa777d257668e6cc58fc37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FunctionDatum::FunctionDatum</definition>
        <argsstring>(Name const &amp;n, SLIFunction const *f, const std::string &amp;deprecation_info)</argsstring>
        <name>FunctionDatum</name>
        <qualifiedname>FunctionDatum::FunctionDatum</qualifiedname>
        <param>
          <type><ref refid="className" kindref="compound">Name</ref> const &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classSLIFunction" kindref="compound">SLIFunction</ref> const *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>deprecation_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Here, we shortcut the default action of the type object and directly place the function pointer in the datum&apos;s action field. Thus, we avoid an extra virtual function call.</para>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="90" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="90" bodyend="101"/>
        <references refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" compoundref="datum_8h" startline="64">Datum::action</references>
        <references refid="classDatum_1a46325ecc6d02cc01c26366b57423d9f4" compoundref="datum_8h" startline="128" endline="131">Datum::set_executable</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void FunctionDatum::execute</definition>
        <argsstring>(SLIInterpreter *i) override</argsstring>
        <name>execute</name>
        <qualifiedname>FunctionDatum::execute</qualifiedname>
        <reimplements refid="classDatum_1a772aa172fff8b5035e1e243eb046ae13">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="104" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="104" bodyend="115"/>
        <references refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" compoundref="datum_8h" startline="64">Datum::action</references>
        <references refid="classFunctionDatum_1aa6814ab6a007db26560d91389d736106" compoundref="functiondatum_8h" startline="55">deprecation_info_</references>
        <references refid="classFunctionDatum_1a1a034a9bbbf47a10747e440c7bdccfa3" compoundref="functiondatum_8h" startline="56">deprecation_warning_issued_</references>
        <references refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">SLIFunction::execute</references>
        <references refid="classSLIInterpreter_1ae7af23ee84e18a135a44e5e6177011ca" compoundref="interpret_8h" startline="177">SLIInterpreter::M_DEPRECATED</references>
        <references refid="group__SLIMessaging_1gacbc035efd87bf843002900f7f1baf5b0" compoundref="interpret_8cc" startline="774" endline="824">SLIInterpreter::message</references>
        <references refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" compoundref="functiondatum_8h" startline="50">name</references>
        <references refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">Name::toString</references>
        <referencedby refid="classFunctiontypeFunction_1a71bde29dfe7a9ab9ac5e6b0c248851e5" compoundref="sliactions_8cc" startline="84" endline="104">FunctiontypeFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1af0789d22a959624ff4160ee6a2ffbf0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void FunctionDatum::print</definition>
        <argsstring>(std::ostream &amp;o) const override</argsstring>
        <name>print</name>
        <qualifiedname>FunctionDatum::print</qualifiedname>
        <reimplements refid="classDatum_1a6a4be93b0173f6026edc7695683ec0c4">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="118" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="118" bodyend="121"/>
        <references refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" compoundref="functiondatum_8h" startline="50">name</references>
        <referencedby refid="classFunctionDatum_1af3c4542edf2a937bbd78c1663f7e8cbb" compoundref="functiondatum_8h" startline="124" endline="127">pprint</referencedby>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1af3c4542edf2a937bbd78c1663f7e8cbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void FunctionDatum::pprint</definition>
        <argsstring>(std::ostream &amp;o) const override</argsstring>
        <name>pprint</name>
        <qualifiedname>FunctionDatum::pprint</qualifiedname>
        <reimplements refid="classDatum_1a9a0232698bafa153d6286a5f3534187a">pprint</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="124" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="124" bodyend="127"/>
        <references refid="classFunctionDatum_1af0789d22a959624ff4160ee6a2ffbf0e" compoundref="functiondatum_8h" startline="118" endline="121">print</references>
        <referencedby refid="classFunctiontypeFunction_1a71bde29dfe7a9ab9ac5e6b0c248851e5" compoundref="sliactions_8cc" startline="84" endline="104">FunctiontypeFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1a8caa18578d9c3c3b35e18b2c3140c94f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void FunctionDatum::info</definition>
        <argsstring>(std::ostream &amp;out) const override</argsstring>
        <name>info</name>
        <qualifiedname>FunctionDatum::info</qualifiedname>
        <reimplements refid="classDatum_1af7725a211bd45f39beae0f5771038c75">info</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="130" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="130" bodyend="134"/>
        <references refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" compoundref="functiondatum_8h" startline="50">name</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1abb9003db3ab2e9ff16fee8ac9876607c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool FunctionDatum::equals</definition>
        <argsstring>(Datum const *dat) const override</argsstring>
        <name>equals</name>
        <qualifiedname>FunctionDatum::equals</qualifiedname>
        <reimplements refid="classDatum_1a30302c3f9b5e9f86fc01021599011a7f">equals</reimplements>
        <param>
          <type><ref refid="classDatum" kindref="compound">Datum</ref> const *</type>
          <declname>dat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="137" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="137" bodyend="146"/>
        <references refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" compoundref="datum_8h" startline="64">Datum::action</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1ad88df509baf6b1236fa250c916cf5eae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
        <definition>const Name &amp; FunctionDatum::getname</definition>
        <argsstring>() const</argsstring>
        <name>getname</name>
        <qualifiedname>FunctionDatum::getname</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="149" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="149" bodyend="152"/>
        <references refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" compoundref="functiondatum_8h" startline="50">name</references>
        <referencedby refid="classSLIInterpreter_1a0c294456daa938f75fe79c099ebc75ee" compoundref="interpret_8cc" startline="924" endline="937">SLIInterpreter::getcurrentname</referencedby>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1a0e4efeb7f53868430780d913b8a86fed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FunctionDatum::backtrace</definition>
        <argsstring>(SLIInterpreter *, int) const</argsstring>
        <name>backtrace</name>
        <qualifiedname>FunctionDatum::backtrace</qualifiedname>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <param>
          <type>int</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="154" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.cc" bodystart="28" bodyend="31"/>
        <references refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" compoundref="datum_8h" startline="64">Datum::action</references>
        <references refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" compoundref="slifunction_8h" startline="57" endline="59">SLIFunction::backtrace</references>
        <referencedby refid="classSLIInterpreter_1a169f3eea32f5812fd3dd31bbd88647af" compoundref="interpret_8cc" startline="986" endline="1018">SLIInterpreter::stack_backtrace</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classFunctionDatum_1a8ab7d0d501cc8c6f6157a7ead6a292d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * FunctionDatum::operator new</definition>
        <argsstring>(size_t size)</argsstring>
        <name>operator new</name>
        <qualifiedname>FunctionDatum::operator new</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="157" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="157" bodyend="164"/>
        <references refid="classsli_1_1pool_1aa4ec8f3aaccf68e6ac5eac14cf722f7f" compoundref="allocator_8h" startline="155" endline="170">sli::pool::alloc</references>
        <references refid="classFunctionDatum_1afc60156bef208e5f2b0e52e79f367749" compoundref="functiondatum_8h" startline="48">memory</references>
      </memberdef>
      <memberdef kind="function" id="classFunctionDatum_1aae90509c3cf23aee07b4bd659462f4b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void FunctionDatum::operator delete</definition>
        <argsstring>(void *p, size_t size)</argsstring>
        <name>operator delete</name>
        <qualifiedname>FunctionDatum::operator delete</qualifiedname>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="167" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="167" bodyend="179"/>
        <references refid="classsli_1_1pool_1ab7252655aaee55b020cc156ced585b6e" compoundref="allocator_8h" startline="173" endline="179">sli::pool::free</references>
        <references refid="classFunctionDatum_1afc60156bef208e5f2b0e52e79f367749" compoundref="functiondatum_8h" startline="48">memory</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Datum</label>
        <link refid="classDatum"/>
      </node>
      <node id="1">
        <label>FunctionDatum</label>
        <link refid="classFunctionDatum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>TypedDatum&lt; slt &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TypedDatum&lt; &amp;SLIInterpreter::Functiontype &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; &amp;SLIInterpreter::Functiontype &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Datum</label>
        <link refid="classDatum"/>
        <childnode refid="4" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>FunctionDatum</label>
        <link refid="classFunctionDatum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>memory</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="6">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="4">
        <label>SLIType</label>
        <link refid="classSLIType"/>
        <childnode refid="5" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>defaultaction</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>TypedDatum&lt; slt &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>TypedDatum&lt; &amp;SLIInterpreter::Functiontype &gt;</label>
        <link refid="classTypedDatum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; &amp;SLIInterpreter::Functiontype &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>sli::pool</label>
        <link refid="classsli_1_1pool"/>
        <childnode refid="9" relation="usage">
          <edgelabel>chunks</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>head</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>sli::pool::chunk</label>
        <link refid="classsli_1_1pool_1_1chunk"/>
        <childnode refid="9" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>sli::pool::link</label>
        <link refid="structsli_1_1pool_1_1link"/>
        <childnode refid="10" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" line="46" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/functiondatum.h" bodystart="47" bodyend="180"/>
    <listofallmembers>
      <member refid="classDatum_1aedcf75cc41ccd6a8247216941b10f719" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>action</name></member>
      <member refid="classDatum_1a8a547bad7564cd6e79fd9b1a245c9e8b" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>addReference</name></member>
      <member refid="classFunctionDatum_1a0e4efeb7f53868430780d913b8a86fed" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>backtrace</name></member>
      <member refid="classFunctionDatum_1abe5a7a0a91a503931ede587269af5c95" prot="private" virt="virtual"><scope>FunctionDatum</scope><name>clone</name></member>
      <member refid="classDatum_1ae1880ae165f7a4aef90be6e8cfaa5ff5" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>Datum</name></member>
      <member refid="classDatum_1ac7e934059aa105e87e0de888c890bf3a" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>Datum</name></member>
      <member refid="classDatum_1a4ceb261c92a00bb5cfbdbb91104c25ff" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>Datum</name></member>
      <member refid="classFunctionDatum_1aa6814ab6a007db26560d91389d736106" prot="private" virt="non-virtual"><scope>FunctionDatum</scope><name>deprecation_info_</name></member>
      <member refid="classFunctionDatum_1a1a034a9bbbf47a10747e440c7bdccfa3" prot="private" virt="non-virtual"><scope>FunctionDatum</scope><name>deprecation_warning_issued_</name></member>
      <member refid="classFunctionDatum_1abb9003db3ab2e9ff16fee8ac9876607c" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>equals</name></member>
      <member refid="classDatum_1aa8bccc352dca610a10b7daee4ca876f7" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>executable_</name></member>
      <member refid="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>execute</name></member>
      <member refid="classFunctionDatum_1a7a9f8425846ec06c6258f5f37d593ad3" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>FunctionDatum</name></member>
      <member refid="classFunctionDatum_1a33ff30b816aa777d257668e6cc58fc37" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>FunctionDatum</name></member>
      <member refid="classFunctionDatum_1a94aeda1bb6da71d006956fc4ff886776" prot="private" virt="virtual"><scope>FunctionDatum</scope><name>get_ptr</name></member>
      <member refid="classFunctionDatum_1ad88df509baf6b1236fa250c916cf5eae" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>getname</name></member>
      <member refid="classDatum_1af7a6a22e2fadd9d3b75e15d7d4dc3998" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>gettypename</name></member>
      <member refid="classFunctionDatum_1a8caa18578d9c3c3b35e18b2c3140c94f" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>info</name></member>
      <member refid="classDatum_1a90e482a3dc319a65759312da1f4f8b07" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>input_form</name></member>
      <member refid="classDatum_1a08d7463e1c6fb42a75f7edf49f9e2e3d" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>is_executable</name></member>
      <member refid="classDatum_1ad27263ba100f9c536085ddcad183ab07" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>isoftype</name></member>
      <member refid="classDatum_1a0cc07c59ff578f522ba46b7bd0e33fb5" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>list</name></member>
      <member refid="classFunctionDatum_1afc60156bef208e5f2b0e52e79f367749" prot="private" virt="non-virtual"><scope>FunctionDatum</scope><name>memory</name></member>
      <member refid="classFunctionDatum_1afb476b05b4a7a21b619ca1b548db5172" prot="private" virt="non-virtual"><scope>FunctionDatum</scope><name>name</name></member>
      <member refid="classDatum_1add98b474ddf98b8352c49052c026f42b" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>numReferences</name></member>
      <member refid="classFunctionDatum_1aae90509c3cf23aee07b4bd659462f4b7" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>operator delete</name></member>
      <member refid="classFunctionDatum_1a8ab7d0d501cc8c6f6157a7ead6a292d8" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>operator new</name></member>
      <member refid="classFunctionDatum_1aacff06cee927addef47c003fa96a19a0" prot="private" virt="non-virtual"><scope>FunctionDatum</scope><name>operator=</name></member>
      <member refid="classTypedDatum_1a5cc4fd0fc7b08a2b3e4c837082f63790" prot="protected" virt="non-virtual" ambiguityscope="TypedDatum&lt; &amp;SLIInterpreter::Functiontype &gt;::"><scope>FunctionDatum</scope><name>operator=</name></member>
      <member refid="classFunctionDatum_1af3c4542edf2a937bbd78c1663f7e8cbb" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>pprint</name></member>
      <member refid="classFunctionDatum_1af0789d22a959624ff4160ee6a2ffbf0e" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>print</name></member>
      <member refid="classDatum_1abd911b2048efc2b685900bb2561ffd2e" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>reference_count_</name></member>
      <member refid="classDatum_1a033ad3a3e54eab1bb9a6b47eeab0611e" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>removeReference</name></member>
      <member refid="classDatum_1a46325ecc6d02cc01c26366b57423d9f4" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>set_executable</name></member>
      <member refid="classDatum_1a0697b4f1572af02085906c0fcf0fc7b1" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>type</name></member>
      <member refid="classTypedDatum_1a9b89818e167d0110afcc09e5d75b738b" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>TypedDatum</name></member>
      <member refid="classTypedDatum_1af95471a28fd63265bdd7a0a2cd2faadb" prot="protected" virt="non-virtual"><scope>FunctionDatum</scope><name>TypedDatum</name></member>
      <member refid="classDatum_1ad1de5a550c726c5cc95e88ffd1e71ef9" prot="public" virt="non-virtual"><scope>FunctionDatum</scope><name>unset_executable</name></member>
      <member refid="classDatum_1afbf982389b91a2b013be1de6bdf1483e" prot="public" virt="virtual"><scope>FunctionDatum</scope><name>~Datum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
