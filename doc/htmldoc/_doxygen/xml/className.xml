<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="className" kind="class" language="C++" prot="public">
    <compoundname>Name</compoundname>
    <derivedcompoundref refid="classAggregateDatum" prot="public" virt="non-virtual">AggregateDatum&lt; Name, &amp;SLIInterpreter::Literaltype &gt;</derivedcompoundref>
    <derivedcompoundref refid="classAggregateDatum" prot="public" virt="non-virtual">AggregateDatum&lt; Name, &amp;SLIInterpreter::Nametype &gt;</derivedcompoundref>
    <derivedcompoundref refid="classAggregateDatum" prot="public" virt="non-virtual">AggregateDatum&lt; Name, &amp;SLIInterpreter::Symboltype &gt;</derivedcompoundref>
    <includes refid="name_8h" local="no">name.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int Name::handle_t</definition>
        <argsstring></argsstring>
        <name>handle_t</name>
        <qualifiedname>Name::handle_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="58" column="24" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="className_1a5783a6bff0e208dba674dc2f94c013bb" prot="private" static="no">
        <type>std::map&lt; std::string, <ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">handle_t</ref> &gt;</type>
        <definition>typedef std::map&lt; std::string, handle_t &gt; Name::HandleMap_</definition>
        <argsstring></argsstring>
        <name>HandleMap_</name>
        <qualifiedname>Name::HandleMap_</qualifiedname>
        <briefdescription>
<para>Datatype for map from strings to handles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="139" column="20" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="className_1a5f895bc9d2032ab6e217d68a5ac09164" prot="private" static="no">
        <type>std::deque&lt; std::string &gt;</type>
        <definition>typedef std::deque&lt; std::string &gt; Name::HandleTable_</definition>
        <argsstring></argsstring>
        <name>HandleTable_</name>
        <qualifiedname>Name::HandleTable_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="140" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" prot="private" static="no" mutable="no">
        <type><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">handle_t</ref></type>
        <definition>handle_t Name::handle_</definition>
        <argsstring></argsstring>
        <name>handle_</name>
        <qualifiedname>Name::handle_</qualifiedname>
        <briefdescription>
<para>Handle for the name represented by the <ref refid="className" kindref="compound">Name</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="152" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="152" bodyend="-1"/>
        <referencedby refid="className_1ad1408e03b1aff27e8a38575b7c9160e8" compoundref="name_8h" startline="100" endline="103">operator!=</referencedby>
        <referencedby refid="className_1a1482f9065b5b81f55f88eef6e6a69ab7" compoundref="name_8h" startline="112" endline="115">operator&lt;</referencedby>
        <referencedby refid="className_1acccca7d37f696a72e908e655b7388b0f" compoundref="name_8h" startline="94" endline="97">operator==</referencedby>
        <referencedby refid="className_1ae79d50919b623fcf1bea322c09148dcd" compoundref="name_8cc" startline="63" endline="66">print_handle</referencedby>
        <referencedby refid="className_1a7e3458f794f8a041d79172e2da29d6ce" compoundref="name_8h" startline="88" endline="91">toIndex</referencedby>
        <referencedby refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">toString</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="className_1a12a92d46d52b216ccaa86e3cb1539e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Name::Name</definition>
        <argsstring>()</argsstring>
        <name>Name</name>
        <qualifiedname>Name::Name</qualifiedname>
        <briefdescription>
<para>Create <ref refid="className" kindref="compound">Name</ref> without value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="62" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="className_1a64d8545d460530b1bb887c1d49fb3491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Name::Name</definition>
        <argsstring>(const char s[])</argsstring>
        <name>Name</name>
        <qualifiedname>Name::Name</qualifiedname>
        <param>
          <type>const char</type>
          <declname>s</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="67" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="className_1a46575d2e2b51c01a15529d42ca488b80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Name::Name</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>Name</name>
        <qualifiedname>Name::Name</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="71" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="className_1a816b89e2878723a738844f7913aba398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Name::Name</definition>
        <argsstring>(const Name &amp;n)=default</argsstring>
        <name>Name</name>
        <qualifiedname>Name::Name</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="76" column="3"/>
      </memberdef>
      <memberdef kind="function" id="className_1ae7919d243044cf333066dd03a1efb7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="className" kindref="compound">Name</ref> &amp;</type>
        <definition>Name &amp; Name::operator=</definition>
        <argsstring>(const Name &amp;n)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>Name::operator=</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="77" column="8"/>
      </memberdef>
      <memberdef kind="function" id="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; Name::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <qualifiedname>Name::toString</qualifiedname>
        <briefdescription>
<para>Return string represented by <ref refid="className" kindref="compound">Name</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="82" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="72" bodyend="75"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a4f5d4769f422431b7560df35af23867a" compoundref="connection__manager_8cpp" startline="568" endline="740">nest::ConnectionManager::connect_arrays</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1afdca64fbdcc8897ed6e25a8e534b482e" compoundref="model__manager_8cpp" startline="265" endline="287">nest::ModelManager::copy_connection_model_</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1a14ec157c17bfe589d51f82c206aba049" compoundref="model__manager_8cpp" startline="243" endline="262">nest::ModelManager::copy_node_model_</referencedby>
        <referencedby refid="classnest_1_1GenericFactory_1af2b2368daa22f7f0058acd927a41c100" compoundref="generic__factory_8h" startline="91" endline="99">nest::GenericFactory&lt; BaseT &gt;::create</referencedby>
        <referencedby refid="classnest_1_1ConnParameter_1a27fc06b23ad2d6605169b576b0cc2407" compoundref="conn__parameter_8cpp" startline="36" endline="74">nest::ConnParameter::create</referencedby>
        <referencedby refid="classSLIInterpreter_1a249c58e5896d4ebcb768024088e47593" compoundref="interpret_8cc" startline="271" endline="282">SLIInterpreter::createcommand</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a93eb34572bc45de2fb2aa093756c6a43" compoundref="io__manager_8cpp" startline="330" endline="358">nest::IOManager::enroll_stimulator</referencedby>
        <referencedby refid="classnest_1_1DynamicRecordablesMap_1ae212be9a790e1806091ee539a2e51af7" compoundref="recordables__map_8h" startline="218" endline="229">nest::DynamicRecordablesMap&lt; HostNode &gt;::erase</referencedby>
        <referencedby refid="classStrFunction_1a06a7bd24eec85681ab4907ebb18ec909" compoundref="sli__io_8cc" startline="488" endline="532">StrFunction::execute</referencedby>
        <referencedby refid="classMathLinkPutStringFunction_1ae4384a9906a5d544bd9633a317513609" compoundref="sli__io_8cc" startline="68" endline="87">MathLinkPutStringFunction::execute</referencedby>
        <referencedby refid="classXIfstreamFunction_1a478fd1764f9af82080cfbf5cec6a6330" compoundref="sli__io_8cc" startline="103" endline="132">XIfstreamFunction::execute</referencedby>
        <referencedby refid="classIfstreamFunction_1a05fd2998f9551713081f4ab2ad568f71" compoundref="sli__io_8cc" startline="135" endline="177">IfstreamFunction::execute</referencedby>
        <referencedby refid="classOfstreamFunction_1a3bfc2d133d5c7d3174a42f8000681e21" compoundref="sli__io_8cc" startline="194" endline="225">OfstreamFunction::execute</referencedby>
        <referencedby refid="classOfsopenFunction_1a8eaa5c2d3e4e60f0736bf967f22f526f" compoundref="sli__io_8cc" startline="254" endline="306">OfsopenFunction::execute</referencedby>
        <referencedby refid="classPrettyprintFunction_1ae14c18102851a38269b7beca0660b858" compoundref="sli__io_8cc" startline="599" endline="625">PrettyprintFunction::execute</referencedby>
        <referencedby refid="classCloseistreamFunction_1afdc4747eb2c3320eb2d2d9b5588854b9" compoundref="sli__io_8cc" startline="755" endline="794">CloseistreamFunction::execute</referencedby>
        <referencedby refid="classCloseostreamFunction_1a224914523097a41793a5ffc641df69a9" compoundref="sli__io_8cc" startline="798" endline="841">CloseostreamFunction::execute</referencedby>
        <referencedby refid="classFlushFunction_1aaad54bad2651e4ba352fef4dbad61839" compoundref="sli__io_8cc" startline="632" endline="655">FlushFunction::execute</referencedby>
        <referencedby refid="classEndlFunction_1a0719edbb131482b3ee284a0bc0813b42" compoundref="sli__io_8cc" startline="670" endline="695">EndlFunction::execute</referencedby>
        <referencedby refid="classEndsFunction_1af7f52b0807266730c16d66d021ae15ae" compoundref="sli__io_8cc" startline="698" endline="723">EndsFunction::execute</referencedby>
        <referencedby refid="classEatwhiteFunction_1af9c5236c74051eb1073d4c2c2922c22e" compoundref="sli__io_8cc" startline="726" endline="751">EatwhiteFunction::execute</referencedby>
        <referencedby refid="classSetwFunction_1a639444f31137b44ccbc93777209dbc04" compoundref="sli__io_8cc" startline="844" endline="878">SetwFunction::execute</referencedby>
        <referencedby refid="classSetprecisionFunction_1a484f49c8c368728b9a6ce79faa8ad559" compoundref="sli__io_8cc" startline="895" endline="929">SetprecisionFunction::execute</referencedby>
        <referencedby refid="classIOSFixedFunction_1a0e62696df69769d63cfbf5e1764cb623" compoundref="sli__io_8cc" startline="932" endline="957">IOSFixedFunction::execute</referencedby>
        <referencedby refid="classIOSScientificFunction_1a2c692edc9585a09f1c7c82d2046126ed" compoundref="sli__io_8cc" startline="960" endline="985">IOSScientificFunction::execute</referencedby>
        <referencedby refid="classIOSDefaultFunction_1ac94c49cf89969dc55751d5e1f7504021" compoundref="sli__io_8cc" startline="988" endline="1013">IOSDefaultFunction::execute</referencedby>
        <referencedby refid="classIOSShowpointFunction_1adf961a408799f7e7c54141d92b7d060d" compoundref="sli__io_8cc" startline="1016" endline="1040">IOSShowpointFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowpointFunction_1a3678277749e51e41ca2f5ed5a0242f11" compoundref="sli__io_8cc" startline="1043" endline="1067">IOSNoshowpointFunction::execute</referencedby>
        <referencedby refid="classIOSShowbaseFunction_1a9fbf86437d23ed3b6e53badebe79af34" compoundref="sli__io_8cc" startline="1152" endline="1176">IOSShowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowbaseFunction_1a8313a3cd9219b554cfe797fad8861701" compoundref="sli__io_8cc" startline="1179" endline="1203">IOSNoshowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSDecFunction_1a91d1da26c1d6c9d29c509cd3836e25b4" compoundref="sli__io_8cc" startline="1125" endline="1149">IOSDecFunction::execute</referencedby>
        <referencedby refid="classIOSHexFunction_1a28f05670f46b13ecae6772eac22d969a" compoundref="sli__io_8cc" startline="1098" endline="1122">IOSHexFunction::execute</referencedby>
        <referencedby refid="classIOSOctFunction_1ab8338043115f277e44e3ccce57f69b47" compoundref="sli__io_8cc" startline="1071" endline="1095">IOSOctFunction::execute</referencedby>
        <referencedby refid="classIOSLeftFunction_1afa121be648a22eb36e11bdfbc1c93f08" compoundref="sli__io_8cc" startline="1206" endline="1232">IOSLeftFunction::execute</referencedby>
        <referencedby refid="classIOSRightFunction_1a644df4fd3ec022a3afb9aa3968672de2" compoundref="sli__io_8cc" startline="1235" endline="1261">IOSRightFunction::execute</referencedby>
        <referencedby refid="classIOSInternalFunction_1a08e35b114543764590f42756af91d11d" compoundref="sli__io_8cc" startline="1264" endline="1290">IOSInternalFunction::execute</referencedby>
        <referencedby refid="classGetcFunction_1aa41d75645dc805c050a16eb7bed8ec29" compoundref="sli__io_8cc" startline="1305" endline="1332">GetcFunction::execute</referencedby>
        <referencedby refid="classGetsFunction_1a63741e5159275d306a2ef0a6ce879684" compoundref="sli__io_8cc" startline="1345" endline="1374">GetsFunction::execute</referencedby>
        <referencedby refid="classGetlineFunction_1a8771fd53ab7271b139b35cabdfbd1c50" compoundref="sli__io_8cc" startline="1378" endline="1431">GetlineFunction::execute</referencedby>
        <referencedby refid="classIGoodFunction_1a355151f9a47f15fe3fbea1bfeadee5bc" compoundref="sli__io_8cc" startline="1434" endline="1473">IGoodFunction::execute</referencedby>
        <referencedby refid="classIClearFunction_1a990c48cc4088586150df536d873d2d1e" compoundref="sli__io_8cc" startline="1476" endline="1507">IClearFunction::execute</referencedby>
        <referencedby refid="classOClearFunction_1a74b14ccd534240951dc2da4cc0d54aa2" compoundref="sli__io_8cc" startline="1510" endline="1540">OClearFunction::execute</referencedby>
        <referencedby refid="classIFailFunction_1a8667515c9e6a69a7bdcd9e459e6fd21f" compoundref="sli__io_8cc" startline="1543" endline="1583">IFailFunction::execute</referencedby>
        <referencedby refid="classOGoodFunction_1ac51ac4d537d31b55820f339e75b0d612" compoundref="sli__io_8cc" startline="1587" endline="1625">OGoodFunction::execute</referencedby>
        <referencedby refid="classIEofFunction_1a96bb999b2b4af2938787791a3091fccd" compoundref="sli__io_8cc" startline="1628" endline="1666">IEofFunction::execute</referencedby>
        <referencedby refid="classOEofFunction_1a3981502575cdf5467ef5e21722a77893" compoundref="sli__io_8cc" startline="1670" endline="1708">OEofFunction::execute</referencedby>
        <referencedby refid="classIn__AvailFunction_1ad7231e2e9bf5d62e9d3c9413979b0b0b" compoundref="sli__io_8cc" startline="1729" endline="1757">In_AvailFunction::execute</referencedby>
        <referencedby refid="classReadDoubleFunction_1a521063b16d93a7f62e201d05b5366e0e" compoundref="sli__io_8cc" startline="1760" endline="1799">ReadDoubleFunction::execute</referencedby>
        <referencedby refid="classReadIntFunction_1ad377d00c3a38ee868885f3dba639a68e" compoundref="sli__io_8cc" startline="1802" endline="1841">ReadIntFunction::execute</referencedby>
        <referencedby refid="classReadWordFunction_1a5a1c212de7f15932e012067115d65930" compoundref="sli__io_8cc" startline="1855" endline="1886">ReadWordFunction::execute</referencedby>
        <referencedby refid="classFunctionDatum_1a7278334758fee3af962b54efe4576e1e" compoundref="functiondatum_8h" startline="104" endline="115">FunctionDatum::execute</referencedby>
        <referencedby refid="structnest_1_1Time_1_1ms_1ad8e170368ee978c428e0dcf47dd87cea" compoundref="nest__time_8cpp" startline="143" endline="159">nest::Time::ms::fromtoken</referencedby>
        <referencedby refid="classnest_1_1GrowthCurveLinear_1a43ceccb55b12d5134d4520f34bbfc608" compoundref="growth__curve_8cpp" startline="53" endline="57">nest::GrowthCurveLinear::get</referencedby>
        <referencedby refid="classnest_1_1GrowthCurveGaussian_1a0074dc9af167a1e30baf3bbda8792164" compoundref="growth__curve_8cpp" startline="91" endline="96">nest::GrowthCurveGaussian::get</referencedby>
        <referencedby refid="classnest_1_1GrowthCurveSigmoid_1af288b32f6ff7f6cd600f6ab4e7c40e20" compoundref="growth__curve_8cpp" startline="144" endline="149">nest::GrowthCurveSigmoid::get</referencedby>
        <referencedby refid="classnest_1_1SPBuilder_1ae54e4346dea053a58279ac33be5343c5" compoundref="conn__builder_8h" startline="418" endline="421">nest::SPBuilder::get_post_synaptic_element_name</referencedby>
        <referencedby refid="classnest_1_1SPBuilder_1aae68144dabb2343412fd16692dc53bd0" compoundref="conn__builder_8h" startline="413" endline="416">nest::SPBuilder::get_pre_synaptic_element_name</referencedby>
        <referencedby refid="tokenutils_8cc_1a95ea4d0048b41f138634e4eca76292bf" compoundref="tokenutils_8cc" startline="115" endline="125">getValue&lt; bool &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1aeb08d5341a6bafebc5f8513da1eccb2b" compoundref="tokenutils_8cc" startline="74" endline="91">getValue&lt; double &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a32eba92c5abb6cb955fad91324b7f076" compoundref="tokenutils_8cc" startline="41" endline="50">getValue&lt; long &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1ab4940c6a9d7f700ec063ad673ea35ca9" compoundref="tokenutils_8cc" startline="154" endline="184">getValue&lt; std::string &gt;</referencedby>
        <referencedby refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" compoundref="dictstack_8h" startline="176" endline="205">DictionaryStack::lookup2</referencedby>
        <referencedby refid="classDictionary_1a68e415a454294d02eb41ca1e2c21b50b" compoundref="dict_8h" startline="261" endline="272">Dictionary::lookup2</referencedby>
        <referencedby refid="classnest_1_1UnknownModelName_1aa8d1e63c1c602435fb2dabffc80095bf" compoundref="exceptions_8cpp" startline="35" endline="45">nest::UnknownModelName::message</referencedby>
        <referencedby refid="name_8cc_1a6e26a6ea7b0e3648dd15e55af866052d" compoundref="name_8cc" startline="128" endline="132">operator&lt;&lt;</referencedby>
        <referencedby refid="classDictionary_1a10f3c08248f5b078d4eb523aab2aabfd" compoundref="dict_8h" startline="310" endline="321">Dictionary::operator[]</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1aed100533c2c7f259d03d9d10e10308cb" compoundref="model__manager__impl_8h" startline="44" endline="54">nest::ModelManager::register_node_model</referencedby>
        <referencedby refid="tokenutils_8cc_1adecd0efa9c7a3b66e074715e97c54f5c" compoundref="tokenutils_8cc" startline="128" endline="138">setValue&lt; bool &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a6bca9eb7cda2a3fd18e97e6a986c85b4" compoundref="tokenutils_8cc" startline="95" endline="104">setValue&lt; double &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a76463d42ed8c9825c9ef11cd4b8cde13" compoundref="tokenutils_8cc" startline="53" endline="62">setValue&lt; long &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1ad50a65570f12e32bb82dc42a893d4f28" compoundref="tokenutils_8cc" startline="187" endline="234">setValue&lt; std::string &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1ad5c32a8c3f543e57616751c33ff78a6c" compoundref="tokenutils_8cc" startline="275" endline="293">setValue&lt; std::vector&lt; double &gt; &gt;</referencedby>
        <referencedby refid="tokenutils_8cc_1a4b46c710e11a1e69803a592fab43e8e7" compoundref="tokenutils_8cc" startline="332" endline="350">setValue&lt; std::vector&lt; long &gt; &gt;</referencedby>
        <referencedby refid="classTokenArray_1aefcff88c417f333a27f79b1c67e29334" compoundref="tokenarray_8cc" startline="76" endline="91">TokenArray::toVector</referencedby>
        <referencedby refid="classDictionaryStack_1ad1cb0f7217c63f0b5ef32f86a2903cfc" compoundref="dictstack_8cc" startline="47" endline="63">DictionaryStack::undef</referencedby>
        <referencedby refid="structnest_1_1Device_1_1Parameters___1a0c84f2fe712eb36c2893e34e84d5aa82" compoundref="device_8cpp" startline="86" endline="108">nest::Device::Parameters_::update_</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1a7e3458f794f8a041d79172e2da29d6ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">handle_t</ref></type>
        <definition>handle_t Name::toIndex</definition>
        <argsstring>() const</argsstring>
        <name>toIndex</name>
        <qualifiedname>Name::toIndex</qualifiedname>
        <briefdescription>
<para>Return table index for <ref refid="className" kindref="compound">Name</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="88" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="88" bodyend="91"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
        <referencedby refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" compoundref="dictstack_8h" startline="102" endline="110">DictionaryStack::basecache_token</referencedby>
        <referencedby refid="classDictionaryStack_1a2788ee691c8872c2b586fbf98f3433ab" compoundref="dictstack_8h" startline="277" endline="300">DictionaryStack::baseknown</referencedby>
        <referencedby refid="classDictionaryStack_1a8581db76ab8f676ec4677cf666e7cf91" compoundref="dictstack_8h" startline="212" endline="239">DictionaryStack::baselookup</referencedby>
        <referencedby refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" compoundref="dictstack_8h" startline="91" endline="99">DictionaryStack::cache_token</referencedby>
        <referencedby refid="classDictionaryStack_1a2b786bde0d5a369765cb7184d8b39fe0" compoundref="dictstack_8h" startline="127" endline="134">DictionaryStack::clear_token_from_basecache</referencedby>
        <referencedby refid="classDictionaryStack_1ad60c536d820b6f24bbf9654ff1fdf52c" compoundref="dictstack_8h" startline="117" endline="124">DictionaryStack::clear_token_from_cache</referencedby>
        <referencedby refid="classDictionaryStack_1a7d92859ff56dd8ff8bd6cc084142476c" compoundref="dictstack_8h" startline="244" endline="272">DictionaryStack::known</referencedby>
        <referencedby refid="classDictionaryStack_1a4e80d9220ca602b773a2fd0855037c99" compoundref="dictstack_8h" startline="176" endline="205">DictionaryStack::lookup2</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1acccca7d37f696a72e908e655b7388b0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Name::operator==</definition>
        <argsstring>(const Name &amp;n) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Name::operator==</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="94" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="94" bodyend="97"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
      </memberdef>
      <memberdef kind="function" id="className_1ad1408e03b1aff27e8a38575b7c9160e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Name::operator!=</definition>
        <argsstring>(const Name &amp;n) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>Name::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="100" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="100" bodyend="103"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
      </memberdef>
      <memberdef kind="function" id="className_1a1482f9065b5b81f55f88eef6e6a69ab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Name::operator&lt;</definition>
        <argsstring>(const Name &amp;n) const</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Name::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Non-alphabetic ordering of names. </para>
        </briefdescription>
        <detaileddescription>
<para>Entering <ref refid="className" kindref="compound">Name</ref>&apos;s into dictionaries requires ordering. Ordering based on string comparison would be very slow. We thus compare based on table indices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="111" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="112" bodyend="115"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
      </memberdef>
      <memberdef kind="function" id="className_1ae79d50919b623fcf1bea322c09148dcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Name::print_handle</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>print_handle</name>
        <qualifiedname>Name::print_handle</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="127" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="63" bodyend="66"/>
        <references refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" compoundref="name_8h" startline="152">handle_</references>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="className_1a8ee5a44599eb7a686ee64c343e0c8e18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Name::lookup</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>lookup</name>
        <qualifiedname>Name::lookup</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="118" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="118" bodyend="122"/>
        <references refid="className_1ab97d3064318911c56af142c826183b37" compoundref="name_8h" startline="169" endline="177">handleMapInstance_</references>
        <referencedby refid="group__DictUtils_1gad4634f6e310641d68ed5efe2a2181e96" compoundref="dictutils_8h" startline="300" endline="310">append_property</referencedby>
        <referencedby refid="group__DictUtils_1ga3597227196f33fec1c8bb2f104ab2c57" compoundref="dictutils_8h" startline="318" endline="327">append_property&lt; std::vector&lt; double &gt; &gt;</referencedby>
        <referencedby refid="group__DictUtils_1gabf555c4346a3aeeae1e0b303beea2031" compoundref="dictutils_8h" startline="336" endline="345">append_property&lt; std::vector&lt; long &gt; &gt;</referencedby>
        <referencedby refid="namespacenest_1a11fe37332767e88070eb4b5cf342df8a" compoundref="nest_8cpp" startline="365" endline="373">nest::apply</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a42095f521521f147812163a8b98ee96f" compoundref="connection__manager_8cpp" startline="946" endline="1015">nest::ConnectionManager::get_connections</referencedby>
        <referencedby refid="group__DictUtils_1gaeb39309693e8740af1323d58dae4277f" compoundref="dictutils_8cc" startline="26" endline="34">initialize_property_array</referencedby>
        <referencedby refid="group__DictUtils_1gaca5cefae6151612dea3da39adc295c78" compoundref="dictutils_8cc" startline="37" endline="45">initialize_property_doublevector</referencedby>
        <referencedby refid="group__DictUtils_1gadc6126c32cd382bccbcfbc788c6f650f" compoundref="dictutils_8cc" startline="48" endline="56">initialize_property_intvector</referencedby>
        <referencedby refid="structnest_1_1weight__recorder_1_1Parameters___1ab4f0b47823f61ca3c54b28aef291edbc" compoundref="weight__recorder_8cpp" startline="83" endline="128">nest::weight_recorder::Parameters_::set</referencedby>
        <referencedby refid="structnest_1_1inhomogeneous__poisson__generator_1_1Parameters___1af9a61106913bd967c99586f8da40616b" compoundref="inhomogeneous__poisson__generator_8cpp" startline="113" endline="186">nest::inhomogeneous_poisson_generator::Parameters_::set</referencedby>
        <referencedby refid="structnest_1_1spike__generator_1_1Parameters___1af14adbb0fce655e18c826008add64f19" compoundref="spike__generator_8cpp" startline="157" endline="271">nest::spike_generator::Parameters_::set</referencedby>
        <referencedby refid="classnest_1_1FreeLayer_1acb2f436d36da84d837609d56562af384" compoundref="free__layer_8h" startline="113" endline="251">nest::FreeLayer&lt; D &gt;::set_status</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">nest::RecordingDevice::set_status</referencedby>
        <referencedby refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" compoundref="stimulation__device_8cpp" startline="123" endline="162">nest::StimulationDevice::set_status</referencedby>
        <referencedby refid="classSLIType_1a84a38693757fbedb2d4007f3a0108bae" compoundref="slitype_8cc" startline="33" endline="45">SLIType::settypename</referencedby>
        <referencedby refid="group__DictUtils_1ga44cdfb140502a5d84d5a798c259f0073" compoundref="dictutils_8h" startline="235" endline="255">updateValue</referencedby>
        <referencedby refid="namespacenest_1a6d83992e5c06d61f33858456ac630dc4" compoundref="dict__util_8h" startline="45" endline="66">nest::updateValueParam</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1a092070d4f0ab7a1ae8a58ce4e8385fe9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>std::size_t Name::capacity</definition>
        <argsstring>()</argsstring>
        <name>capacity</name>
        <qualifiedname>Name::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="124" column="17" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="35" bodyend="38"/>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
      </memberdef>
      <memberdef kind="function" id="className_1a2666638a472f84ae7adc6ef78619c982" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>std::size_t Name::num_handles</definition>
        <argsstring>()</argsstring>
        <name>num_handles</name>
        <qualifiedname>Name::num_handles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="125" column="17" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="41" bodyend="44"/>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
        <referencedby refid="classDictionaryStack_1a98ba69241d0a5acadf18948a7eb782c4" compoundref="dictstack_8h" startline="102" endline="110">DictionaryStack::basecache_token</referencedby>
        <referencedby refid="classDictionaryStack_1a75130c41081827606dd76b0901ed93f6" compoundref="dictstack_8h" startline="91" endline="99">DictionaryStack::cache_token</referencedby>
        <referencedby refid="className_1a7482efcf8561e648ba54b1fb30e2948a" compoundref="name_8cc" startline="48" endline="60">list_handles</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1a7482efcf8561e648ba54b1fb30e2948a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Name::list_handles</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>list_handles</name>
        <qualifiedname>Name::list_handles</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="129" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="48" bodyend="60"/>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
        <references refid="className_1a2666638a472f84ae7adc6ef78619c982" compoundref="name_8cc" startline="41" endline="44">num_handles</references>
        <referencedby refid="className_1a60606fc47a14db50fed72e4396ebec2a" compoundref="name_8cc" startline="121" endline="124">info</referencedby>
        <referencedby refid="className_1a81de05c7a7465d3c74e12435cd841c31" compoundref="name_8cc" startline="107" endline="118">list</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1a81de05c7a7465d3c74e12435cd841c31" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Name::list</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>list</name>
        <qualifiedname>Name::list</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="130" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="107" bodyend="118"/>
        <references refid="className_1ab97d3064318911c56af142c826183b37" compoundref="name_8h" startline="169" endline="177">handleMapInstance_</references>
        <references refid="className_1a7482efcf8561e648ba54b1fb30e2948a" compoundref="name_8cc" startline="48" endline="60">list_handles</references>
      </memberdef>
      <memberdef kind="function" id="className_1a60606fc47a14db50fed72e4396ebec2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Name::info</definition>
        <argsstring>(std::ostream &amp;)</argsstring>
        <name>info</name>
        <qualifiedname>Name::info</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="131" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="121" bodyend="124"/>
        <references refid="className_1a7482efcf8561e648ba54b1fb30e2948a" compoundref="name_8cc" startline="48" endline="60">list_handles</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="className_1a164be5d83e26df92490ea1f61df7de73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" kindref="member">handle_t</ref></type>
        <definition>unsigned int Name::insert</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>insert</name>
        <qualifiedname>Name::insert</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="134" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.cc" bodystart="78" bodyend="104"/>
        <references refid="className_1ab97d3064318911c56af142c826183b37" compoundref="name_8h" startline="169" endline="177">handleMapInstance_</references>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
        <referencedby refid="classnest_1_1RecordingBackendASCII_1a1a95c36ab22b5e1687631c5f9f360ff1" compoundref="recording__backend__ascii_8cpp" startline="59" endline="74">nest::RecordingBackendASCII::enroll</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendMemory_1a1da48327a1cee8511bfd3cd83cea6d39" compoundref="recording__backend__memory_8cpp" startline="50" endline="63">nest::RecordingBackendMemory::enroll</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendScreen_1a8306eb9cb2dab1f970abc6509d9cc5dd" compoundref="recording__backend__screen_8cpp" startline="44" endline="57">nest::RecordingBackendScreen::enroll</referencedby>
        <referencedby refid="classnest_1_1Compartment_1afee5ffa3ea8c55eac9449eda418ad03e" compoundref="cm__tree_8cpp" startline="101" endline="109">nest::Compartment::get_recordables</referencedby>
        <referencedby refid="classnest_1_1CompTree_1a9e2183c2d8b8c54e132be56d463e043f" compoundref="cm__tree_8cpp" startline="347" endline="361">nest::CompTree::get_recordables</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="className_1ab97d3064318911c56af142c826183b37" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="className_1a5783a6bff0e208dba674dc2f94c013bb" kindref="member">HandleMap_</ref> &amp;</type>
        <definition>Name::HandleMap_ &amp; Name::handleMapInstance_</definition>
        <argsstring>()</argsstring>
        <name>handleMapInstance_</name>
        <qualifiedname>Name::handleMapInstance_</qualifiedname>
        <briefdescription>
<para>Function returning a reference to the single map instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Implementation akin to Meyers Singleton, see Alexandrescu, ch 6.4. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="146" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="169" bodyend="177"/>
        <references refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" compoundref="name_8h" startline="159" endline="166">handleTableInstance_</references>
        <referencedby refid="className_1a164be5d83e26df92490ea1f61df7de73" compoundref="name_8cc" startline="78" endline="104">insert</referencedby>
        <referencedby refid="className_1a81de05c7a7465d3c74e12435cd841c31" compoundref="name_8cc" startline="107" endline="118">list</referencedby>
        <referencedby refid="className_1a8ee5a44599eb7a686ee64c343e0c8e18" compoundref="name_8h" startline="118" endline="122">lookup</referencedby>
      </memberdef>
      <memberdef kind="function" id="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="className_1a5f895bc9d2032ab6e217d68a5ac09164" kindref="member">HandleTable_</ref> &amp;</type>
        <definition>Name::HandleTable_ &amp; Name::handleTableInstance_</definition>
        <argsstring>()</argsstring>
        <name>handleTableInstance_</name>
        <qualifiedname>Name::handleTableInstance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="147" column="23" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="159" bodyend="166"/>
        <referencedby refid="className_1a092070d4f0ab7a1ae8a58ce4e8385fe9" compoundref="name_8cc" startline="35" endline="38">capacity</referencedby>
        <referencedby refid="className_1ab97d3064318911c56af142c826183b37" compoundref="name_8h" startline="169" endline="177">handleMapInstance_</referencedby>
        <referencedby refid="className_1a164be5d83e26df92490ea1f61df7de73" compoundref="name_8cc" startline="78" endline="104">insert</referencedby>
        <referencedby refid="className_1a7482efcf8561e648ba54b1fb30e2948a" compoundref="name_8cc" startline="48" endline="60">list_handles</referencedby>
        <referencedby refid="className_1a2666638a472f84ae7adc6ef78619c982" compoundref="name_8cc" startline="41" endline="44">num_handles</referencedby>
        <referencedby refid="className_1ae79d50919b623fcf1bea322c09148dcd" compoundref="name_8cc" startline="63" endline="66">print_handle</referencedby>
        <referencedby refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" compoundref="name_8cc" startline="72" endline="75">toString</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represent strings by ints to facilitate fast comparison. </para>
    </briefdescription>
    <detaileddescription>
<para>Each <ref refid="className" kindref="compound">Name</ref> object represents a string by a unique integer number. Comparing <ref refid="className" kindref="compound">Name</ref> objects instead of comparing strings directly, reduces the complexity of string comparison to that of int comparison.</para>
<para>Each <ref refid="className" kindref="compound">Name</ref> object contains a Handle to the string it represents. Strings are mapped to Handles via an associative array. Handles are stored in a table, and each Handle contains its own index into this table as unique ID, as well as the string represented. Fast comparison of <ref refid="className" kindref="compound">Name</ref> objects is achieved by comparing the indices stored in the handles. Reference counting permits deletion of unused Handles.</para>
<para><simplesect kind="note"><para>Any string read by the interpreter should be converted to a <ref refid="className" kindref="compound">Name</ref> at once. </para>
</simplesect>
<simplesect kind="note"><para>class <ref refid="className" kindref="compound">Name</ref> maintains two static lookup tables and is thus not thread-safe. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AggregateDatum&lt; Name, &amp;SLIInterpreter::Literaltype &gt;</label>
        <link refid="classAggregateDatum"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>AggregateDatum&lt; Name, &amp;SLIInterpreter::Nametype &gt;</label>
        <link refid="classAggregateDatum"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>AggregateDatum&lt; Name, &amp;SLIInterpreter::Symboltype &gt;</label>
        <link refid="classAggregateDatum"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>LiteralDatum</label>
        <link refid="classLiteralDatum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="5">
        <label>NameDatum</label>
        <link refid="classNameDatum"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>SymbolDatum</label>
        <link refid="classSymbolDatum"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/name.h" line="54" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/name.h" bodystart="55" bodyend="153"/>
    <listofallmembers>
      <member refid="className_1a092070d4f0ab7a1ae8a58ce4e8385fe9" prot="public" virt="non-virtual"><scope>Name</scope><name>capacity</name></member>
      <member refid="className_1a6b0a79353b82e331c6cc34c61dc6d0aa" prot="private" virt="non-virtual"><scope>Name</scope><name>handle_</name></member>
      <member refid="className_1addaf7bbefc6ef1857a40f1f0c3a516a4" prot="public" virt="non-virtual"><scope>Name</scope><name>handle_t</name></member>
      <member refid="className_1a5783a6bff0e208dba674dc2f94c013bb" prot="private" virt="non-virtual"><scope>Name</scope><name>HandleMap_</name></member>
      <member refid="className_1ab97d3064318911c56af142c826183b37" prot="private" virt="non-virtual"><scope>Name</scope><name>handleMapInstance_</name></member>
      <member refid="className_1a5f895bc9d2032ab6e217d68a5ac09164" prot="private" virt="non-virtual"><scope>Name</scope><name>HandleTable_</name></member>
      <member refid="className_1aef9590ebd5ffbfc2feb4629eea2c8a5f" prot="private" virt="non-virtual"><scope>Name</scope><name>handleTableInstance_</name></member>
      <member refid="className_1a60606fc47a14db50fed72e4396ebec2a" prot="public" virt="non-virtual"><scope>Name</scope><name>info</name></member>
      <member refid="className_1a164be5d83e26df92490ea1f61df7de73" prot="private" virt="non-virtual"><scope>Name</scope><name>insert</name></member>
      <member refid="className_1a81de05c7a7465d3c74e12435cd841c31" prot="public" virt="non-virtual"><scope>Name</scope><name>list</name></member>
      <member refid="className_1a7482efcf8561e648ba54b1fb30e2948a" prot="public" virt="non-virtual"><scope>Name</scope><name>list_handles</name></member>
      <member refid="className_1a8ee5a44599eb7a686ee64c343e0c8e18" prot="public" virt="non-virtual"><scope>Name</scope><name>lookup</name></member>
      <member refid="className_1a12a92d46d52b216ccaa86e3cb1539e58" prot="public" virt="non-virtual"><scope>Name</scope><name>Name</name></member>
      <member refid="className_1a64d8545d460530b1bb887c1d49fb3491" prot="public" virt="non-virtual"><scope>Name</scope><name>Name</name></member>
      <member refid="className_1a46575d2e2b51c01a15529d42ca488b80" prot="public" virt="non-virtual"><scope>Name</scope><name>Name</name></member>
      <member refid="className_1a816b89e2878723a738844f7913aba398" prot="public" virt="non-virtual"><scope>Name</scope><name>Name</name></member>
      <member refid="className_1a2666638a472f84ae7adc6ef78619c982" prot="public" virt="non-virtual"><scope>Name</scope><name>num_handles</name></member>
      <member refid="className_1ad1408e03b1aff27e8a38575b7c9160e8" prot="public" virt="non-virtual"><scope>Name</scope><name>operator!=</name></member>
      <member refid="className_1a1482f9065b5b81f55f88eef6e6a69ab7" prot="public" virt="non-virtual"><scope>Name</scope><name>operator&lt;</name></member>
      <member refid="className_1ae7919d243044cf333066dd03a1efb7d7" prot="public" virt="non-virtual"><scope>Name</scope><name>operator=</name></member>
      <member refid="className_1acccca7d37f696a72e908e655b7388b0f" prot="public" virt="non-virtual"><scope>Name</scope><name>operator==</name></member>
      <member refid="className_1ae79d50919b623fcf1bea322c09148dcd" prot="public" virt="non-virtual"><scope>Name</scope><name>print_handle</name></member>
      <member refid="className_1a7e3458f794f8a041d79172e2da29d6ce" prot="public" virt="non-virtual"><scope>Name</scope><name>toIndex</name></member>
      <member refid="className_1a6f4aaf5ff7b467bc4243af2ca6054a26" prot="public" virt="non-virtual"><scope>Name</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
