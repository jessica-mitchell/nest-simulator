<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classDictError" kind="class" language="C++" prot="public">
    <compoundname>DictError</compoundname>
    <basecompoundref refid="classInterpreterError" prot="public" virt="non-virtual">InterpreterError</basecompoundref>
    <derivedcompoundref refid="classEntryTypeMismatch" prot="public" virt="non-virtual">EntryTypeMismatch</derivedcompoundref>
    <derivedcompoundref refid="classUnaccessedDictionaryEntry" prot="public" virt="non-virtual">UnaccessedDictionaryEntry</derivedcompoundref>
    <derivedcompoundref refid="classUndefinedName" prot="public" virt="non-virtual">UndefinedName</derivedcompoundref>
    <includes refid="sliexceptions_8h" local="no">sliexceptions.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDictError_1a3c9056c4e61c532ef6b715882b199112" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DictError::~DictError</definition>
        <argsstring>() override</argsstring>
        <name>~DictError</name>
        <qualifiedname>DictError::~DictError</qualifiedname>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="289" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classDictError_1a4dfd28739bdcebadc67c917c2a9b7a74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DictError::DictError</definition>
        <argsstring>(char const *const)</argsstring>
        <name>DictError</name>
        <qualifiedname>DictError::DictError</qualifiedname>
        <param>
          <type>char const * const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="293" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="293" bodyend="296"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base Class for all SLI errors related to dictionary processing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DictError</label>
        <link refid="classDictError"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>EntryTypeMismatch</label>
        <link refid="classEntryTypeMismatch"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>InterpreterError</label>
        <link refid="classInterpreterError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>UnaccessedDictionaryEntry</label>
        <link refid="classUnaccessedDictionaryEntry"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>UndefinedName</label>
        <link refid="classUndefinedName"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>DictError</label>
        <link refid="classDictError"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>InterpreterError</label>
        <link refid="classInterpreterError"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
        <link refid="classSLIException"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" line="286" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliexceptions.h" bodystart="287" bodyend="297"/>
    <listofallmembers>
      <member refid="classDictError_1a4dfd28739bdcebadc67c917c2a9b7a74" prot="public" virt="non-virtual"><scope>DictError</scope><name>DictError</name></member>
      <member refid="classInterpreterError_1a7aff0835ddacfa8f31829985f3257a1b" prot="public" virt="non-virtual"><scope>DictError</scope><name>InterpreterError</name></member>
      <member refid="classSLIException_1a8f0a43c586456cc0e161d683ff316531" prot="public" virt="pure-virtual"><scope>DictError</scope><name>message</name></member>
      <member refid="classSLIException_1ace48f5938754e82931bab7f54471dd3f" prot="public" virt="non-virtual"><scope>DictError</scope><name>SLIException</name></member>
      <member refid="classSLIException_1a5da1b6d493d134687d9ce01e9799b59d" prot="public" virt="non-virtual"><scope>DictError</scope><name>SLIException</name></member>
      <member refid="classSLIException_1a4ac56d362c7d86819a47c76571c9c031" prot="public" virt="non-virtual"><scope>DictError</scope><name>what</name></member>
      <member refid="classSLIException_1af0e8f12a5e346db4c028d23a2974f016" prot="private" virt="non-virtual"><scope>DictError</scope><name>what_</name></member>
      <member refid="classDictError_1a3c9056c4e61c532ef6b715882b199112" prot="public" virt="non-virtual"><scope>DictError</scope><name>~DictError</name></member>
      <member refid="classInterpreterError_1af64d8c01a2f4ca1463de3a24c9e3a237" prot="public" virt="non-virtual"><scope>DictError</scope><name>~InterpreterError</name></member>
      <member refid="classSLIException_1a671677b69bcc3895df94a069067c0578" prot="public" virt="non-virtual"><scope>DictError</scope><name>~SLIException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
