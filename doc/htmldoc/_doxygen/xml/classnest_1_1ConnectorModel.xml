<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1ConnectorModel" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>nest::ConnectorModel</compoundname>
    <derivedcompoundref refid="classnest_1_1GenericConnectorModel" prot="public" virt="non-virtual">nest::GenericConnectorModel&lt; ConnectionT &gt;</derivedcompoundref>
    <includes refid="connector__model_8h" local="no">connector_model.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnest_1_1ConnectorModel_1a42cc2d70a67df540eb6fb4aa04ec128d" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::ConnectorModel::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
<para>name of the <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="140" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="140" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectorModel_1a697f7ef525ecca6e04c4d2c23ba7736f" compoundref="connector__model_8h" startline="122" endline="125">get_name</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectorModel_1ae7911aa0186184953e5b35033ee317f9" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::ConnectorModel::default_delay_needs_check_</definition>
        <argsstring></argsstring>
        <name>default_delay_needs_check_</name>
        <briefdescription>
<para>indicates whether the default delay must be checked </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="141" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1ConnectorModel_1aecc15376ff6b4d4e6e6e805dadf22192" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4" kindref="member">ConnectionModelProperties</ref></type>
        <definition>ConnectionModelProperties nest::ConnectorModel::properties_</definition>
        <argsstring></argsstring>
        <name>properties_</name>
        <briefdescription>
<para>connection properties </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="142" column="29" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="142" bodyend="-1"/>
        <referencedby refid="classnest_1_1ConnectorModel_1a537b4249ca897dc9387e2a01f6a60b76" compoundref="connector__model_8h" startline="134" endline="137">get_properties</referencedby>
        <referencedby refid="classnest_1_1ConnectorModel_1a2ff68f3ae1070d6ea7970693fca7c511" compoundref="connector__model_8h" startline="128" endline="131">has_property</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a7667961923287c9ca330c6ca32ee0f89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectorModel::ConnectorModel</definition>
        <argsstring>(const std::string, const ConnectionModelProperties &amp;properties)</argsstring>
        <name>ConnectorModel</name>
        <param>
          <type>const std::string</type>
          <defname>name</defname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4" kindref="member">ConnectionModelProperties</ref> &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="73" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a35e5eb9a749494f77250cfe1bf370fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::ConnectorModel::ConnectorModel</definition>
        <argsstring>(const ConnectorModel &amp;, const std::string)</argsstring>
        <name>ConnectorModel</name>
        <param>
          <type>const <ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <defname>cm</defname>
        </param>
        <param>
          <type>const std::string</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="74" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a59234daf4de0418aaf86563f9b6ce192" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual nest::ConnectorModel::~ConnectorModel</definition>
        <argsstring>()</argsstring>
        <name>~ConnectorModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="75" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::add_connection</definition>
        <argsstring>(Node &amp;src, Node &amp;tgt, std::vector&lt; ConnectorBase * &gt; &amp;hetconn, const synindex syn_id, const DictionaryDatum &amp;d, const double delay=NAN, const double weight=NAN)=0</argsstring>
        <name>add_connection</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a55662c78049406c5119cd0c81e6de812">add_connection</reimplementedby>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>tgt</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classnest_1_1ConnectorBase" kindref="compound">ConnectorBase</ref> * &gt; &amp;</type>
          <declname>hetconn</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>delay</declname>
          <defval>NAN</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>weight</declname>
          <defval>NAN</defval>
        </param>
        <briefdescription>
<para>Adds a connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Source" kindref="compound">Source</ref> node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tgt</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Target" kindref="compound">Target</ref> node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hetconn</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Connector" kindref="compound">Connector</ref> vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Synapse id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classnest_1_1Parameter" kindref="compound">Parameter</ref> dictionary to configure the synapse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay of the connection </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of the connection</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Delay and weight have the default value NAN, a special value, which describes double values that are not a number. If delay or weight is omitted, NAN indicates this and weight/delay are set only if they are valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="95" column="16"/>
        <referencedby refid="classnest_1_1TargetTableDevices_1afd8f99f2e07b51408dcc72cc165e505e" compoundref="target__table__devices__impl_8h" startline="54" endline="73">nest::TargetTableDevices::add_connection_from_device</referencedby>
        <referencedby refid="classnest_1_1TargetTableDevices_1a09f957d8ac14589929de4dbea0273abf" compoundref="target__table__devices__impl_8h" startline="35" endline="51">nest::TargetTableDevices::add_connection_to_device</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a199080ea2054e8a1f9282c6201eec278" compoundref="connection__manager_8cpp" startline="746" endline="789">nest::ConnectionManager::connect_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1aa7fe5e612ac57397923de1c0fd55aeb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> *</type>
        <definition>virtual ConnectorModel* nest::ConnectorModel::clone</definition>
        <argsstring>(std::string, synindex syn_id) const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a9111ebca3dccccd7734b8e679b062766">clone</reimplementedby>
        <param>
          <type>std::string</type>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="103" column="26"/>
        <referencedby refid="classnest_1_1ModelManager_1afdca64fbdcc8897ed6e25a8e534b482e" compoundref="model__manager_8cpp" startline="265" endline="287">nest::ModelManager::copy_connection_model_</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1aa8a2fe6be154cbb0768bf71942387520" compoundref="model__manager_8cpp" startline="524" endline="549">nest::ModelManager::register_connection_model_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a4d54fb6a6e2158edd92251f968a2029d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::calibrate</definition>
        <argsstring>(const TimeConverter &amp;tc)=0</argsstring>
        <name>calibrate</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a8b22d67222d48edbd71796d62b1c8310">calibrate</reimplementedby>
        <param>
          <type>const <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> &amp;</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="105" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a23c940dfb164a14a57225497fd177fdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const =0</argsstring>
        <name>get_status</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1aa8c72dbdf47431532cab0e66946c9d27">get_status</reimplementedby>
        <param>
          <type>DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="107" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a4dc486d5b6d1537fb42bc0cd3d7169c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;)=0</argsstring>
        <name>set_status</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1aa02f22324265fc3bbb1447322c97aa9a">set_status</reimplementedby>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="108" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1aa6a70e8541a6cb9dc3a069c77751f772" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref> &amp;</type>
        <definition>virtual const CommonSynapseProperties&amp; nest::ConnectorModel::get_common_properties</definition>
        <argsstring>() const =0</argsstring>
        <name>get_common_properties</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a8ba2a36cb2fa7969ef49451ec8924a0f">get_common_properties</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="110" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a74b340444e504bc961bb7583983f7a7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::check_synapse_params</definition>
        <argsstring>(const DictionaryDatum &amp;) const =0</argsstring>
        <name>check_synapse_params</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a512860a2f499cf64b6857c3e13e23645">check_synapse_params</reimplementedby>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
<para>Checks to see if illegal parameters are given in syn_spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="115" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a76a6674064f729387937e2316af2004c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classnest_1_1SecondaryEvent" kindref="compound">SecondaryEvent</ref> *</type>
        <definition>virtual SecondaryEvent* nest::ConnectorModel::get_secondary_event</definition>
        <argsstring>()=0</argsstring>
        <name>get_secondary_event</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1ac7fa275e13d9aef8d80694f033fcf50e">get_secondary_event</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="117" column="26"/>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a9111ebca3dccccd7734b8e679b062766" compoundref="connector__model__impl_8h" startline="66" endline="78">nest::GenericConnectorModel&lt; ConnectionT &gt;::clone</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1a4de0bb9d981c92958e0d52b1ff3e7dea" compoundref="model__manager_8h" startline="309" endline="313">nest::ModelManager::get_secondary_event_prototype</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a87685961db1b5547f2a30a8b7d4764e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void nest::ConnectorModel::set_syn_id</definition>
        <argsstring>(synindex syn_id)=0</argsstring>
        <name>set_syn_id</name>
        <reimplementedby refid="classnest_1_1GenericConnectorModel_1a663e4289f1edcd9b4619edcaf8ef10d9">set_syn_id</reimplementedby>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="119" column="16"/>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a9111ebca3dccccd7734b8e679b062766" compoundref="connector__model__impl_8h" startline="66" endline="78">nest::GenericConnectorModel&lt; ConnectionT &gt;::clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a697f7ef525ecca6e04c4d2c23ba7736f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::ConnectorModel::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="122" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="122" bodyend="125"/>
        <references refid="classnest_1_1ConnectorModel_1a42cc2d70a67df540eb6fb4aa04ec128d" compoundref="connector__model_8h" startline="140">name_</references>
        <referencedby refid="classnest_1_1ModelManager_1aa8a2fe6be154cbb0768bf71942387520" compoundref="model__manager_8cpp" startline="524" endline="549">nest::ModelManager::register_connection_model_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a2ff68f3ae1070d6ea7970693fca7c511" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::ConnectorModel::has_property</definition>
        <argsstring>(const ConnectionModelProperties &amp;property) const</argsstring>
        <name>has_property</name>
        <param>
          <type>const <ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4" kindref="member">ConnectionModelProperties</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="128" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="128" bodyend="131"/>
        <references refid="namespacenest_1ac2343fb05a804940cca31023b7e496f5" compoundref="enum__bitfield_8h" startline="136" endline="140">nest::flag_is_set</references>
        <references refid="classnest_1_1ConnectorModel_1aecc15376ff6b4d4e6e6e805dadf22192" compoundref="connector__model_8h" startline="142">properties_</references>
        <referencedby refid="classnest_1_1GenericConnectorModel_1a9111ebca3dccccd7734b8e679b062766" compoundref="connector__model__impl_8h" startline="66" endline="78">nest::GenericConnectorModel&lt; ConnectionT &gt;::clone</referencedby>
        <referencedby refid="classnest_1_1SourceTable_1a15e7c1635c267bf81b15d1b445252792" compoundref="source__table_8cpp" startline="202" endline="270">nest::SourceTable::compute_buffer_pos_for_unique_secondary_sources</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a8b0dbf28a53e184b2f2c6e988e656435" compoundref="connection__manager_8cpp" startline="1363" endline="1403">nest::ConnectionManager::compute_compressed_secondary_recv_buffer_positions</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a199080ea2054e8a1f9282c6201eec278" compoundref="connection__manager_8cpp" startline="746" endline="789">nest::ConnectionManager::connect_</referencedby>
        <referencedby refid="classnest_1_1ConnectionManager_1a47d174cc3f78508f825c44806b4bf247" compoundref="connection__manager_8cpp" startline="1527" endline="1571">nest::ConnectionManager::deliver_secondary_events</referencedby>
        <referencedby refid="classnest_1_1ModelManager_1a865e88345ba93ab2e578d4a315aaf2ad" compoundref="model__manager__impl_8h" startline="58" endline="77">nest::ModelManager::register_connection_model</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnectorModel_1a537b4249ca897dc9387e2a01f6a60b76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ada520c3662d2209c7209c5cc7dfae9a4" kindref="member">ConnectionModelProperties</ref></type>
        <definition>ConnectionModelProperties nest::ConnectorModel::get_properties</definition>
        <argsstring>() const</argsstring>
        <name>get_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="134" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="134" bodyend="137"/>
        <references refid="classnest_1_1ConnectorModel_1aecc15376ff6b4d4e6e6e805dadf22192" compoundref="connector__model_8h" startline="142">properties_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::ConnectorModel</label>
        <link refid="classnest_1_1ConnectorModel"/>
      </node>
      <node id="2">
        <label>nest::GenericConnectorModel&lt; ConnectionT &gt;</label>
        <link refid="classnest_1_1GenericConnectorModel"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::ConnectorModel</label>
        <link refid="classnest_1_1ConnectorModel"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" line="69" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connector_model.h" bodystart="70" bodyend="143"/>
    <listofallmembers>
      <member refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>add_connection</name></member>
      <member refid="classnest_1_1ConnectorModel_1a4d54fb6a6e2158edd92251f968a2029d" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>calibrate</name></member>
      <member refid="classnest_1_1ConnectorModel_1a74b340444e504bc961bb7583983f7a7d" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1ConnectorModel_1aa7fe5e612ac57397923de1c0fd55aeb7" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>clone</name></member>
      <member refid="classnest_1_1ConnectorModel_1a7667961923287c9ca330c6ca32ee0f89" prot="public" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>ConnectorModel</name></member>
      <member refid="classnest_1_1ConnectorModel_1a35e5eb9a749494f77250cfe1bf370fc3" prot="public" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>ConnectorModel</name></member>
      <member refid="classnest_1_1ConnectorModel_1ae7911aa0186184953e5b35033ee317f9" prot="protected" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>default_delay_needs_check_</name></member>
      <member refid="classnest_1_1ConnectorModel_1aa6a70e8541a6cb9dc3a069c77751f772" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>get_common_properties</name></member>
      <member refid="classnest_1_1ConnectorModel_1a697f7ef525ecca6e04c4d2c23ba7736f" prot="public" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>get_name</name></member>
      <member refid="classnest_1_1ConnectorModel_1a537b4249ca897dc9387e2a01f6a60b76" prot="public" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>get_properties</name></member>
      <member refid="classnest_1_1ConnectorModel_1a76a6674064f729387937e2316af2004c" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>get_secondary_event</name></member>
      <member refid="classnest_1_1ConnectorModel_1a23c940dfb164a14a57225497fd177fdc" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>get_status</name></member>
      <member refid="classnest_1_1ConnectorModel_1a2ff68f3ae1070d6ea7970693fca7c511" prot="public" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>has_property</name></member>
      <member refid="classnest_1_1ConnectorModel_1a42cc2d70a67df540eb6fb4aa04ec128d" prot="protected" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>name_</name></member>
      <member refid="classnest_1_1ConnectorModel_1aecc15376ff6b4d4e6e6e805dadf22192" prot="protected" virt="non-virtual"><scope>nest::ConnectorModel</scope><name>properties_</name></member>
      <member refid="classnest_1_1ConnectorModel_1a4dc486d5b6d1537fb42bc0cd3d7169c4" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>set_status</name></member>
      <member refid="classnest_1_1ConnectorModel_1a87685961db1b5547f2a30a8b7d4764e1" prot="public" virt="pure-virtual"><scope>nest::ConnectorModel</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1ConnectorModel_1a59234daf4de0418aaf86563f9b6ce192" prot="public" virt="virtual"><scope>nest::ConnectorModel</scope><name>~ConnectorModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
