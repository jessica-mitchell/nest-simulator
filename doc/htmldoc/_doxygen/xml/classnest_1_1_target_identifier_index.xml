<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_target_identifier_index" kind="class" language="C++" prot="public">
    <compoundname>nest::TargetIdentifierIndex</compoundname>
    <includes refid="target__identifier_8h" local="no">target_identifier.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_target_identifier_index_1a65a403b3e94ac2d04e89d4d53b9fd082" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenest_1adad102550a6102c0c0bea1d1083a233f" kindref="member">targetindex</ref></type>
        <definition>targetindex nest::TargetIdentifierIndex::target_</definition>
        <argsstring></argsstring>
        <name>target_</name>
        <briefdescription>
<para><ref refid="classnest_1_1_target" kindref="compound">Target</ref> node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="165" column="15" bodyfile="nestkernel/target_identifier.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1aed431772dfd70b402021a86fd69c31e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::TargetIdentifierIndex::TargetIdentifierIndex</definition>
        <argsstring>()</argsstring>
        <name>TargetIdentifierIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="116" column="3" bodyfile="nestkernel/target_identifier.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1ae47998aab57eedc765a503cc2b6d6ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::TargetIdentifierIndex::TargetIdentifierIndex</definition>
        <argsstring>(const TargetIdentifierIndex &amp;t)=default</argsstring>
        <name>TargetIdentifierIndex</name>
        <param>
          <type>const <ref refid="classnest_1_1_target_identifier_index" kindref="compound">TargetIdentifierIndex</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="122" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1aa9c76edd42a86d5fb0796970d009b373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnest_1_1_target_identifier_index" kindref="compound">TargetIdentifierIndex</ref> &amp;</type>
        <definition>TargetIdentifierIndex&amp; nest::TargetIdentifierIndex::operator=</definition>
        <argsstring>(const TargetIdentifierIndex &amp;t)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnest_1_1_target_identifier_index" kindref="compound">TargetIdentifierIndex</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="123" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1a590fde9111a42e0fc9bea2e739a68bde" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetIdentifierIndex::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <param>
          <type>DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="127" column="3" bodyfile="nestkernel/target_identifier.h" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1ac0fa7aee0bea0d1a6e739e06326fcae3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* nest::TargetIdentifierIndex::get_target_ptr</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target_ptr</name>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="138" column="3" bodyfile="nestkernel/target_identifier.h" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1a04e8730449fcad6504f75836872f7b5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::TargetIdentifierIndex::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="145" column="3" bodyfile="nestkernel/target_identifier.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1a356a5e15e8e34f94624b06d2fa7d553c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetIdentifierIndex::set_target</definition>
        <argsstring>(Node *target)</argsstring>
        <name>set_target</name>
        <param>
          <type><ref refid="classnest_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="150" column="8" bodyfile="nestkernel/target_identifier.h" bodystart="169" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_target_identifier_index_1a94920eb387f408a83c05f933074c98d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetIdentifierIndex::set_rport</definition>
        <argsstring>(rport rprt)</argsstring>
        <name>set_rport</name>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>rprt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/target_identifier.h" line="153" column="3" bodyfile="nestkernel/target_identifier.h" bodystart="153" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class providing compact (hpc) target identified by index.</para>
<para>This class represents a connection target using a thread-local index, while fixing the rport to 0. <ref refid="classnest_1_1_connection" kindref="compound">Connection</ref> classes with this class as template argument provide &quot;hpc&quot; synapses with minimal memory requirement.</para>
<para>See Kunkel et al, Front Neuroinform 8:78 (2014), Sec 3.3. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::TargetIdentifierIndex</label>
        <link refid="classnest_1_1_target_identifier_index"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/target_identifier.h" line="112" column="1" bodyfile="nestkernel/target_identifier.h" bodystart="113" bodyend="166"/>
    <listofallmembers>
      <member refid="classnest_1_1_target_identifier_index_1a04e8730449fcad6504f75836872f7b5c" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>get_rport</name></member>
      <member refid="classnest_1_1_target_identifier_index_1a590fde9111a42e0fc9bea2e739a68bde" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>get_status</name></member>
      <member refid="classnest_1_1_target_identifier_index_1ac0fa7aee0bea0d1a6e739e06326fcae3" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>get_target_ptr</name></member>
      <member refid="classnest_1_1_target_identifier_index_1aa9c76edd42a86d5fb0796970d009b373" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>operator=</name></member>
      <member refid="classnest_1_1_target_identifier_index_1a94920eb387f408a83c05f933074c98d9" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>set_rport</name></member>
      <member refid="classnest_1_1_target_identifier_index_1a356a5e15e8e34f94624b06d2fa7d553c" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>set_target</name></member>
      <member refid="classnest_1_1_target_identifier_index_1a65a403b3e94ac2d04e89d4d53b9fd082" prot="private" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>target_</name></member>
      <member refid="classnest_1_1_target_identifier_index_1aed431772dfd70b402021a86fd69c31e1" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>TargetIdentifierIndex</name></member>
      <member refid="classnest_1_1_target_identifier_index_1ae47998aab57eedc765a503cc2b6d6ed2" prot="public" virt="non-virtual"><scope>nest::TargetIdentifierIndex</scope><name>TargetIdentifierIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
