<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1BadParameter" kind="class" language="C++" prot="public">
    <compoundname>nest::BadParameter</compoundname>
    <basecompoundref refid="classnest_1_1KernelException" prot="public" virt="non-virtual">nest::KernelException</basecompoundref>
    <includes refid="exceptions_8h" local="no">exceptions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1BadParameter_1a4d351651395c73966298b77d38ad3365" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::BadParameter::msg_</definition>
        <argsstring></argsstring>
        <name>msg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="616" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="616" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1BadParameter_1a30eed39d260608f12342230bf1131aa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::BadParameter::BadParameter</definition>
        <argsstring>()</argsstring>
        <name>BadParameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>detailed</parametername>
</parameternamelist>
<parameterdescription>
<para>error message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="620" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="620" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1BadParameter_1aef522d8b9f2cac4b33ecc271f1cb9f4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::BadParameter::BadParameter</definition>
        <argsstring>(std::string msg)</argsstring>
        <name>BadParameter</name>
        <param>
          <type>std::string</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="625" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="625" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1BadParameter_1a2c2b43de1a701ff00094f69b1300e96d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::BadParameter::~BadParameter</definition>
        <argsstring>() override</argsstring>
        <name>~BadParameter</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="631" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="631" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1BadParameter_1a18506647e28a03d3a1e30db7c43ea3ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nest::BadParameter::message</definition>
        <argsstring>() const override</argsstring>
        <name>message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="635" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exception to be thrown if a parameter cannot be set. </para>
    </briefdescription>
    <detaileddescription>
<para>Thrown by Node::set_/get_property methods. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::BadParameter</label>
        <link refid="classnest_1_1BadParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::BadParameter</label>
        <link refid="classnest_1_1BadParameter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SLIException</label>
      </node>
      <node id="2">
        <label>nest::KernelException</label>
        <link refid="classnest_1_1KernelException"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" line="614" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/exceptions.h" bodystart="615" bodyend="636"/>
    <listofallmembers>
      <member refid="classnest_1_1BadParameter_1a30eed39d260608f12342230bf1131aa6" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>BadParameter</name></member>
      <member refid="classnest_1_1BadParameter_1aef522d8b9f2cac4b33ecc271f1cb9f4e" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>BadParameter</name></member>
      <member refid="classnest_1_1KernelException_1aeb4d5e1c6351372f03f535806264fb6d" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a587cc59f8f1fac92da4370934c03ab15" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>KernelException</name></member>
      <member refid="classnest_1_1KernelException_1a1a10edf2a54c9d48aeab137024cd3144" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>KernelException</name></member>
      <member refid="classnest_1_1BadParameter_1a18506647e28a03d3a1e30db7c43ea3ca" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>message</name></member>
      <member refid="classnest_1_1BadParameter_1a4d351651395c73966298b77d38ad3365" prot="private" virt="non-virtual"><scope>nest::BadParameter</scope><name>msg_</name></member>
      <member refid="classnest_1_1BadParameter_1a2c2b43de1a701ff00094f69b1300e96d" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>~BadParameter</name></member>
      <member refid="classnest_1_1KernelException_1aeaa4cd0b8db52d17bb0907ea6db41a44" prot="public" virt="non-virtual"><scope>nest::BadParameter</scope><name>~KernelException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
