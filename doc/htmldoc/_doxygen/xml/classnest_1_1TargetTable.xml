<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1TargetTable" kind="class" language="C++" prot="public">
    <compoundname>nest::TargetTable</compoundname>
    <includes refid="target__table_8h" local="no">target_table.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1TargetTable_1a79bdd9f26d31db51b7c9e47e35ec51b8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; <ref refid="classnest_1_1Target" kindref="compound">Target</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; Target &gt; &gt; &gt; nest::TargetTable::targets_</definition>
        <argsstring></argsstring>
        <name>targets_</name>
        <qualifiedname>nest::TargetTable::targets_</qualifiedname>
        <briefdescription>
<para>Stores targets of local neurons Three dimensional objects: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>first dim: threads</para>
</listitem><listitem><para>second dim: local neurons</para>
</listitem><listitem><para>third dim: targets </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="55" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="classnest_1_1TargetTable_1a1d6992013e99c3286879a12f44f309a6" compoundref="target__table_8h" startline="128" endline="132">clear</referencedby>
        <referencedby refid="classnest_1_1TargetTable_1aa6fd385f8ce64bcb2e0b88c7f8091176" compoundref="target__table_8h" startline="115" endline="118">get_targets</referencedby>
        <referencedby refid="classnest_1_1TargetTable_1adce528ee6c871274e1a9b2242068d3bd" compoundref="target__table_8cpp" startline="31" endline="43">initialize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1TargetTable_1ad8c7a0f3ad8fda370acafbb894ed7610" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::vector&lt; std::vector&lt; size_t &gt; &gt; &gt; &gt; nest::TargetTable::secondary_send_buffer_pos_</definition>
        <argsstring></argsstring>
        <name>secondary_send_buffer_pos_</name>
        <qualifiedname>nest::TargetTable::secondary_send_buffer_pos_</qualifiedname>
        <briefdescription>
<para>Stores MPI send buffer positions for secondary targets of local neurons. </para>
        </briefdescription>
        <detaileddescription>
<para>Four dimensional object:<itemizedlist>
<listitem><para>first dim: threads</para>
</listitem><listitem><para>second dim: local neurons</para>
</listitem><listitem><para>third dim: synapse types</para>
</listitem><listitem><para>fourth dim: MPI send buffer positions </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="66" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="66" bodyend="-1"/>
        <referencedby refid="classnest_1_1TargetTable_1a1d6992013e99c3286879a12f44f309a6" compoundref="target__table_8h" startline="128" endline="132">clear</referencedby>
        <referencedby refid="classnest_1_1TargetTable_1a05c036cf6d0375ec15ce1776df762e25" compoundref="target__table_8h" startline="121" endline="125">get_secondary_send_buffer_positions</referencedby>
        <referencedby refid="classnest_1_1TargetTable_1adce528ee6c871274e1a9b2242068d3bd" compoundref="target__table_8cpp" startline="31" endline="43">initialize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1TargetTable_1adce528ee6c871274e1a9b2242068d3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>nest::TargetTable::initialize</qualifiedname>
        <briefdescription>
<para>Initializes data structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="72" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.cpp" bodystart="31" bodyend="43"/>
        <references refid="classnest_1_1VPManager_1a1096a508aefc459782911e3f2a4b7480" compoundref="vp__manager_8h" startline="174" endline="177">nest::VPManager::get_num_threads</references>
        <references refid="classnest_1_1VPManager_1a144a9ac1401713a125c8df3d31721b0c" compoundref="vp__manager_8h" startline="164" endline="171">nest::VPManager::get_thread_id</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1TargetTable_1ad8c7a0f3ad8fda370acafbb894ed7610" compoundref="target__table_8h" startline="66">secondary_send_buffer_pos_</references>
        <references refid="classnest_1_1TargetTable_1a79bdd9f26d31db51b7c9e47e35ec51b8" compoundref="target__table_8h" startline="55">targets_</references>
        <references refid="classnest_1_1KernelManager_1ae5288531d5c8bfa7d8c1f0bad6964fd2" compoundref="kernel__manager_8h" startline="243">nest::KernelManager::vp_manager</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1aacbcebfadb55deae20da0cd82f049866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::finalize</definition>
        <argsstring>()</argsstring>
        <name>finalize</name>
        <qualifiedname>nest::TargetTable::finalize</qualifiedname>
        <briefdescription>
<para>Deletes data structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="77" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1ab2b10c675f23dfc38f8922f61b521127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::prepare</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>prepare</name>
        <qualifiedname>nest::TargetTable::prepare</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Adjusts targets_ to number of local nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="82" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.cpp" bodystart="53" bodyend="68"/>
        <references refid="classnest_1_1NodeManager_1aa6e170165e803d3604b6bdc42912a6e9" compoundref="node__manager_8cpp" startline="409" endline="413">nest::NodeManager::get_max_num_local_nodes</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1a209742409c6552dbf3923b892a594db3" compoundref="kernel__manager_8h" startline="252">nest::KernelManager::node_manager</references>
        <referencedby refid="classnest_1_1ConnectionManager_1ac45e1f5b8cf6a5a40ec328ea0f3df5cb" compoundref="connection__manager_8h" startline="725" endline="728">nest::ConnectionManager::prepare_target_table</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1ad19a4c20b88fb930687b5b29a526d71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::add_target</definition>
        <argsstring>(const thread tid, const thread target_rank, const TargetData &amp;target_data)</argsstring>
        <name>add_target</name>
        <qualifiedname>nest::TargetTable::add_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>target_rank</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1TargetData" kindref="compound">TargetData</ref> &amp;</type>
          <declname>target_data</declname>
        </param>
        <briefdescription>
<para>Adds entry to targets_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="87" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.cpp" bodystart="87" bodyend="110"/>
        <references refid="classnest_1_1TargetDataFields_1a05ce32c62a0961b66dc2fd4f4ee79e5c" compoundref="target__data_8h" startline="87" endline="90">nest::TargetDataFields::get_lcid</references>
        <references refid="classnest_1_1SecondaryTargetDataFields_1a9fbce3b30fa42342cbb189d6ae9a39db" compoundref="target__data_8h" startline="141" endline="144">nest::SecondaryTargetDataFields::get_recv_buffer_pos</references>
        <references refid="classnest_1_1MPIManager_1a88fd87ff51b591041d4a7ac10c05fd58" compoundref="mpi__manager_8h" startline="493" endline="496">nest::MPIManager::get_send_displacement_secondary_events_in_int</references>
        <references refid="classnest_1_1TargetData_1a2976722632d48d3551f01e01ad907a97" compoundref="target__data_8h" startline="276" endline="279">nest::TargetData::get_source_lid</references>
        <references refid="classnest_1_1TargetDataFields_1ab40a4f5277f1fc278f01d808d1359f2e" compoundref="target__data_8h" startline="111" endline="114">nest::TargetDataFields::get_syn_id</references>
        <references refid="classnest_1_1SecondaryTargetDataFields_1a583b534c9c1ded3278c8cc44ad90149a" compoundref="target__data_8h" startline="154" endline="157">nest::SecondaryTargetDataFields::get_syn_id</references>
        <references refid="classnest_1_1TargetDataFields_1a0c905f614387c4bb179a7364dceffe1f" compoundref="target__data_8h" startline="99" endline="102">nest::TargetDataFields::get_tid</references>
        <references refid="namespacevector__util_1a86a3ccd6047f1233748c2c0bb0ba8e2b" compoundref="vector__util_8h" startline="34" endline="48">vector_util::grow</references>
        <references refid="classnest_1_1TargetData_1a916cb48c5f13e3669a15097aae0d74b7" compoundref="target__data_8h" startline="294" endline="297">nest::TargetData::is_primary</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="classnest_1_1KernelManager_1acb6c54ef758858ed478c76415e081de7" compoundref="kernel__manager_8h" startline="242">nest::KernelManager::mpi_manager</references>
        <references refid="classnest_1_1TargetData_1a7bd0c8f3921a27797f6a2afc2147e4fe" compoundref="target__data_8h" startline="198">nest::TargetData::secondary_data</references>
        <references refid="classnest_1_1TargetData_1a9e59b6a3d9a9cadfcd1ef3636a55c619" compoundref="target__data_8h" startline="197">nest::TargetData::target_data</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a0ae6d51f023edf647d62319a161fe66c" compoundref="connection__manager_8h" startline="743" endline="746">nest::ConnectionManager::add_target</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1aa6fd385f8ce64bcb2e0b88c7f8091176" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classnest_1_1Target" kindref="compound">Target</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Target &gt; &amp; nest::TargetTable::get_targets</definition>
        <argsstring>(const thread tid, const index lid) const</argsstring>
        <name>get_targets</name>
        <qualifiedname>nest::TargetTable::get_targets</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <briefdescription>
<para>Returns all targets of a neuron. </para>
        </briefdescription>
        <detaileddescription>
<para>Used for filling <ref refid="classnest_1_1EventDeliveryManager_1a32353bda32d23bdc0a262b0a10e4338d" kindref="member">EventDeliveryManager::emitted_spikes_register_</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="93" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="115" bodyend="118"/>
        <references refid="classnest_1_1TargetTable_1a79bdd9f26d31db51b7c9e47e35ec51b8" compoundref="target__table_8h" startline="55">targets_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a0cfb6daf412d75b2dafc09bab819a3b1" compoundref="connection__manager_8h" startline="731" endline="734">nest::ConnectionManager::get_remote_targets_of_local_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1a05c036cf6d0375ec15ce1776df762e25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; size_t &gt; &amp;</type>
        <definition>const std::vector&lt; size_t &gt; &amp; nest::TargetTable::get_secondary_send_buffer_positions</definition>
        <argsstring>(const thread tid, const index lid, const synindex syn_id) const</argsstring>
        <name>get_secondary_send_buffer_positions</name>
        <qualifiedname>nest::TargetTable::get_secondary_send_buffer_positions</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a48ce49a10a37dfb7f5243583ff1d4b85" kindref="member">index</ref></type>
          <declname>lid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <declname>syn_id</declname>
        </param>
        <briefdescription>
<para>Returns all MPI send buffer positions of a neuron. </para>
        </briefdescription>
        <detaileddescription>
<para>Used to fill MPI buffer in <ref refid="classnest_1_1EventDeliveryManager" kindref="compound">EventDeliveryManager</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="100" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="121" bodyend="125"/>
        <references refid="classnest_1_1TargetTable_1ad8c7a0f3ad8fda370acafbb894ed7610" compoundref="target__table_8h" startline="66">secondary_send_buffer_pos_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a024b7baa6a5dec791de66996f0a245b9" compoundref="connection__manager_8h" startline="759" endline="762">nest::ConnectionManager::get_secondary_send_buffer_positions</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1a1d6992013e99c3286879a12f44f309a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::clear</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>clear</name>
        <qualifiedname>nest::TargetTable::clear</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Clears all entries of targets_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="105" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="128" bodyend="132"/>
        <references refid="classnest_1_1TargetTable_1ad8c7a0f3ad8fda370acafbb894ed7610" compoundref="target__table_8h" startline="66">secondary_send_buffer_pos_</references>
        <references refid="classnest_1_1TargetTable_1a79bdd9f26d31db51b7c9e47e35ec51b8" compoundref="target__table_8h" startline="55">targets_</references>
        <referencedby refid="classnest_1_1ConnectionManager_1a43d18405dd8d80fce53fe9c58b52d233" compoundref="connection__manager_8h" startline="835" endline="840">nest::ConnectionManager::restructure_connection_tables</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1TargetTable_1a780264fd12eaf15112d0e68007c58f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::TargetTable::compress_secondary_send_buffer_pos</definition>
        <argsstring>(const thread tid)</argsstring>
        <name>compress_secondary_send_buffer_pos</name>
        <qualifiedname>nest::TargetTable::compress_secondary_send_buffer_pos</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
<para>Removes identical MPI send buffer positions to avoid writing data multiple times. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="111" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.cpp" bodystart="71" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This data structure stores all targets of the local neurons. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the presynaptic part of the connection infrastructure. </para>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" line="45" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/target_table.h" bodystart="46" bodyend="112"/>
    <listofallmembers>
      <member refid="classnest_1_1TargetTable_1ad19a4c20b88fb930687b5b29a526d71c" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>add_target</name></member>
      <member refid="classnest_1_1TargetTable_1a1d6992013e99c3286879a12f44f309a6" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>clear</name></member>
      <member refid="classnest_1_1TargetTable_1a780264fd12eaf15112d0e68007c58f3d" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>compress_secondary_send_buffer_pos</name></member>
      <member refid="classnest_1_1TargetTable_1aacbcebfadb55deae20da0cd82f049866" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>finalize</name></member>
      <member refid="classnest_1_1TargetTable_1a05c036cf6d0375ec15ce1776df762e25" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>get_secondary_send_buffer_positions</name></member>
      <member refid="classnest_1_1TargetTable_1aa6fd385f8ce64bcb2e0b88c7f8091176" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>get_targets</name></member>
      <member refid="classnest_1_1TargetTable_1adce528ee6c871274e1a9b2242068d3bd" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>initialize</name></member>
      <member refid="classnest_1_1TargetTable_1ab2b10c675f23dfc38f8922f61b521127" prot="public" virt="non-virtual"><scope>nest::TargetTable</scope><name>prepare</name></member>
      <member refid="classnest_1_1TargetTable_1ad8c7a0f3ad8fda370acafbb894ed7610" prot="private" virt="non-virtual"><scope>nest::TargetTable</scope><name>secondary_send_buffer_pos_</name></member>
      <member refid="classnest_1_1TargetTable_1a79bdd9f26d31db51b7c9e47e35ec51b8" prot="private" virt="non-virtual"><scope>nest::TargetTable</scope><name>targets_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
