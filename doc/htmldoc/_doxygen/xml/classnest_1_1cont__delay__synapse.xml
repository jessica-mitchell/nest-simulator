<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1cont__delay__synapse" kind="class" language="C++" prot="public">
    <compoundname>nest::cont_delay_synapse</compoundname>
    <basecompoundref refid="classnest_1_1Connection" prot="public" virt="non-virtual">nest::Connection&lt; targetidentifierT &gt;</basecompoundref>
    <includes refid="cont__delay__synapse_8h" local="no">cont_delay_synapse.h</includes>
    <innerclass refid="classnest_1_1cont__delay__synapse_1_1ConnTestDummyNode" prot="public">nest::cont_delay_synapse::ConnTestDummyNode</innerclass>
    <templateparamlist>
      <param>
        <type>typename targetidentifierT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1cont__delay__synapse_1a64b0c5393f8271b1e3dffa68175e1c51" prot="public" static="no">
        <type><ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref></type>
        <definition>typedef CommonSynapseProperties nest::cont_delay_synapse&lt; targetidentifierT &gt;::CommonPropertiesType</definition>
        <argsstring></argsstring>
        <name>CommonPropertiesType</name>
        <qualifiedname>nest::cont_delay_synapse::CommonPropertiesType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="81" column="35" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnest_1_1cont__delay__synapse_1ac2beddbbb4706857fe6914078b86788a" prot="public" static="no">
        <type><ref refid="classnest_1_1Connection" kindref="compound">Connection</ref>&lt; targetidentifierT &gt;</type>
        <definition>typedef Connection&lt; targetidentifierT &gt; nest::cont_delay_synapse&lt; targetidentifierT &gt;::ConnectionBase</definition>
        <argsstring></argsstring>
        <name>ConnectionBase</name>
        <qualifiedname>nest::cont_delay_synapse::ConnectionBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="82" column="22" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1cont__delay__synapse_1a113bae52a14f3ff1adafdace8f7da761" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::cont_delay_synapse&lt; targetidentifierT &gt;::weight_</definition>
        <argsstring></argsstring>
        <name>weight_</name>
        <qualifiedname>nest::cont_delay_synapse::weight_</qualifiedname>
        <briefdescription>
<para>synaptic weight </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="197" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="classnest_1_1cont__delay__synapse_1a80136aaddf263332444930e790a37b14" compoundref="cont__delay__synapse_8h" startline="114" endline="117">nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_weight</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1cont__delay__synapse_1aa6d33b6d22b4961de29fcc325e8813ad" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::cont_delay_synapse&lt; targetidentifierT &gt;::delay_offset_</definition>
        <argsstring></argsstring>
        <name>delay_offset_</name>
        <qualifiedname>nest::cont_delay_synapse::delay_offset_</qualifiedname>
        <briefdescription>
<para>fractional delay &lt; h, total delay = delay_ - delay_offset_ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="198" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a5597310caba432a2579a4019aed2cc63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::cont_delay_synapse&lt; targetidentifierT &gt;::cont_delay_synapse</definition>
        <argsstring>()</argsstring>
        <name>cont_delay_synapse</name>
        <qualifiedname>nest::cont_delay_synapse::cont_delay_synapse</qualifiedname>
        <briefdescription>
<para>Default Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets default values for all parameters. Needed by <ref refid="classnest_1_1GenericConnectorModel" kindref="compound">GenericConnectorModel</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="88" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse_impl.h" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1ae2dbaaa4b8ba43f2f06f31ecd9b5192d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::cont_delay_synapse&lt; targetidentifierT &gt;::cont_delay_synapse</definition>
        <argsstring>(const cont_delay_synapse &amp;)=default</argsstring>
        <name>cont_delay_synapse</name>
        <qualifiedname>nest::cont_delay_synapse::cont_delay_synapse</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1cont__delay__synapse" kindref="compound">cont_delay_synapse</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Needs to be defined properly in order for GenericConnector to work. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="94" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a0cae03cf55b335dcd092f9381f80bbf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::cont_delay_synapse&lt; targetidentifierT &gt;::~cont_delay_synapse</definition>
        <argsstring>()</argsstring>
        <name>~cont_delay_synapse</name>
        <qualifiedname>nest::cont_delay_synapse::~cont_delay_synapse</qualifiedname>
        <briefdescription>
<para>Default Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="99" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a80136aaddf263332444930e790a37b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_weight</definition>
        <argsstring>(double w)</argsstring>
        <name>set_weight</name>
        <qualifiedname>nest::cont_delay_synapse::set_weight</qualifiedname>
        <param>
          <type>double</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Used by <ref refid="classnest_1_1ConnectorModel_1a65b12da20ec1f2816b53b56dede7cc75" kindref="member">ConnectorModel::add_connection()</ref> for fast initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="114" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="114" bodyend="117"/>
        <references refid="classnest_1_1cont__delay__synapse_1a113bae52a14f3ff1adafdace8f7da761" compoundref="cont__delay__synapse_8h" startline="197">nest::cont_delay_synapse&lt; targetidentifierT &gt;::weight_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a56143bbd58736d392482158de17e9a69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const</argsstring>
        <name>get_status</name>
        <qualifiedname>nest::cont_delay_synapse::get_status</qualifiedname>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Get all properties of this connection and put them into a dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="122" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse_impl.h" bodystart="49" bodyend="56"/>
        <references refid="namespacenest_1_1names_1a8356f74d8c2f8042dee4e2e6a93cba5b" compoundref="nest__names_8h" startline="146">nest::names::delay</references>
        <references refid="namespacenest_1_1names_1afb868eddb8599cce2bba3dd5790365b3" compoundref="nest__names_8h" startline="437">nest::names::size_of</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a59e07e30f11187a58471fe22fb86e194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d, ConnectorModel &amp;cm)</argsstring>
        <name>set_status</name>
        <qualifiedname>nest::cont_delay_synapse::set_status</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1ConnectorModel" kindref="compound">ConnectorModel</ref> &amp;</type>
          <declname>cm</declname>
        </param>
        <briefdescription>
<para>Set properties of this connection from the values given in dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="127" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse_impl.h" bodystart="60" bodyend="91"/>
        <references refid="classnest_1_1DelayChecker_1afd253171e8f64e64ff5cd672b4ba1799" compoundref="delay__checker_8cpp" startline="184" endline="246">nest::DelayChecker::assert_two_valid_delays_steps</references>
        <references refid="classnest_1_1DelayChecker_1a4a0e6ca8d78a66919f2688e286bf66cb" compoundref="delay__checker_8cpp" startline="121" endline="181">nest::DelayChecker::assert_valid_delay_ms</references>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="namespacenest_1_1names_1a8356f74d8c2f8042dee4e2e6a93cba5b" compoundref="nest__names_8h" startline="146">nest::names::delay</references>
        <references refid="classnest_1_1Time_1a817fe09798a12167761ce5711af5ce48" compoundref="nest__time_8h" startline="556" endline="559">nest::Time::delay_ms_to_steps</references>
        <references refid="classnest_1_1ConnectionManager_1a13545535bee9810548166d5d8606cbfc" compoundref="connection__manager_8cpp" startline="187" endline="190">nest::ConnectionManager::get_delay_checker</references>
        <references refid="classnest_1_1Time_1aff831a8475d8060353c4cae73cc5748c" compoundref="nest__time_8h" startline="512" endline="523">nest::Time::get_ms</references>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <references refid="namespacenest_1_1names_1a1bbc4b9af1e21cb33cd93dc3306ccdce" compoundref="nest__names_8h" startline="608">nest::names::weight</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a65e6483a6c0c5001690fddf854c11066" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::check_synapse_params</definition>
        <argsstring>(const DictionaryDatum &amp;d) const</argsstring>
        <name>check_synapse_params</name>
        <qualifiedname>nest::cont_delay_synapse::check_synapse_params</qualifiedname>
        <param>
          <type>const <ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Issue warning if delay is given in syn_spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="132" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse_impl.h" bodystart="95" bodyend="105"/>
        <references refid="namespacenest_1_1names_1a8356f74d8c2f8042dee4e2e6a93cba5b" compoundref="nest__names_8h" startline="146">nest::names::delay</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaacd7f6853f3c5659533a75bc712c3b" compoundref="logging_8h" startline="57">nest::M_WARNING</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1abfc17a5ed191fccaebf93877300b6651" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::send</definition>
        <argsstring>(Event &amp;e, thread t, const CommonSynapseProperties &amp;cp)</argsstring>
        <name>send</name>
        <qualifiedname>nest::cont_delay_synapse::send</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1CommonSynapseProperties" kindref="compound">CommonSynapseProperties</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Send an event to the receiver of this connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>common properties of all synapses (empty).</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to send </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The port under which this connection is stored in the <ref refid="classnest_1_1Connector" kindref="compound">Connector</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="139" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="209" bodyend="233"/>
        <references refid="classnest_1_1Time_1a6f14dc87dbd694a028020f00a5a92d7c" compoundref="nest__time_8h" startline="341" endline="344">nest::Time::get_resolution</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a3d5519ced627ca0b8f9e4ffb70126914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::cont_delay_synapse&lt; targetidentifierT &gt;::check_connection</definition>
        <argsstring>(Node &amp;s, Node &amp;t, rport receptor_type, const CommonPropertiesType &amp;)</argsstring>
        <name>check_connection</name>
        <qualifiedname>nest::cont_delay_synapse::check_connection</qualifiedname>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <declname>receptor_type</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1cont__delay__synapse_1a64b0c5393f8271b1e3dffa68175e1c51" kindref="member">CommonPropertiesType</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="190" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="190" bodyend="194"/>
        <references refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" compoundref="connection_8h" startline="316" endline="343">nest::Connection&lt; targetidentifierT &gt;::check_connection_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long nest::Connection&lt; targetidentifierT &gt;::get_delay_steps</definition>
        <argsstring>() const</argsstring>
        <name>get_delay_steps</name>
        <qualifiedname>nest::cont_delay_synapse::get_delay_steps</qualifiedname>
        <briefdescription>
<para>Return the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="107" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
        <definition>rport nest::Connection&lt; targetidentifierT &gt;::get_rport</definition>
        <argsstring>() const</argsstring>
        <name>get_rport</name>
        <qualifiedname>nest::cont_delay_synapse::get_rport</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="108" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * nest::Connection&lt; targetidentifierT &gt;::get_target</definition>
        <argsstring>(const thread tid) const</argsstring>
        <name>get_target</name>
        <qualifiedname>nest::cont_delay_synapse::get_target</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1ab32ecb34347794894e38197ccec56813" kindref="member">thread</ref></type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="109" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1cont__delay__synapse_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::Connection&lt; targetidentifierT &gt;::set_delay_steps</definition>
        <argsstring>(const long delay)</argsstring>
        <name>set_delay_steps</name>
        <qualifiedname>nest::cont_delay_synapse::set_delay_steps</qualifiedname>
        <param>
          <type>const long</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Set the delay of the connection in steps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="110" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="193" bodyend="196"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
      </node>
      <node id="1">
        <label>nest::cont_delay_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1cont__delay__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::Connection&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1Connection"/>
        <childnode refid="3" relation="usage">
          <edgelabel>syn_id_delay_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>nest::SynIdDelay</label>
        <link refid="structnest_1_1SynIdDelay"/>
      </node>
      <node id="1">
        <label>nest::cont_delay_synapse&lt; targetidentifierT &gt;</label>
        <link refid="classnest_1_1cont__delay__synapse"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" line="77" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/cont_delay_synapse.h" bodystart="78" bodyend="200"/>
    <listofallmembers>
      <member refid="classnest_1_1Connection_1a98a2af4db1c9a34d011be0c89a731c9b" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>calibrate</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a3d5519ced627ca0b8f9e4ffb70126914" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>check_connection</name></member>
      <member refid="classnest_1_1Connection_1ade845a0f52ecb9a6f93b0323b37380e0" prot="protected" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>check_connection_</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a65e6483a6c0c5001690fddf854c11066" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>check_synapse_params</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a64b0c5393f8271b1e3dffa68175e1c51" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>CommonPropertiesType</name></member>
      <member refid="classnest_1_1Connection_1acb7166410b78749a3c989e98868d1020" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1Connection_1a9237d0912e8b9c7fbb5d32d4c7abcb8d" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>Connection</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1ac2beddbbb4706857fe6914078b86788a" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>ConnectionBase</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a5597310caba432a2579a4019aed2cc63" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>cont_delay_synapse</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1ae2dbaaa4b8ba43f2f06f31ecd9b5192d" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>cont_delay_synapse</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1aa6d33b6d22b4961de29fcc325e8813ad" prot="private" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>delay_offset_</name></member>
      <member refid="classnest_1_1Connection_1a811dff4d6dbbca5a8cae4de925aa9faf" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>disable</name></member>
      <member refid="classnest_1_1Connection_1a913d4f9af27b5a6145b4f197660ad9a5" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>EventType</name></member>
      <member refid="classnest_1_1Connection_1a859a57c02d19389a8f6a15c626214c9b" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_delay</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a239230687eac7f8868b89c8a5e8fc56e" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1a7c32524ac24f7d591bd14a5cc9219618" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_label</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a67a2fe2ff35ad8fc9ae258974545724c" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_rport</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a56143bbd58736d392482158de17e9a69" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_status</name></member>
      <member refid="classnest_1_1Connection_1a2aca6e34443f8ef8576e23f097b199df" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_syn_id</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1ad1beea73d5b5a1f33bf08dd7d8aadbdb" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>get_target</name></member>
      <member refid="classnest_1_1Connection_1af8930ce6e4fee3c867cccac967970bd2" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>is_disabled</name></member>
      <member refid="classnest_1_1Connection_1a111070d4cbb64481c2e72cdd65e372db" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>operator=</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1abfc17a5ed191fccaebf93877300b6651" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>send</name></member>
      <member refid="classnest_1_1Connection_1abebbbd505fa36932bde4860d98eaed2e" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_delay</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1ab67c8cbeb4173f71fbc1a364d4e91785" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_delay_steps</name></member>
      <member refid="classnest_1_1Connection_1adce5ef19844ee30d96e7d39b5fe1a7f1" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_source_has_more_targets</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a59e07e30f11187a58471fe22fb86e194" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_status</name></member>
      <member refid="classnest_1_1Connection_1a7abf9bd27ab16f395112be31001bae3c" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_syn_id</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a80136aaddf263332444930e790a37b14" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>set_weight</name></member>
      <member refid="classnest_1_1Connection_1a0007e829af9dc39e624c5f349259a8ca" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>source_has_more_targets</name></member>
      <member refid="classnest_1_1Connection_1a27f971c956034918da99deb971949a26" prot="protected" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>syn_id_delay_</name></member>
      <member refid="classnest_1_1Connection_1af2b2773f69c67db7330eb1064a199af7" prot="protected" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>target_</name></member>
      <member refid="classnest_1_1Connection_1aa1e3449ea1e2ff5f7dd2338bbf3feafe" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>trigger_update_weight</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a113bae52a14f3ff1adafdace8f7da761" prot="private" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>weight_</name></member>
      <member refid="classnest_1_1cont__delay__synapse_1a0cae03cf55b335dcd092f9381f80bbf7" prot="public" virt="non-virtual"><scope>nest::cont_delay_synapse</scope><name>~cont_delay_synapse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
