<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_growth_curve_linear" kind="class" language="C++" prot="public">
    <compoundname>nest::GrowthCurveLinear</compoundname>
    <basecompoundref refid="classnest_1_1_growth_curve" prot="public" virt="non-virtual">nest::GrowthCurve</basecompoundref>
    <includes refid="growth__curve_8h" local="no">growth_curve.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_growth_curve_linear_1ac0ecd765bb8a881d204de2f535b16e5b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::GrowthCurveLinear::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/growth_curve.h" line="140" column="10" bodyfile="nestkernel/growth_curve.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_growth_curve_linear_1a3355cc0406f6c5d5a7e1c4750596afc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GrowthCurveLinear::GrowthCurveLinear</definition>
        <argsstring>()</argsstring>
        <name>GrowthCurveLinear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/growth_curve.h" line="133" column="3" bodyfile="nestkernel/growth_curve.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_growth_curve_linear_1a43ceccb55b12d5134d4520f34bbfc608" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GrowthCurveLinear::get</definition>
        <argsstring>(DictionaryDatum &amp;d) const override</argsstring>
        <name>get</name>
        <reimplements refid="classnest_1_1_growth_curve_1a3b9b23c1e48cae4d991a4d41111913c8">get</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/growth_curve.h" line="134" column="8" bodyfile="nestkernel/growth_curve.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_growth_curve_linear_1a3269ab98aa9b41a8f37d14ff91606853" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GrowthCurveLinear::set</definition>
        <argsstring>(const DictionaryDatum &amp;d) override</argsstring>
        <name>set</name>
        <reimplements refid="classnest_1_1_growth_curve_1ac27f37fb936c8459c3f84cd62d37e0b0">set</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/growth_curve.h" line="135" column="8" bodyfile="nestkernel/growth_curve.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_growth_curve_linear_1a3c8f34eaa0435f31f46bd82b220c3794" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double nest::GrowthCurveLinear::update</definition>
        <argsstring>(double t, double t_minus, double Ca_minus, double z, double tau_Ca, double growth_rate) const override</argsstring>
        <name>update</name>
        <reimplements refid="classnest_1_1_growth_curve_1ae3d68489019d017df33bc0d03c10377e">update</reimplements>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Ca_minus</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau_Ca</declname>
        </param>
        <param>
          <type>double</type>
          <declname>growth_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/growth_curve.h" line="137" column="3" bodyfile="nestkernel/growth_curve.cpp" bodystart="66" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>@BeginDocumentation</para>
<para>Name: growth_curve_linear - Linear version of a growth curve</para>
<para>Description: This class represents a linear growth rule for the number of synaptic elements inside a neuron. The creation and deletion of synaptic elements when structural plasticity is enabled, allows the dynamic rewiring of the network during the simulation. This type of growth curve uses an exact integration method to update the number of synaptic elements: dz/dt = nu (1 - (1/eps) * Ca(t)), where nu is the growth rate [elements/ms] and eps is the desired average calcium concentration. The growth rate nu is defined in the <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> class.</para>
<para>Parameters: eps double - The target calcium concentration that the neuron should look to achieve by creating or deleting synaptic elements. It should always be a positive value. It is important to note that the calcium concentration is linearly proportional to the firing rate. This is because dCa/dt = - Ca(t)/tau_Ca<itemizedlist>
<listitem><para>beta_Ca if the neuron fires and dCa/dt = - Ca(t)/tau_Ca otherwise, where tau_Ca is the calcium concentration decay constant and beta_Ca is the calcium intake constant (see <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> class). This means that eps also defines the desired firing rate that the neuron should achieve. For example, an eps = 0.05 [Ca2+] with tau_Ca = 10000.0 and beta_Ca = 0.001 for a synaptic element means a desired firing rate of 5Hz.</para>
</listitem></itemizedlist>
</para>
<para>References: [1] Butz, Markus, Florentin Wörgötter, and Arjen van Ooyen. &quot;Activity-dependent structural plasticity.&quot; Brain research reviews 60.2 (2009): 287-305.</para>
<para>[2] Butz, Markus, and Arjen van Ooyen. "A simple rule for dendritic spine and axonal bouton formation can account for cortical reorganization after focal retinal lesions." PLoS Comput Biol 9.10 (2013): e1003259.</para>
<para>FirstVersion: July 2013</para>
<para>Author: Mikael Naveau</para>
<para>SeeAlso: <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref>, <ref refid="classnest_1_1_s_p_manager" kindref="compound">SPManager</ref>, <ref refid="classnest_1_1_s_p_builder" kindref="compound">SPBuilder</ref>, <ref refid="classnest_1_1_growth_curve_linear" kindref="compound">GrowthCurveLinear</ref>, <ref refid="classnest_1_1_growth_curve_gaussian" kindref="compound">GrowthCurveGaussian</ref></para>
<para>Uses an exact integration method to update the number of synaptic elements: dz/dt = nu (1 - (1/eps) * Ca(t)), where nu is the growth rate and eps is the desired average calcium concentration. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::GrowthCurveLinear</label>
        <link refid="classnest_1_1_growth_curve_linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::GrowthCurve</label>
        <link refid="classnest_1_1_growth_curve"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::GrowthCurveLinear</label>
        <link refid="classnest_1_1_growth_curve_linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::GrowthCurve</label>
        <link refid="classnest_1_1_growth_curve"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/growth_curve.h" line="130" column="1" bodyfile="nestkernel/growth_curve.h" bodystart="131" bodyend="141"/>
    <listofallmembers>
      <member refid="classnest_1_1_growth_curve_linear_1ac0ecd765bb8a881d204de2f535b16e5b" prot="private" virt="non-virtual"><scope>nest::GrowthCurveLinear</scope><name>eps_</name></member>
      <member refid="classnest_1_1_growth_curve_linear_1a43ceccb55b12d5134d4520f34bbfc608" prot="public" virt="virtual"><scope>nest::GrowthCurveLinear</scope><name>get</name></member>
      <member refid="classnest_1_1_growth_curve_1ac528d7e793ac059a3e0758ed07ed2dd5" prot="public" virt="non-virtual"><scope>nest::GrowthCurveLinear</scope><name>get_name</name></member>
      <member refid="classnest_1_1_growth_curve_1a599bd5a9b419b9ca8ab1f636c419a2aa" prot="protected" virt="non-virtual"><scope>nest::GrowthCurveLinear</scope><name>GrowthCurve</name></member>
      <member refid="classnest_1_1_growth_curve_linear_1a3355cc0406f6c5d5a7e1c4750596afc7" prot="public" virt="non-virtual"><scope>nest::GrowthCurveLinear</scope><name>GrowthCurveLinear</name></member>
      <member refid="classnest_1_1_growth_curve_1a17cb398e284418d7af9e7200e4ea635a" prot="public" virt="virtual"><scope>nest::GrowthCurveLinear</scope><name>is</name></member>
      <member refid="classnest_1_1_growth_curve_1ad6302586f0c3aae4a740893376e36f4c" prot="protected" virt="non-virtual"><scope>nest::GrowthCurveLinear</scope><name>name_</name></member>
      <member refid="classnest_1_1_growth_curve_linear_1a3269ab98aa9b41a8f37d14ff91606853" prot="public" virt="virtual"><scope>nest::GrowthCurveLinear</scope><name>set</name></member>
      <member refid="classnest_1_1_growth_curve_linear_1a3c8f34eaa0435f31f46bd82b220c3794" prot="public" virt="virtual"><scope>nest::GrowthCurveLinear</scope><name>update</name></member>
      <member refid="classnest_1_1_growth_curve_1a5a70201493263078a9e05bca5bab2d28" prot="public" virt="virtual"><scope>nest::GrowthCurveLinear</scope><name>~GrowthCurve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
