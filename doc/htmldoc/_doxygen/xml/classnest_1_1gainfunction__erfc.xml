<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1gainfunction__erfc" kind="class" language="C++" prot="public">
    <compoundname>nest::gainfunction_erfc</compoundname>
    <includes refid="erfc__neuron_8h" local="no">erfc_neuron.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1gainfunction__erfc_1a528a7181fe353c1ca51f4db543db21a0" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::gainfunction_erfc::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <briefdescription>
<para>threshold of activation function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="133" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" bodystart="133" bodyend="-1"/>
        <referencedby refid="classnest_1_1gainfunction__erfc_1ac8db89afeaeaca04f2c3ccf74cfe5b1d" compoundref="erfc__neuron_8cpp" startline="29" endline="33">get</referencedby>
        <referencedby refid="classnest_1_1gainfunction__erfc_1af8068ac34b2bc2225287606bf66b68f7" compoundref="erfc__neuron_8h" startline="154" endline="157">operator()</referencedby>
        <referencedby refid="classnest_1_1gainfunction__erfc_1aa0557007dab8b9f927633b3935215b5e" compoundref="erfc__neuron_8cpp" startline="36" endline="40">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1gainfunction__erfc_1ade8a5d04a0092fc9f1c40527800f6bec" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::gainfunction_erfc::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <briefdescription>
<para>1/sqrt(2pi) x inverse of the maximal slope of gain function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="136" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="classnest_1_1gainfunction__erfc_1ac8db89afeaeaca04f2c3ccf74cfe5b1d" compoundref="erfc__neuron_8cpp" startline="29" endline="33">get</referencedby>
        <referencedby refid="classnest_1_1gainfunction__erfc_1af8068ac34b2bc2225287606bf66b68f7" compoundref="erfc__neuron_8h" startline="154" endline="157">operator()</referencedby>
        <referencedby refid="classnest_1_1gainfunction__erfc_1aa0557007dab8b9f927633b3935215b5e" compoundref="erfc__neuron_8cpp" startline="36" endline="40">set</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1gainfunction__erfc_1adefb498b67e8d52cbe67febfe6c24574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::gainfunction_erfc::gainfunction_erfc</definition>
        <argsstring>()</argsstring>
        <name>gainfunction_erfc</name>
        <briefdescription>
<para>sets default parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="141" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1gainfunction__erfc_1ac8db89afeaeaca04f2c3ccf74cfe5b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::gainfunction_erfc::get</definition>
        <argsstring>(DictionaryDatum &amp;) const</argsstring>
        <name>get</name>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
<para>Store current values in dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="147" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.cpp" bodystart="29" bodyend="33"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1a0f35b091934c399ea82691b6e099531c">nest::names::sigma</references>
        <references refid="classnest_1_1gainfunction__erfc_1ade8a5d04a0092fc9f1c40527800f6bec" compoundref="erfc__neuron_8h" startline="136">sigma_</references>
        <references refid="namespacenest_1_1names_1aba6f313f967dc8c05de3a362b4f53bf4">nest::names::theta</references>
        <references refid="classnest_1_1gainfunction__erfc_1a528a7181fe353c1ca51f4db543db21a0" compoundref="erfc__neuron_8h" startline="133">theta_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1gainfunction__erfc_1aa0557007dab8b9f927633b3935215b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::gainfunction_erfc::set</definition>
        <argsstring>(const DictionaryDatum &amp;, Node *node)</argsstring>
        <name>set</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Set values from dictionary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="148" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.cpp" bodystart="36" bodyend="40"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1a0f35b091934c399ea82691b6e099531c">nest::names::sigma</references>
        <references refid="classnest_1_1gainfunction__erfc_1ade8a5d04a0092fc9f1c40527800f6bec" compoundref="erfc__neuron_8h" startline="136">sigma_</references>
        <references refid="namespacenest_1_1names_1aba6f313f967dc8c05de3a362b4f53bf4">nest::names::theta</references>
        <references refid="classnest_1_1gainfunction__erfc_1a528a7181fe353c1ca51f4db543db21a0" compoundref="erfc__neuron_8h" startline="133">theta_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1gainfunction__erfc_1af8068ac34b2bc2225287606bf66b68f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::gainfunction_erfc::operator()</definition>
        <argsstring>(RngPtr rng, double h)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacenest_1a5c7ff981ccfbf8793f4c09f650b48a0c" kindref="member">RngPtr</ref></type>
          <declname>rng</declname>
        </param>
        <param>
          <type>double</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="150" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" bodystart="154" bodyend="157"/>
        <references refid="classnest_1_1BaseRandomGenerator_1ac9f238412d989640ad55a82e8d9e3a45">nest::BaseRandomGenerator::drand</references>
        <references refid="namespacenest_1_1names_1abc8783c6fe28575368e0ffe2aa531b84">nest::names::h</references>
        <references refid="classnest_1_1gainfunction__erfc_1ade8a5d04a0092fc9f1c40527800f6bec" compoundref="erfc__neuron_8h" startline="136">sigma_</references>
        <references refid="classnest_1_1gainfunction__erfc_1a528a7181fe353c1ca51f4db543db21a0" compoundref="erfc__neuron_8h" startline="133">theta_</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::gainfunction_erfc</label>
        <link refid="classnest_1_1gainfunction__erfc"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" line="129" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/models/erfc_neuron.h" bodystart="130" bodyend="151"/>
    <listofallmembers>
      <member refid="classnest_1_1gainfunction__erfc_1adefb498b67e8d52cbe67febfe6c24574" prot="public" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>gainfunction_erfc</name></member>
      <member refid="classnest_1_1gainfunction__erfc_1ac8db89afeaeaca04f2c3ccf74cfe5b1d" prot="public" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>get</name></member>
      <member refid="classnest_1_1gainfunction__erfc_1af8068ac34b2bc2225287606bf66b68f7" prot="public" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>operator()</name></member>
      <member refid="classnest_1_1gainfunction__erfc_1aa0557007dab8b9f927633b3935215b5e" prot="public" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>set</name></member>
      <member refid="classnest_1_1gainfunction__erfc_1ade8a5d04a0092fc9f1c40527800f6bec" prot="private" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>sigma_</name></member>
      <member refid="classnest_1_1gainfunction__erfc_1a528a7181fe353c1ca51f4db543db21a0" prot="private" virt="non-virtual"><scope>nest::gainfunction_erfc</scope><name>theta_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
