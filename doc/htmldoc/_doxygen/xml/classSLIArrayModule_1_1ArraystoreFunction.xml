<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classSLIArrayModule_1_1ArraystoreFunction" kind="class" language="C++" prot="private">
    <compoundname>SLIArrayModule::ArraystoreFunction</compoundname>
    <basecompoundref refid="classSLIFunction" prot="public" virt="non-virtual">SLIFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSLIArrayModule_1_1ArraystoreFunction_1ae6c534234c0cd067341be3836846f05f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SLIArrayModule::ArraystoreFunction::execute</definition>
        <argsstring>(SLIInterpreter *) const override</argsstring>
        <name>execute</name>
        <qualifiedname>SLIArrayModule::ArraystoreFunction::execute</qualifiedname>
        <reimplements refid="classSLIFunction_1abb5b37eaff928b43534627ed6f668e7d">execute</reimplements>
        <param>
          <type><ref refid="classSLIInterpreter" kindref="compound">SLIInterpreter</ref> *</type>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>@BeginDocumentation <ref refid="className" kindref="compound">Name</ref>: arraystore - pops the first n elements of the stack into an array </para>
        </briefdescription>
        <detaileddescription>
<para>Synopsis: t1 ... tn n arraystore --&gt; array</para>
<para>Description: The stack is invariant under the sequences arrayload arraystore arraystore arrayload . arraystore is the SLI version of PostScript operator astore. In contrast to PostScript SLI arrays are dynamic therefore the syntax of aload and astore is obsolete in SLI. If used aload and astore issue a warning message.</para>
<para>Parameters:</para>
<para>Examples: 5 4 2 3 arraystore --&gt; [ 5 4 2 ]</para>
<para>Author: Marc-Oliver Gewaltig, Markus Diesmann</para>
<para>Remarks: There are two obsolete versions existing called aload and astore.</para>
<para>SeeAlso: arrayload </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliarray.h" line="103" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliarray.cc" bodystart="855" bodyend="889"/>
        <references refid="classSLIInterpreter_1a4bd843d0ad15faf88185a1ae885f8852" compoundref="interpret_8h" startline="905" endline="911">SLIInterpreter::assert_stack_load</references>
        <references refid="classToken_1a309bb2d7f89471b3aa7ca63cfbde65e4" compoundref="token_8h" startline="360" endline="364">Token::datum</references>
        <references refid="classSLIInterpreter_1a3fe2d135bbae0ac57317ff6db9e39055" compoundref="interpret_8h" startline="251">SLIInterpreter::EStack</references>
        <references refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" compoundref="tokenstack_8h" startline="184" endline="187">TokenStack::load</references>
        <references refid="classSLIInterpreter_1ab50b50d10259d50fd78939273af5e4f5" compoundref="interpret_8h" startline="250">SLIInterpreter::OStack</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTokenStack_1a759f4b3c1c8955ab6f236de28a7f1cc0" compoundref="tokenstack_8h" startline="96" endline="99">TokenStack::pop</references>
        <references refid="classTokenStack_1a9d3b72926bfa2090389f0782cd2b6e76" compoundref="tokenstack_8h" startline="68" endline="71">TokenStack::push_move</references>
        <references refid="group__SLIError_1ga458cc1c0524cbf3902a74a835e9214e6" compoundref="interpret_8h" startline="635" endline="638">SLIInterpreter::raiseerror</references>
        <references refid="classSLIInterpreter_1a1970897d772161d63654a5476a22f09f" compoundref="interpret_8h" startline="153">SLIInterpreter::RangeCheckError</references>
        <references refid="classSLIInterpreter_1af98b93bb76491e6bc67e7636ca8e9ea9" compoundref="interpret_8h" startline="149">SLIInterpreter::StackUnderflowError</references>
        <references refid="classTokenStack_1a25006b53032030f38d6512076ee70abf" compoundref="tokenstack_8h" startline="116" endline="119">TokenStack::top</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>SLIArrayModule::ArraystoreFunction</label>
        <link refid="classSLIArrayModule_1_1ArraystoreFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>SLIArrayModule::ArraystoreFunction</label>
        <link refid="classSLIArrayModule_1_1ArraystoreFunction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/sliarray.h" line="100" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/sliarray.h" bodystart="101" bodyend="104"/>
    <listofallmembers>
      <member refid="classSLIFunction_1a68fd2ac46dd904673f3a8c96009221ba" prot="public" virt="virtual"><scope>SLIArrayModule::ArraystoreFunction</scope><name>backtrace</name></member>
      <member refid="classSLIArrayModule_1_1ArraystoreFunction_1ae6c534234c0cd067341be3836846f05f" prot="public" virt="virtual"><scope>SLIArrayModule::ArraystoreFunction</scope><name>execute</name></member>
      <member refid="classSLIFunction_1a3c4393dfc6f80af057a81d34a1a8bbad" prot="public" virt="non-virtual"><scope>SLIArrayModule::ArraystoreFunction</scope><name>SLIFunction</name></member>
      <member refid="classSLIFunction_1a1d35138a5956abbaf4a57d051bcb397b" prot="public" virt="virtual"><scope>SLIArrayModule::ArraystoreFunction</scope><name>~SLIFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
