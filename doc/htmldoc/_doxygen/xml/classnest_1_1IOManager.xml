<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1IOManager" kind="class" language="C++" prot="public">
    <compoundname>nest::IOManager</compoundname>
    <basecompoundref refid="classnest_1_1ManagerInterface" prot="public" virt="non-virtual">nest::ManagerInterface</basecompoundref>
    <includes refid="io__manager_8h" local="no">io_manager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1IOManager_1afd41792efb97d9e248a2bd16a112e686" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::IOManager::data_path_</definition>
        <argsstring></argsstring>
        <name>data_path_</name>
        <briefdescription>
<para>Path for all files written by devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="147" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="classnest_1_1IOManager_1a51e836794c1c8c93e91e3d7da09bc659" compoundref="io__manager_8h" startline="165" endline="168">get_data_path</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" compoundref="io__manager_8cpp" startline="215" endline="234">get_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" compoundref="io__manager_8cpp" startline="89" endline="132">set_data_path_prefix_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1IOManager_1abe8ff451d220ff8a568770a6fe652753" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::IOManager::data_prefix_</definition>
        <argsstring></argsstring>
        <name>data_prefix_</name>
        <briefdescription>
<para>Prefix for all files written by devices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="148" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" compoundref="io__manager_8cpp" startline="215" endline="234">get_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" compoundref="io__manager_8cpp" startline="89" endline="132">set_data_path_prefix_</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1IOManager_1ad22af7e76e6b1c714a1c091a6cac7fad" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::IOManager::overwrite_files_</definition>
        <argsstring></argsstring>
        <name>overwrite_files_</name>
        <briefdescription>
<para>If true, overwrite existing data files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="149" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="149" bodyend="-1"/>
        <referencedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" compoundref="io__manager_8cpp" startline="215" endline="234">get_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" compoundref="io__manager_8cpp" startline="135" endline="162">initialize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a33572c6b6c01fb2e171a7087689899fd" compoundref="io__manager_8cpp" startline="199" endline="203">set_status</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" prot="private" static="no" mutable="no">
        <type>std::map&lt; Name, <ref refid="classnest_1_1RecordingBackend" kindref="compound">RecordingBackend</ref> * &gt;</type>
        <definition>std::map&lt; Name, RecordingBackend* &gt; nest::IOManager::recording_backends_</definition>
        <argsstring></argsstring>
        <name>recording_backends_</name>
        <briefdescription>
<para>A mapping from names to registered recording backends. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="154" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="classnest_1_1IOManager_1a19ecf96537dddb09b4041429ed2d3463" compoundref="io__manager_8cpp" startline="178" endline="190">change_number_of_threads</referencedby>
        <referencedby refid="classnest_1_1IOManager_1aaae0477886a9585abf7a49cf52db07c5" compoundref="io__manager_8cpp" startline="378" endline="381">check_recording_backend_device_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a391dcdfc0fb7aa519ea04e5d9fdc16db" compoundref="io__manager_8cpp" startline="285" endline="295">cleanup</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a12a0b4ed29422e77d365e8ec0567029c" compoundref="io__manager_8cpp" startline="322" endline="335">enroll_recorder</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" compoundref="io__manager_8cpp" startline="165" endline="175">finalize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ab2be071ad5a2edc77cab1a591bd61b75" compoundref="io__manager_8cpp" startline="384" endline="387">get_recording_backend_device_defaults</referencedby>
        <referencedby refid="classnest_1_1IOManager_1aa42bc681499dc01a2434cad08a741caf" compoundref="io__manager_8cpp" startline="390" endline="395">get_recording_backend_device_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ad533f89beed43cfe1a551294d3291e4c" compoundref="io__manager_8cpp" startline="206" endline="212">get_recording_backend_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" compoundref="io__manager_8cpp" startline="215" endline="234">get_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" compoundref="io__manager_8cpp" startline="135" endline="162">initialize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1afc53dc77e06d24c7b79fb5d81f788b7d" compoundref="io__manager_8cpp" startline="298" endline="302">is_valid_recording_backend</referencedby>
        <referencedby refid="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" compoundref="io__manager_8cpp" startline="250" endline="260">post_run_hook</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a9a8ec95f6913114fbed606cf6801eaf8" compoundref="io__manager_8cpp" startline="263" endline="269">post_step_hook</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a0afe64b47ac69a05d8fa168cc07b52b4" compoundref="io__manager_8cpp" startline="237" endline="247">pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ac227a02839b2cf4a54ba8887bff313d8" compoundref="io__manager_8cpp" startline="272" endline="282">prepare</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a2a04dad75c5bccb594d51f5e0f746bca" compoundref="io__manager__impl_8h" startline="33" endline="43">register_recording_backend</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a51667a7f223ca51e759864a82d80a39d" compoundref="io__manager_8cpp" startline="193" endline="196">set_recording_backend_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a4269c5a95da4d9c690469ac18c1076d9" compoundref="io__manager_8cpp" startline="369" endline="375">set_recording_value_names</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a76f3feb9f444abdc61b1ccd0c0055dcc" compoundref="io__manager_8cpp" startline="312" endline="319">write</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a1295fec5e17aa380f14b7f400034026e" compoundref="io__manager_8cpp" startline="76" endline="86">~IOManager</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" prot="private" static="no" mutable="no">
        <type>std::map&lt; Name, <ref refid="classnest_1_1StimulationBackend" kindref="compound">StimulationBackend</ref> * &gt;</type>
        <definition>std::map&lt; Name, StimulationBackend* &gt; nest::IOManager::stimulation_backends_</definition>
        <argsstring></argsstring>
        <name>stimulation_backends_</name>
        <briefdescription>
<para>A mapping from names to registered stimulation backends. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="159" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="classnest_1_1IOManager_1a19ecf96537dddb09b4041429ed2d3463" compoundref="io__manager_8cpp" startline="178" endline="190">change_number_of_threads</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a391dcdfc0fb7aa519ea04e5d9fdc16db" compoundref="io__manager_8cpp" startline="285" endline="295">cleanup</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" compoundref="io__manager_8cpp" startline="165" endline="175">finalize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" compoundref="io__manager_8cpp" startline="215" endline="234">get_status</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" compoundref="io__manager_8cpp" startline="135" endline="162">initialize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a36f2bb67ce7fdd6ee42a4e96df41e44c" compoundref="io__manager_8cpp" startline="305" endline="309">is_valid_stimulation_backend</referencedby>
        <referencedby refid="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" compoundref="io__manager_8cpp" startline="250" endline="260">post_run_hook</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a0afe64b47ac69a05d8fa168cc07b52b4" compoundref="io__manager_8cpp" startline="237" endline="247">pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1IOManager_1ac227a02839b2cf4a54ba8887bff313d8" compoundref="io__manager_8cpp" startline="272" endline="282">prepare</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a08284ba0d4f428743aadc68da3a02ef4" compoundref="io__manager__impl_8h" startline="47" endline="57">register_stimulation_backend</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a1295fec5e17aa380f14b7f400034026e" compoundref="io__manager_8cpp" startline="76" endline="86">~IOManager</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1IOManager_1a6bf0e3020cc5034b21e54b8d08aaf07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::IOManager::IOManager</definition>
        <argsstring>()</argsstring>
        <name>IOManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="46" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="61" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a1295fec5e17aa380f14b7f400034026e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::IOManager::~IOManager</definition>
        <argsstring>() override</argsstring>
        <name>~IOManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="47" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="76" bodyend="86"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::initialize</definition>
        <argsstring>() override</argsstring>
        <name>initialize</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a43f881ab34500bff012a2514ad99ad79">initialize</reimplements>
        <briefdescription>
<para>Prepare manager for operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, the manager should be completely initialized and &quot;ready for action&quot;.</para>
<para><simplesect kind="note"><para>Initialization of any given manager may depend on other managers having been initialized before. <ref refid="classnest_1_1KernelManager_1aa731562f03c98d8fa67f1d530056ede2" kindref="member">KernelManager::initialize()</ref> is responsible for calling the initialization routines on the specific managers in correct order.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" kindref="member">finalize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="49" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="135" bodyend="162"/>
        <references refid="namespacenest_1_1names_1ab8117a65a4d94b87a77bcf50e351b516">nest::names::data_path</references>
        <references refid="namespacenest_1_1names_1a9f3e5304b8f6bbbc94a770a6447b5268">nest::names::data_prefix</references>
        <references refid="classnest_1_1IOManager_1ad22af7e76e6b1c714a1c091a6cac7fad" compoundref="io__manager_8h" startline="149">overwrite_files_</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" compoundref="io__manager_8cpp" startline="89" endline="132">set_data_path_prefix_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::finalize</definition>
        <argsstring>() override</argsstring>
        <name>finalize</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a329d00818a7c57d2c7f9e83dbed56606">finalize</reimplements>
        <briefdescription>
<para>Take down manager after operation. </para>
        </briefdescription>
        <detaileddescription>
<para>After this method has completed, all dynamic data structures created by the manager shall be deallocated and containers emptied. Plain variables need not be reset.</para>
<para><simplesect kind="note"><para>Finalization of any given manager may depend on other managers not having been finalized yet. <ref refid="classnest_1_1KernelManager_1a9e1cccd4670b1da1f68208afb5e6622f" kindref="member">KernelManager::finalize()</ref> is responsible for calling the initialization routines on the specific managers in correct order, i.e., the opposite order of <ref refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" kindref="member">initialize()</ref> calls.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" kindref="member">initialize()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="50" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="165" bodyend="175"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a19ecf96537dddb09b4041429ed2d3463" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::change_number_of_threads</definition>
        <argsstring>() override</argsstring>
        <name>change_number_of_threads</name>
        <reimplements refid="classnest_1_1ManagerInterface_1aa88c28844a59b4791eab4b7930fc62b0">change_number_of_threads</reimplements>
        <briefdescription>
<para>Change the number of threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Many data structures within the different managers depend on the number of threads. This function is called on each manager upon a change of that number and allows the manager to re-allocate data structures accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="51" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="178" bodyend="190"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a33572c6b6c01fb2e171a7087689899fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="classnest_1_1ManagerInterface_1ad940557204d456c167f541dd72c81193">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="52" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="199" bodyend="203"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="namespacenest_1_1names_1a33e93f05a08afc8f8ed0f30df907ce51">nest::names::overwrite_files</references>
        <references refid="classnest_1_1IOManager_1ad22af7e76e6b1c714a1c091a6cac7fad" compoundref="io__manager_8h" startline="149">overwrite_files_</references>
        <references refid="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" compoundref="io__manager_8cpp" startline="89" endline="132">set_data_path_prefix_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) override</argsstring>
        <name>get_status</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a0935d5415eafd0bc54d2c01294595a80">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="53" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="215" bodyend="234"/>
        <references refid="namespacenest_1_1names_1ab8117a65a4d94b87a77bcf50e351b516">nest::names::data_path</references>
        <references refid="classnest_1_1IOManager_1afd41792efb97d9e248a2bd16a112e686" compoundref="io__manager_8h" startline="147">data_path_</references>
        <references refid="namespacenest_1_1names_1a9f3e5304b8f6bbbc94a770a6447b5268">nest::names::data_prefix</references>
        <references refid="classnest_1_1IOManager_1abe8ff451d220ff8a568770a6fe652753" compoundref="io__manager_8h" startline="148">data_prefix_</references>
        <references refid="namespacenest_1_1names_1a33e93f05a08afc8f8ed0f30df907ce51">nest::names::overwrite_files</references>
        <references refid="classnest_1_1IOManager_1ad22af7e76e6b1c714a1c091a6cac7fad" compoundref="io__manager_8h" startline="149">overwrite_files_</references>
        <references refid="namespacenest_1_1names_1ad296b8ce441184cb02d1f25ae7cca353">nest::names::recording_backends</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="namespacenest_1_1names_1ac4962c9aadc5b44303ef4f1c1a80ab07">nest::names::stimulation_backends</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a51667a7f223ca51e759864a82d80a39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::set_recording_backend_status</definition>
        <argsstring>(std::string, const DictionaryDatum &amp;)</argsstring>
        <name>set_recording_backend_status</name>
        <param>
          <type>std::string</type>
          <defname>recording_backend</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="55" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="193" bodyend="196"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="namespacenest_1af18c7cd06bb7de7b85883a470ec1238e" compoundref="nest_8cpp" startline="277" endline="291">nest::set_model_defaults</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1ad533f89beed43cfe1a551294d3291e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DictionaryDatum</type>
        <definition>DictionaryDatum nest::IOManager::get_recording_backend_status</definition>
        <argsstring>(std::string)</argsstring>
        <name>get_recording_backend_status</name>
        <param>
          <type>std::string</type>
          <defname>recording_backend</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="56" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="206" bodyend="212"/>
        <references refid="namespacenest_1_1names_1a0e17bef4e86ea2fddd9a034ad2cf9a47">nest::names::element_type</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="namespacenest_1aacef87bbf60279472b2642b3c460bcde" compoundref="nest_8cpp" startline="294" endline="323">nest::get_model_defaults</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a5eda33427b6d2c6f82a60522cfec712a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; nest::IOManager::get_data_prefix</definition>
        <argsstring>() const</argsstring>
        <name>get_data_prefix</name>
        <briefdescription>
<para>The prefix for files written by devices. </para>
        </briefdescription>
        <detaileddescription>
<para>The prefix must not contain any part of a path. <simplesect kind="see"><para>get_data_dir(), <ref refid="classnest_1_1IOManager_1a9f49317b6a8eb0022ce1bb05ff2a6b45" kindref="member">overwrite_files()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="63" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="171" bodyend="174"/>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1a25ab28334000db7babef6da0ad4b7135" compoundref="recording__backend__sionlib_8cpp" startline="521" endline="532">nest::RecordingBackendSIONlib::build_filename_</referencedby>
        <referencedby refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a367cd4c751a9e1206399f660899d1b8f" compoundref="recording__backend__ascii_8cpp" startline="357" endline="374">nest::RecordingBackendASCII::DeviceData::compute_filename_</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendMPI_1ab513bfa6fb5e91f64f5823081810949e" compoundref="recording__backend__mpi_8cpp" startline="364" endline="393">nest::RecordingBackendMPI::get_port</referencedby>
        <referencedby refid="classnest_1_1StimulationBackendMPI_1ad9f07bc17e1b324c915eda7c7db6a8e6" compoundref="stimulation__backend__mpi_8cpp" startline="292" endline="325">nest::StimulationBackendMPI::get_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a51e836794c1c8c93e91e3d7da09bc659" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; nest::IOManager::get_data_path</definition>
        <argsstring>() const</argsstring>
        <name>get_data_path</name>
        <briefdescription>
<para>The path for files written by devices. </para>
        </briefdescription>
        <detaileddescription>
<para>It may be the empty string (use current directory). <simplesect kind="see"><para><ref refid="classnest_1_1IOManager_1a5eda33427b6d2c6f82a60522cfec712a" kindref="member">get_data_prefix()</ref>, <ref refid="classnest_1_1IOManager_1a9f49317b6a8eb0022ce1bb05ff2a6b45" kindref="member">overwrite_files()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="70" column="21" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="165" bodyend="168"/>
        <references refid="classnest_1_1IOManager_1afd41792efb97d9e248a2bd16a112e686" compoundref="io__manager_8h" startline="147">data_path_</references>
        <referencedby refid="classnest_1_1RecordingBackendSIONlib_1a25ab28334000db7babef6da0ad4b7135" compoundref="recording__backend__sionlib_8cpp" startline="521" endline="532">nest::RecordingBackendSIONlib::build_filename_</referencedby>
        <referencedby refid="structnest_1_1RecordingBackendASCII_1_1DeviceData_1a367cd4c751a9e1206399f660899d1b8f" compoundref="recording__backend__ascii_8cpp" startline="357" endline="374">nest::RecordingBackendASCII::DeviceData::compute_filename_</referencedby>
        <referencedby refid="classnest_1_1RecordingBackendMPI_1ab513bfa6fb5e91f64f5823081810949e" compoundref="recording__backend__mpi_8cpp" startline="364" endline="393">nest::RecordingBackendMPI::get_port</referencedby>
        <referencedby refid="classnest_1_1StimulationBackendMPI_1ad9f07bc17e1b324c915eda7c7db6a8e6" compoundref="stimulation__backend__mpi_8cpp" startline="292" endline="325">nest::StimulationBackendMPI::get_port</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a9f49317b6a8eb0022ce1bb05ff2a6b45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::IOManager::overwrite_files</definition>
        <argsstring>() const</argsstring>
        <name>overwrite_files</name>
        <briefdescription>
<para>Indicate if existing data files should be overwritten. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if existing data files should be overwritten by devices. Default: false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="77" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::post_run_hook</definition>
        <argsstring>()</argsstring>
        <name>post_run_hook</name>
        <briefdescription>
<para>Clean up in all registered recording backends after a single call to run by calling the backends&apos; <ref refid="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" kindref="member">post_run_hook()</ref> functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="250" bodyend="260"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
        <referencedby refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" compoundref="simulation__manager_8cpp" startline="553" endline="610">nest::SimulationManager::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a0afe64b47ac69a05d8fa168cc07b52b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::pre_run_hook</definition>
        <argsstring>()</argsstring>
        <name>pre_run_hook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="84" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="237" bodyend="247"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
        <referencedby refid="classnest_1_1SimulationManager_1af942eab41c595fc8769f067dfb31c84b" compoundref="simulation__manager_8cpp" startline="553" endline="610">nest::SimulationManager::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a9a8ec95f6913114fbed606cf6801eaf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::post_step_hook</definition>
        <argsstring>()</argsstring>
        <name>post_step_hook</name>
        <briefdescription>
<para>Clean up in all registered recording backends after a single simulation step by calling the backends&apos; <ref refid="classnest_1_1IOManager_1a9a8ec95f6913114fbed606cf6801eaf8" kindref="member">post_step_hook()</ref> functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="90" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="263" bodyend="269"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1SimulationManager_1a4ad2ea77edb56fb13176de0932bac835" compoundref="simulation__manager_8cpp" startline="776" endline="1074">nest::SimulationManager::update_</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a391dcdfc0fb7aa519ea04e5d9fdc16db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::cleanup</definition>
        <argsstring>() override</argsstring>
        <name>cleanup</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a883efc8a7266a9bc62d43e30cdd87147">cleanup</reimplements>
        <briefdescription>
<para>Finalize all registered recording backends after a call to <ref refid="namespacenest_1ab9b390746b0a6fc00893571a8823161a" kindref="member">SimulationManager::simulate()</ref> or <ref refid="classnest_1_1SimulationManager_1af2d373b936e4d432a688a78af29be0ce" kindref="member">SimulationManager::cleanup()</ref> by calling the backends&apos; <ref refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" kindref="member">finalize()</ref> functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="97" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="285" bodyend="295"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1ac227a02839b2cf4a54ba8887bff313d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::IOManager::prepare</definition>
        <argsstring>() override</argsstring>
        <name>prepare</name>
        <reimplements refid="classnest_1_1ManagerInterface_1a7a0e8989a48de50b52631e87ed3f2745">prepare</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="98" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="272" bodyend="282"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a2a04dad75c5bccb594d51f5e0f746bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RecordingBackendT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::IOManager::register_recording_backend</definition>
        <argsstring>(Name)</argsstring>
        <name>register_recording_backend</name>
        <param>
          <type>Name</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="101" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager_impl.h" bodystart="33" bodyend="43"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a08284ba0d4f428743aadc68da3a02ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class StimulationBackendT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nest::IOManager::register_stimulation_backend</definition>
        <argsstring>(const Name)</argsstring>
        <name>register_stimulation_backend</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="104" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager_impl.h" bodystart="47" bodyend="57"/>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1afc53dc77e06d24c7b79fb5d81f788b7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::IOManager::is_valid_recording_backend</definition>
        <argsstring>(const Name) const</argsstring>
        <name>is_valid_recording_backend</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="298" bodyend="302"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a36f2bb67ce7fdd6ee42a4e96df41e44c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool nest::IOManager::is_valid_stimulation_backend</definition>
        <argsstring>(const Name) const</argsstring>
        <name>is_valid_stimulation_backend</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="107" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="305" bodyend="309"/>
        <references refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" compoundref="io__manager_8h" startline="159">stimulation_backends_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a76f3feb9f444abdc61b1ccd0c0055dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::write</definition>
        <argsstring>(const Name backend_name, const RecordingDevice &amp;device, const Event &amp;event, const std::vector&lt; double &gt; &amp;double_values, const std::vector&lt; long &gt; &amp;long_values)</argsstring>
        <name>write</name>
        <param>
          <type>const Name</type>
          <declname>backend_name</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>double_values</declname>
        </param>
        <param>
          <type>const std::vector&lt; long &gt; &amp;</type>
          <declname>long_values</declname>
        </param>
        <briefdescription>
<para>Send device data to a given recording backend. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called from a <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> <computeroutput>device</computeroutput> when it wants to write data to a given recording backend, identified by its <computeroutput>backend_name</computeroutput>. The function takes an <ref refid="classnest_1_1Event" kindref="compound">Event</ref> <computeroutput>event</computeroutput> from which some fundamental data is taken and additionally vectors of <computeroutput>double_values</computeroutput> and <computeroutput>long_values</computeroutput> that have to be written. The data vectors may be empty, if no additional data has to be written.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>backend_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classnest_1_1RecordingBackend" kindref="compound">RecordingBackend</ref> to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference to the <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> that wants to write </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnest_1_1Event" kindref="compound">Event</ref> to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>double_values</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of doubles to be written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long_values</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of longs to be written </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="126" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="312" bodyend="319"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1a79b4d2540dc042282d81d1e7d41fdf81" compoundref="recording__device_8cpp" startline="212" endline="218">nest::RecordingDevice::write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a12a0b4ed29422e77d365e8ec0567029c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::enroll_recorder</definition>
        <argsstring>(const Name, const RecordingDevice &amp;, const DictionaryDatum &amp;)</argsstring>
        <name>enroll_recorder</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> &amp;</type>
          <defname>device</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="132" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="322" bodyend="335"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1ab77a88eadcacbb992e706e55aa88627a" compoundref="recording__device_8cpp" startline="46" endline="49">nest::RecordingDevice::set_initialized_</referencedby>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">nest::RecordingDevice::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1ae6ad8da82d9b3055a76af0b25b04fed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::enroll_stimulator</definition>
        <argsstring>(const Name, StimulationDevice &amp;, const DictionaryDatum &amp;)</argsstring>
        <name>enroll_stimulator</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <param>
          <type><ref refid="classnest_1_1StimulationDevice" kindref="compound">StimulationDevice</ref> &amp;</type>
          <defname>device</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="133" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="338" bodyend="366"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <referencedby refid="classnest_1_1StimulationDevice_1ac67e5262a139223625a3eea557e7aa45" compoundref="stimulation__device_8cpp" startline="79" endline="82">nest::StimulationDevice::set_initialized_</referencedby>
        <referencedby refid="classnest_1_1StimulationDevice_1a1ebf88604667e02e4070d73ffcc63845" compoundref="stimulation__device_8cpp" startline="123" endline="162">nest::StimulationDevice::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1a4269c5a95da4d9c690469ac18c1076d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::set_recording_value_names</definition>
        <argsstring>(const Name backend_name, const RecordingDevice &amp;device, const std::vector&lt; Name &gt; &amp;double_value_names, const std::vector&lt; Name &gt; &amp;long_value_names)</argsstring>
        <name>set_recording_value_names</name>
        <param>
          <type>const Name</type>
          <declname>backend_name</declname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const std::vector&lt; Name &gt; &amp;</type>
          <declname>double_value_names</declname>
        </param>
        <param>
          <type>const std::vector&lt; Name &gt; &amp;</type>
          <declname>long_value_names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="135" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="369" bodyend="375"/>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1a2d1416e38bec46975b4b79ba2e042fed" compoundref="recording__device_8cpp" startline="52" endline="57">nest::RecordingDevice::pre_run_hook</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1aaae0477886a9585abf7a49cf52db07c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::check_recording_backend_device_status</definition>
        <argsstring>(const Name, const DictionaryDatum &amp;)</argsstring>
        <name>check_recording_backend_device_status</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="140" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="378" bodyend="381"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1a466c7b9ed8d05e9d42eed08009dc81e0" compoundref="recording__device_8cpp" startline="125" endline="174">nest::RecordingDevice::set_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1ab2be071ad5a2edc77cab1a591bd61b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::get_recording_backend_device_defaults</definition>
        <argsstring>(const Name, DictionaryDatum &amp;)</argsstring>
        <name>get_recording_backend_device_defaults</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>params</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="141" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="384" bodyend="387"/>
        <references refid="namespacenest_1_1names_1ab153cba7971a1ce0c755195c4096266a">nest::names::params</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">nest::RecordingDevice::get_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1IOManager_1aa42bc681499dc01a2434cad08a741caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::get_recording_backend_device_status</definition>
        <argsstring>(const Name, const RecordingDevice &amp;, DictionaryDatum &amp;)</argsstring>
        <name>get_recording_backend_device_status</name>
        <param>
          <type>const</type>
          <declname>Name</declname>
          <defname>backend_name</defname>
        </param>
        <param>
          <type>const <ref refid="classnest_1_1RecordingDevice" kindref="compound">RecordingDevice</ref> &amp;</type>
          <defname>device</defname>
        </param>
        <param>
          <type>DictionaryDatum &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="142" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="390" bodyend="395"/>
        <references refid="namespacenest_1_1names_1a8881fb5c6cc400d4eb90a2035d9a2df5">nest::names::d</references>
        <references refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" compoundref="io__manager_8h" startline="154">recording_backends_</references>
        <referencedby refid="classnest_1_1RecordingDevice_1a60b60f1790b78bdaca10bf6d30ac3930" compoundref="recording__device_8cpp" startline="177" endline="201">nest::RecordingDevice::get_status</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::IOManager::set_data_path_prefix_</definition>
        <argsstring>(const DictionaryDatum &amp;)</argsstring>
        <name>set_data_path_prefix_</name>
        <param>
          <type>const DictionaryDatum &amp;</type>
          <defname>dict</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="145" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.cpp" bodystart="89" bodyend="132"/>
        <references refid="namespacenest_1_1names_1ab8117a65a4d94b87a77bcf50e351b516">nest::names::data_path</references>
        <references refid="classnest_1_1IOManager_1afd41792efb97d9e248a2bd16a112e686" compoundref="io__manager_8h" startline="147">data_path_</references>
        <references refid="namespacenest_1_1names_1a9f3e5304b8f6bbbc94a770a6447b5268">nest::names::data_prefix</references>
        <references refid="classnest_1_1IOManager_1abe8ff451d220ff8a568770a6fe652753" compoundref="io__manager_8h" startline="148">data_prefix_</references>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72adaf8dec0ca154ba4dd8045accef88b46" compoundref="logging_8h" startline="58">nest::M_ERROR</references>
        <referencedby refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" compoundref="io__manager_8cpp" startline="135" endline="162">initialize</referencedby>
        <referencedby refid="classnest_1_1IOManager_1a33572c6b6c01fb2e171a7087689899fd" compoundref="io__manager_8cpp" startline="199" endline="203">set_status</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::IOManager</label>
        <link refid="classnest_1_1IOManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nest::ManagerInterface</label>
        <link refid="classnest_1_1ManagerInterface"/>
      </node>
      <node id="1">
        <label>nest::IOManager</label>
        <link refid="classnest_1_1IOManager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" line="43" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/io_manager.h" bodystart="44" bodyend="160"/>
    <listofallmembers>
      <member refid="classnest_1_1IOManager_1a19ecf96537dddb09b4041429ed2d3463" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>change_number_of_threads</name></member>
      <member refid="classnest_1_1IOManager_1aaae0477886a9585abf7a49cf52db07c5" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>check_recording_backend_device_status</name></member>
      <member refid="classnest_1_1IOManager_1a391dcdfc0fb7aa519ea04e5d9fdc16db" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>cleanup</name></member>
      <member refid="classnest_1_1IOManager_1afd41792efb97d9e248a2bd16a112e686" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>data_path_</name></member>
      <member refid="classnest_1_1IOManager_1abe8ff451d220ff8a568770a6fe652753" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>data_prefix_</name></member>
      <member refid="classnest_1_1IOManager_1a12a0b4ed29422e77d365e8ec0567029c" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>enroll_recorder</name></member>
      <member refid="classnest_1_1IOManager_1ae6ad8da82d9b3055a76af0b25b04fed6" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>enroll_stimulator</name></member>
      <member refid="classnest_1_1IOManager_1a3be125abfc84273887bd4ac2c5141117" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>finalize</name></member>
      <member refid="classnest_1_1IOManager_1a51e836794c1c8c93e91e3d7da09bc659" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>get_data_path</name></member>
      <member refid="classnest_1_1IOManager_1a5eda33427b6d2c6f82a60522cfec712a" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>get_data_prefix</name></member>
      <member refid="classnest_1_1IOManager_1ab2be071ad5a2edc77cab1a591bd61b75" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>get_recording_backend_device_defaults</name></member>
      <member refid="classnest_1_1IOManager_1aa42bc681499dc01a2434cad08a741caf" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>get_recording_backend_device_status</name></member>
      <member refid="classnest_1_1IOManager_1ad533f89beed43cfe1a551294d3291e4c" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>get_recording_backend_status</name></member>
      <member refid="classnest_1_1IOManager_1ab9b64bde6b49a812f8bf79d2e751b92d" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>get_status</name></member>
      <member refid="classnest_1_1IOManager_1a290ac3d72efc43aca30e9fee71a58e7d" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>initialize</name></member>
      <member refid="classnest_1_1IOManager_1a6bf0e3020cc5034b21e54b8d08aaf07d" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>IOManager</name></member>
      <member refid="classnest_1_1IOManager_1afc53dc77e06d24c7b79fb5d81f788b7d" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>is_valid_recording_backend</name></member>
      <member refid="classnest_1_1IOManager_1a36f2bb67ce7fdd6ee42a4e96df41e44c" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>is_valid_stimulation_backend</name></member>
      <member refid="classnest_1_1ManagerInterface_1aeb056937c69d73ba501bab2fb371a56c" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1af07ff595521c144ddb81899fec66e251" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>ManagerInterface</name></member>
      <member refid="classnest_1_1ManagerInterface_1a9889d8ee2a6bd5f1799e86aed555db5e" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>operator=</name></member>
      <member refid="classnest_1_1IOManager_1a9f49317b6a8eb0022ce1bb05ff2a6b45" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>overwrite_files</name></member>
      <member refid="classnest_1_1IOManager_1ad22af7e76e6b1c714a1c091a6cac7fad" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>overwrite_files_</name></member>
      <member refid="classnest_1_1IOManager_1af7b3cc35bfd52864025b750eb379419f" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>post_run_hook</name></member>
      <member refid="classnest_1_1IOManager_1a9a8ec95f6913114fbed606cf6801eaf8" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>post_step_hook</name></member>
      <member refid="classnest_1_1IOManager_1a0afe64b47ac69a05d8fa168cc07b52b4" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1IOManager_1ac227a02839b2cf4a54ba8887bff313d8" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>prepare</name></member>
      <member refid="classnest_1_1IOManager_1a311bf44eae72b0da814da3f884b32c91" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>recording_backends_</name></member>
      <member refid="classnest_1_1IOManager_1a2a04dad75c5bccb594d51f5e0f746bca" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>register_recording_backend</name></member>
      <member refid="classnest_1_1IOManager_1a08284ba0d4f428743aadc68da3a02ef4" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>register_stimulation_backend</name></member>
      <member refid="classnest_1_1IOManager_1a88d6a0d1c97fb4dd1c477a5fdd902ff8" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>set_data_path_prefix_</name></member>
      <member refid="classnest_1_1IOManager_1a51667a7f223ca51e759864a82d80a39d" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>set_recording_backend_status</name></member>
      <member refid="classnest_1_1IOManager_1a4269c5a95da4d9c690469ac18c1076d9" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>set_recording_value_names</name></member>
      <member refid="classnest_1_1IOManager_1a33572c6b6c01fb2e171a7087689899fd" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>set_status</name></member>
      <member refid="classnest_1_1IOManager_1a421dcc38292af7f9bb829b1c8861a692" prot="private" virt="non-virtual"><scope>nest::IOManager</scope><name>stimulation_backends_</name></member>
      <member refid="classnest_1_1IOManager_1a76f3feb9f444abdc61b1ccd0c0055dcc" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>write</name></member>
      <member refid="classnest_1_1IOManager_1a1295fec5e17aa380f14b7f400034026e" prot="public" virt="non-virtual"><scope>nest::IOManager</scope><name>~IOManager</name></member>
      <member refid="classnest_1_1ManagerInterface_1ac60a79d2ba0a48f1b039ab1f9d502ec4" prot="public" virt="virtual"><scope>nest::IOManager</scope><name>~ManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
