<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1GenericModel" kind="class" language="C++" prot="public">
    <compoundname>nest::GenericModel</compoundname>
    <basecompoundref refid="classnest_1_1Model" prot="public" virt="non-virtual">nest::Model</basecompoundref>
    <includes refid="genericmodel_8h" local="no">genericmodel.h</includes>
    <templateparamlist>
      <param>
        <type>typename ElementT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1GenericModel_1a8ab76a276b64da272cf5b87d3af18760" prot="private" static="no" mutable="no">
        <type>ElementT</type>
        <definition>ElementT nest::GenericModel&lt; ElementT &gt;::proto_</definition>
        <argsstring></argsstring>
        <name>proto_</name>
        <qualifiedname>nest::GenericModel::proto_</qualifiedname>
        <briefdescription>
<para>Prototype node from which all instances are constructed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="111" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GenericModel_1a54c0b4450ab067b0df30bfcee8d75fce" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nest::GenericModel&lt; ElementT &gt;::deprecation_info_</definition>
        <argsstring></argsstring>
        <name>deprecation_info_</name>
        <qualifiedname>nest::GenericModel::deprecation_info_</qualifiedname>
        <briefdescription>
<para>String containing deprecation information; empty if model not deprecated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="116" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1GenericModel_1a99760888c06275d382ed3fd9852d7a43" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool nest::GenericModel&lt; ElementT &gt;::deprecation_warning_issued_</definition>
        <argsstring></argsstring>
        <name>deprecation_warning_issued_</name>
        <qualifiedname>nest::GenericModel::deprecation_warning_issued_</qualifiedname>
        <briefdescription>
<para>False until deprecation warning has been issued once. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="121" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1GenericModel_1ad8b660cb030d08cd83b5622c4fc0e8a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GenericModel&lt; ElementT &gt;::GenericModel</definition>
        <argsstring>(const std::string &amp;, const std::string &amp;deprecation_info)</argsstring>
        <name>GenericModel</name>
        <qualifiedname>nest::GenericModel::GenericModel</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <defname>name</defname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>deprecation_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="47" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="125" bodyend="132"/>
        <references refid="classnest_1_1Model_1a3680de567f35d5c8f902f9a1b8278230" compoundref="model_8cpp" startline="49" endline="52">nest::Model::set_threads</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a4890535323eb25c428290351d3ee28e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::GenericModel&lt; ElementT &gt;::GenericModel</definition>
        <argsstring>(const GenericModel &amp;, const std::string &amp;)</argsstring>
        <name>GenericModel</name>
        <qualifiedname>nest::GenericModel::GenericModel</qualifiedname>
        <param>
          <type>const <ref refid="classnest_1_1GenericModel" kindref="compound">GenericModel</ref> &amp;</type>
          <defname>oldmod</defname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <defname>newname</defname>
        </param>
        <briefdescription>
<para>Create copy of model with new name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="52" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="135" bodyend="143"/>
        <references refid="classnest_1_1Model_1aa134e3dfda1ca349cd862099ac06495c" compoundref="model_8h" startline="200" endline="203">nest::Model::get_type_id</references>
        <references refid="classnest_1_1Model_1a3680de567f35d5c8f902f9a1b8278230" compoundref="model_8cpp" startline="49" endline="52">nest::Model::set_threads</references>
        <references refid="classnest_1_1Model_1a81d304c74b5f213778d397b91a9803dc" compoundref="model_8h" startline="194" endline="197">nest::Model::set_type_id</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1aab0a0d0c8550321afe166f52ffadc141" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1Model" kindref="compound">Model</ref> *</type>
        <definition>Model * nest::GenericModel&lt; ElementT &gt;::clone</definition>
        <argsstring>(const std::string &amp;) const override</argsstring>
        <name>clone</name>
        <qualifiedname>nest::GenericModel::clone</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a34a512feab634b0ab821bcd186cfcdea">clone</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <defname>newname</defname>
        </param>
        <briefdescription>
<para>Return pointer to cloned model with same name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="57" column="9" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1ae15d5977a8ae64a2ed036c2b51637331" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::GenericModel&lt; ElementT &gt;::has_proxies</definition>
        <argsstring>() override</argsstring>
        <name>has_proxies</name>
        <qualifiedname>nest::GenericModel::has_proxies</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a543b9f87792c1f7ad6078d855567d93a">has_proxies</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="59" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a82bd670919d883206eb16245c4ac85e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::GenericModel&lt; ElementT &gt;::one_node_per_process</definition>
        <argsstring>() override</argsstring>
        <name>one_node_per_process</name>
        <qualifiedname>nest::GenericModel::one_node_per_process</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a88fc1cc3b8ad741ca379ac1f4d32f3a9">one_node_per_process</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="60" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1aab14253559f8d35a88fb1a0e840e2657" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool nest::GenericModel&lt; ElementT &gt;::is_off_grid</definition>
        <argsstring>() override</argsstring>
        <name>is_off_grid</name>
        <qualifiedname>nest::GenericModel::is_off_grid</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a34418fd095a178c9db82ea080019c9ac">is_off_grid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="61" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a1502a82251357e9409365a32af56251e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::calibrate_time</definition>
        <argsstring>(const TimeConverter &amp;tc) override</argsstring>
        <name>calibrate_time</name>
        <qualifiedname>nest::GenericModel::calibrate_time</qualifiedname>
        <reimplements refid="classnest_1_1Model_1abb546e39bdb8588c0aa10bdd3e42f660">calibrate_time</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1TimeConverter" kindref="compound">TimeConverter</ref> &amp;</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="62" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1ace81185495d47ccd1d44e1b478ebee10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1a440736750ce9e902e6729a1cb2153e95" kindref="member">port</ref></type>
        <definition>port nest::GenericModel&lt; ElementT &gt;::send_test_event</definition>
        <argsstring>(Node &amp;, rport, synindex, bool) override</argsstring>
        <name>send_test_event</name>
        <qualifiedname>nest::GenericModel::send_test_event</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a0f41844c1484178aa2cd56564cfb96f9">send_test_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <defname>target</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1ac9ee368898d374e0f5df4fa748ccd79b" kindref="member">rport</ref></type>
          <defname>receptor</defname>
        </param>
        <param>
          <type><ref refid="namespacenest_1a2d283b4b36e5ee3b6f1d84b35c9ed475" kindref="member">synindex</ref></type>
          <defname>syn_id</defname>
        </param>
        <param>
          <type>bool</type>
          <defname>dummy_target</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The decision of whether one node can receive a certain event was originally in the node. But in the distributed case, it may be that you only have a proxy node and not he real thing. Thus, you need to be able to make this decision without having the node. Since the model now takes responsibility for a lot of general node properties, it was a natural place to put this function.</para>
</simplesect>
<ref refid="classnest_1_1Model_1a0f41844c1484178aa2cd56564cfb96f9" kindref="member">Model::send_test_event()</ref> is a forwarding function that calls <ref refid="classnest_1_1GenericModel_1ace81185495d47ccd1d44e1b478ebee10" kindref="member">send_test_event()</ref> from the prototype. Since proxies know the model they represent, they can now answer a call to check connection by referring back to the model. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="77" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a69fb2a33d21c2d2224e559b3ebcaed0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::sends_secondary_event</definition>
        <argsstring>(GapJunctionEvent &amp;ge) override</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::GenericModel::sends_secondary_event</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a6d8c7b66a530f0cdea7e148aed1439f1">sends_secondary_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1GapJunctionEvent" kindref="compound">GapJunctionEvent</ref> &amp;</type>
          <declname>ge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="79" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a2f326a21a02b39e4e8e9cb36a0297ade" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacenest_1ae09c68cd9f93a04713e7566dc7e732a2" kindref="member">SignalType</ref></type>
        <definition>nest::SignalType nest::GenericModel&lt; ElementT &gt;::sends_signal</definition>
        <argsstring>() const override</argsstring>
        <name>sends_signal</name>
        <qualifiedname>nest::GenericModel::sends_signal</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a63cef74468717e015ee9f34ca4b2edab">sends_signal</reimplements>
        <briefdescription>
<para>Check what type of signal this model is sending. </para>
        </briefdescription>
        <detaileddescription>
<para>Required so that proxynode can formward this call to model that in turn delegates the call to the underlying prototype. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="81" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1ab17ddf84e9aefb04601987dafd22874b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::sends_secondary_event</definition>
        <argsstring>(InstantaneousRateConnectionEvent &amp;re) override</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::GenericModel::sends_secondary_event</qualifiedname>
        <reimplements refid="classnest_1_1Model_1aa33cccc4bb86bba4a4845ec420948e66">sends_secondary_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1InstantaneousRateConnectionEvent" kindref="compound">InstantaneousRateConnectionEvent</ref> &amp;</type>
          <declname>re</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="83" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a90d332a82a74142415b4b04f2adbee7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::sends_secondary_event</definition>
        <argsstring>(DiffusionConnectionEvent &amp;de) override</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::GenericModel::sends_secondary_event</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a71e525d40c459e031f4515bb38d01bd1">sends_secondary_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DiffusionConnectionEvent" kindref="compound">DiffusionConnectionEvent</ref> &amp;</type>
          <declname>de</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="85" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a9bf95830039b1254bc333413ec0c53f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::sends_secondary_event</definition>
        <argsstring>(DelayedRateConnectionEvent &amp;re) override</argsstring>
        <name>sends_secondary_event</name>
        <qualifiedname>nest::GenericModel::sends_secondary_event</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a36c758e38b32defcf81042d1ba5731f9">sends_secondary_event</reimplements>
        <param>
          <type><ref refid="classnest_1_1DelayedRateConnectionEvent" kindref="compound">DelayedRateConnectionEvent</ref> &amp;</type>
          <declname>re</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="87" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1ad5a5aad367d63fda1698298616c520fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> const &amp;</type>
        <definition>Node const  &amp; nest::GenericModel&lt; ElementT &gt;::get_prototype</definition>
        <argsstring>() const override</argsstring>
        <name>get_prototype</name>
        <qualifiedname>nest::GenericModel::get_prototype</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a9cd4f8a7d36b5af324e8e5c67a017599">get_prototype</reimplements>
        <briefdescription>
<para>Return const reference to the prototype. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="89" column="14" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1af39f8234d641e6552b4553a7bff0c46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::set_model_id</definition>
        <argsstring>(int) override</argsstring>
        <name>set_model_id</name>
        <qualifiedname>nest::GenericModel::set_model_id</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a04633c49ed13bf0200288ee48872294d">set_model_id</reimplements>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Set the model id on the prototype. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="91" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1aa079b1dd50a24b4e8649e446e4618497" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int nest::GenericModel&lt; ElementT &gt;::get_model_id</definition>
        <argsstring>() override</argsstring>
        <name>get_model_id</name>
        <qualifiedname>nest::GenericModel::get_model_id</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a01a6830dc27a5a14e2dc5b570af662e9">get_model_id</reimplements>
        <briefdescription>
<para>Get the model id from the prototype. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="93" column="7" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a908cd2ad47c0d4338f3816cbe76e428f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::deprecation_warning</definition>
        <argsstring>(const std::string &amp;) override</argsstring>
        <name>deprecation_warning</name>
        <qualifiedname>nest::GenericModel::deprecation_warning</qualifiedname>
        <reimplements refid="classnest_1_1Model_1abf3f850cef6673cc3e252252ec14816a">deprecation_warning</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Issue deprecation warning on first call if model is deprecated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>calling</parametername>
</parameternamelist>
<parameterdescription>
<para>function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="95" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel_impl.h" bodystart="37" bodyend="50"/>
        <references refid="logging_8h_1a4fb9f400c7eade44c47bea4b934d580f" compoundref="logging_8h" startline="29">LOG</references>
        <references refid="namespacenest_1a17a14d5aa7e8d94ec67eefc2b148eb72a8380e794cc143ae748fc187cba9b4648" compoundref="logging_8h" startline="56">nest::M_DEPRECATED</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1GenericModel_1a56df8f829f2c148f52b00e4e0798ced7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::GenericModel&lt; ElementT &gt;::set_status_</definition>
        <argsstring>(DictionaryDatum) override</argsstring>
        <name>set_status_</name>
        <qualifiedname>nest::GenericModel::set_status_</qualifiedname>
        <reimplements refid="classnest_1_1Model_1acfde938ee82413d9e67b3d81d22f8282">set_status_</reimplements>
        <param>
          <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref></type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="98" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a304997bf64c8ca627f7aa17b249d4a71" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="dictdatum_8h_1a4a4d8eba002ed1473f9f196598b268bc" kindref="member">DictionaryDatum</ref></type>
        <definition>DictionaryDatum nest::GenericModel&lt; ElementT &gt;::get_status_</definition>
        <argsstring>() override</argsstring>
        <name>get_status_</name>
        <qualifiedname>nest::GenericModel::get_status_</qualifiedname>
        <reimplements refid="classnest_1_1Model_1ae73d6149ca61a2e446fcb935d183c68e">get_status_</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="99" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="239" bodyend="244"/>
        <references refid="namespacenest_1_1names_1a9e0b266aaf0efd814a605fed32f89399" compoundref="nest__names_8h" startline="189">nest::names::elementsize</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a16ddbcc6dadaa5df1e9d331306130fbc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t nest::GenericModel&lt; ElementT &gt;::get_element_size</definition>
        <argsstring>() const override</argsstring>
        <name>get_element_size</name>
        <qualifiedname>nest::GenericModel::get_element_size</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a3a1c3d3ad388f2c9166bcae18277c8c9">get_element_size</reimplements>
        <briefdescription>
<para>Return the size of the prototype. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="101" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1GenericModel_1a7a77a96d0dfe9242466022ff0a08ef53" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classnest_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node * nest::GenericModel&lt; ElementT &gt;::create_</definition>
        <argsstring>() override</argsstring>
        <name>create_</name>
        <qualifiedname>nest::GenericModel::create_</qualifiedname>
        <reimplements refid="classnest_1_1Model_1a21ed9a3e5f1ef0b4574a343d519d3578">create_</reimplements>
        <briefdescription>
<para>Call placement new on the supplied memory position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="106" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="154" bodyend="158"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic <ref refid="classnest_1_1Model" kindref="compound">Model</ref> template. </para>
    </briefdescription>
    <detaileddescription>
<para>The template <ref refid="classnest_1_1GenericModel" kindref="compound">GenericModel</ref> should be used as base class for custom model classes. It already includes the element factory functionality, as well as a pool based memory manager, so that the user can concentrate on the &quot;real&quot; model aspects. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>nest::GenericModel&lt; ElementT &gt;</label>
        <link refid="classnest_1_1GenericModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Model</label>
        <link refid="classnest_1_1Model"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>nest::GenericModel&lt; ElementT &gt;</label>
        <link refid="classnest_1_1GenericModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Model</label>
        <link refid="classnest_1_1Model"/>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" line="44" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/genericmodel.h" bodystart="45" bodyend="122"/>
    <listofallmembers>
      <member refid="classnest_1_1GenericModel_1a1502a82251357e9409365a32af56251e" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Model_1afdd10a4ae2d559c66a393c677a588b51" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>clear</name></member>
      <member refid="classnest_1_1GenericModel_1aab0a0d0c8550321afe166f52ffadc141" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>clone</name></member>
      <member refid="classnest_1_1Model_1ac7ab9fb3c18ee5691918ea14672e6e33" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>create</name></member>
      <member refid="classnest_1_1GenericModel_1a7a77a96d0dfe9242466022ff0a08ef53" prot="private" virt="virtual"><scope>nest::GenericModel</scope><name>create_</name></member>
      <member refid="classnest_1_1GenericModel_1a54c0b4450ab067b0df30bfcee8d75fce" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>deprecation_info_</name></member>
      <member refid="classnest_1_1GenericModel_1a908cd2ad47c0d4338f3816cbe76e428f" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1GenericModel_1a99760888c06275d382ed3fd9852d7a43" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>deprecation_warning_issued_</name></member>
      <member refid="classnest_1_1GenericModel_1ad8b660cb030d08cd83b5622c4fc0e8a2" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>GenericModel</name></member>
      <member refid="classnest_1_1GenericModel_1a4890535323eb25c428290351d3ee28e7" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>GenericModel</name></member>
      <member refid="classnest_1_1GenericModel_1a16ddbcc6dadaa5df1e9d331306130fbc" prot="private" virt="virtual"><scope>nest::GenericModel</scope><name>get_element_size</name></member>
      <member refid="classnest_1_1GenericModel_1aa079b1dd50a24b4e8649e446e4618497" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Model_1a44497c5d485772c2c527fbc2cac1bfdd" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>get_name</name></member>
      <member refid="classnest_1_1GenericModel_1ad5a5aad367d63fda1698298616c520fe" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>get_prototype</name></member>
      <member refid="group__status__interface_1ga6b9f905cffe67e97a38715757cd31779" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>get_status</name></member>
      <member refid="classnest_1_1GenericModel_1a304997bf64c8ca627f7aa17b249d4a71" prot="private" virt="virtual"><scope>nest::GenericModel</scope><name>get_status_</name></member>
      <member refid="classnest_1_1Model_1aa134e3dfda1ca349cd862099ac06495c" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>get_type_id</name></member>
      <member refid="classnest_1_1GenericModel_1ae15d5977a8ae64a2ed036c2b51637331" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1GenericModel_1aab14253559f8d35a88fb1a0e840e2657" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Model_1a01aab6710f6f01f16dadb18955cb9d7e" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>mem_available</name></member>
      <member refid="classnest_1_1Model_1ad669d7322cae68a0ff2c392ec680b505" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>mem_capacity</name></member>
      <member refid="classnest_1_1Model_1a559c0e798d784a05c1c9efabc854471e" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>memory_</name></member>
      <member refid="classnest_1_1Model_1a2bd42999577fcb19a8b95e77674adc83" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>Model</name></member>
      <member refid="classnest_1_1Model_1a46d3535a83b3c65b79ed0a0163de0c44" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>Model</name></member>
      <member refid="classnest_1_1Model_1a9cb77c1e9e4ebe42eed089b96e175e24" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>name_</name></member>
      <member refid="classnest_1_1GenericModel_1a82bd670919d883206eb16245c4ac85e4" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1GenericModel_1a8ab76a276b64da272cf5b87d3af18760" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>proto_</name></member>
      <member refid="classnest_1_1Model_1a58d8e50642c26bd89664fa0e3887e8fa" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>reserve_additional</name></member>
      <member refid="classnest_1_1GenericModel_1ace81185495d47ccd1d44e1b478ebee10" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>send_test_event</name></member>
      <member refid="classnest_1_1GenericModel_1a69fb2a33d21c2d2224e559b3ebcaed0d" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1GenericModel_1ab17ddf84e9aefb04601987dafd22874b" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1GenericModel_1a90d332a82a74142415b4b04f2adbee7f" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1GenericModel_1a9bf95830039b1254bc333413ec0c53f4" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1GenericModel_1a2f326a21a02b39e4e8e9cb36a0297ade" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1GenericModel_1af39f8234d641e6552b4553a7bff0c46c" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>set_model_id</name></member>
      <member refid="group__status__interface_1ga320b94046161025ff8a388eec127392f" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>set_status</name></member>
      <member refid="classnest_1_1GenericModel_1a56df8f829f2c148f52b00e4e0798ced7" prot="private" virt="virtual"><scope>nest::GenericModel</scope><name>set_status_</name></member>
      <member refid="classnest_1_1Model_1a3680de567f35d5c8f902f9a1b8278230" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>set_threads</name></member>
      <member refid="classnest_1_1Model_1a5e51f48ea7d5ec50c32a1ab57ed57080" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>set_threads_</name></member>
      <member refid="classnest_1_1Model_1a81d304c74b5f213778d397b91a9803dc" prot="public" virt="non-virtual"><scope>nest::GenericModel</scope><name>set_type_id</name></member>
      <member refid="classnest_1_1Model_1afaedf8964aa194b484193cf8f06e2c5b" prot="private" virt="non-virtual"><scope>nest::GenericModel</scope><name>type_id_</name></member>
      <member refid="classnest_1_1Model_1ab7aa38460a7562dc208a3487c8a682ca" prot="public" virt="virtual"><scope>nest::GenericModel</scope><name>~Model</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
