<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classlockPTR" kind="class" language="C++" prot="public">
    <compoundname>lockPTR</compoundname>
    <derivedcompoundref refid="classlockPTRDatum" prot="public" virt="non-virtual">lockPTRDatum&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</derivedcompoundref>
    <derivedcompoundref refid="classlockPTRDatum" prot="public" virt="non-virtual">lockPTRDatum&lt; D, slt &gt;</derivedcompoundref>
    <includes refid="lockptr_8h" local="no">lockptr.h</includes>
    <innerclass refid="classlockPTR_1_1PointerObject" prot="private">lockPTR::PointerObject</innerclass>
    <templateparamlist>
      <param>
        <type>class D</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classlockPTR_1_1PointerObject" kindref="compound">PointerObject</ref> &gt;</type>
        <definition>std::shared_ptr&lt; PointerObject &gt; lockPTR&lt; D &gt;::obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <qualifiedname>lockPTR::obj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="158" column="19" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="158" bodyend="-1"/>
        <referencedby refid="classlockPTR_1af0b1814c7e7a3c73be409390a67969a9" compoundref="lockptr_8h" startline="311" endline="315">lockPTR&lt; D &gt;::deletable</referencedby>
        <referencedby refid="classlockPTR_1a9f7b9b8f5a379ae27f4ff31cdab611ad" compoundref="lockptr_8h" startline="218" endline="223">lockPTR&lt; D &gt;::get</referencedby>
        <referencedby refid="classlockPTR_1a98bbf66c05024b0d5e842e53c9fed3eb" compoundref="lockptr_8h" startline="304" endline="308">lockPTR&lt; D &gt;::islocked</referencedby>
        <referencedby refid="classlockPTR_1aa5bd01fb321778b9032285c7c061a93f" compoundref="lockptr_8h" startline="318" endline="322">lockPTR&lt; D &gt;::lock</referencedby>
        <referencedby refid="classlockPTR_1aef32ab3c38d295eeff823306910d9eb7" compoundref="lockptr_8h" startline="167" endline="171">lockPTR&lt; D &gt;::lockPTR</referencedby>
        <referencedby refid="classlockPTR_1ade7233c9cb744671a70a5ca12f443eab" compoundref="lockptr_8h" startline="267" endline="270">lockPTR&lt; D &gt;::operator not</referencedby>
        <referencedby refid="classlockPTR_1aa9be143c1b7ccb7dc00db4dc06fbec3a" compoundref="lockptr_8h" startline="290" endline="293">lockPTR&lt; D &gt;::operator!=</referencedby>
        <referencedby refid="classlockPTR_1a1f44b899c2fde4de610fd530fa17e0b0" compoundref="lockptr_8h" startline="251" endline="256">lockPTR&lt; D &gt;::operator*</referencedby>
        <referencedby refid="classlockPTR_1adbb320d466202e9232706ea900bb22c0" compoundref="lockptr_8h" startline="235" endline="240">lockPTR&lt; D &gt;::operator-&gt;</referencedby>
        <referencedby refid="classlockPTR_1abaff4386ca13149487bad5d20f135e85" compoundref="lockptr_8h" startline="191" endline="199">lockPTR&lt; D &gt;::operator=</referencedby>
        <referencedby refid="classlockPTR_1ad2c2a1f38ec8b669b0581681cee74667" compoundref="lockptr_8h" startline="284" endline="287">lockPTR&lt; D &gt;::operator==</referencedby>
        <referencedby refid="classlockPTR_1a08984bae832803026b2ab12d960658db" compoundref="lockptr_8h" startline="339" endline="342">lockPTR&lt; D &gt;::references</referencedby>
        <referencedby refid="classlockPTR_1a25301a41a012d4e4a9daf42596f5e71e" compoundref="lockptr_8h" startline="325" endline="329">lockPTR&lt; D &gt;::unlock</referencedby>
        <referencedby refid="classlockPTR_1a0b8f1e953c32f47296c2b3491d860a48" compoundref="lockptr_8h" startline="297" endline="301">lockPTR&lt; D &gt;::valid</referencedby>
        <referencedby refid="classlockPTR_1a720470568cf88ac3ea0dbb79741e8098" compoundref="lockptr_8h" startline="185" endline="188">lockPTR&lt; D &gt;::~lockPTR</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classlockPTR_1aef32ab3c38d295eeff823306910d9eb7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lockPTR&lt; D &gt;::lockPTR</definition>
        <argsstring>(D *p=nullptr)</argsstring>
        <name>lockPTR</name>
        <qualifiedname>lockPTR::lockPTR</qualifiedname>
        <param>
          <type>D *</type>
          <declname>p</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="167" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="167" bodyend="171"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a07c5b029ab3d4d4e74969e10fa0c1aa8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lockPTR&lt; D &gt;::lockPTR</definition>
        <argsstring>(D &amp;p_o)</argsstring>
        <name>lockPTR</name>
        <qualifiedname>lockPTR::lockPTR</qualifiedname>
        <param>
          <type>D &amp;</type>
          <declname>p_o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="173" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="173" bodyend="177"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ae1118f4a0c02ba5dc47185c37101c5c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lockPTR&lt; D &gt;::lockPTR</definition>
        <argsstring>(const lockPTR&lt; D &gt; &amp;spd)</argsstring>
        <name>lockPTR</name>
        <qualifiedname>lockPTR::lockPTR</qualifiedname>
        <param>
          <type>const <ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt; &amp;</type>
          <declname>spd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="179" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="179" bodyend="183"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a720470568cf88ac3ea0dbb79741e8098" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual lockPTR&lt; D &gt;::~lockPTR</definition>
        <argsstring>()</argsstring>
        <name>~lockPTR</name>
        <qualifiedname>lockPTR::~lockPTR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="185" column="11" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="185" bodyend="188"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1abaff4386ca13149487bad5d20f135e85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt;</type>
        <definition>lockPTR&lt; D &gt; lockPTR&lt; D &gt;::operator=</definition>
        <argsstring>(const lockPTR&lt; D &gt; &amp;spd)</argsstring>
        <name>operator=</name>
        <qualifiedname>lockPTR::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt; &amp;</type>
          <declname>spd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="191" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="191" bodyend="199"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ab0032e3e5319585585f2c48081dec437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt;</type>
        <definition>lockPTR&lt; D &gt; lockPTR&lt; D &gt;::operator=</definition>
        <argsstring>(D &amp;s)</argsstring>
        <name>operator=</name>
        <qualifiedname>lockPTR::operator=</qualifiedname>
        <param>
          <type>D &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="202" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="202" bodyend="207"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a256ee6b685f3cdc3d7f9493773de077b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt;</type>
        <definition>lockPTR&lt; D &gt; lockPTR&lt; D &gt;::operator=</definition>
        <argsstring>(D const &amp;s)</argsstring>
        <name>operator=</name>
        <qualifiedname>lockPTR::operator=</qualifiedname>
        <param>
          <type>D const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="210" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="210" bodyend="215"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a9f7b9b8f5a379ae27f4ff31cdab611ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D *</type>
        <definition>D * lockPTR&lt; D &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>lockPTR::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="218" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="218" bodyend="223"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
        <referencedby refid="classStrFunction_1a06a7bd24eec85681ab4907ebb18ec909" compoundref="sli__io_8cc" startline="488" endline="532">StrFunction::execute</referencedby>
        <referencedby refid="classCloseistreamFunction_1afdc4747eb2c3320eb2d2d9b5588854b9" compoundref="sli__io_8cc" startline="755" endline="794">CloseistreamFunction::execute</referencedby>
        <referencedby refid="classCloseostreamFunction_1a224914523097a41793a5ffc641df69a9" compoundref="sli__io_8cc" startline="798" endline="841">CloseostreamFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegexecFunction_1a758ff72802b6e21876dddb2de99cf2f5" compoundref="sliregexp_8cc" startline="168" endline="214">RegexpModule::RegexecFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegerrorFunction_1af18a480fa01f15cbf5331b922351f48f" compoundref="sliregexp_8cc" startline="142" endline="165">RegexpModule::RegerrorFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a3b9ca9b26d0b75044ca4c7d550f92567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D *</type>
        <definition>D * lockPTR&lt; D &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>lockPTR::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="226" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="226" bodyend="232"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1adbb320d466202e9232706ea900bb22c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>D *</type>
        <definition>D * lockPTR&lt; D &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>lockPTR::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="235" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="235" bodyend="240"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a632bd8921672ce001e837fd2e1b9b2d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D *</type>
        <definition>D * lockPTR&lt; D &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <qualifiedname>lockPTR::operator-&gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="243" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="243" bodyend="248"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a1f44b899c2fde4de610fd530fa17e0b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>D &amp;</type>
        <definition>D &amp; lockPTR&lt; D &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <qualifiedname>lockPTR::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="251" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="251" bodyend="256"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ac28b5f0804f3053b167108bcfc13cf35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const D &amp;</type>
        <definition>const D &amp; lockPTR&lt; D &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <qualifiedname>lockPTR::operator*</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="259" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="259" bodyend="263"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ade7233c9cb744671a70a5ca12f443eab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::operator not</definition>
        <argsstring>() const</argsstring>
        <name>operator not</name>
        <qualifiedname>lockPTR::operator not</qualifiedname>
        <briefdescription>
<para>&lt; returns true if and only if not obj-&gt;pointee </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="267" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="267" bodyend="270"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ad2c2a1f38ec8b669b0581681cee74667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::operator==</definition>
        <argsstring>(const lockPTR&lt; D &gt; &amp;p) const</argsstring>
        <name>operator==</name>
        <qualifiedname>lockPTR::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="284" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="284" bodyend="287"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
        <referencedby refid="classlockPTRDatum_1ab26e9425742a805f7540d5ed7b83eaab" compoundref="lockptrdatum_8h" startline="123" endline="127">lockPTRDatum&lt; D, slt &gt;::equals</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1aa9be143c1b7ccb7dc00db4dc06fbec3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::operator!=</definition>
        <argsstring>(const lockPTR&lt; D &gt; &amp;p) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>lockPTR::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classlockPTR" kindref="compound">lockPTR</ref>&lt; D &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="290" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="290" bodyend="293"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a0b8f1e953c32f47296c2b3491d860a48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <qualifiedname>lockPTR::valid</qualifiedname>
        <briefdescription>
<para>&lt; returns true if and only if obj-&gt;pointee </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="297" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="297" bodyend="301"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
        <referencedby refid="classProcesses_1_1AvailableFunction_1a959990e5efbd5b6c04a3d99d3c58dc37" compoundref="processes_8cc" startline="628" endline="722">Processes::AvailableFunction::execute</referencedby>
        <referencedby refid="classProcesses_1_1SetNonblockFunction_1a858f9ce60266d03a0259c91b47ae082b" compoundref="processes_8cc" startline="837" endline="885">Processes::SetNonblockFunction::execute</referencedby>
        <referencedby refid="classPrintFunction_1a07f2d0cea89be29ff4ed7d865be34932" compoundref="sli__io_8cc" startline="553" endline="580">PrintFunction::execute</referencedby>
        <referencedby refid="classPrettyprintFunction_1ae14c18102851a38269b7beca0660b858" compoundref="sli__io_8cc" startline="599" endline="625">PrettyprintFunction::execute</referencedby>
        <referencedby refid="classCloseistreamFunction_1afdc4747eb2c3320eb2d2d9b5588854b9" compoundref="sli__io_8cc" startline="755" endline="794">CloseistreamFunction::execute</referencedby>
        <referencedby refid="classFlushFunction_1aaad54bad2651e4ba352fef4dbad61839" compoundref="sli__io_8cc" startline="632" endline="655">FlushFunction::execute</referencedby>
        <referencedby refid="classEndlFunction_1a0719edbb131482b3ee284a0bc0813b42" compoundref="sli__io_8cc" startline="670" endline="695">EndlFunction::execute</referencedby>
        <referencedby refid="classEndsFunction_1af7f52b0807266730c16d66d021ae15ae" compoundref="sli__io_8cc" startline="698" endline="723">EndsFunction::execute</referencedby>
        <referencedby refid="classEatwhiteFunction_1af9c5236c74051eb1073d4c2c2922c22e" compoundref="sli__io_8cc" startline="726" endline="751">EatwhiteFunction::execute</referencedby>
        <referencedby refid="classSetwFunction_1a639444f31137b44ccbc93777209dbc04" compoundref="sli__io_8cc" startline="844" endline="878">SetwFunction::execute</referencedby>
        <referencedby refid="classSetprecisionFunction_1a484f49c8c368728b9a6ce79faa8ad559" compoundref="sli__io_8cc" startline="895" endline="929">SetprecisionFunction::execute</referencedby>
        <referencedby refid="classIOSFixedFunction_1a0e62696df69769d63cfbf5e1764cb623" compoundref="sli__io_8cc" startline="932" endline="957">IOSFixedFunction::execute</referencedby>
        <referencedby refid="classIOSScientificFunction_1a2c692edc9585a09f1c7c82d2046126ed" compoundref="sli__io_8cc" startline="960" endline="985">IOSScientificFunction::execute</referencedby>
        <referencedby refid="classIOSDefaultFunction_1ac94c49cf89969dc55751d5e1f7504021" compoundref="sli__io_8cc" startline="988" endline="1013">IOSDefaultFunction::execute</referencedby>
        <referencedby refid="classIOSShowpointFunction_1adf961a408799f7e7c54141d92b7d060d" compoundref="sli__io_8cc" startline="1016" endline="1040">IOSShowpointFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowpointFunction_1a3678277749e51e41ca2f5ed5a0242f11" compoundref="sli__io_8cc" startline="1043" endline="1067">IOSNoshowpointFunction::execute</referencedby>
        <referencedby refid="classIOSShowbaseFunction_1a9fbf86437d23ed3b6e53badebe79af34" compoundref="sli__io_8cc" startline="1152" endline="1176">IOSShowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSNoshowbaseFunction_1a8313a3cd9219b554cfe797fad8861701" compoundref="sli__io_8cc" startline="1179" endline="1203">IOSNoshowbaseFunction::execute</referencedby>
        <referencedby refid="classIOSDecFunction_1a91d1da26c1d6c9d29c509cd3836e25b4" compoundref="sli__io_8cc" startline="1125" endline="1149">IOSDecFunction::execute</referencedby>
        <referencedby refid="classIOSHexFunction_1a28f05670f46b13ecae6772eac22d969a" compoundref="sli__io_8cc" startline="1098" endline="1122">IOSHexFunction::execute</referencedby>
        <referencedby refid="classIOSOctFunction_1ab8338043115f277e44e3ccce57f69b47" compoundref="sli__io_8cc" startline="1071" endline="1095">IOSOctFunction::execute</referencedby>
        <referencedby refid="classIOSLeftFunction_1afa121be648a22eb36e11bdfbc1c93f08" compoundref="sli__io_8cc" startline="1206" endline="1232">IOSLeftFunction::execute</referencedby>
        <referencedby refid="classIOSRightFunction_1a644df4fd3ec022a3afb9aa3968672de2" compoundref="sli__io_8cc" startline="1235" endline="1261">IOSRightFunction::execute</referencedby>
        <referencedby refid="classIOSInternalFunction_1a08e35b114543764590f42756af91d11d" compoundref="sli__io_8cc" startline="1264" endline="1290">IOSInternalFunction::execute</referencedby>
        <referencedby refid="classGetcFunction_1aa41d75645dc805c050a16eb7bed8ec29" compoundref="sli__io_8cc" startline="1305" endline="1332">GetcFunction::execute</referencedby>
        <referencedby refid="classGetsFunction_1a63741e5159275d306a2ef0a6ce879684" compoundref="sli__io_8cc" startline="1345" endline="1374">GetsFunction::execute</referencedby>
        <referencedby refid="classGetlineFunction_1a8771fd53ab7271b139b35cabdfbd1c50" compoundref="sli__io_8cc" startline="1378" endline="1431">GetlineFunction::execute</referencedby>
        <referencedby refid="classIGoodFunction_1a355151f9a47f15fe3fbea1bfeadee5bc" compoundref="sli__io_8cc" startline="1434" endline="1473">IGoodFunction::execute</referencedby>
        <referencedby refid="classIClearFunction_1a990c48cc4088586150df536d873d2d1e" compoundref="sli__io_8cc" startline="1476" endline="1507">IClearFunction::execute</referencedby>
        <referencedby refid="classOClearFunction_1a74b14ccd534240951dc2da4cc0d54aa2" compoundref="sli__io_8cc" startline="1510" endline="1540">OClearFunction::execute</referencedby>
        <referencedby refid="classIFailFunction_1a8667515c9e6a69a7bdcd9e459e6fd21f" compoundref="sli__io_8cc" startline="1543" endline="1583">IFailFunction::execute</referencedby>
        <referencedby refid="classOGoodFunction_1ac51ac4d537d31b55820f339e75b0d612" compoundref="sli__io_8cc" startline="1587" endline="1625">OGoodFunction::execute</referencedby>
        <referencedby refid="classIEofFunction_1a96bb999b2b4af2938787791a3091fccd" compoundref="sli__io_8cc" startline="1628" endline="1666">IEofFunction::execute</referencedby>
        <referencedby refid="classOEofFunction_1a3981502575cdf5467ef5e21722a77893" compoundref="sli__io_8cc" startline="1670" endline="1708">OEofFunction::execute</referencedby>
        <referencedby refid="classIn__AvailFunction_1ad7231e2e9bf5d62e9d3c9413979b0b0b" compoundref="sli__io_8cc" startline="1729" endline="1757">In_AvailFunction::execute</referencedby>
        <referencedby refid="classReadDoubleFunction_1a521063b16d93a7f62e201d05b5366e0e" compoundref="sli__io_8cc" startline="1760" endline="1799">ReadDoubleFunction::execute</referencedby>
        <referencedby refid="classReadIntFunction_1ad377d00c3a38ee868885f3dba639a68e" compoundref="sli__io_8cc" startline="1802" endline="1841">ReadIntFunction::execute</referencedby>
        <referencedby refid="classReadWordFunction_1a5a1c212de7f15932e012067115d65930" compoundref="sli__io_8cc" startline="1855" endline="1886">ReadWordFunction::execute</referencedby>
        <referencedby refid="classIparseFunction_1a7d59b27525ce59b0612ff5165060ff1a" compoundref="slicontrol_8cc" startline="660" endline="689">IparseFunction::execute</referencedby>
        <referencedby refid="classPgetrusageFunction_1af3a6114a16c603ee7ff0335afcb52eae" compoundref="slicontrol_8cc" startline="1658" endline="1686">PgetrusageFunction::getinfo_</referencedby>
        <referencedby refid="classSLIStartup_1a419cfd2ff41cf0bc4b64576d3d98330d" compoundref="slistartup_8cc" startline="266" endline="436">SLIStartup::init</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a98bbf66c05024b0d5e842e53c9fed3eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::islocked</definition>
        <argsstring>() const</argsstring>
        <name>islocked</name>
        <qualifiedname>lockPTR::islocked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="304" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="304" bodyend="308"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1af0b1814c7e7a3c73be409390a67969a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool lockPTR&lt; D &gt;::deletable</definition>
        <argsstring>() const</argsstring>
        <name>deletable</name>
        <qualifiedname>lockPTR::deletable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="311" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="311" bodyend="315"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1aa5bd01fb321778b9032285c7c061a93f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lockPTR&lt; D &gt;::lock</definition>
        <argsstring>() const</argsstring>
        <name>lock</name>
        <qualifiedname>lockPTR::lock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="318" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="318" bodyend="322"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a25301a41a012d4e4a9daf42596f5e71e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lockPTR&lt; D &gt;::unlock</definition>
        <argsstring>() const</argsstring>
        <name>unlock</name>
        <qualifiedname>lockPTR::unlock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="325" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="325" bodyend="329"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
        <referencedby refid="classStrFunction_1a06a7bd24eec85681ab4907ebb18ec909" compoundref="sli__io_8cc" startline="488" endline="532">StrFunction::execute</referencedby>
        <referencedby refid="classCloseistreamFunction_1afdc4747eb2c3320eb2d2d9b5588854b9" compoundref="sli__io_8cc" startline="755" endline="794">CloseistreamFunction::execute</referencedby>
        <referencedby refid="classCloseostreamFunction_1a224914523097a41793a5ffc641df69a9" compoundref="sli__io_8cc" startline="798" endline="841">CloseostreamFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegexecFunction_1a758ff72802b6e21876dddb2de99cf2f5" compoundref="sliregexp_8cc" startline="168" endline="214">RegexpModule::RegexecFunction::execute</referencedby>
        <referencedby refid="classRegexpModule_1_1RegerrorFunction_1af18a480fa01f15cbf5331b922351f48f" compoundref="sliregexp_8cc" startline="142" endline="165">RegexpModule::RegerrorFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1ae9a9195ce48b6c379072102bfe9a15bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lockPTR&lt; D &gt;::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <qualifiedname>lockPTR::unlock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="332" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="332" bodyend="336"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      <memberdef kind="function" id="classlockPTR_1a08984bae832803026b2ab12d960658db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lockPTR&lt; D &gt;::references</definition>
        <argsstring>() const</argsstring>
        <name>references</name>
        <qualifiedname>lockPTR::references</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="339" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="339" bodyend="342"/>
        <references refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" compoundref="lockptr_8h" startline="158">lockPTR&lt; D &gt;::obj</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This template is the standard safe-pointer implementation of NEST. </para>
    </briefdescription>
    <detaileddescription>
<para>In order for this scheme to work smoothly, the user has to take some precautions:<orderedlist>
<listitem><para>each pointer should only be used ONCE to initialize a <ref refid="classlockPTR" kindref="compound">lockPTR</ref>.</para>
</listitem><listitem><para>The <ref refid="classlockPTR" kindref="compound">lockPTR</ref> assumes that there are no other access points to the protected pointer.</para>
</listitem><listitem><para>The <ref refid="classlockPTR" kindref="compound">lockPTR</ref> can freely be copied and passed between objects and functions.</para>
</listitem><listitem><para><ref refid="classlockPTR" kindref="compound">lockPTR</ref> objects should be used like the pointer to the object.</para>
</listitem><listitem><para><ref refid="classlockPTR" kindref="compound">lockPTR</ref> objects should be passed as objects in function calls and function return values.</para>
</listitem><listitem><para>There should be no pointers to <ref refid="classlockPTR" kindref="compound">lockPTR</ref> objects.</para>
</listitem></orderedlist>
</para>
<para>Class <ref refid="classlockPTR" kindref="compound">lockPTR</ref> is designed to behave just like the pointer would. You can use the dereference operators (* and -&gt;) to access the protected object. However, the pointer itself is (with exceptions) never exposed to the user.</para>
<para>Since all access to the referenced object is done via a <ref refid="classlockPTR" kindref="compound">lockPTR</ref>, it is possible to maintain a count of all active references. If this count drops to zero, the referenced object can safely be destroyed. For dynamically allocated objects, delete is invoked on the stored pointer.</para>
<para>class <ref refid="classlockPTR" kindref="compound">lockPTR</ref> distinguishes between dynamically and automatically allocated objects by the way it is initialised:</para>
<para>If a <ref refid="classlockPTR" kindref="compound">lockPTR</ref> is initialised with a pointer, it assumes that the referenced object was dynamically allocated and will call the destructor once the reference count drops to zero.</para>
<para>If the <ref refid="classlockPTR" kindref="compound">lockPTR</ref> is initialised with a reference, it assumes that the object is automatically allocated. Thus, the <ref refid="classlockPTR" kindref="compound">lockPTR</ref> will NOT call the destructor.</para>
<para>In some cases it is necessary for a routine to actually get hold of the pointer, contained in the <ref refid="classlockPTR" kindref="compound">lockPTR</ref> object. This can be done by using the member function <ref refid="classlockPTR_1a9f7b9b8f5a379ae27f4ff31cdab611ad" kindref="member">get()</ref>. After the pointer has been exposed this way, the <ref refid="classlockPTR" kindref="compound">lockPTR</ref> will regard the referenced object as unsafe, since the user might call delete on the pointer. Thus, <ref refid="classlockPTR" kindref="compound">lockPTR</ref> will &quot;lock&quot; the referenced object and deny all further access. The object can be unlocked by calling the <ref refid="classlockPTR_1ae9a9195ce48b6c379072102bfe9a15bc" kindref="member">unlock()</ref> member.</para>
<para>Equality for lockPTRs is defined as identity of the data object. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>lockPTR&lt; D &gt;</label>
        <link refid="classlockPTR"/>
      </node>
      <node id="4">
        <label>lockPTR&lt; Dictionary &gt;</label>
        <link refid="classlockPTR"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Dictionary &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>lockPTRDatum&lt; D, slt &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>lockPTRDatum&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</label>
        <link refid="classlockPTRDatum"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Dictionary, &amp;SLIInterpreter::Dictionarytype &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" line="86" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/libnestutil/lockptr.h" bodystart="87" bodyend="343"/>
    <listofallmembers>
      <member refid="classlockPTR_1af0b1814c7e7a3c73be409390a67969a9" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>deletable</name></member>
      <member refid="classlockPTR_1a9f7b9b8f5a379ae27f4ff31cdab611ad" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>get</name></member>
      <member refid="classlockPTR_1a3b9ca9b26d0b75044ca4c7d550f92567" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>get</name></member>
      <member refid="classlockPTR_1a98bbf66c05024b0d5e842e53c9fed3eb" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>islocked</name></member>
      <member refid="classlockPTR_1aa5bd01fb321778b9032285c7c061a93f" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>lock</name></member>
      <member refid="classlockPTR_1aef32ab3c38d295eeff823306910d9eb7" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>lockPTR</name></member>
      <member refid="classlockPTR_1a07c5b029ab3d4d4e74969e10fa0c1aa8" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>lockPTR</name></member>
      <member refid="classlockPTR_1ae1118f4a0c02ba5dc47185c37101c5c0" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>lockPTR</name></member>
      <member refid="classlockPTR_1ae9f233d2653f97743cc47b62ea21f709" prot="private" virt="non-virtual"><scope>lockPTR</scope><name>obj</name></member>
      <member refid="classlockPTR_1ade7233c9cb744671a70a5ca12f443eab" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator not</name></member>
      <member refid="classlockPTR_1aa9be143c1b7ccb7dc00db4dc06fbec3a" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator!=</name></member>
      <member refid="classlockPTR_1a1f44b899c2fde4de610fd530fa17e0b0" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator*</name></member>
      <member refid="classlockPTR_1ac28b5f0804f3053b167108bcfc13cf35" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator*</name></member>
      <member refid="classlockPTR_1adbb320d466202e9232706ea900bb22c0" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator-&gt;</name></member>
      <member refid="classlockPTR_1a632bd8921672ce001e837fd2e1b9b2d5" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator-&gt;</name></member>
      <member refid="classlockPTR_1abaff4386ca13149487bad5d20f135e85" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator=</name></member>
      <member refid="classlockPTR_1ab0032e3e5319585585f2c48081dec437" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator=</name></member>
      <member refid="classlockPTR_1a256ee6b685f3cdc3d7f9493773de077b" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator=</name></member>
      <member refid="classlockPTR_1ad2c2a1f38ec8b669b0581681cee74667" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>operator==</name></member>
      <member refid="classlockPTR_1a08984bae832803026b2ab12d960658db" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>references</name></member>
      <member refid="classlockPTR_1a25301a41a012d4e4a9daf42596f5e71e" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>unlock</name></member>
      <member refid="classlockPTR_1ae9a9195ce48b6c379072102bfe9a15bc" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>unlock</name></member>
      <member refid="classlockPTR_1a0b8f1e953c32f47296c2b3491d860a48" prot="public" virt="non-virtual"><scope>lockPTR</scope><name>valid</name></member>
      <member refid="classlockPTR_1a720470568cf88ac3ea0dbb79741e8098" prot="public" virt="virtual"><scope>lockPTR</scope><name>~lockPTR</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
