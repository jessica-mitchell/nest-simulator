<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_structural_plasticity_node" kind="class" language="C++" prot="public">
    <compoundname>nest::StructuralPlasticityNode</compoundname>
    <basecompoundref refid="classnest_1_1_node" prot="public" virt="non-virtual">nest::Node</basecompoundref>
    <derivedcompoundref refid="classnest_1_1_archiving_node" prot="public" virt="non-virtual">nest::ArchivingNode</derivedcompoundref>
    <includes refid="structural__plasticity__node_8h" local="no">structural_plasticity_node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_structural_plasticity_node_1a62b1974824c28eabfbb4bc4cbcc1edeb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::Ca_t_</definition>
        <argsstring></argsstring>
        <name>Ca_t_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classnest_1_1_time" kindref="compound">Time</ref> of the last update of the Calcium concentration in ms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="144" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_structural_plasticity_node_1a5917ea5dc7f39ee46825a20faae4d49c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::Ca_minus_</definition>
        <argsstring></argsstring>
        <name>Ca_minus_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value of the calcium concentration [Ca2+] at Ca_t_.</para>
<para>Intracellular calcium concentration has a linear factor to mean electrical activity of 10^2, this means, for example, that a [Ca2+] of 0.2 is equivalent to a mean activity of 20 Hz. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="153" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_structural_plasticity_node_1a905ca4acf3665fca699c1cc91f2704f8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::tau_Ca_</definition>
        <argsstring></argsstring>
        <name>tau_Ca_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classnest_1_1_time" kindref="compound">Time</ref> constant for exponential decay of the intracellular calcium concentration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="159" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_structural_plasticity_node_1a61c0b9825270fab375fc4c722cfaec6b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::beta_Ca_</definition>
        <argsstring></argsstring>
        <name>beta_Ca_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increase in calcium concentration [Ca2+] for each spike of the neuron </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="164" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_structural_plasticity_node_1afb62fb32d42235fb404d919fdf1865e8" prot="private" static="no" mutable="no">
        <type>std::map&lt; Name, <ref refid="classnest_1_1_synaptic_element" kindref="compound">SynapticElement</ref> &gt;</type>
        <definition>std::map&lt; Name, SynapticElement &gt; nest::StructuralPlasticityNode::synaptic_elements_map_</definition>
        <argsstring></argsstring>
        <name>synaptic_elements_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map of the synaptic elements </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="169" column="12" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a1b21cac6a54b750cfb72a011cc226936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::StructuralPlasticityNode::StructuralPlasticityNode</definition>
        <argsstring>()</argsstring>
        <name>StructuralPlasticityNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para>
<para>Copy Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="55" column="3" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a64bcfbab69f9d53322f18896838c6c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::StructuralPlasticityNode::StructuralPlasticityNode</definition>
        <argsstring>(const StructuralPlasticityNode &amp;)</argsstring>
        <name>StructuralPlasticityNode</name>
        <param>
          <type>const <ref refid="classnest_1_1_structural_plasticity_node" kindref="compound">StructuralPlasticityNode</ref> &amp;</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="61" column="3" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1afb8ec0a74d457fd285665b3ff8077213" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::get_Ca_minus</definition>
        <argsstring>() const override</argsstring>
        <name>get_Ca_minus</name>
        <reimplements refid="group___s_p__functions_1gae46decb34ba3dc7f912fa6a691bb0de2">get_Ca_minus</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the current value of Ca_minus </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="67" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1af2415c16f2edd606035f497d6003c392" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::get_synaptic_elements</definition>
        <argsstring>(Name n) const override</argsstring>
        <name>get_synaptic_elements</name>
        <reimplements refid="group___s_p__functions_1ga9ba39ec217579e3ef23db9ae20479955">get_synaptic_elements</reimplements>
        <param>
          <type>Name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of synaptic element for the current <ref refid="classnest_1_1_node" kindref="compound">Node</ref> at Ca_t which corresponds to the time of the last spike. Return 0.0 if not overridden </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="76" column="10" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="147" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a893ba9023105eb3c68c988dc3f912d2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int nest::StructuralPlasticityNode::get_synaptic_elements_vacant</definition>
        <argsstring>(Name n) const override</argsstring>
        <name>get_synaptic_elements_vacant</name>
        <reimplements refid="group___s_p__functions_1ga058f999dd9dc5a26c98b0a0351c08707">get_synaptic_elements_vacant</reimplements>
        <param>
          <type>Name</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of synaptic elements of type n which are available for new synapse creation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="83" column="7" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="172" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a5708dead1beae2f0bccb87080356cd63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int nest::StructuralPlasticityNode::get_synaptic_elements_connected</definition>
        <argsstring>(Name n) const override</argsstring>
        <name>get_synaptic_elements_connected</name>
        <reimplements refid="group___s_p__functions_1ga7a47b88c558984889d90d5ce027787cf">get_synaptic_elements_connected</reimplements>
        <param>
          <type>Name</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the number of synaptic element of type n which are currently connected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="90" column="7" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="188" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a84df4d213b9f22e9dae6b26c8fd9905d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::map&lt; Name, double &gt;</type>
        <definition>std::map&lt; Name, double &gt; nest::StructuralPlasticityNode::get_synaptic_elements</definition>
        <argsstring>() const override</argsstring>
        <name>get_synaptic_elements</name>
        <reimplements refid="group___s_p__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20">get_synaptic_elements</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of all synaptic elements for the current <ref refid="classnest_1_1_node" kindref="compound">Node</ref> at time t Return an empty map if not overridden </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="96" column="12" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="204" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a74fc8e9d9ef49af9c53b35e19ee3ddd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::update_synaptic_elements</definition>
        <argsstring>(double t) override</argsstring>
        <name>update_synaptic_elements</name>
        <reimplements refid="group___s_p__functions_1gaff1fa7703153b16816ad55eef791982c">update_synaptic_elements</reimplements>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the number of synaptic elements in the node depending on the dynamics described by the corresponding growth curve </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="103" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="218" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a0f11a1c88af75d6a51057d97fe1f6583" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::decay_synaptic_elements_vacant</definition>
        <argsstring>() override</argsstring>
        <name>decay_synaptic_elements_vacant</name>
        <reimplements refid="group___s_p__functions_1ga5242b7d1752a7981676852d1b70263b9">decay_synaptic_elements_vacant</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a certain portion of the vacant synaptic elements which are not in use </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="110" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="234" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a8fb547186b1ee49384fddeb4e268481d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::connect_synaptic_element</definition>
        <argsstring>(Name name, int n) override</argsstring>
        <name>connect_synaptic_element</name>
        <reimplements refid="group___s_p__functions_1gaa5b5f01608036752d816d1980c39cb87">connect_synaptic_element</reimplements>
        <param>
          <type>Name</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the number of connected synaptic elements by n </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="116" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="245" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1ab462ef1110549f1efb3b26f8e48f38d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::get_status</definition>
        <argsstring>(DictionaryDatum &amp;d) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="group__status__interface_1ga85f1a73dde2b60e4353429eb22c31bcf">get_status</reimplements>
        <reimplementedby refid="classnest_1_1_urbanczik_archiving_node_1a54cac2900fc5fc3d7b66568de52d8fda">get_status</reimplementedby>
        <param>
          <type>DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Export properties of the node by setting entries in the status dictionary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="118" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="54" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a024eac5832f6de6336014cac45b2ad10" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;d) override</argsstring>
        <name>set_status</name>
        <reimplements refid="group__status__interface_1ga9d7a4a3a64d03a4d7f6c5df87c80fe36">set_status</reimplements>
        <reimplementedby refid="classnest_1_1_urbanczik_archiving_node_1a1b118e0208155781e44cbb9ccdb91a87">set_status</reimplementedby>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change properties of the node according to the entries in the dictionary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary with named parameter settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="119" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="76" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a5b0318a17b8e2416f7904d00b3d4a830" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::StructuralPlasticityNode::get_tau_Ca</definition>
        <argsstring>() const</argsstring>
        <name>get_tau_Ca</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieve the current value of tau_Ca which defines the exponential decay constant of the intracellular calcium concentration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="125" column="10" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a7863bf5112644ce49ae8ea17e32dd1a8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::set_spiketime</definition>
        <argsstring>(Time const &amp;t_sp, double offset=0.0)</argsstring>
        <name>set_spiketime</name>
        <param>
          <type><ref refid="classnest_1_1_time" kindref="compound">Time</ref> const &amp;</type>
          <declname>t_sp</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offset</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>record spike history </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="132" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a0f0993c46786b805ba189b5778a1c524" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::StructuralPlasticityNode::clear_history</definition>
        <argsstring>()</argsstring>
        <name>clear_history</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clear spike history </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="138" column="8" bodyfile="nestkernel/structural_plasticity_node.cpp" bodystart="140" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1a9ba39ec217579e3ef23db9ae20479955" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>virtual double nest::Node::get_synaptic_elements</definition>
        <argsstring>(Name) const</argsstring>
        <name>get_synaptic_elements</name>
        <param>
          <type>Name</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of synaptic element for the current <ref refid="classnest_1_1_node" kindref="compound">Node</ref> at Ca_t which corresponds to the time of the last spike. Return 0.0 if not overridden </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="48" column="3" bodyfile="nestkernel/node.h" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_structural_plasticity_node_1af35fbeeb8459557ea3a5baf5c6fe7d20" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; Name, double &gt;</type>
        <definition>virtual std::map&lt; Name, double &gt; nest::Node::get_synaptic_elements</definition>
        <argsstring>() const</argsstring>
        <name>get_synaptic_elements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of all synaptic elements for the current <ref refid="classnest_1_1_node" kindref="compound">Node</ref> at time t Return an empty map if not overridden </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/structural_plasticity_node.h" line="48" column="3" bodyfile="nestkernel/node.h" bodystart="625" bodyend="628"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements functionality related to structural synaptic plasticity. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>nest::ClopathArchivingNode</label>
        <link refid="classnest_1_1_clopath_archiving_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1_node"/>
      </node>
      <node id="5">
        <label>nest::UrbanczikArchivingNode&lt; urbanczik_parameters &gt;</label>
        <link refid="classnest_1_1_urbanczik_archiving_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::StructuralPlasticityNode</label>
        <link refid="classnest_1_1_structural_plasticity_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::ArchivingNode</label>
        <link refid="classnest_1_1_archiving_node"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1_deprecation_warning"/>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1_node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::StructuralPlasticityNode</label>
        <link refid="classnest_1_1_structural_plasticity_node"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="nestkernel/structural_plasticity_node.h" line="46" column="1" bodyfile="nestkernel/structural_plasticity_node.h" bodystart="47" bodyend="170"/>
    <listofallmembers>
      <member refid="classnest_1_1_structural_plasticity_node_1a61c0b9825270fab375fc4c722cfaec6b" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>beta_Ca_</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a5917ea5dc7f39ee46825a20faae4d49c" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>Ca_minus_</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a62b1974824c28eabfbb4bc4cbcc1edeb" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>Ca_t_</name></member>
      <member refid="classnest_1_1_node_1a93e4da4ded11807b07c5f2428401bbc7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a0f0993c46786b805ba189b5778a1c524" prot="protected" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>clear_history</name></member>
      <member refid="classnest_1_1_node_1ad88edfd6f881579328b545d88372807d" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>clone</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a8fb547186b1ee49384fddeb4e268481d" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>connect_synaptic_element</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a0f11a1c88af75d6a51057d97fe1f6583" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1_node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1_node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>downcast</name></member>
      <member refid="classnest_1_1_node_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>event_hook</name></member>
      <member refid="classnest_1_1_node_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>event_hook</name></member>
      <member refid="classnest_1_1_node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>finalize</name></member>
      <member refid="classnest_1_1_node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_C_m</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1afb8ec0a74d457fd285665b3ff8077213" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1_node_1a59915001de69fc05d8a155da42a89e56" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1_node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1_node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_history</name></member>
      <member refid="classnest_1_1_node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1_node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1_node_1a25b2b6f159ffa8834cd966b3802f2fef" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1_node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1_node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1_node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_model_</name></member>
      <member refid="classnest_1_1_node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1_node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_name</name></member>
      <member refid="classnest_1_1_node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_nc</name></member>
      <member refid="classnest_1_1_node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1ab462ef1110549f1efb3b26f8e48f38d5" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_status</name></member>
      <member refid="classnest_1_1_node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1af2415c16f2edd606035f497d6003c392" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a84df4d213b9f22e9dae6b26c8fd9905d" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a9ba39ec217579e3ef23db9ae20479955" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1af35fbeeb8459557ea3a5baf5c6fe7d20" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a5708dead1beae2f0bccb87080356cd63" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a893ba9023105eb3c68c988dc3f912d2f" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a5b0318a17b8e2416f7904d00b3d4a830" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_tau_Ca</name></member>
      <member refid="classnest_1_1_node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1_node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1_node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1_node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1_node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_thread</name></member>
      <member refid="classnest_1_1_node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1_node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1_node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>get_vp</name></member>
      <member refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1_node_1a3cadfe2698c39c5fd327f5d70d0b8adf" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1_node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>init</name></member>
      <member refid="classnest_1_1_node_1a5881b951d112d2c408865d080287f453" prot="protected" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1_node_1a048ed537ecbe30cb98950a077106b0ef" prot="protected" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>init_state_</name></member>
      <member refid="classnest_1_1_node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1_node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1_node_1acaf132bbee717313ffbc86fd291667c9" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1_node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1_node_1ac6e5bca87246812225ab04af4fd40df2" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1_node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>Node</name></member>
      <member refid="classnest_1_1_node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>Node</name></member>
      <member refid="classnest_1_1_node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1_node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1_node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1_node_1ad51550af656588536bcdf5afecdbf788" prot="public" virt="pure-virtual"><scope>nest::StructuralPlasticityNode</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1_node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>print_network</name></member>
      <member refid="classnest_1_1_node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1_node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1_node_1a60608af8d6238b96071a9f64544ec5e3" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1_node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1_node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1_node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1_node_1af1edec8d44fc63df732b8ff58f0788bf" prot="protected" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1_node_1a7d4d7c594bd3cfbf892f040f248ac153" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1_node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1_node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a7863bf5112644ce49ae8ea17e32dd1a8" prot="protected" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_spiketime</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a024eac5832f6de6336014cac45b2ad10" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_status</name></member>
      <member refid="classnest_1_1_node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1_node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_thread</name></member>
      <member refid="classnest_1_1_node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1_node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>set_vp</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a1b21cac6a54b750cfb72a011cc226936" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>StructuralPlasticityNode</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a64bcfbab69f9d53322f18896838c6c80" prot="public" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>StructuralPlasticityNode</name></member>
      <member refid="classnest_1_1_node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1afb62fb32d42235fb404d919fdf1865e8" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>synaptic_elements_map_</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a905ca4acf3665fca699c1cc91f2704f8" prot="private" virt="non-virtual"><scope>nest::StructuralPlasticityNode</scope><name>tau_Ca_</name></member>
      <member refid="classnest_1_1_node_1a69f3767afe7e7d1bc5b141e777778fd5" prot="public" virt="pure-virtual"><scope>nest::StructuralPlasticityNode</scope><name>update</name></member>
      <member refid="classnest_1_1_structural_plasticity_node_1a74fc8e9d9ef49af9c53b35e19ee3ddd9" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1_node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1_node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::StructuralPlasticityNode</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
