<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classTypeTrie" kind="class" language="C++" prot="public">
    <compoundname>TypeTrie</compoundname>
    <includes refid="typechk_8h" local="no">typechk.h</includes>
    <innerclass refid="classTypeTrie_1_1TypeNode" prot="private">TypeTrie::TypeNode</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" prot="private" static="no" mutable="no">
        <type><ref refid="classTypeTrie_1_1TypeNode" kindref="compound">TypeNode</ref> *</type>
        <definition>TypeNode* TypeTrie::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <qualifiedname>TypeTrie::root</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="137" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="137" bodyend="-1"/>
        <referencedby refid="classTypeTrie_1af75874239a6274d6babfbcb64496da4a" compoundref="typechk_8cc" startline="287" endline="295">info</referencedby>
        <referencedby refid="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" compoundref="typechk_8cc" startline="208" endline="271">insert_move</referencedby>
        <referencedby refid="classTypeTrie_1a2cd6221bd50d0f4d9262edd4121bce23" compoundref="typechk_8h" startline="206" endline="257">lookup</referencedby>
        <referencedby refid="classTypeTrie_1ac30301312ec03fb3b499e59f9f22df05" compoundref="typechk_8h" startline="261" endline="264">operator==</referencedby>
        <referencedby refid="classTypeTrie_1ab3054ff54c173e6f523b2103704b3967" compoundref="typechk_8cc" startline="277" endline="284">toTokenArray</referencedby>
        <referencedby refid="classTypeTrie_1a841fb0a4c2064bee8ac858e55ebd7795" compoundref="typechk_8h" startline="150" endline="154">TypeTrie</referencedby>
        <referencedby refid="classTypeTrie_1ac2c99b9334436f7db4e278e8ab19381a" compoundref="typechk_8h" startline="186" endline="192">~TypeTrie</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classTypeTrie_1ab5a3623db41b0a42c07c9c21e1ba2ee8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTypeTrie_1_1TypeNode" kindref="compound">TypeNode</ref> *</type>
        <definition>TypeTrie::TypeNode * TypeTrie::getalternative</definition>
        <argsstring>(TypeNode *, const Name &amp;)</argsstring>
        <name>getalternative</name>
        <qualifiedname>TypeTrie::getalternative</qualifiedname>
        <param>
          <type><ref refid="classTypeTrie_1_1TypeNode" kindref="compound">TypeNode</ref> *</type>
          <defname>pos</defname>
        </param>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="140" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.cc" bodystart="160" bodyend="205"/>
        <references refid="classTypeTrie_1_1TypeNode_1a9d968feddbc117b6d3659fe40f06150e" compoundref="typechk_8h" startline="85">TypeTrie::TypeNode::alt</references>
        <references refid="namespacesli_1ab9a4380b334ceb97044ad963264037c8">sli::any</references>
        <references refid="classTypeTrie_1_1TypeNode_1a0d73c92d2756f2224beff0bc08f5a1bf" compoundref="typechk_8h" startline="83">TypeTrie::TypeNode::func</references>
        <references refid="classTypeTrie_1_1TypeNode_1a85cf5bd90762997f56b3fbae770b0aa0" compoundref="typechk_8h" startline="86">TypeTrie::TypeNode::next</references>
        <references refid="classToken_1aa787cbbbbb9c31a2ccec9cf7c0421785" compoundref="token_8h" startline="326" endline="329">Token::swap</references>
        <references refid="classTypeTrie_1_1TypeNode_1a9a86d3e8f5d56838e8c4914af130316e" compoundref="typechk_8h" startline="82">TypeTrie::TypeNode::type</references>
        <referencedby refid="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" compoundref="typechk_8cc" startline="208" endline="271">insert_move</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1ad35f33cb9ecd3f174b703e62c80a4696" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTypeTrie_1_1TypeNode" kindref="compound">TypeNode</ref> *</type>
        <definition>TypeTrie::TypeNode * TypeTrie::newnode</definition>
        <argsstring>(const TokenArray &amp;) const</argsstring>
        <name>newnode</name>
        <qualifiedname>TypeTrie::newnode</qualifiedname>
        <param>
          <type>const <ref refid="classTokenArray" kindref="compound">TokenArray</ref> &amp;</type>
          <defname>ta</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="142" column="12" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.cc" bodystart="119" bodyend="146"/>
        <references refid="classTypeTrie_1ad35f33cb9ecd3f174b703e62c80a4696" compoundref="typechk_8cc" startline="119" endline="146">newnode</references>
        <references refid="namespacesli_1a4fcea40a5a1b1949c4155f5bdfff1556">sli::object</references>
        <references refid="classTokenArray_1ad6bd1a13ab4eae2de7c05e311a3c4207" compoundref="tokenarray_8h" startline="159" endline="162">TokenArray::size</references>
        <referencedby refid="classTypeTrie_1ad35f33cb9ecd3f174b703e62c80a4696" compoundref="typechk_8cc" startline="119" endline="146">newnode</referencedby>
        <referencedby refid="classTypeTrie_1a841fb0a4c2064bee8ac858e55ebd7795" compoundref="typechk_8h" startline="150" endline="154">TypeTrie</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTypeTrie_1a7ebc094ac86a3dd3014039245ccae440" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TypeTrie::TypeTrie</definition>
        <argsstring>()</argsstring>
        <name>TypeTrie</name>
        <qualifiedname>TypeTrie::TypeTrie</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="145" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a841fb0a4c2064bee8ac858e55ebd7795" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TypeTrie::TypeTrie</definition>
        <argsstring>(const TokenArray &amp;ta)</argsstring>
        <name>TypeTrie</name>
        <qualifiedname>TypeTrie::TypeTrie</qualifiedname>
        <param>
          <type>const <ref refid="classTokenArray" kindref="compound">TokenArray</ref> &amp;</type>
          <declname>ta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="150" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="150" bodyend="154"/>
        <references refid="classTypeTrie_1ad35f33cb9ecd3f174b703e62c80a4696" compoundref="typechk_8cc" startline="119" endline="146">newnode</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a8b5d1c7c2c3e273a84e9aadb58040ec1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TypeTrie::TypeTrie</definition>
        <argsstring>(const TypeTrie &amp;tt)</argsstring>
        <name>TypeTrie</name>
        <qualifiedname>TypeTrie::TypeTrie</qualifiedname>
        <param>
          <type>const <ref refid="classTypeTrie" kindref="compound">TypeTrie</ref> &amp;</type>
          <declname>tt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="156" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="156" bodyend="163"/>
        <references refid="classTypeTrie_1_1TypeNode_1accaa4790e41d5a03c8aaf3a9ec3e2a46" compoundref="typechk_8h" startline="90" endline="93">TypeTrie::TypeNode::addreference</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1ac2c99b9334436f7db4e278e8ab19381a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TypeTrie::~TypeTrie</definition>
        <argsstring>()</argsstring>
        <name>~TypeTrie</name>
        <qualifiedname>TypeTrie::~TypeTrie</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="165" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="186" bodyend="192"/>
        <references refid="classTypeTrie_1_1TypeNode_1a1c7880afc4b1afb931e64681bfdbf26e" compoundref="typechk_8h" startline="96" endline="102">TypeTrie::TypeNode::removereference</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TypeTrie::insert_move</definition>
        <argsstring>(const TypeArray &amp;, Token &amp;)</argsstring>
        <name>insert_move</name>
        <qualifiedname>TypeTrie::insert_move</qualifiedname>
        <param>
          <type>const <ref refid="typearray_8h_1a6a6749dbe567b56ca734934e8418743e" kindref="member">TypeArray</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <param>
          <type><ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <defname>f</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="167" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.cc" bodystart="208" bodyend="271"/>
        <references refid="classTypeTrie_1_1TypeNode_1a0d73c92d2756f2224beff0bc08f5a1bf" compoundref="typechk_8h" startline="83">TypeTrie::TypeNode::func</references>
        <references refid="classTypeTrie_1ab5a3623db41b0a42c07c9c21e1ba2ee8" compoundref="typechk_8cc" startline="160" endline="205">getalternative</references>
        <references refid="classToken_1a2f61f1702fa6214de27ccff368df11f5" compoundref="token_8h" startline="232" endline="240">Token::move</references>
        <references refid="classTypeTrie_1_1TypeNode_1a85cf5bd90762997f56b3fbae770b0aa0" compoundref="typechk_8h" startline="86">TypeTrie::TypeNode::next</references>
        <references refid="namespacesli_1a4fcea40a5a1b1949c4155f5bdfff1556">sli::object</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
        <references refid="classTypeTrie_1_1TypeNode_1a9a86d3e8f5d56838e8c4914af130316e" compoundref="typechk_8h" startline="82">TypeTrie::TypeNode::type</references>
        <referencedby refid="classTypeTrie_1a806a7c6a546881ded4ddeebe6ef7bc51" compoundref="typechk_8h" startline="169" endline="175">insert</referencedby>
        <referencedby refid="classTrieDatum_1a4434dacc3445e33c78cbfaf6b1d84bbd" compoundref="triedatum_8h" startline="119" endline="122">TrieDatum::insert_move</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a806a7c6a546881ded4ddeebe6ef7bc51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void TypeTrie::insert</definition>
        <argsstring>(const TypeArray &amp;a, const Token &amp;t)</argsstring>
        <name>insert</name>
        <qualifiedname>TypeTrie::insert</qualifiedname>
        <param>
          <type>const <ref refid="typearray_8h_1a6a6749dbe567b56ca734934e8418743e" kindref="member">TypeArray</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="169" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="169" bodyend="175"/>
        <references refid="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" compoundref="typechk_8cc" startline="208" endline="271">insert_move</references>
        <referencedby refid="classTrieDatum_1af2774c67d12dfb76b542c7c85fd7749c" compoundref="triedatum_8h" startline="113" endline="116">TrieDatum::insert</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a2cd6221bd50d0f4d9262edd4121bce23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classToken" kindref="compound">Token</ref> &amp;</type>
        <definition>const Token &amp; TypeTrie::lookup</definition>
        <argsstring>(const TokenStack &amp;st) const</argsstring>
        <name>lookup</name>
        <qualifiedname>TypeTrie::lookup</qualifiedname>
        <param>
          <type>const <ref refid="classTokenStack" kindref="compound">TokenStack</ref> &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="177" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="206" bodyend="257"/>
        <references refid="classTypeTrie_1_1TypeNode_1a9d968feddbc117b6d3659fe40f06150e" compoundref="typechk_8h" startline="85">TypeTrie::TypeNode::alt</references>
        <references refid="classTypeTrie_1a15d2130f6cdfe54d442abf42925b2448" compoundref="typechk_8h" startline="200" endline="203">equals</references>
        <references refid="classTypeTrie_1_1TypeNode_1a0d73c92d2756f2224beff0bc08f5a1bf" compoundref="typechk_8h" startline="83">TypeTrie::TypeNode::func</references>
        <references refid="classDatum_1af7a6a22e2fadd9d3b75e15d7d4dc3998" compoundref="datum_8h" startline="172" endline="175">Datum::gettypename</references>
        <references refid="classTokenStack_1a9ca4715bf5e4dc851ca0b2c41eb6c586" compoundref="tokenstack_8h" startline="184" endline="187">TokenStack::load</references>
        <references refid="classTypeTrie_1_1TypeNode_1a85cf5bd90762997f56b3fbae770b0aa0" compoundref="typechk_8h" startline="86">TypeTrie::TypeNode::next</references>
        <references refid="namespacesli_1a4fcea40a5a1b1949c4155f5bdfff1556">sli::object</references>
        <references refid="classTokenStack_1ac861cc2282484dd2a27dd1304aa719a4" compoundref="tokenstack_8h" startline="127" endline="130">TokenStack::pick</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
        <references refid="classTypeTrie_1_1TypeNode_1a9a86d3e8f5d56838e8c4914af130316e" compoundref="typechk_8h" startline="82">TypeTrie::TypeNode::type</references>
        <referencedby refid="classTrieDatum_1ae78ed217994201e2545df49e7ba8c6c3" compoundref="triedatum_8h" startline="125" endline="128">TrieDatum::lookup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1ac30301312ec03fb3b499e59f9f22df05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TypeTrie::operator==</definition>
        <argsstring>(const TypeTrie &amp;) const</argsstring>
        <name>operator==</name>
        <qualifiedname>TypeTrie::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classTypeTrie" kindref="compound">TypeTrie</ref> &amp;</type>
          <defname>tt</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="179" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="261" bodyend="264"/>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1a15d2130f6cdfe54d442abf42925b2448" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TypeTrie::equals</definition>
        <argsstring>(const Name &amp;, const Name &amp;) const</argsstring>
        <name>equals</name>
        <qualifiedname>TypeTrie::equals</qualifiedname>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <defname>t1</defname>
        </param>
        <param>
          <type>const <ref refid="className" kindref="compound">Name</ref> &amp;</type>
          <defname>t2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="181" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="200" bodyend="203"/>
        <references refid="namespacesli_1ab9a4380b334ceb97044ad963264037c8">sli::any</references>
        <referencedby refid="classTypeTrie_1a2cd6221bd50d0f4d9262edd4121bce23" compoundref="typechk_8h" startline="206" endline="257">lookup</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1ab3054ff54c173e6f523b2103704b3967" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TypeTrie::toTokenArray</definition>
        <argsstring>(TokenArray &amp;) const</argsstring>
        <name>toTokenArray</name>
        <qualifiedname>TypeTrie::toTokenArray</qualifiedname>
        <param>
          <type><ref refid="classTokenArray" kindref="compound">TokenArray</ref> &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="182" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.cc" bodystart="277" bodyend="284"/>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
        <references refid="classTypeTrie_1_1TypeNode_1af742917a541b937a4fa42120c18a9ac5" compoundref="typechk_8cc" startline="68" endline="90">TypeTrie::TypeNode::toTokenArray</references>
        <referencedby refid="classCva__tFunction_1a7172118a9841754c5187150f57f4b9ef" compoundref="slitypecheck_8cc" startline="197" endline="215">Cva_tFunction::execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classTypeTrie_1af75874239a6274d6babfbcb64496da4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TypeTrie::info</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>info</name>
        <qualifiedname>TypeTrie::info</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="183" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.cc" bodystart="287" bodyend="295"/>
        <references refid="classTypeTrie_1_1TypeNode_1ad2e347ac48171be93d72ddd6ea46b254" compoundref="typechk_8cc" startline="93" endline="115">TypeTrie::TypeNode::info</references>
        <references refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" compoundref="typechk_8h" startline="137">root</references>
        <referencedby refid="classTrieInfoFunction_1a2c49a8f1ced0a3098ff798d8dcbd2e45" compoundref="slitypecheck_8cc" startline="218" endline="235">TrieInfoFunction::execute</referencedby>
        <referencedby refid="classTrieDatum_1aa00fd5efe8d4ae354b1ac35328317c4d" compoundref="triedatum_8h" startline="97" endline="102">TrieDatum::info</referencedby>
        <referencedby refid="classSLIInterpreter_1a1f76b68c473ace082511ddaa9eca5733" compoundref="interpret_8cc" startline="651" endline="715">SLIInterpreter::print_error</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>Datum</label>
        <link refid="classDatum"/>
        <childnode refid="6" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>action</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Name</label>
        <link refid="className"/>
      </node>
      <node id="7">
        <label>SLIFunction</label>
        <link refid="classSLIFunction"/>
      </node>
      <node id="6">
        <label>SLIType</label>
        <link refid="classSLIType"/>
        <childnode refid="3" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>defaultaction</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Token</label>
        <link refid="classToken"/>
        <childnode refid="5" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>TypeTrie</label>
        <link refid="classTypeTrie"/>
        <childnode refid="2" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>TypeTrie::TypeNode</label>
        <link refid="classTypeTrie_1_1TypeNode"/>
        <childnode refid="3" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>func</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>alt</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" line="73" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/sli/typechk.h" bodystart="74" bodyend="184"/>
    <listofallmembers>
      <member refid="classTypeTrie_1a15d2130f6cdfe54d442abf42925b2448" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>equals</name></member>
      <member refid="classTypeTrie_1ab5a3623db41b0a42c07c9c21e1ba2ee8" prot="private" virt="non-virtual"><scope>TypeTrie</scope><name>getalternative</name></member>
      <member refid="classTypeTrie_1af75874239a6274d6babfbcb64496da4a" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>info</name></member>
      <member refid="classTypeTrie_1a806a7c6a546881ded4ddeebe6ef7bc51" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>insert</name></member>
      <member refid="classTypeTrie_1a004f4e995e02879d9dfde8e80ad897d7" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>insert_move</name></member>
      <member refid="classTypeTrie_1a2cd6221bd50d0f4d9262edd4121bce23" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>lookup</name></member>
      <member refid="classTypeTrie_1ad35f33cb9ecd3f174b703e62c80a4696" prot="private" virt="non-virtual"><scope>TypeTrie</scope><name>newnode</name></member>
      <member refid="classTypeTrie_1ac30301312ec03fb3b499e59f9f22df05" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>operator==</name></member>
      <member refid="classTypeTrie_1a51ffbbc564927ad81a83cb047ed29957" prot="private" virt="non-virtual"><scope>TypeTrie</scope><name>root</name></member>
      <member refid="classTypeTrie_1ab3054ff54c173e6f523b2103704b3967" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>toTokenArray</name></member>
      <member refid="classTypeTrie_1a7ebc094ac86a3dd3014039245ccae440" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>TypeTrie</name></member>
      <member refid="classTypeTrie_1a841fb0a4c2064bee8ac858e55ebd7795" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>TypeTrie</name></member>
      <member refid="classTypeTrie_1a8b5d1c7c2c3e273a84e9aadb58040ec1" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>TypeTrie</name></member>
      <member refid="classTypeTrie_1ac2c99b9334436f7db4e278e8ab19381a" prot="public" virt="non-virtual"><scope>TypeTrie</scope><name>~TypeTrie</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
