<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="classnest_1_1RingBuffer" kind="class" language="C++" prot="public">
    <compoundname>nest::RingBuffer</compoundname>
    <includes refid="ring__buffer_8h" local="no">ring_buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; nest::RingBuffer::buffer_</definition>
        <argsstring></argsstring>
        <name>buffer_</name>
        <qualifiedname>nest::RingBuffer::buffer_</qualifiedname>
        <briefdescription>
<para>Buffered data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="139" column="15" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="139" bodyend="-1"/>
        <referencedby refid="classnest_1_1RingBuffer_1a7e42e6eb1df812ced409c37bcf599676" compoundref="ring__buffer_8h" startline="151" endline="154">add_value</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" compoundref="ring__buffer_8h" startline="190" endline="196">get_index_</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1ab779454b930d8a7ff3f85993b1eecb31" compoundref="ring__buffer_8h" startline="163" endline="174">get_value</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a1ae7973b9294c1d65c7b921f64361bf1" compoundref="ring__buffer_8h" startline="177" endline="187">get_value_wfr_update</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a2e1dffb39faa6f2d2ae11f052a3fc590" compoundref="ring__buffer_8h" startline="157" endline="160">set_value</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1ade57efa5a082172db71c88feb8a575f5" compoundref="ring__buffer_8h" startline="132" endline="135">size</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a03da7a397adfdc816c498f7337c494f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nest::RingBuffer::RingBuffer</definition>
        <argsstring>()</argsstring>
        <name>RingBuffer</name>
        <qualifiedname>nest::RingBuffer::RingBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="85" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a7e42e6eb1df812ced409c37bcf599676" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RingBuffer::add_value</definition>
        <argsstring>(const long offs, const double)</argsstring>
        <name>add_value</name>
        <qualifiedname>nest::RingBuffer::add_value</qualifiedname>
        <param>
          <type>const long</type>
          <declname>offs</declname>
        </param>
        <param>
          <type>const double</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>Add a value to the ring buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Arrival time relative to beginning of slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="92" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="151" bodyend="154"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <references refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" compoundref="ring__buffer_8h" startline="190" endline="196">get_index_</references>
        <referencedby refid="classnest_1_1cm__default_1a3b607b5ed036bfd77741be67af70fcca" compoundref="cm__default_8cpp" startline="346" endline="355">nest::cm_default::handle</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1a772b20b1cdad64b1fadc158464becfbc" compoundref="iaf__psc__alpha__multisynapse_8cpp" startline="406" endline="415">nest::iaf_psc_alpha_multisynapse::handle</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__delta__ps_1aee8bfd548fdf28d4b34d095ef1c8a1bc" compoundref="iaf__psc__delta__ps_8cpp" startline="521" endline="530">nest::iaf_psc_delta_ps::handle</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__exp__multisynapse_1aea6ac44f4b796e7fe9e09e77149801d3" compoundref="iaf__psc__exp__multisynapse_8cpp" startline="372" endline="381">nest::iaf_psc_exp_multisynapse::handle</referencedby>
        <referencedby refid="classnest_1_1parrot__neuron_1a07c5abe723443660ba1f843bb4d10e8d" compoundref="parrot__neuron_8cpp" startline="90" endline="98">nest::parrot_neuron::handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a2e1dffb39faa6f2d2ae11f052a3fc590" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RingBuffer::set_value</definition>
        <argsstring>(const long offs, const double)</argsstring>
        <name>set_value</name>
        <qualifiedname>nest::RingBuffer::set_value</qualifiedname>
        <param>
          <type>const long</type>
          <declname>offs</declname>
        </param>
        <param>
          <type>const double</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>Set a ring buffer entry to a given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Arrival time relative to beginning of slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="99" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="157" bodyend="160"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <references refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" compoundref="ring__buffer_8h" startline="190" endline="196">get_index_</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1ab779454b930d8a7ff3f85993b1eecb31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::RingBuffer::get_value</definition>
        <argsstring>(const long offs)</argsstring>
        <name>get_value</name>
        <qualifiedname>nest::RingBuffer::get_value</qualifiedname>
        <param>
          <type>const long</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Read one value from ring buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of element to read within slice. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="106" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="163" bodyend="174"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <references refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" compoundref="ring__buffer_8h" startline="190" endline="196">get_index_</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <referencedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1abf3e3db6ae5397e09c887b6337da65dc" compoundref="iaf__psc__alpha__multisynapse_8cpp" startline="325" endline="382">nest::iaf_psc_alpha_multisynapse::update</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__delta__ps_1a421e244e7bf1400a2326ee75054aeee5" compoundref="iaf__psc__delta__ps_8cpp" startline="258" endline="446">nest::iaf_psc_delta_ps::update</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__exp__multisynapse_1aa74239fcf47290e0f7b86e4403fbb84a" compoundref="iaf__psc__exp__multisynapse_8cpp" startline="300" endline="348">nest::iaf_psc_exp_multisynapse::update</referencedby>
        <referencedby refid="classnest_1_1parrot__neuron_1a999a763bac330b4d8bec83eec5aebf06" compoundref="parrot__neuron_8cpp" startline="53" endline="75">nest::parrot_neuron::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a1ae7973b9294c1d65c7b921f64361bf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::RingBuffer::get_value_wfr_update</definition>
        <argsstring>(const long offs)</argsstring>
        <name>get_value_wfr_update</name>
        <qualifiedname>nest::RingBuffer::get_value_wfr_update</qualifiedname>
        <param>
          <type>const long</type>
          <declname>offs</declname>
        </param>
        <briefdescription>
<para>Read one value from ring buffer without deleting it afterwards. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of element to read within slice. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="113" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="177" bodyend="187"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <references refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" compoundref="ring__buffer_8h" startline="190" endline="196">get_index_</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a7f132a77d1ed5e95b6a1912afb507877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RingBuffer::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>nest::RingBuffer::clear</qualifiedname>
        <briefdescription>
<para>Initialize the buffer with noughts. </para>
        </briefdescription>
        <detaileddescription>
<para>Also resizes the buffer if necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="119" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.cpp" bodystart="41" bodyend="46"/>
        <referencedby refid="classnest_1_1iaf__psc__alpha__multisynapse_1aa4f4ea478626536298dec22a3c8d08f9" compoundref="iaf__psc__alpha__multisynapse_8cpp" startline="274" endline="282">nest::iaf_psc_alpha_multisynapse::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1iaf__psc__exp__multisynapse_1a0f12672cd87a8f69c06389dc7eef7950" compoundref="iaf__psc__exp__multisynapse_8cpp" startline="259" endline="267">nest::iaf_psc_exp_multisynapse::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1parrot__neuron_1a5545a6df78e6adc71296a2e5f00ab56c" compoundref="parrot__neuron_8cpp" startline="46" endline="50">nest::parrot_neuron::init_buffers_</referencedby>
        <referencedby refid="classnest_1_1AMPA_1a1f4bd27733a2ef7276e87e8e369d0d9b" compoundref="cm__compartmentcurrents_8h" startline="146" endline="154">nest::AMPA::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1GABA_1a6753ee32b47d86d552e9ea64c6a01884" compoundref="cm__compartmentcurrents_8h" startline="203" endline="211">nest::GABA::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1NMDA_1a378ce9e2a02b0aafed531cd829f9ed18" compoundref="cm__compartmentcurrents_8h" startline="260" endline="268">nest::NMDA::pre_run_hook</referencedby>
        <referencedby refid="classnest_1_1AMPA__NMDA_1a629e86d153284b96eff590445d192e92" compoundref="cm__compartmentcurrents_8h" startline="332" endline="341">nest::AMPA_NMDA::pre_run_hook</referencedby>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a180dd269cf5fbbd9be531222867d711c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nest::RingBuffer::resize</definition>
        <argsstring>()</argsstring>
        <name>resize</name>
        <qualifiedname>nest::RingBuffer::resize</qualifiedname>
        <briefdescription>
<para>Resize the buffer according to max_thread and max_delay. </para>
        </briefdescription>
        <detaileddescription>
<para>New elements are filled with noughts. <simplesect kind="note"><para><ref refid="classnest_1_1RingBuffer_1a180dd269cf5fbbd9be531222867d711c" kindref="member">resize()</ref> has no effect if the buffer has the correct size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="126" column="8" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.cpp" bodystart="31" bodyend="38"/>
        <references refid="classnest_1_1KernelManager_1a0e27508a351fe5c17f42aea52caedb3e" compoundref="kernel__manager_8h" startline="247">nest::KernelManager::connection_manager</references>
        <references refid="classnest_1_1ConnectionManager_1a4c78cbb86f7d3fc1204395e31c20ef5a" compoundref="connection__manager_8h" startline="647" endline="650">nest::ConnectionManager::get_max_delay</references>
        <references refid="classnest_1_1ConnectionManager_1a9ea22ac11166a9e3ed07638a9dd8a51f" compoundref="connection__manager_8h" startline="641" endline="644">nest::ConnectionManager::get_min_delay</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1RingBuffer_1ade57efa5a082172db71c88feb8a575f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::RingBuffer::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nest::RingBuffer::size</qualifiedname>
        <briefdescription>
<para>Returns buffer size, for memory measurement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="132" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="132" bodyend="135"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <referencedby refid="classnest_1_1cm__default_1a35302cd9fdacbb227794dee7f7f536dc" compoundref="cm__default_8cpp" startline="228" endline="251">nest::cm_default::add_receptor_</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nest::RingBuffer::get_index_</definition>
        <argsstring>(const delay d) const</argsstring>
        <name>get_index_</name>
        <qualifiedname>nest::RingBuffer::get_index_</qualifiedname>
        <param>
          <type>const <ref refid="namespacenest_1a71a30fec90e57e114c45577d5294ce16" kindref="member">delay</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Obtain buffer index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>delivery delay for event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>index to buffer element into which event should be recorded. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="147" column="10" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="190" bodyend="196"/>
        <references refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" compoundref="ring__buffer_8h" startline="139">buffer_</references>
        <references refid="classnest_1_1KernelManager_1a39a94f269d1aeb7363ae5c33783b762e" compoundref="kernel__manager_8h" startline="249">nest::KernelManager::event_delivery_manager</references>
        <references refid="classnest_1_1EventDeliveryManager_1addcfcb9c29cd99d6b27d67a44e441b78" compoundref="event__delivery__manager_8h" startline="531" endline="538">nest::EventDeliveryManager::get_modulo</references>
        <references refid="namespacenest_1a235f64c89ddf8992424ea32a13149a3e" compoundref="kernel__manager_8h" startline="272" endline="275">nest::kernel</references>
        <referencedby refid="classnest_1_1RingBuffer_1a7e42e6eb1df812ced409c37bcf599676" compoundref="ring__buffer_8h" startline="151" endline="154">add_value</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1ab779454b930d8a7ff3f85993b1eecb31" compoundref="ring__buffer_8h" startline="163" endline="174">get_value</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a1ae7973b9294c1d65c7b921f64361bf1" compoundref="ring__buffer_8h" startline="177" endline="187">get_value_wfr_update</referencedby>
        <referencedby refid="classnest_1_1RingBuffer_1a2e1dffb39faa6f2d2ae11f052a3fc590" compoundref="ring__buffer_8h" startline="157" endline="160">set_value</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Buffer Layout. </para>
    </briefdescription>
    <detaileddescription>
<para>MODIFICATION 2005-06-19: The explanation below no longer holds if we allow direct delivery of events from devices such as the Poisson generator. The reasoning below applies only to events in the central queue, which are held in that queue until the beginning of the next slice, when system time has been advance from T to T + min_delay. Direct delivery events, in contrast are delivered when system time is still T. Their earliest delivery time is</para>
<para>min T_d = T + min_del</para>
<para>and the latest</para>
<para>max T_d = T + (min_del-1) + max_del = T + min_del + max_del - 1</para>
<para>Since we still need to keep the entries 0..min_del-1 for readout during the time slice beginning at T, we need a buffer with min_del+max_del elements.</para>
<para>SUPERSEEDED: Let S be the time at the beginning of the present time slice (from). All spikes arriving during this time slice, must have been emitted during the previous time slice, which started at S - min_del. Then, the earliest spike delivery time (compare <ref refid="classnest_1_1Time" kindref="compound">Time</ref> Memo) is</para>
<para>min T_d = S-min_del + min_del = S</para>
<para>and the latest</para>
<para>max T_d = S-1 + max_del = S + (max_del - 1)</para>
<para>Thus,</para>
<para>0 &lt;= S - T_d &lt;= max_del - 1</para>
<para>so that the ring buffer needs max_del elements.</para>
<para>Each field represents an entry in the vector. </para>
    </detaileddescription>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" line="82" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/ring_buffer.h" bodystart="83" bodyend="148"/>
    <listofallmembers>
      <member refid="classnest_1_1RingBuffer_1a7e42e6eb1df812ced409c37bcf599676" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>add_value</name></member>
      <member refid="classnest_1_1RingBuffer_1a64972649865844898a6dc260bfe80e7b" prot="private" virt="non-virtual"><scope>nest::RingBuffer</scope><name>buffer_</name></member>
      <member refid="classnest_1_1RingBuffer_1a7f132a77d1ed5e95b6a1912afb507877" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>clear</name></member>
      <member refid="classnest_1_1RingBuffer_1a1c4bb5296484e74e2d97532e56b95109" prot="private" virt="non-virtual"><scope>nest::RingBuffer</scope><name>get_index_</name></member>
      <member refid="classnest_1_1RingBuffer_1ab779454b930d8a7ff3f85993b1eecb31" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>get_value</name></member>
      <member refid="classnest_1_1RingBuffer_1a1ae7973b9294c1d65c7b921f64361bf1" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>get_value_wfr_update</name></member>
      <member refid="classnest_1_1RingBuffer_1a180dd269cf5fbbd9be531222867d711c" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>resize</name></member>
      <member refid="classnest_1_1RingBuffer_1a03da7a397adfdc816c498f7337c494f3" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>RingBuffer</name></member>
      <member refid="classnest_1_1RingBuffer_1a2e1dffb39faa6f2d2ae11f052a3fc590" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>set_value</name></member>
      <member refid="classnest_1_1RingBuffer_1ade57efa5a082172db71c88feb8a575f5" prot="public" virt="non-virtual"><scope>nest::RingBuffer</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
