<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike" kind="class" language="C++" prot="public">
    <compoundname>nest::MPIManager::OffGridSpike</compoundname>
    <includes refid="mpi__manager_8h" local="no">mpi_manager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1abc7c07730600f68d8bbb44c05208bb3e" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int nest::MPIManager::OffGridSpike::node_id_external_type</definition>
        <argsstring></argsstring>
        <name>node_id_external_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>We defined this type explicitly, so that the assert function below always tests the correct type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="417" column="26" bodyfile="nestkernel/mpi_manager.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a46bdf6eb72924e6b2a22d93ca299f059" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::MPIManager::OffGridSpike::node_id_</definition>
        <argsstring></argsstring>
        <name>node_id_</name>
        <briefdescription>
<para>node ID of neuron that spiked </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="447" column="12" bodyfile="nestkernel/mpi_manager.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a421e84e61d0ac10082c8ccff609f0781" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nest::MPIManager::OffGridSpike::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <briefdescription>
<para>offset of spike from grid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="448" column="12" bodyfile="nestkernel/mpi_manager.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a6a98489560e86ff5b04020bc543c3fd5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPIManager::init_mpi</definition>
        <argsstring>(int *, char ***)</argsstring>
        <name>MPIManager::init_mpi</name>
        <param>
          <type>int *</type>
        </param>
        <param>
          <type>char ***</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="412" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1aa05ad90695aa1e9d843985434ab05343" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::MPIManager::OffGridSpike::OffGridSpike</definition>
        <argsstring>()</argsstring>
        <name>OffGridSpike</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="419" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="419" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1aea691311ec46ce4430d085d0202b0a1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nest::MPIManager::OffGridSpike::OffGridSpike</definition>
        <argsstring>(node_id_external_type node_idv, double offsetv)</argsstring>
        <name>OffGridSpike</name>
        <param>
          <type><ref refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1abc7c07730600f68d8bbb44c05208bb3e" kindref="member">node_id_external_type</ref></type>
          <declname>node_idv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offsetv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="424" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="424" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1ae3203ee8b47f81f4fd9842594a3a38ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int nest::MPIManager::OffGridSpike::get_node_id</definition>
        <argsstring>() const</argsstring>
        <name>get_node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="431" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1ab3f7701c873739e366bbdd91061028aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nest::MPIManager::OffGridSpike::set_node_id</definition>
        <argsstring>(node_id_external_type node_id)</argsstring>
        <name>set_node_id</name>
        <param>
          <type><ref refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1abc7c07730600f68d8bbb44c05208bb3e" kindref="member">node_id_external_type</ref></type>
          <declname>node_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="436" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a58906cbf4b4d90533e7dc55505240fea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nest::MPIManager::OffGridSpike::get_offset</definition>
        <argsstring>() const</argsstring>
        <name>get_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="441" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="441" bodyend="444"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a5c2564a2c330b41c20865d9cdc7407b4" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void nest::MPIManager::OffGridSpike::assert_datatype_compatibility_</definition>
        <argsstring>()</argsstring>
        <name>assert_datatype_compatibility_</name>
        <briefdescription>
<para>This function asserts that doubles can hold node IDs without loss. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nestkernel/mpi_manager.h" line="452" column="5" bodyfile="nestkernel/mpi_manager.h" bodystart="452" bodyend="460"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Combined storage of node ID and offset information for off-grid spikes.</para>
<para><simplesect kind="note"><para>This class actually stores the node ID as <computeroutput>double</computeroutput> internally. This is done so that the user-defined MPI type MPI_OFFGRID_SPIKE, which we use to communicate off-grid spikes, is homogeneous. Otherwise, OpenMPI spends extreme amounts of time on packing and unpacking the data, see #458. </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nest::MPIManager::OffGridSpike</label>
        <link refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike"/>
      </node>
    </collaborationgraph>
    <location file="nestkernel/mpi_manager.h" line="410" column="3" bodyfile="nestkernel/mpi_manager.h" bodystart="411" bodyend="461"/>
    <listofallmembers>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a5c2564a2c330b41c20865d9cdc7407b4" prot="private" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>assert_datatype_compatibility_</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1ae3203ee8b47f81f4fd9842594a3a38ef" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a58906cbf4b4d90533e7dc55505240fea" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>get_offset</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a6a98489560e86ff5b04020bc543c3fd5" prot="private" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>MPIManager::init_mpi</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a46bdf6eb72924e6b2a22d93ca299f059" prot="private" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>node_id_</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1abc7c07730600f68d8bbb44c05208bb3e" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>node_id_external_type</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1aa05ad90695aa1e9d843985434ab05343" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>OffGridSpike</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1aea691311ec46ce4430d085d0202b0a1c" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>OffGridSpike</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1a421e84e61d0ac10082c8ccff609f0781" prot="private" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>offset_</name></member>
      <member refid="classnest_1_1_m_p_i_manager_1_1_off_grid_spike_1ab3f7701c873739e366bbdd91061028aa" prot="public" virt="non-virtual"><scope>nest::MPIManager::OffGridSpike</scope><name>set_node_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
