<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnest_1_1ConnTestDummyNodeBase" kind="class" language="C++" prot="public">
    <compoundname>nest::ConnTestDummyNodeBase</compoundname>
    <basecompoundref refid="classnest_1_1Node" prot="public" virt="non-virtual">nest::Node</basecompoundref>
    <derivedcompoundref refid="classnest_1_1bernoulli__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::bernoulli_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1clopath__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::clopath_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1cont__delay__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::cont_delay_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1ht__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::ht_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1jonke__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::jonke_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1quantal__stp__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::quantal_stp_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1static__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::static_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1static__synapse__hom__w_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::static_synapse_hom_w&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__dopamine__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_dopamine_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__facetshw__synapse__hom_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_facetshw_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__nn__pre__centered__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_nn_pre_centered_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__nn__restr__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_nn_restr_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__nn__symm__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_nn_symm_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__pl__synapse__hom_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__synapse__hom_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1stdp__triplet__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::stdp_triplet_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1tsodyks2__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::tsodyks2_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1tsodyks__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::tsodyks_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1tsodyks__synapse__hom_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::tsodyks_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1urbanczik__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::urbanczik_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <derivedcompoundref refid="classnest_1_1vogels__sprekeler__synapse_1_1ConnTestDummyNode" prot="public" virt="non-virtual">nest::vogels_sprekeler_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</derivedcompoundref>
    <includes refid="connection_8h" local="no">connection.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1a3cd4f0e3d7ba66763c8ef54ae8068ef6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::pre_run_hook</definition>
        <argsstring>() override</argsstring>
        <name>pre_run_hook</name>
        <reimplements refid="classnest_1_1Node_1ad51550af656588536bcdf5afecdbf788">pre_run_hook</reimplements>
        <briefdescription>
<para>Re-calculate dependent parameters of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called each time a simulation is begun/resumed. It must re-calculate all internal Variables of the node required for spike handling or updating the node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="75" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1aa0238a34dad329cad3e1228b74819aaf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::update</definition>
        <argsstring>(const nest::Time &amp;, long, long) override</argsstring>
        <name>update</name>
        <reimplements refid="classnest_1_1Node_1a69f3767afe7e7d1bc5b141e777778fd5">update</reimplements>
        <param>
          <type>const <ref refid="classnest_1_1Time" kindref="compound">nest::Time</ref> &amp;</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <param>
          <type>long</type>
        </param>
        <briefdescription>
<para>Bring the node from state $t$ to $t+n*dt$. </para>
        </briefdescription>
        <detaileddescription>
<para>n-&gt;update(T, from, to) performs the update steps beginning at T+from .. T+to-1, ie, emitting events with time stamps T+from+1 .. T+to.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnest_1_1Time" kindref="compound">Time</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>network time at beginning of time slice. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>initial step inside time slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long</parametername>
</parameternamelist>
<parameterdescription>
<para>post-final step inside time slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="79" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1a5092d6cda27349b1e53760a36fdd1f33" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::set_status</definition>
        <argsstring>(const DictionaryDatum &amp;) override</argsstring>
        <name>set_status</name>
        <reimplements refid="group__status__interface_1ga9d7a4a3a64d03a4d7f6c5df87c80fe36">set_status</reimplements>
        <param>
          <type>const DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
<para>Change properties of the node according to the entries in the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary with named parameter settings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="83" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1ac98684d0fc231163a2f76c3fb05d9a8d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::get_status</definition>
        <argsstring>(DictionaryDatum &amp;) const override</argsstring>
        <name>get_status</name>
        <reimplements refid="group__status__interface_1ga85f1a73dde2b60e4353429eb22c31bcf">get_status</reimplements>
        <param>
          <type>DictionaryDatum &amp;</type>
        </param>
        <briefdescription>
<para>Export properties of the node by setting entries in the status dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="87" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1ab14303b4565015207f2d120c6600d05a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::init_state_</definition>
        <argsstring>() override</argsstring>
        <name>init_state_</name>
        <reimplements refid="classnest_1_1Node_1a048ed537ecbe30cb98950a077106b0ef">init_state_</reimplements>
        <briefdescription>
<para>Configure state variables depending on runtime information. </para>
        </briefdescription>
        <detaileddescription>
<para>Overload this method if the node needs to adapt state variables prior to first simulation to runtime information, e.g., the number of incoming connections. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="91" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnest_1_1ConnTestDummyNodeBase_1a9e9303b5c466db71f8f65c23bc242d24" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void nest::ConnTestDummyNodeBase::init_buffers_</definition>
        <argsstring>() override</argsstring>
        <name>init_buffers_</name>
        <reimplements refid="classnest_1_1Node_1a5881b951d112d2c408865d080287f453">init_buffers_</reimplements>
        <briefdescription>
<para>Configure persistent internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para>Let node configure persistent internal data structures, such as input buffers or ODE solvers, to runtime information prior to first simulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="95" column="3" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="95" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for dummy nodes used in connection testing. </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a based for dummy node objects that are used to test whether a connection can be established. The base class provides empty implementations of all pure virtual functions of class <ref refid="classnest_1_1Node" kindref="compound">Node</ref>.</para>
<para>Each connection class (i.e., each class derived from class template Connection&lt;T&gt;), must derive a concrete ConnTestDummyNode class that overrides method <ref refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" kindref="member">Node::handles_test_event()</ref> for all event types that the connection supports.</para>
<para>For details, see Kunkel et al, Front Neuroinform 8:78 (2014), Sec 3.3.1. Note that the ConnTestDummyNode class is called &quot;check_helper&quot; in the paper. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="22">
        <label>nest::tsodyks_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1tsodyks__synapse__hom_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>nest::cont_delay_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1cont__delay__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nest::clopath_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1clopath__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>nest::urbanczik_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1urbanczik__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>nest::stdp_nn_symm_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__nn__symm__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>nest::tsodyks_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1tsodyks__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>nest::stdp_nn_pre_centered_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__nn__pre__centered__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>nest::stdp_facetshw_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__facetshw__synapse__hom_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>nest::stdp_nn_restr_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__nn__restr__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>nest::stdp_dopamine_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__dopamine__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>nest::static_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1static__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>nest::stdp_pl_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__pl__synapse__hom_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>nest::stdp_triplet_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__triplet__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>nest::static_synapse_hom_w&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1static__synapse__hom__w_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>nest::bernoulli_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1bernoulli__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
      </node>
      <node id="7">
        <label>nest::jonke_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1jonke__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>nest::stdp_synapse_hom&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__synapse__hom_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>nest::vogels_sprekeler_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1vogels__sprekeler__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>nest::tsodyks2_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1tsodyks2__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>nest::quantal_stp_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1quantal__stp__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nest::ConnTestDummyNodeBase</label>
        <link refid="classnest_1_1ConnTestDummyNodeBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>nest::stdp_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1stdp__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>nest::ht_synapse&lt; targetidentifierT &gt;::ConnTestDummyNode</label>
        <link refid="classnest_1_1ht__synapse_1_1ConnTestDummyNode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>nest::DeprecationWarning</label>
        <link refid="classnest_1_1DeprecationWarning"/>
      </node>
      <node id="2">
        <label>nest::Node</label>
        <link refid="classnest_1_1Node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+deprecation_warning</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>nest::ConnTestDummyNodeBase</label>
        <link refid="classnest_1_1ConnTestDummyNodeBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" line="72" column="1" bodyfile="/home/mitchell/Work/repo/nest-simulator/nestkernel/connection.h" bodystart="73" bodyend="98"/>
    <listofallmembers>
      <member refid="classnest_1_1Node_1a93e4da4ded11807b07c5f2428401bbc7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>calibrate_time</name></member>
      <member refid="classnest_1_1Node_1ad88edfd6f881579328b545d88372807d" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>clone</name></member>
      <member refid="group__SP__functions_1gaa5b5f01608036752d816d1980c39cb87" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>connect_synaptic_element</name></member>
      <member refid="group__SP__functions_1ga5242b7d1752a7981676852d1b70263b9" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>decay_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Node_1a6c4750a3216c14453087bb14bc9a6a7a" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>deprecation_warning</name></member>
      <member refid="classnest_1_1Node_1a1c53a7fddc01f8d14531fb3af84a3881" prot="protected" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>downcast</name></member>
      <member refid="classnest_1_1Node_1a2c85dd6317fe53edd65e97641aeb0535" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a2575699815b3eed15322b0868ec2f89d" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>event_hook</name></member>
      <member refid="classnest_1_1Node_1a9f97c6432a9aa151df89653586f72ef1" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>finalize</name></member>
      <member refid="classnest_1_1Node_1a7c48b06a535a6e036c88ea2dcbaf8283" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>frozen_</name></member>
      <member refid="classnest_1_1Node_1a66b901cd57296f87cd25c00c4cfe3f74" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_C_m</name></member>
      <member refid="group__SP__functions_1gae46decb34ba3dc7f912fa6a691bb0de2" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_Ca_minus</name></member>
      <member refid="classnest_1_1Node_1a59915001de69fc05d8a155da42a89e56" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_element_type</name></member>
      <member refid="classnest_1_1Node_1a56d38a28f4070f373eb51ed97e5bee73" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_g_L</name></member>
      <member refid="classnest_1_1Node_1a618d16c4286ef3724da901ce28c46cd6" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_history</name></member>
      <member refid="classnest_1_1Node_1a1043e0cb5ea5bd3e8627e9a777328628" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_K_value</name></member>
      <member refid="classnest_1_1Node_1a3c64984a1a3ca6c8fddf52d68dc33ab7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_K_values</name></member>
      <member refid="classnest_1_1Node_1a25b2b6f159ffa8834cd966b3802f2fef" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a836bd9bd56b015902da2eab45c83ef34" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_LTD_value</name></member>
      <member refid="classnest_1_1Node_1a2283e744ff8f6a39c4d2fb6c00fc7958" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_LTP_history</name></member>
      <member refid="classnest_1_1Node_1af3b1227782c1fc9e0934a73ee7bf15f4" prot="protected" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_model_</name></member>
      <member refid="classnest_1_1Node_1a99139ba0b34f150c612f2f26c8645532" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_model_id</name></member>
      <member refid="classnest_1_1Node_1a86602cc948413d6fbe10fe4fefaca0ef" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_name</name></member>
      <member refid="classnest_1_1Node_1a0d0352c208e88979157bf69dac41a074" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_nc</name></member>
      <member refid="classnest_1_1Node_1a18f2dc5591f7de1e64b62d0d53cb4351" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_node_id</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1ac98684d0fc231163a2f76c3fb05d9a8d" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_status</name></member>
      <member refid="classnest_1_1Node_1a885c4dc90e195ed2533af848c4fdad92" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_status_base</name></member>
      <member refid="classnest_1_1Node_1a54f0c50b08165643cee588bc89b464b8" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_status_dict_</name></member>
      <member refid="group__SP__functions_1ga9ba39ec217579e3ef23db9ae20479955" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1gaf35fbeeb8459557ea3a5baf5c6fe7d20" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_synaptic_elements</name></member>
      <member refid="group__SP__functions_1ga7a47b88c558984889d90d5ce027787cf" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_synaptic_elements_connected</name></member>
      <member refid="group__SP__functions_1ga058f999dd9dc5a26c98b0a0351c08707" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_synaptic_elements_vacant</name></member>
      <member refid="classnest_1_1Node_1af77e4c86987efb2065b531f752c58b5f" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_tau_L</name></member>
      <member refid="classnest_1_1Node_1a76c9cb7ddfba60739af5b3bbf21bd3e7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_tau_s</name></member>
      <member refid="classnest_1_1Node_1ada393fd33ced09b317415c0f89f4ccd8" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_tau_syn_ex</name></member>
      <member refid="classnest_1_1Node_1ad3ab12792e13a44d9a34663fa4d90b87" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_tau_syn_in</name></member>
      <member refid="classnest_1_1Node_1ad578b3b25416a4a8c79d86e943a5c666" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_thread</name></member>
      <member refid="classnest_1_1Node_1a5f2e7e5708eaf8428071ee74128e81eb" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a61d47288d1db6fa11aad35c522dae09a" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_urbanczik_history</name></member>
      <member refid="classnest_1_1Node_1a7812f4b7f634dc6838161319662d8947" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>get_vp</name></member>
      <member refid="group__event__interface_1gae810de070216d0f281833171a3b997bc" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga18c58ec60440eae4dd4b264fb63a8d98" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga9686693f44cd03a5420633b836c25f27" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1gacd1458cf76e47c030beafb6a4d5147ba" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga76de0226b6a5eef5dbe78a68d72c4492" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1gadef54045c4b20be6075910f936a723b6" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga0b4b6baf37b18218fd5103ab72bc2cae" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga1843f8e5565026ca51fc4b0fe1da77de" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga32b0e430fb34b46f56dc2ebc6dc7bacb" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaec56b76a4286e1f662b33218f4083ce8" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1gace17f7fc8aea06c6ecc4f12deb957a81" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1ga2cebf7dc11a2a83795ff71c10c07f308" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handle</name></member>
      <member refid="group__event__interface_1gaf65947fe5dfeaefe79ac3cdf86e5bb27" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abbddfb14a40279cdf7340f6ff9936179" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5f91d66c3ceb67a60b066fcb01af2cd7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1aa34f16a445a0d408588bf7d6463f1a8c" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a5c3e92ee9a4c7b6f660d6fb341a5c330" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcc2e9e2acf3d08070679f2b03bd8e11" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a1d2f3f1de23d48b953bc570771ca9d2e" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a804bc701ca39ee9314df37f0cf75198d" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a874ca038dce3731fdbf62a21fb17de4e" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f09ae49e6fa4cd4f2868f3e7eb4870e" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3f59fd074869893311cc2c46499713a5" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a059108cabfdc59a2bae9bb8092448915" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1abcdffe1cbefc66a5d11762a46aefea5b" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>handles_test_event</name></member>
      <member refid="classnest_1_1Node_1a3cadfe2698c39c5fd327f5d70d0b8adf" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>has_proxies</name></member>
      <member refid="classnest_1_1Node_1a1943c3183a149f56fcd797f1d8bfe815" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>init</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1a9e9303b5c466db71f8f65c23bc242d24" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>init_buffers_</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1ab14303b4565015207f2d120c6600d05a" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>init_state_</name></member>
      <member refid="classnest_1_1Node_1a95389430ba10f2da19aacded71503f74" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>initialized_</name></member>
      <member refid="classnest_1_1Node_1ab6ba7bb37d972a9a5e0f2a8e4c6fcc72" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>is_frozen</name></member>
      <member refid="classnest_1_1Node_1ab0fc187ef5dd007086eb11ca2107a3a5" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>is_model_prototype</name></member>
      <member refid="classnest_1_1Node_1acaf132bbee717313ffbc86fd291667c9" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>is_off_grid</name></member>
      <member refid="classnest_1_1Node_1a895a3c75963a7926b3c9cac2d62dece3" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>is_proxy</name></member>
      <member refid="classnest_1_1Node_1ac6e5bca87246812225ab04af4fd40df2" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>local_receiver</name></member>
      <member refid="classnest_1_1Node_1ae306f4602e575047801c45c9fec2a4d4" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>model_id_</name></member>
      <member refid="classnest_1_1Node_1a3ec5fd1ce0e6f3f0bccabd314c6845c3" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>nc_ptr_</name></member>
      <member refid="classnest_1_1Node_1a1b36ccdeb480a962678afbc72e0e05a9" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a359cbbba44db2a94cced8f60bcf7c728" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>Node</name></member>
      <member refid="classnest_1_1Node_1a9d697a1550c18613e0d2a0e57c67e836" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>node_id_</name></member>
      <member refid="classnest_1_1Node_1a537f1a88cfaefa242f317637354442ad" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>node_uses_wfr</name></member>
      <member refid="classnest_1_1Node_1a9f929d2c40ddaafd4a0822ea294f1ef9" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>node_uses_wfr_</name></member>
      <member refid="classnest_1_1Node_1a1168f649f515aea70ac6678ed66c48e4" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>one_node_per_process</name></member>
      <member refid="classnest_1_1Node_1a9c99a8caa89a3eb73e975f25678d5d58" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>operator=</name></member>
      <member refid="classnest_1_1Node_1adf0d915da7c36f25820d19f1e2b1b4a1" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>post_run_cleanup</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1a3cd4f0e3d7ba66763c8ef54ae8068ef6" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>pre_run_hook</name></member>
      <member refid="classnest_1_1Node_1aa14ec598e02577c8353131316d8ed5c9" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>print_network</name></member>
      <member refid="classnest_1_1Node_1a6d7d70e46c22988d76160cc00f93127a" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>receives_signal</name></member>
      <member refid="classnest_1_1Node_1a297b374f3b4513a6de5a5ba6b6d119d9" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>register_stdp_connection</name></member>
      <member refid="classnest_1_1Node_1a60608af8d6238b96071a9f64544ec5e3" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>send_test_event</name></member>
      <member refid="group__event__interface_1ga8cc1e073626a9ffc843b2685474238de" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga5469ac53c0b9d004829e1e2dbf41d120" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1gaa9414a7fa4241bc77bb110ba895968e0" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>sends_secondary_event</name></member>
      <member refid="group__event__interface_1ga2732c32368c1ea09600a1a2ffddcb2f7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>sends_secondary_event</name></member>
      <member refid="classnest_1_1Node_1a849c236abc0ac5bf1b97fc86188c525f" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>sends_signal</name></member>
      <member refid="classnest_1_1Node_1a72b316c5f1bb8bb566256efab5371f4b" prot="protected" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_frozen_</name></member>
      <member refid="classnest_1_1Node_1a9488f6aaf5ca2897eba23819251569e0" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_initialized</name></member>
      <member refid="classnest_1_1Node_1af1edec8d44fc63df732b8ff58f0788bf" prot="protected" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_initialized_</name></member>
      <member refid="classnest_1_1Node_1a7d4d7c594bd3cfbf892f040f248ac153" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_local_device_id</name></member>
      <member refid="classnest_1_1Node_1a8df5c7f9272bd5da51cb5de78db00161" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_model_id</name></member>
      <member refid="classnest_1_1Node_1a73f12f75b97e2fc6adc1a5d27a7f50b1" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_nc_</name></member>
      <member refid="classnest_1_1Node_1a07451d06b3d812eae961d61397f5826c" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_node_id_</name></member>
      <member refid="classnest_1_1Node_1a2344ea2328630ee3e1faaec8e4ca2071" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_node_uses_wfr</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1a5092d6cda27349b1e53760a36fdd1f33" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_status</name></member>
      <member refid="classnest_1_1Node_1aa4d0cfaa54c461c66570d926c51a2078" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_status_base</name></member>
      <member refid="classnest_1_1Node_1a4b386596a08e94fd4ad229b586f0e8ff" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_thread</name></member>
      <member refid="classnest_1_1Node_1ad6b1c6a7b2287c55a982debe99e66415" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_thread_lid</name></member>
      <member refid="classnest_1_1Node_1a219e882ed608cca39c88b4863b037fbe" prot="public" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>set_vp</name></member>
      <member refid="classnest_1_1Node_1a1e0e3bdf9dd259183dcb8c457265383b" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>supports_urbanczik_archiving</name></member>
      <member refid="classnest_1_1Node_1a9ec98b82cf08796b726ca26666e5739d" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>thread_</name></member>
      <member refid="classnest_1_1Node_1a4316e73a0c494ccb37e6a19b00664223" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>thread_lid_</name></member>
      <member refid="classnest_1_1ConnTestDummyNodeBase_1aa0238a34dad329cad3e1228b74819aaf" prot="private" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>update</name></member>
      <member refid="group__SP__functions_1gaff1fa7703153b16816ad55eef791982c" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>update_synaptic_elements</name></member>
      <member refid="classnest_1_1Node_1ad40bb2d1d3c32dd953374bbe6a76e5a6" prot="private" virt="non-virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>vp_</name></member>
      <member refid="classnest_1_1Node_1a86af40b228d33130e9a8257249a7af28" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>wfr_update</name></member>
      <member refid="classnest_1_1Node_1a292ae9d034507fb6f382f61a9251cbe7" prot="public" virt="virtual"><scope>nest::ConnTestDummyNodeBase</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
